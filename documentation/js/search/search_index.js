var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.712,1,1.321]],["body/components/AppComponent.html",[0,0.884,1,1.835,2,1.416,3,0.106,4,0.106,5,0.972,6,0.972,7,0.972,8,0.094,9,2.281,10,2.06,11,3.767,12,0.972,13,2.781,14,2.751,15,0.731,16,1.478,17,1.57,18,1.478,19,4.196,20,1.835,21,3.19,22,4.848,23,4.196,24,4.848,25,4.196,26,1.614,27,4.007,28,1.614,29,4.007,30,0.082,31,0.218,32,1.857,33,2.766,34,2.895,35,4.848,36,3.881,37,0.796,38,5.417,39,2.847,40,5.417,41,4.688,42,4.007,43,4.688,44,0.731,45,2.047,46,2.365,47,2.182,48,4.768,49,3.326,50,3.767,51,4.209,52,4.534,53,5.828,54,1.049,55,4.007,56,0.641,57,0.016,58,0.378,59,0.219,60,0.641,61,2.635,62,1.11,63,0.865,64,2.635,65,2.635,66,4.007,67,1.76,68,2.635,69,4.007,70,2.635,71,2.635,72,2.635,73,0.44,74,0.284,75,0.763,76,3.468,77,2.635,78,1.118,79,0.46,80,2.281,81,2.281,82,2.635,83,3.113,84,1.061,85,1.432,86,1.618,87,1.734,88,2.047,89,1.355,90,1.222,91,2.635,92,1.859,93,1.618,94,2.281,95,2.635,96,1.164,97,1.519,98,1.734,99,2.635,100,4.007,101,2.635,102,2.635,103,2.635,104,2.635,105,2.635,106,2.635,107,2.635,108,1.519,109,1.432,110,1.873,111,2.281,112,0.106,113,0.224,114,2.347,115,2.635,116,2.635,117,2.635,118,2.635,119,2.635,120,2.635,121,2.635,122,4.007,123,2.635,124,2.635,125,2.635,126,1.873,127,2.635,128,2.635,129,2.635,130,4.007,131,2.635,132,2.281,133,2.635,134,2.635,135,2.635,136,2.635,137,2.281,138,2.635,139,2.309,140,2.635,141,3.468,142,2.281,143,4.007,144,2.635,145,2.635,146,2.635,147,2.635,148,2.281,149,2.635,150,2.635,151,2.635,152,2.281,153,2.047,154,2.635,155,1.873,156,2.635,157,4.007,158,2.635,159,2.635,160,2.635,161,4.007,162,4.688,163,1.377,164,2.281,165,1.76,166,2.635,167,1.914,168,1.76,169,1.494,170,4.007,171,0.972,172,2.635,173,1.734,174,2.635,175,2.635,176,1.734,177,2.635,178,4.007,179,2.635,180,2.635,181,4.007,182,2.281,183,2.281,184,2.281,185,2.281,186,2.635,187,2.635,188,2.635,189,2.635,190,2.635,191,2.635,192,2.635,193,2.281,194,2.635,195,2.281,196,2.635,197,2.281,198,2.281,199,1.734,200,2.047,201,2.635,202,2.635,203,2.281,204,2.635,205,2.635,206,1.953,207,1.859,208,2.635,209,1.432,210,2.281,211,4.007,212,2.635,213,1.511,214,2.635,215,5.417,216,2.635,217,2.281,218,2.635,219,1.285,220,1.873,221,2.635,222,2.635,223,2.635,224,2.635,225,2.635,226,0.618,227,4.007,228,0.972,229,1.478,230,0.972,231,1.914,232,0.972,233,0.972,234,0.893,235,1.478,236,0.972,237,0.893,238,0.972,239,0.893,240,0.931,241,1.478,242,0.931,243,0.972,244,0.972,245,0.931,246,0.972,247,0.893,248,0.972,249,0.893,250,0.972,251,0.972,252,0.893,253,0.523,254,0.972,255,0.893,256,0.972,257,0.972,258,0.893,259,0.972,260,0.972,261,0.893,262,0.972,263,0.972,264,0.893,265,0.893,266,0.893,267,0.972,268,0.893,269,0.972,270,0.893,271,0.972,272,0.893,273,0.788,274,0.972,275,0.972,276,0.972,277,0.008,278,0.008]],["title/interfaces/BboxLabel.html",[279,0.492,280,1.439]],["body/interfaces/BboxLabel.html",[3,0.179,4,0.179,8,0.158,15,0.809,30,0.181,31,0.315,57,0.016,58,0.382,59,0.231,67,1.441,73,1.341,74,0.624,112,0.315,163,1.852,165,1.441,167,1.567,168,1.441,169,2.118,206,1.787,253,1.411,277,0.011,278,0.011,279,0.987,280,2.138,281,1.441,282,1.787,283,2.419,284,1.813,285,1.379,286,2.125,287,1.665,288,1.636,289,1.636,290,1.636,291,1.883,292,1.787,293,1.175,294,1.807,295,1.807,296,1.274,297,1.274,298,1.327,299,1.567,300,1.567,301,1.567,302,1.567,303,1.502,304,1.327,305,2.048,306,2.233,307,1.598,308,2.233,309,1.441,310,2.335,311,1.709,312,1.709,313,1.787,314,1.787,315,1.787,316,1.787,317,2.233,318,2.335,319,2.233,320,1.87,321,1.636]],["title/injectables/BboxManagerService.html",[322,0.682,323,2.567]],["body/injectables/BboxManagerService.html",[3,0.229,4,0.229,8,0.203,15,1.039,30,0.178,31,0.368,44,1.319,54,1.035,57,0.016,59,0.203,74,0.613,75,1.084,78,0.988,79,0.995,96,2.517,112,0.229,113,0.484,277,0.013,278,0.013,280,2.667,322,1.183,323,4.457,324,2.012,325,2.786,326,6.259,327,4.048,328,7.231,329,6.774,330,2.012]],["title/components/BlockableDiv.html",[0,0.712,234,1.321]],["body/components/BlockableDiv.html",[0,1.174,1,1.494,2,2.04,3,0.177,4,0.177,5,2.13,6,1.627,7,1.627,8,0.157,10,2.969,12,1.627,13,2.951,14,2.92,16,2.13,17,1.299,18,2.13,20,1.494,30,0.138,37,1.147,44,0.805,54,1.043,56,0.705,57,0.016,58,0.381,59,0.23,60,0.705,62,0.84,78,0.939,79,0.77,84,1.777,112,0.177,113,0.581,213,1.8,219,3.14,226,1.034,228,1.627,229,2.13,230,1.627,231,2.413,232,1.627,233,1.627,234,2.313,235,2.519,236,1.627,237,1.494,238,1.627,239,1.494,240,1.558,241,2.13,242,1.558,243,1.627,244,1.627,245,1.558,246,1.627,247,1.494,248,1.627,249,1.494,250,1.627,251,1.627,252,1.494,253,0.876,254,1.627,255,1.494,256,1.627,257,1.627,258,1.494,259,1.627,260,1.627,261,1.494,262,1.627,263,1.627,264,1.494,265,1.494,266,1.494,267,1.627,268,1.494,269,1.627,270,1.494,271,1.627,272,1.494,273,1.319,274,1.627,275,1.627,276,1.627,277,0.011,278,0.011,331,3.817,332,5.002,333,5.774,334,5.002,335,4.576,336,5.307,337,3.545,338,5.572,339,3.427,340,4.855,341,5.774,342,4.486,343,4.41,344,4.41,345,4.486,346,2.902,347,1.86,348,3.817]],["title/components/BlockableP.html",[0,0.712,237,1.321]],["body/components/BlockableP.html",[0,1.174,1,1.494,2,2.04,3,0.177,4,0.177,5,2.13,6,1.627,7,1.627,8,0.157,10,2.969,12,1.627,13,2.951,14,2.92,16,2.13,17,1.299,18,2.13,20,1.494,30,0.138,37,1.147,44,0.805,54,1.043,56,0.705,57,0.016,58,0.381,59,0.23,60,0.705,62,0.84,78,0.939,79,0.77,84,1.777,112,0.177,113,0.581,213,1.8,219,3.14,226,1.034,228,1.627,229,2.13,230,1.627,231,2.413,232,1.627,233,1.627,234,1.494,235,2.519,236,1.627,237,2.313,238,1.627,239,1.494,240,1.558,241,2.13,242,1.558,243,1.627,244,1.627,245,1.558,246,1.627,247,1.494,248,1.627,249,1.494,250,1.627,251,1.627,252,1.494,253,0.876,254,1.627,255,1.494,256,1.627,257,1.627,258,1.494,259,1.627,260,1.627,261,1.494,262,1.627,263,1.627,264,1.494,265,1.494,266,1.494,267,1.627,268,1.494,269,1.627,270,1.494,271,1.627,272,1.494,273,1.319,274,1.627,275,1.627,276,1.627,277,0.011,278,0.011,332,5.002,334,5.002,335,4.576,336,5.307,337,3.545,338,5.572,339,3.427,340,4.855,342,4.486,345,4.486,346,2.902,347,1.86,348,3.817,349,3.817,350,5.774,351,5.774,352,4.41,353,4.41]],["title/injectables/CLIService.html",[49,2.395,322,0.682]],["body/injectables/CLIService.html",[3,0.169,4,0.169,8,0.15,15,0.767,17,1.259,30,0.131,31,0.304,32,2.077,37,1.112,39,2.596,44,0.767,49,3.436,54,1.066,56,0.672,57,0.016,58,0.249,59,0.2,60,0.672,62,0.801,63,0.908,67,1.366,73,0.703,74,0.677,75,1.198,78,1.018,79,0.735,92,2.596,96,1.859,112,0.169,113,0.358,114,2.534,139,3.225,155,3.978,207,3.329,277,0.011,278,0.011,279,0.53,304,1.258,309,1.366,322,0.978,324,1.486,330,1.486,347,1.774,354,3.268,355,5.443,356,5.443,357,5.443,358,5.802,359,4.206,360,6.212,361,5.596,362,4.206,363,4.341,364,2.147,365,4.206,366,4.206,367,2.163,368,3.641,369,3.641,370,2.424,371,2.424,372,2.99,373,3.641,374,3.268,375,3.641,376,3.641,377,4.348,378,4.844,379,2.09,380,4.844,381,3.641,382,3.641,383,5.802,384,4.411,385,5.802,386,5.802,387,4.348,388,6.584,389,5.802,390,4.348,391,4.844,392,3.682,393,4.844,394,2.254,395,3.641,396,3.641]],["title/injectables/CanvasManagerService.html",[322,0.682,397,2.249]],["body/injectables/CanvasManagerService.html",[3,0.125,4,0.125,8,0.111,15,0.566,17,1.202,30,0.195,31,0.246,33,2.711,37,0.899,39,2.478,44,0.566,46,2.606,47,2.366,54,1.193,56,0.998,57,0.016,58,0.37,59,0.262,60,0.998,62,1.439,63,1.348,73,1.09,74,0.575,75,1.017,78,0.951,79,0.542,89,1.596,90,1.44,112,0.125,113,0.264,114,2.152,209,1.686,226,1.061,277,0.009,278,0.009,285,1.091,291,1.008,304,1.598,322,0.791,324,1.097,325,3.016,327,2.206,330,1.097,347,1.309,363,3.599,364,2.014,367,1.596,379,1.411,397,2.609,398,6.082,399,4.151,400,4.624,401,5.343,402,5.343,403,5.343,404,5.343,405,5.343,406,3.517,407,4.526,408,5.872,409,5.343,410,5.343,411,4.624,412,5.343,413,5.343,414,5.343,415,5.343,416,5.343,417,5.343,418,5.872,419,4.526,420,4.526,421,5.872,422,2.686,423,3.019,424,4.133,425,4.526,426,2.779,427,3.918,428,5.628,429,3.103,430,2.042,431,4.526,432,2.686,433,3.103,434,3.103,435,3.103,436,3.103,437,3.103,438,3.103,439,3.103,440,5.36,441,3.103,442,3.103,443,3.103,444,3.103,445,4.526,446,3.103,447,4.526,448,3.103,449,3.103,450,2.686,451,3.103,452,3.103,453,2.686,454,3.103,455,2.686,456,1.789,457,1.789,458,2.411,459,2.411,460,3.103,461,3.103,462,2.686,463,1.789,464,5.343,465,4.003,466,3.103,467,3.103,468,3.864,469,3.103,470,3.103,471,3.103,472,3.103,473,3.103,474,3.103,475,3.103,476,3.103,477,4.526,478,2.322,479,3.281,480,3.103,481,3.103,482,3.103,483,3.103,484,2.411,485,3.103,486,3.103,487,4.526,488,3.103,489,2.206,490,3.103,491,2.686,492,3.103,493,3.103,494,3.103,495,3.103,496,3.103,497,3.103,498,3.103]],["title/components/ClassificationConfigurationComponent.html",[0,0.712,239,1.321]],["body/components/ClassificationConfigurationComponent.html",[0,0.976,1,1.053,2,1.602,3,0.125,4,0.125,5,1.147,6,1.147,7,1.147,8,0.111,12,1.147,13,2.843,14,2.819,16,1.672,17,1.02,18,1.672,20,1.053,21,3.52,26,1.826,28,1.826,30,0.167,31,0.246,32,1.25,37,0.9,44,0.567,46,2.867,47,2.517,54,1.092,56,1.077,57,0.016,58,0.424,59,0.246,60,1.077,62,1.314,63,1.454,73,0.894,78,1.057,79,0.543,84,1.253,86,1.909,89,1.599,109,1.69,110,2.21,112,0.125,113,0.455,139,3.76,163,1.153,171,2.406,213,1.413,226,1.465,228,1.147,229,1.672,230,1.147,231,2.077,232,1.147,233,1.147,234,1.053,235,1.672,236,1.147,237,1.053,238,1.147,239,1.991,240,2.38,241,1.672,242,1.099,243,1.147,244,1.147,245,1.099,246,1.147,247,1.053,248,1.147,249,1.053,250,1.147,251,1.147,252,1.053,253,0.618,254,1.147,255,1.053,256,1.147,257,1.147,258,1.053,259,1.147,260,1.147,261,1.053,262,1.147,263,1.147,264,1.053,265,1.053,266,1.053,267,1.147,268,1.053,269,1.147,270,1.053,271,1.147,272,1.053,273,0.93,274,1.147,275,1.147,276,1.147,277,0.009,278,0.009,285,1.347,334,2.416,364,0.93,379,0.969,499,5.63,500,6.031,501,2.416,502,3.222,503,3.083,504,3.802,505,4.63,506,3.802,507,5.349,508,5.349,509,4.63,510,4.156,511,3.923,512,3.923,513,4.533,514,5.878,515,4.533,516,5.088,517,4.533,518,4.533,519,4.533,520,4.533,521,2.416,522,3.11,523,4.533,524,3.11,525,5.349,526,3.11,527,4.533,528,3.11,529,3.11,530,4.533,531,3.11,532,5.878,533,4.533,534,3.11,535,4.533,536,3.11,537,4.533,538,3.11,539,3.11,540,1.69,541,2.691,542,2.21,543,2.416,544,2.691,545,3.11,546,1.909,547,3.11,548,2.416,549,3.11,550,3.522,551,3.11,552,3.11,553,3.11,554,3.11,555,4.533,556,3.11,557,3.11,558,3.11,559,3.11,560,3.11,561,3.11,562,4.533,563,3.222,564,4.533]],["title/injectables/DrawService.html",[322,0.682,565,2.567]],["body/injectables/DrawService.html",[3,0.081,4,0.249,8,0.072,15,0.366,17,1.151,30,0.171,31,0.176,32,2.183,33,2.318,34,2.426,37,0.642,39,2.373,44,0.59,46,1.577,47,1.878,54,1.116,56,1.037,57,0.016,58,0.384,59,0.236,60,1.037,62,1.353,63,1.451,73,0.855,74,0.502,75,1.095,78,1.006,79,0.35,85,1.089,89,1.03,90,0.93,97,1.155,98,2.127,112,0.081,113,0.397,114,2.557,139,2.342,165,2.062,169,1.789,171,1.192,173,2.127,197,2.798,198,1.735,199,1.319,200,1.557,207,1.5,226,1.487,253,0.398,277,0.006,278,0.006,283,0.708,284,0.531,293,1.076,322,0.565,324,0.708,325,2.83,330,0.708,363,2.948,364,1.721,367,1.03,379,1.594,394,1.302,397,3.316,399,2.512,406,2.512,423,2.397,424,3.532,426,2.495,427,1.735,428,5.522,430,4.54,456,1.155,457,1.863,458,1.557,459,1.557,463,3.316,465,1.231,478,1.32,479,1.231,491,2.798,521,1.557,565,2.127,566,1.735,567,4.064,568,3.157,569,4.064,570,4.663,571,3.233,572,2.798,573,4.663,574,3.233,575,4.064,576,3.233,577,3.233,578,4.663,579,4.663,580,4.663,581,4.663,582,4.064,583,4.663,584,4.036,585,3.233,586,2.798,587,4.089,588,4.089,589,3.785,590,3.532,591,2.004,592,2.004,593,2.004,594,4.979,595,2.004,596,1.735,597,2.004,598,2.004,599,2.004,600,4.427,601,2.004,602,2.004,603,2.004,604,2.004,605,3.233,606,2.004,607,3.233,608,2.004,609,2.004,610,2.004,611,2.004,612,2.004,613,2.004,614,5.115,615,2.004,616,4.036,617,2.004,618,2.004,619,3.233,620,2.004,621,2.798,622,3.517,623,2.004,624,2.004,625,2.004,626,2.004,627,1.319,628,2.004,629,2.004,630,1.155,631,1.231,632,2.004,633,2.298,634,1.735,635,1.735,636,2.004,637,3.233,638,4.249,639,2.004,640,3.974,641,3.233,642,2.004,643,2.004,644,2.004,645,2.004,646,2.004,647,3.233,648,2.004,649,3.233,650,4.064,651,3.233,652,2.004,653,2.004,654,2.004,655,2.004,656,2.004,657,4.064,658,2.004,659,2.004,660,1.735,661,1.425,662,3.233,663,4.663,664,3.517,665,2.004,666,2.004,667,4.064,668,2.004,669,1.735,670,1.735,671,4.427,672,4.733,673,2.004,674,2.004,675,2.004,676,2.004,677,2.004,678,2.004,679,2.004,680,2.004,681,2.004,682,3.233,683,2.798,684,2.004,685,2.798,686,1.735,687,3.233,688,2.798,689,2.798,690,2.004,691,2.004,692,2.798,693,2.798,694,2.798,695,2.798,696,2.004,697,2.004,698,1.735,699,2.004,700,2.004,701,2.004,702,3.233,703,4.064,704,1.735,705,1.425,706,2.004,707,1.425,708,2.004,709,2.004,710,2.004,711,1.735,712,2.004,713,2.004,714,1.735,715,1.735,716,1.735,717,3.233,718,2.004,719,2.004,720,2.004,721,1.735,722,2.004,723,2.004,724,2.004,725,2.004,726,2.512,727,1.735,728,1.735,729,2.004,730,3.233,731,2.004,732,1.557,733,2.798,734,4.064,735,1.735,736,2.004,737,4.036,738,4.427,739,3.974,740,3.974,741,2.004,742,2.004,743,1.319,744,2.004,745,2.004,746,4.064,747,2.004,748,2.004,749,2.004,750,2.004,751,2.004,752,1.735,753,2.004]],["title/injectables/EditorService.html",[33,1.572,322,0.682]],["body/injectables/EditorService.html",[3,0.11,4,0.11,8,0.098,15,0.499,30,0.129,31,0.224,32,2.257,33,1.66,37,0.819,44,0.905,54,1.202,56,0.437,57,0.016,58,0.162,59,0.273,60,0.437,62,1.341,63,1.344,73,0.689,74,0.82,75,1.45,78,0.723,79,0.478,97,2.859,98,1.8,112,0.11,113,0.233,171,2.036,176,2.712,226,1.388,273,1.772,277,0.008,278,0.008,285,1.23,287,1.825,322,0.72,324,0.966,330,0.966,363,4.388,364,2.074,367,1.406,394,3.022,584,4.293,630,1.576,631,3.045,670,4.293,733,4.293,754,2.367,755,4.96,756,4.96,757,4.96,758,4.96,759,4.96,760,4.96,761,4.96,762,4.96,763,4.96,764,4.96,765,4.96,766,3.263,767,4.96,768,4.96,769,4.96,770,4.96,771,5.521,772,5.521,773,4.778,774,5.521,775,5.521,776,5.521,777,4.122,778,5.521,779,5.521,780,5.521,781,5.521,782,4.122,783,2.735,784,2.735,785,2.735,786,2.735,787,2.735,788,2.735,789,4.122,790,2.735,791,2.735,792,2.735,793,2.735,794,2.735,795,2.735,796,2.735,797,2.735,798,2.735,799,2.735,800,2.735,801,2.735,802,2.735,803,2.735,804,2.735,805,3.202,806,2.735,807,2.735,808,2.93,809,2.735,810,2.735,811,4.122,812,2.735,813,4.29,814,2.735,815,2.735,816,2.735,817,2.735,818,2.735,819,4.122,820,6.933,821,3.202,822,2.735,823,2.735,824,2.125,825,3.202,826,2.125,827,2.735,828,2.735,829,2.735,830,2.735]],["title/interfaces/EventPayload.html",[279,0.492,372,2.773]],["body/interfaces/EventPayload.html",[3,0.181,4,0.181,8,0.16,15,0.819,17,1.314,30,0.14,31,0.317,32,1.79,39,2.709,49,2.755,57,0.016,59,0.209,67,1.458,73,1.085,78,1.04,79,0.784,92,2.709,96,1.983,112,0.181,113,0.382,114,1.808,139,3.366,155,4.151,207,3.39,277,0.012,278,0.012,279,0.566,281,1.458,304,2.057,309,1.458,322,1.02,330,1.586,347,1.892,354,3.486,355,3.884,356,3.884,357,3.884,358,3.884,360,5.619,363,4.109,364,1.942,367,2.307,368,3.884,369,3.884,370,2.586,371,2.586,372,4.151,373,5.951,374,5.044,375,3.884,376,3.884,377,4.537,378,5.054,379,2.143,380,5.054,381,3.884,382,3.884,383,5.951,384,4.524,385,5.951,386,5.951,387,4.537,388,6.66,389,5.951,390,4.537,391,5.054,392,3.842,393,5.054,394,2.352,395,3.884,396,3.884]],["title/components/GalleryComponent.html",[0,0.712,247,1.321]],["body/components/GalleryComponent.html",[0,1.067,1,1.238,2,1.797,3,0.147,4,0.147,5,1.348,6,1.348,7,1.348,8,0.13,10,2.614,12,1.348,13,2.896,14,2.877,16,1.876,17,1.144,18,1.876,20,1.238,26,2.048,28,2.048,30,0.114,31,0.276,32,1.402,34,3.083,37,1.01,39,2.713,44,0.667,54,1.1,56,0.584,57,0.016,58,0.346,59,0.237,60,0.584,62,1.114,63,1.098,74,0.548,75,0.968,78,1.066,79,0.638,84,1.472,85,1.986,86,2.244,112,0.147,113,0.311,207,1.695,213,1.585,226,0.856,228,1.348,229,1.876,230,1.348,231,2.234,232,1.348,233,1.348,234,1.238,235,1.876,236,1.348,237,1.238,238,1.348,239,1.238,240,1.291,241,1.876,242,1.291,243,1.348,244,1.348,245,1.291,246,1.348,247,2.142,248,1.348,249,2.142,250,2.332,251,1.348,252,1.238,253,0.726,254,1.348,255,1.238,256,1.348,257,1.348,258,1.238,259,1.348,260,1.348,261,1.238,262,1.348,263,1.348,264,1.238,265,1.238,266,1.238,267,1.348,268,1.238,269,1.348,270,1.238,271,1.348,272,1.238,273,1.093,274,1.348,275,1.348,276,1.348,277,0.01,278,0.01,285,1.105,478,2.054,503,3.371,504,4.157,540,1.986,546,2.244,831,3.163,832,4.157,833,3.591,834,3.591,835,5.848,836,5.848,837,5.085,838,5.085,839,5.848,840,5.848,841,5.848,842,6.323,843,4.161,844,5.473,845,2.404,846,5.085,847,3.654,848,3.654,849,3.654,850,5.085,851,3.346,852,3.654,853,3.654,854,5.085,855,3.654,856,2.839,857,3.654,858,2.244,859,3.654,860,3.654,861,5.848,862,5.085,863,6.323,864,3.654,865,3.654,866,5.848,867,3.163,868,3.654,869,4.401,870,3.654,871,3.654,872,3.654]],["title/components/GalleryElementComponent.html",[0,0.712,249,1.321]],["body/components/GalleryElementComponent.html",[0,1.069,1,1.242,2,1.801,3,0.148,4,0.148,5,1.353,6,1.353,7,1.353,8,0.131,10,2.621,11,2.849,12,1.353,13,2.898,14,2.878,16,1.88,17,1.147,18,1.88,20,1.242,26,2.054,28,2.054,30,0.115,31,0.277,34,2.905,37,1.013,39,2.718,44,0.669,54,1.079,56,0.586,57,0.016,58,0.347,59,0.226,60,0.586,62,1.116,63,1.265,73,1.059,74,0.395,75,0.698,78,1.051,79,0.641,84,1.477,85,1.993,91,2.77,92,2.365,93,2.252,112,0.148,113,0.312,207,2.718,213,1.974,219,2.858,226,0.859,228,1.353,229,1.88,230,1.353,231,2.238,232,1.353,233,1.353,234,1.242,235,1.88,236,1.353,237,1.242,238,1.353,239,1.242,240,1.296,241,1.88,242,1.296,243,1.353,244,1.353,245,1.296,246,1.353,247,1.242,248,1.353,249,2.145,250,2.607,251,1.353,252,1.242,253,0.728,254,1.353,255,1.242,256,1.353,257,1.353,258,1.242,259,1.353,260,1.353,261,1.242,262,1.353,263,1.353,264,1.242,265,1.242,266,1.242,267,1.353,268,1.242,269,1.353,270,1.242,271,1.353,272,1.242,273,1.097,274,1.353,275,1.353,276,1.353,277,0.01,278,0.01,285,0.891,291,1.656,292,2.361,296,1.053,297,1.053,337,3.13,347,1.546,370,2.114,371,2.114,384,4.533,832,4.165,833,3.598,834,3.598,843,4.167,845,2.413,856,5.599,858,2.252,873,6.237,874,3.174,875,4.553,876,5.097,877,5.097,878,6.333,879,6.333,880,5.481,881,5.76,882,5.097,883,3.667,884,3.667,885,3.667,886,3.667,887,3.667,888,2.849,889,2.607,890,3.174,891,3.667,892,3.667,893,3.667,894,3.667,895,5.097,896,5.097,897,5.097,898,3.174,899,3.667,900,4.412,901,3.667]],["title/injectables/IOService.html",[52,2.773,322,0.682]],["body/injectables/IOService.html",[3,0.103,4,0.103,8,0.14,15,0.467,17,1.071,30,0.18,31,0.213,32,1.313,34,2.558,36,3.639,37,0.778,39,3.215,44,0.715,46,2.322,47,2.149,52,2.785,54,1.074,56,0.853,57,0.016,58,0.316,59,0.217,60,0.853,62,1.297,63,1.028,67,1.733,73,1.139,74,0.575,75,1.016,78,1.025,79,0.447,91,1.39,92,1.817,93,1.571,96,1.131,112,0.103,113,0.218,114,2.317,163,0.996,165,0.831,167,0.904,168,1.733,169,2.09,207,2.668,209,1.39,210,3.391,226,1.597,277,0.008,278,0.008,285,1.06,286,0.765,291,1.868,296,1.532,297,1.532,304,1.424,305,0.904,322,0.684,324,0.904,330,0.904,363,3.315,364,1.424,367,1.315,370,1.475,371,1.475,379,1.968,392,3.133,394,1.578,397,3.639,398,1.988,423,2.743,426,2.923,457,2.258,462,3.391,463,2.258,465,1.571,478,1.868,479,1.571,548,3.044,714,2.214,845,1.684,881,5.637,902,2.214,903,4.761,904,5.335,905,3.918,906,4.978,907,5.335,908,5.335,909,5.335,910,5.335,911,4.618,912,3.918,913,3.918,914,3.918,915,2.558,916,2.558,917,2.558,918,2.558,919,2.558,920,2.558,921,2.558,922,2.558,923,2.558,924,3.918,925,2.558,926,3.918,927,4.63,928,2.558,929,2.558,930,2.558,931,2.558,932,2.214,933,3.918,934,1.988,935,1.988,936,1.988,937,2.214,938,2.558,939,2.558,940,2.558,941,3.133,942,2.558,943,3.918,944,2.558,945,2.558,946,2.558,947,2.558,948,1.988,949,3.391,950,1.988,951,2.558,952,2.558,953,2.558,954,2.558,955,3.531,956,4.121,957,3.699,958,3.699,959,3.699,960,4.145,961,3.918,962,2.558,963,2.558,964,2.558,965,2.558,966,3.918,967,2.558,968,2.558,969,2.558,970,2.558,971,2.558,972,3.391,973,2.558,974,2.558,975,2.558,976,2.558,977,2.558,978,2.558,979,2.558,980,2.214,981,3.918,982,4.121,983,3.918,984,3.918,985,2.558,986,2.558,987,2.558,988,1.988,989,3.918,990,3.391,991,2.558,992,2.558,993,2.558,994,2.214,995,2.558,996,4.761,997,2.214,998,3.918,999,5.335,1000,3.918,1001,3.918,1002,3.918,1003,2.558,1004,2.558,1005,2.214,1006,3.918,1007,2.214,1008,2.558,1009,2.558,1010,3.918,1011,3.918,1012,2.558,1013,3.918,1014,2.558,1015,2.558,1016,2.214,1017,2.558,1018,2.558,1019,3.918,1020,3.918,1021,2.558,1022,2.558,1023,3.391,1024,3.391,1025,2.558,1026,2.558,1027,2.558,1028,2.558,1029,2.558,1030,2.558,1031,2.558]],["title/interfaces/ImageFromCLI.html",[67,1.267,279,0.492]],["body/interfaces/ImageFromCLI.html",[3,0.171,4,0.171,8,0.152,15,0.776,30,0.176,31,0.306,57,0.016,58,0.374,59,0.25,67,1.831,73,1.355,74,0.607,112,0.313,163,1.608,165,1.381,167,1.503,168,1.381,169,2.188,206,2.712,253,1.12,277,0.011,278,0.011,279,0.981,280,1.568,281,1.381,282,1.713,283,1.503,284,1.493,285,1.359,286,1.892,287,1.642,288,1.568,289,1.568,290,1.568,291,1.831,292,1.713,293,1.126,294,1.757,295,1.757,296,1.221,297,1.221,298,1.272,299,1.503,300,1.503,301,1.503,302,1.503,303,1.44,304,1.272,305,1.992,306,2.172,307,1.554,308,2.172,309,1.381,310,2.271,311,1.638,312,1.638,313,1.713,314,1.713,315,1.713,316,1.713,317,2.699,318,2.822,319,2.699,320,2.839,321,1.568]],["title/injectables/ImageProcessingService.html",[322,0.682,1032,2.567]],["body/injectables/ImageProcessingService.html",[3,0.122,4,0.122,8,0.109,15,0.554,17,0.684,30,0.095,31,0.242,33,2.607,37,0.885,44,0.554,54,1.169,56,0.713,57,0.016,58,0.264,59,0.267,60,0.713,62,1.179,63,1.255,74,0.786,75,1.389,78,0.848,79,0.531,90,1.41,112,0.122,113,0.258,114,2.342,169,1.989,171,2.53,176,2.933,226,1.363,277,0.009,278,0.009,285,1.243,287,1.667,322,0.779,324,1.074,325,2.961,330,1.074,347,1.282,377,2.361,387,2.361,394,3.015,424,4.106,430,2,440,2.361,458,2.361,459,2.361,468,2.933,478,2.228,489,3.169,589,2,633,2.16,634,2.631,844,5.033,1032,2.933,1033,5.972,1034,2.631,1035,4.101,1036,4.101,1037,5.279,1038,4.101,1039,5.279,1040,4.569,1041,5.279,1042,5.279,1043,5.279,1044,4.569,1045,4.569,1046,5.279,1047,5.279,1048,5.814,1049,5.033,1050,5.814,1051,4.458,1052,2.16,1053,4.458,1054,3.039,1055,3.039,1056,5.028,1057,3.039,1058,3.039,1059,4.458,1060,6.191,1061,3.039,1062,3.039,1063,3.039,1064,3.039,1065,3.039,1066,3.039,1067,3.039,1068,3.039,1069,3.039,1070,3.039,1071,3.039,1072,3.039,1073,3.039,1074,3.039,1075,2.361,1076,2.631,1077,3.039,1078,3.039,1079,4.458,1080,4.458,1081,3.039,1082,5.279,1083,5.279,1084,7.113,1085,3.039,1086,4.458,1087,3.039,1088,3.039,1089,3.039,1090,3.039,1091,3.039,1092,3.039,1093,3.039,1094,3.039,1095,3.039,1096,5.279,1097,5.814,1098,5.279,1099,5.814,1100,3.039,1101,3.039,1102,3.039,1103,3.039,1104,3.039,1105,3.039,1106,3.039,1107,3.039,1108,3.039,1109,3.039,1110,3.039,1111,3.039,1112,3.039,1113,3.039,1114,3.039,1115,3.039,1116,2.16,1117,3.039,1118,3.039,1119,3.039,1120,3.039,1121,3.039,1122,3.039,1123,3.039,1124,3.039]],["title/components/InstanceLabelComponent.html",[0,0.712,252,1.321]],["body/components/InstanceLabelComponent.html",[0,1.088,1,1.283,2,1.842,3,0.152,4,0.152,5,1.397,6,1.397,7,1.397,8,0.135,12,1.397,13,2.908,14,2.889,16,1.923,17,1.173,18,1.923,20,1.283,26,2.1,28,2.1,30,0.186,31,0.283,32,1.644,34,2.708,37,1.036,44,0.691,46,3.285,47,2.713,54,1.089,56,0.833,57,0.016,58,0.38,59,0.24,60,0.833,62,1.135,63,1.287,73,0.872,74,0.408,75,0.721,78,1.015,79,0.662,84,1.526,85,2.059,89,1.948,96,1.674,112,0.152,113,0.322,163,1.769,168,1.937,213,1.625,219,2.543,226,0.888,228,1.397,229,1.923,230,1.397,231,2.269,232,1.397,233,1.397,234,1.283,235,1.923,236,1.397,237,1.283,238,1.397,239,1.283,240,1.339,241,1.923,242,1.339,243,1.397,244,1.397,245,1.339,246,1.397,247,1.283,248,1.397,249,1.283,250,1.397,251,1.397,252,2.175,253,1.443,254,1.397,255,1.283,256,1.397,257,1.397,258,1.283,259,1.397,260,1.397,261,1.283,262,1.397,263,1.397,264,1.283,265,1.283,266,1.283,267,1.397,268,1.283,269,1.397,270,1.283,271,1.397,272,1.283,273,1.133,274,1.397,275,1.397,276,1.397,277,0.01,278,0.01,285,1.041,286,1.783,289,1.397,335,4.237,337,3.201,347,1.597,506,4.237,698,3.279,843,4.226,845,2.493,1125,6.287,1126,5.643,1127,3.279,1128,5.214,1129,5.214,1130,5.214,1131,6.422,1132,5.214,1133,3.788,1134,5.214,1135,3.788,1136,3.788,1137,3.788,1138,3.788,1139,2.943,1140,2.693,1141,3.788,1142,6.422,1143,3.788,1144,3.788,1145,5.214,1146,3.788,1147,3.788,1148,3.788,1149,3.788]],["title/components/InteractiveBboxComponent.html",[0,0.712,255,1.321]],["body/components/InteractiveBboxComponent.html",[0,1.22,1,1.619,2,2.149,3,0.192,4,0.192,5,1.763,6,1.763,7,1.763,8,0.171,12,1.763,13,2.972,14,2.96,16,2.243,17,1.368,18,1.763,20,1.619,26,2.45,28,2.45,57,0.016,58,0.36,78,0.697,79,0.835,112,0.192,113,0.406,213,1.895,228,1.763,229,2.243,230,1.763,231,2.488,232,1.763,233,1.763,234,1.619,235,2.243,236,1.763,237,1.619,238,1.763,239,1.619,240,1.689,241,2.243,242,1.689,243,1.763,244,1.763,245,1.689,246,1.763,247,1.619,248,1.763,249,1.619,250,1.763,251,1.763,252,1.619,253,0.949,254,1.763,255,2.385,256,2.846,257,1.763,258,1.619,259,1.763,260,1.763,261,1.619,262,1.763,263,1.763,264,1.619,265,1.619,266,1.619,267,1.763,268,1.619,269,1.763,270,1.619,271,1.763,272,1.619,273,1.43,274,1.763,275,1.763,276,1.763,277,0.012,278,0.012,283,2.488,325,1.841,1150,4.136,1151,4.136,1152,4.136,1153,6.081,1154,6.081,1155,5.263]],["title/interfaces/LabelFormat.html",[279,0.492,927,2.773]],["body/interfaces/LabelFormat.html",[3,0.205,4,0.205,8,0.182,30,0.159,31,0.344,57,0.016,59,0.274,73,1.358,78,0.924,92,2.367,112,0.205,168,2.342,169,2.152,277,0.012,278,0.012,279,0.643,281,1.658,305,2.547,370,2.941,371,2.941,927,4.504,948,3.964,950,3.964,955,4.426,956,6.239,957,5.601,958,5.601,959,5.601,960,5.601,1156,4.416,1157,5.102,1158,4.416,1159,5.102,1160,5.102]],["title/components/LabelledSwitchComponent.html",[0,0.712,258,1.321]],["body/components/LabelledSwitchComponent.html",[0,1.132,1,1.387,2,1.942,3,0.165,4,0.165,5,1.51,6,1.51,7,1.51,8,0.146,10,2.826,12,1.51,13,2.93,14,2.914,16,2.027,17,1.237,18,2.027,20,1.387,26,2.214,28,2.214,30,0.128,37,1.092,44,0.747,54,1.057,56,0.655,57,0.016,58,0.367,59,0.222,60,0.655,62,1.047,63,0.884,78,1.009,79,0.96,112,0.165,113,0.348,213,1.713,219,2.681,226,0.96,228,1.51,229,2.027,230,1.51,231,2.343,232,1.51,233,1.51,234,1.387,235,2.027,236,1.51,237,1.387,238,1.51,239,1.387,240,1.447,241,2.027,242,1.447,243,1.51,244,1.51,245,1.447,246,1.51,247,1.387,248,1.51,249,1.387,250,1.51,251,1.51,252,1.387,253,0.813,254,1.51,255,1.387,256,1.51,257,1.51,258,2.246,259,2.684,260,1.51,261,1.387,262,1.51,263,1.51,264,1.387,265,1.387,266,1.387,267,1.51,268,1.387,269,1.51,270,1.387,271,1.51,272,1.387,273,1.225,274,1.51,275,1.51,276,1.51,277,0.011,278,0.011,287,1.288,332,4.821,336,5.153,337,3.375,339,3.181,340,4.714,342,4.271,345,4.271,346,2.694,347,1.727,364,1.225,503,3.576,540,2.225,704,4.757,1161,6.165,1162,4.687,1163,3.544,1164,4.41,1165,5.497,1166,5.497,1167,6.632,1168,6.205,1169,5.497,1170,6.205,1171,4.095,1172,4.095,1173,6.205,1174,4.095,1175,4.095,1176,4.095,1177,3.907,1178,3.544,1179,2.911,1180,4.095,1181,4.095]],["title/components/LabelsComponent.html",[0,0.712,261,1.321]],["body/components/LabelsComponent.html",[0,0.953,1,1.012,2,1.555,3,0.12,4,0.12,5,1.101,6,1.101,7,1.101,8,0.107,10,2.263,12,1.101,13,2.829,14,2.803,16,1.623,17,0.99,18,1.623,20,1.012,23,4.523,26,1.773,28,1.773,30,0.138,31,0.239,32,1.921,33,2.476,34,2.987,37,0.874,44,0.803,47,2.806,54,1.11,56,0.983,57,0.016,58,0.394,59,0.244,60,0.983,62,1.299,63,1.473,78,1.102,79,0.522,84,1.203,85,1.623,86,1.834,89,1.535,90,1.385,96,1.32,112,0.12,113,0.254,139,3.012,163,1.466,169,1.441,171,1.101,213,1.372,226,1.351,228,1.101,229,1.623,230,1.101,231,2.037,232,1.101,233,1.101,234,1.012,235,1.623,236,1.101,237,1.012,238,1.101,239,1.012,240,1.055,241,1.623,242,1.055,243,1.101,244,1.101,245,1.055,246,1.101,247,1.012,248,1.101,249,1.012,250,1.101,251,1.101,252,1.953,253,1.038,254,1.101,255,1.012,256,1.101,257,1.101,258,1.012,259,1.101,260,1.101,261,1.953,262,1.101,263,1.101,264,1.012,265,1.012,266,1.012,267,1.101,268,1.012,269,1.101,270,1.012,271,1.101,272,1.012,273,0.893,274,1.101,275,1.101,276,1.101,277,0.009,278,0.009,286,1.839,287,1.031,289,1.101,346,1.965,390,2.32,394,1.203,406,3.419,478,0.97,503,3.012,510,4.06,540,1.623,542,2.123,543,2.32,565,4.045,832,3.714,833,3.208,834,3.208,843,3.794,858,1.834,955,3.54,1126,2.32,1182,2.585,1183,5.225,1184,4.523,1185,4.06,1186,4.06,1187,4.06,1188,4.4,1189,4.4,1190,4.4,1191,5.765,1192,5.765,1193,4.4,1194,4.4,1195,5.765,1196,2.986,1197,2.986,1198,4.4,1199,5.838,1200,2.986,1201,2.986,1202,2.986,1203,4.4,1204,2.986,1205,5.225,1206,4.4,1207,2.986,1208,4.4,1209,2.986,1210,2.986,1211,2.986,1212,2.986,1213,2.986,1214,2.986,1215,2.986,1216,2.585,1217,2.32,1218,2.986,1219,2.32,1220,5.765,1221,2.986,1222,2.986,1223,2.986,1224,2.986,1225,2.986,1226,2.986,1227,2.986,1228,2.986,1229,2.986,1230,4.4,1231,2.986,1232,3.809,1233,5.765,1234,2.986,1235,3.419,1236,3.419,1237,4.4,1238,5.765]],["title/injectables/LabelsService.html",[47,1.572,322,0.682]],["body/injectables/LabelsService.html",[3,0.121,4,0.121,8,0.108,15,0.55,17,0.996,30,0.181,31,0.241,37,0.88,44,0.958,47,1.784,54,1.173,56,1.031,57,0.016,58,0.382,59,0.263,60,1.031,62,1.387,63,1.533,74,0.718,75,1.27,78,0.9,79,0.526,96,1.331,108,4.091,109,3.794,110,2.141,112,0.121,113,0.256,114,2.116,163,1.695,169,2.075,171,2.275,226,1.563,253,0.88,277,0.009,278,0.009,285,1.078,286,2.153,287,1.038,288,1.937,289,1.634,322,0.774,324,1.065,330,1.065,346,1.982,364,0.901,374,2.341,379,0.939,411,5.011,478,0.979,516,3.833,563,4.74,955,1.85,972,3.833,1199,4.793,1232,2.607,1235,3.441,1239,2.607,1240,5.252,1241,5.252,1242,5.252,1243,5.252,1244,5.252,1245,5.252,1246,4.429,1247,5.79,1248,4.429,1249,5.79,1250,5.79,1251,5.79,1252,4.429,1253,4.429,1254,4.429,1255,5.79,1256,4.429,1257,4.429,1258,3.013,1259,4.429,1260,3.013,1261,3.013,1262,4.429,1263,3.013,1264,3.013,1265,3.013,1266,3.013,1267,3.013,1268,4.429,1269,3.013,1270,3.013,1271,3.013,1272,4.429,1273,3.013,1274,3.013,1275,3.013,1276,3.013,1277,3.013,1278,3.013,1279,3.013,1280,3.013,1281,2.341,1282,3.013,1283,3.441,1284,4.546,1285,3.013,1286,4.429,1287,3.013,1288,4.429,1289,3.013,1290,3.013,1291,3.013,1292,2.141,1293,3.013,1294,3.013,1295,3.013,1296,3.013,1297,3.013,1298,3.013,1299,3.013,1300,3.013,1301,2.607,1302,3.013,1303,3.013,1304,4.546,1305,3.013,1306,6.451,1307,3.013,1308,6.169,1309,5.252,1310,3.013,1311,3.013,1312,5.252,1313,3.013,1314,5.252,1315,6.169,1316,3.013,1317,3.013,1318,4.429,1319,3.013]],["title/components/LoadingComponent.html",[0,0.712,20,1.321]],["body/components/LoadingComponent.html",[0,1.188,1,1.531,2,2.073,3,0.182,4,0.182,5,1.667,6,1.667,7,1.667,8,0.161,12,1.667,13,2.957,14,2.944,16,2.164,17,1.32,18,2.164,20,2.335,21,4.286,26,2.364,28,2.364,30,0.141,31,0.319,32,1.618,36,4.402,44,0.825,45,3.512,54,0.896,56,0.723,57,0.016,58,0.386,59,0.21,60,0.723,78,1.005,79,0.79,81,3.912,84,1.821,112,0.182,113,0.384,213,1.829,228,1.667,229,2.164,230,1.667,231,2.436,232,1.667,233,1.667,234,1.531,235,2.164,236,1.667,237,1.531,238,1.667,239,1.531,240,1.597,241,2.164,242,1.597,243,1.667,244,1.667,245,1.597,246,1.667,247,1.531,248,1.667,249,1.531,250,1.667,251,1.667,252,1.531,253,0.898,254,1.667,255,1.531,256,1.667,257,1.667,258,1.531,259,1.667,260,1.667,261,1.531,262,1.667,263,1.667,264,1.531,265,1.531,266,1.531,267,1.667,268,1.531,269,1.667,270,1.531,271,1.667,272,1.531,273,1.352,274,1.667,275,1.667,276,1.667,277,0.012,278,0.012,546,2.775,1320,3.912,1321,4.171,1322,6.514,1323,5.867,1324,5.867,1325,4.52,1326,4.52,1327,4.52,1328,5.867]],["title/interfaces/MulticlassInterface.html",[279,0.492,306,1.503]],["body/interfaces/MulticlassInterface.html",[3,0.177,4,0.177,8,0.157,15,0.805,30,0.18,31,0.314,57,0.016,58,0.431,59,0.23,67,1.433,73,1.353,74,0.764,112,0.315,163,1.637,165,1.433,167,1.558,168,1.433,169,2.145,206,1.777,253,1.147,277,0.011,278,0.011,279,0.986,280,1.627,281,1.433,282,1.777,283,1.558,284,1.529,285,1.366,286,1.926,287,1.662,288,1.627,289,1.627,290,1.627,291,1.876,292,1.777,293,1.168,294,1.8,295,1.8,296,1.267,297,1.267,298,1.319,299,1.558,300,1.558,301,1.558,302,1.558,303,1.494,304,1.319,305,2.04,306,2.48,307,1.955,308,2.225,309,1.433,310,2.326,311,1.699,312,1.699,313,1.777,314,1.777,315,1.777,316,1.777,317,2.225,318,2.326,319,2.225,320,1.86,321,1.627]],["title/classes/MulticlassTask.html",[108,2.249,113,0.332]],["body/classes/MulticlassTask.html",[3,0.21,4,0.21,8,0.186,30,0.163,31,0.349,32,2.174,44,0.951,54,1.11,56,0.834,57,0.016,58,0.309,59,0.259,60,0.834,73,1.349,74,0.562,75,0.993,108,3.701,109,2.834,112,0.258,113,0.546,163,1.326,277,0.013,278,0.013,307,1.438,546,3.943,988,5.795,1292,3.706,1329,4.051,1330,6.456,1331,6.456,1332,4.513,1333,5.214,1334,6.959,1335,4.513,1336,4.513,1337,4.513,1338,4.513,1339,4.513,1340,4.513,1341,4.513]],["title/interfaces/MultilabelInterface.html",[279,0.492,308,1.503]],["body/interfaces/MultilabelInterface.html",[3,0.177,4,0.177,8,0.157,15,0.805,30,0.18,31,0.314,57,0.016,58,0.431,59,0.23,67,1.433,73,1.353,74,0.764,112,0.315,163,1.637,165,1.433,167,1.558,168,1.433,169,2.145,206,1.777,253,1.147,277,0.011,278,0.011,279,0.986,280,1.627,281,1.433,282,1.777,283,1.558,284,1.529,285,1.366,286,1.926,287,1.662,288,1.627,289,1.627,290,1.627,291,1.876,292,1.777,293,1.168,294,1.8,295,1.8,296,1.267,297,1.267,298,1.319,299,1.558,300,1.558,301,1.558,302,1.558,303,1.494,304,1.319,305,2.04,306,2.225,307,1.955,308,2.48,309,1.433,310,2.326,311,1.699,312,1.699,313,1.777,314,1.777,315,1.777,316,1.777,317,2.225,318,2.326,319,2.225,320,1.86,321,1.627]],["title/classes/MultilabelTask.html",[109,2.12,113,0.332]],["body/classes/MultilabelTask.html",[3,0.198,4,0.198,8,0.176,30,0.154,31,0.337,32,2.155,37,1.232,44,0.9,54,1.144,56,1.085,57,0.016,58,0.402,59,0.267,60,1.085,62,1.181,63,1.339,73,1.353,74,0.531,75,0.939,108,2.842,109,3.371,112,0.25,113,0.528,163,1.725,277,0.012,278,0.012,307,1.36,546,3.809,988,3.831,1292,3.505,1329,3.831,1330,4.268,1331,6.352,1332,4.268,1335,6.352,1336,6.352,1337,5.369,1338,4.268,1339,5.369,1340,4.268,1341,4.268,1342,6.203,1343,6.203,1344,4.931,1345,6.786,1346,4.931,1347,4.931]],["title/injectables/OpenCVService.html",[322,0.682,424,2.395]],["body/injectables/OpenCVService.html",[3,0.062,4,0.104,8,0.055,15,0.279,17,0.756,30,0.048,31,0.141,37,0.514,44,0.279,54,1.011,56,0.974,57,0.016,58,0.361,59,0.23,60,0.974,62,1.133,63,0.726,73,0.854,74,0.362,75,0.64,78,0.576,79,0.268,96,0.677,112,0.062,113,0.13,126,3.815,148,1.325,163,1.123,164,3.421,165,1.932,169,1.322,171,2.6,173,1.703,176,3.36,209,3.64,219,2.491,226,1.31,231,0.541,277,0.007,278,0.005,283,2.043,284,1.352,285,1.126,287,0.607,294,1.377,295,1.232,296,1.542,297,1.377,304,1.672,322,0.452,324,0.541,330,0.541,347,0.646,364,2.218,379,2.278,394,1.592,424,1.589,428,4.735,430,2.601,440,3.071,456,0.883,463,2.943,468,1.703,478,2.409,484,1.19,572,2.24,594,5.275,596,2.24,669,1.325,692,2.24,693,3.421,694,4.15,695,4.15,732,2.011,743,1.703,805,1.19,958,2.011,1035,3.071,1036,3.071,1038,3.726,1040,3.421,1044,2.24,1045,2.24,1056,6.007,1076,1.325,1116,3.973,1140,1.088,1177,5.317,1236,1.19,1283,1.19,1321,1.088,1348,5.205,1349,1.19,1350,3.362,1351,3.953,1352,3.362,1353,3.362,1354,3.362,1355,2.588,1356,2.588,1357,2.588,1358,2.588,1359,2.588,1360,2.588,1361,2.588,1362,2.588,1363,1.531,1364,3.953,1365,2.588,1366,2.588,1367,1.531,1368,2.588,1369,3.953,1370,1.531,1371,2.588,1372,1.531,1373,2.588,1374,1.531,1375,2.588,1376,1.531,1377,2.588,1378,1.531,1379,2.588,1380,1.531,1381,2.588,1382,1.531,1383,2.588,1384,4.418,1385,1.531,1386,2.588,1387,1.531,1388,2.588,1389,1.531,1390,1.531,1391,1.531,1392,2.588,1393,1.531,1394,2.588,1395,1.531,1396,2.588,1397,1.325,1398,3.071,1399,1.19,1400,1.531,1401,1.19,1402,1.531,1403,1.531,1404,2.588,1405,1.531,1406,1.531,1407,2.588,1408,1.531,1409,3.953,1410,6.224,1411,3.362,1412,1.531,1413,3.362,1414,1.531,1415,2.588,1416,1.531,1417,1.531,1418,2.24,1419,2.588,1420,1.531,1421,4.795,1422,1.531,1423,4.795,1424,3.362,1425,2.91,1426,2.588,1427,5.86,1428,3.362,1429,2.24,1430,2.588,1431,2.588,1432,3.953,1433,3.362,1434,3.362,1435,1.531,1436,1.531,1437,5.589,1438,1.531,1439,1.531,1440,1.531,1441,2.24,1442,1.531,1443,3.362,1444,1.531,1445,2.588,1446,1.531,1447,1.531,1448,1.531,1449,1.531,1450,1.531,1451,1.531,1452,1.325,1453,2.588,1454,2.588,1455,3.824,1456,1.325,1457,2.588,1458,1.531,1459,1.531,1460,1.531,1461,1.531,1462,2.588,1463,1.531,1464,1.531,1465,1.531,1466,1.531,1467,1.008,1468,1.531,1469,3.953,1470,2.24,1471,1.531,1472,3.824,1473,1.531,1474,3.824,1475,1.531,1476,1.531,1477,4.795,1478,3.362,1479,2.588,1480,1.531,1481,4.795,1482,2.588,1483,1.531,1484,1.531,1485,1.531,1486,1.531,1487,2.588,1488,1.531,1489,3.953,1490,3.953,1491,1.325,1492,3.953,1493,5.948,1494,2.588,1495,2.588,1496,2.588,1497,5.275,1498,3.362,1499,3.953,1500,3.953,1501,3.953,1502,5.589,1503,1.531,1504,1.531,1505,2.588,1506,2.588,1507,2.588,1508,1.531,1509,1.531,1510,1.531,1511,1.531,1512,1.531,1513,1.531,1514,1.531,1515,1.531,1516,1.531,1517,3.362,1518,1.531,1519,1.531,1520,4.795,1521,4.418,1522,2.588,1523,4.418,1524,2.588,1525,4.418,1526,1.531,1527,3.953,1528,3.953,1529,3.953,1530,2.588,1531,1.531,1532,1.531,1533,1.531,1534,1.531,1535,1.531,1536,1.531,1537,1.531,1538,1.531,1539,1.531,1540,1.531,1541,1.531,1542,1.531,1543,2.588,1544,2.588,1545,2.588,1546,1.531,1547,1.325,1548,1.531,1549,4.418,1550,1.531,1551,1.531,1552,1.531,1553,2.588,1554,2.588,1555,1.531,1556,1.088,1557,1.531,1558,1.531,1559,1.531,1560,1.531,1561,2.588,1562,1.531,1563,1.531,1564,2.588,1565,1.531,1566,1.531,1567,2.588,1568,1.531,1569,2.588,1570,3.953,1571,1.531,1572,2.91,1573,1.531,1574,1.531,1575,1.325,1576,1.325,1577,1.531,1578,1.531,1579,1.531,1580,1.531,1581,1.531,1582,1.531,1583,1.531,1584,2.588,1585,1.531,1586,1.325,1587,2.588,1588,2.588,1589,4.418,1590,2.24,1591,2.588,1592,2.588,1593,1.531,1594,2.588,1595,2.588,1596,3.953,1597,4.418,1598,1.531,1599,1.531,1600,1.531,1601,1.531,1602,1.531,1603,2.588,1604,1.531,1605,2.588,1606,2.588,1607,3.362,1608,3.362,1609,1.531,1610,1.531,1611,1.531,1612,2.588,1613,1.531,1614,1.531,1615,1.531,1616,1.531,1617,1.531,1618,1.325,1619,1.531,1620,1.531,1621,1.531,1622,2.588,1623,1.531,1624,1.531,1625,2.588,1626,1.531,1627,3.362,1628,4.15,1629,1.531,1630,1.531,1631,1.531,1632,1.531,1633,1.531,1634,1.531,1635,1.531,1636,1.531,1637,1.531,1638,1.531,1639,1.325,1640,1.531]],["title/interfaces/Point2D.html",[279,0.492,293,1.033]],["body/interfaces/Point2D.html",[3,0.18,4,0.18,8,0.16,15,0.817,30,0.182,31,0.317,57,0.016,58,0.384,59,0.208,67,1.456,73,1.342,74,0.628,112,0.315,163,1.649,165,1.456,167,1.583,168,1.456,169,2.121,206,1.805,253,1.159,277,0.012,278,0.012,279,0.988,280,1.653,281,1.456,282,1.805,283,1.583,284,1.545,285,1.389,286,1.941,287,1.67,288,1.653,289,1.653,290,1.653,291,1.895,292,1.805,293,1.545,294,2.221,295,2.221,296,1.287,297,1.287,298,1.34,299,1.583,300,1.583,301,1.583,302,1.583,303,1.518,304,1.34,305,2.061,306,2.248,307,1.609,308,2.248,309,1.456,310,2.35,311,1.726,312,1.726,313,1.805,314,1.805,315,1.805,316,1.805,317,2.248,318,2.35,319,2.248,320,1.889,321,1.653]],["title/interfaces/Point2D-1.html",[171,1.202,279,0.411,293,0.863]],["body/interfaces/Point2D-1.html",[3,0.228,4,0.228,8,0.203,30,0.177,31,0.367,57,0.016,59,0.241,112,0.291,277,0.013,278,0.013,279,0.91,281,1.843,284,1.502,285,1.412,293,1.79,294,2.38,295,2.38,296,1.63,297,1.63,298,1.697,299,2.005,300,2.005,301,2.005,302,2.005,325,2.186,1641,4.033]],["title/injectables/PostProcessService.html",[322,0.682,589,2.567]],["body/injectables/PostProcessService.html",[3,0.109,4,0.164,8,0.096,15,0.492,17,0.607,30,0.154,31,0.222,32,1.357,33,2.495,37,0.811,39,3.402,44,0.745,54,1.012,56,0.652,57,0.016,58,0.242,59,0.176,60,0.652,62,1.179,63,0.583,74,0.291,75,0.514,78,0.966,79,0.472,90,1.252,92,1.252,112,0.109,113,0.23,114,2.495,163,0.686,207,1.252,209,2.98,219,1.317,226,1.452,277,0.008,278,0.008,283,0.954,284,1.303,285,1.082,287,0.956,294,0.841,295,0.841,296,1.779,297,1.779,304,1.924,322,0.713,323,3.609,324,0.954,325,2.612,330,0.954,364,1.981,370,1.556,371,1.556,379,2.334,392,3.875,394,2.372,397,3.707,399,3.171,400,4.747,423,2.82,426,3.021,456,1.556,457,2.836,463,1.556,465,4.243,468,3.237,478,2.417,479,4.243,550,2.097,589,2.685,590,3.949,616,2.336,635,2.336,671,3.532,672,2.336,683,3.532,686,3.532,688,2.336,689,2.336,711,4.747,721,2.336,726,3.171,727,4.747,728,3.532,735,2.336,737,5.868,738,5.981,739,5.528,740,5.455,867,2.336,1032,4.232,1049,4.259,1052,1.919,1425,3.532,1441,5.097,1455,2.336,1491,3.532,1497,4.747,1642,5.868,1643,2.336,1644,4.92,1645,5.484,1646,4.92,1647,5.484,1648,5.484,1649,5.484,1650,5.484,1651,4.259,1652,4.081,1653,2.699,1654,2.699,1655,4.92,1656,6.779,1657,6.779,1658,2.699,1659,6.194,1660,2.699,1661,2.699,1662,2.699,1663,2.699,1664,2.336,1665,5.484,1666,4.92,1667,4.92,1668,4.081,1669,4.081,1670,4.92,1671,2.699,1672,5.889,1673,4.081,1674,2.699,1675,2.336,1676,2.699,1677,2.699,1678,2.699,1679,4.081,1680,5.484,1681,2.699,1682,2.699,1683,4.92,1684,4.081,1685,4.081,1686,4.081,1687,2.336,1688,2.699,1689,2.699,1690,2.699,1691,2.699,1692,2.699,1693,2.699,1694,4.081,1695,2.699,1696,2.699,1697,2.699,1698,2.699,1699,2.699,1700,2.699,1701,2.336,1702,2.699,1703,2.699,1704,2.699,1705,2.699,1706,2.699,1707,4.081,1708,4.081,1709,4.081,1710,4.081,1711,2.699,1712,4.081,1713,2.699,1714,2.699,1715,2.699,1716,2.699,1717,2.097,1718,2.699,1719,2.699,1720,2.699,1721,2.699,1722,2.699,1723,2.699,1724,2.699,1725,2.699,1726,2.699,1727,2.699,1728,4.081,1729,2.699,1730,2.699]],["title/interfaces/ProjectConfig.html",[279,0.492,309,1.267]],["body/interfaces/ProjectConfig.html",[3,0.164,4,0.164,8,0.146,15,0.744,30,0.171,31,0.298,57,0.016,58,0.367,59,0.27,67,1.325,73,1.349,74,0.59,112,0.311,163,1.574,165,1.325,167,1.441,168,1.325,169,2.163,206,1.643,253,1.089,277,0.011,278,0.011,279,0.975,280,1.504,281,1.325,282,1.643,283,1.441,284,1.452,285,1.351,286,1.853,287,1.813,288,1.504,289,1.504,290,1.504,291,1.781,292,1.643,293,1.08,294,1.709,295,1.709,296,1.171,297,1.171,298,1.22,299,1.441,300,1.441,301,1.441,302,1.441,303,1.381,304,1.22,305,1.937,306,2.551,307,1.512,308,2.551,309,1.781,310,2.783,311,2.551,312,2.551,313,2.667,314,2.667,315,2.667,316,2.667,317,2.662,318,2.783,319,2.662,320,1.72,321,1.504]],["title/components/ProjectConfigurationComponent.html",[0,0.712,264,1.321]],["body/components/ProjectConfigurationComponent.html",[0,0.821,1,0.792,2,1.292,3,0.094,4,0.094,5,0.863,6,0.863,7,0.863,8,0.182,10,1.88,12,0.863,13,2.732,14,2.697,16,1.348,17,1.57,18,1.348,20,0.792,21,2.961,26,1.473,28,1.473,30,0.073,31,0.199,32,1.613,34,2.741,37,0.726,39,2.087,44,0.667,46,2.692,47,2.223,48,3.496,49,3.123,50,3.496,51,3.952,54,1.1,56,0.813,57,0.016,58,0.394,59,0.237,60,0.813,62,1.238,63,1.403,73,0.978,74,0.548,75,1.29,78,1.105,79,0.409,84,1.473,85,1.271,86,1.437,87,1.539,88,1.818,89,1.203,91,3.532,92,1.696,93,1.437,94,2.025,96,1.034,112,0.094,113,0.433,114,1.473,126,2.599,142,2.025,152,2.025,153,1.818,162,2.025,163,0.595,165,1.462,167,0.827,168,0.76,169,0.645,171,0.863,203,2.025,207,1.085,213,1.14,219,2.195,220,3.616,228,0.863,229,1.348,230,0.863,231,1.797,232,0.863,233,0.863,234,0.792,235,1.348,236,0.863,237,0.792,238,0.863,239,1.982,240,1.797,241,1.348,242,0.827,243,0.863,244,0.863,245,0.827,246,0.863,247,0.792,248,0.863,249,0.792,250,0.863,251,0.863,252,0.792,253,0.894,254,0.863,255,0.792,256,0.863,257,0.863,258,1.723,259,0.863,260,0.863,261,0.792,262,0.863,263,0.863,264,1.723,265,2.392,266,0.792,267,0.863,268,0.792,269,0.863,270,0.792,271,0.863,272,0.792,273,0.7,274,0.863,275,0.863,276,0.863,277,0.007,278,0.007,286,1.651,287,1.482,335,3.198,379,1.403,394,0.942,478,1.188,499,5.641,500,1.818,501,1.818,502,3.198,503,2.593,504,3.198,505,3.895,506,3.198,509,3.895,510,3.496,511,3.164,512,3.164,540,1.271,541,2.025,542,1.663,543,1.818,544,2.025,716,3.164,743,2.406,832,3.198,833,2.763,834,2.763,843,3.347,845,1.539,858,1.437,875,3.496,888,1.818,898,3.164,906,3.164,941,3.631,1140,1.663,1162,1.539,1164,3.198,1177,3.198,1179,1.663,1184,3.895,1187,3.496,1216,2.025,1321,2.599,1717,2.84,1731,6.284,1732,4.5,1733,4.5,1734,4.5,1735,4.5,1736,4.5,1737,4.5,1738,5.087,1739,3.656,1740,5.087,1741,3.656,1742,5.087,1743,5.087,1744,3.656,1745,4.403,1746,3.656,1747,2.34,1748,3.656,1749,2.34,1750,2.34,1751,3.656,1752,2.34,1753,2.34,1754,2.34,1755,2.34,1756,3.656,1757,2.34,1758,2.34,1759,2.34,1760,2.34,1761,2.34,1762,2.34,1763,2.34,1764,2.34,1765,6.324,1766,2.025,1767,2.025,1768,1.818,1769,1.818,1770,2.599,1771,2.34,1772,2.34,1773,2.34,1774,4.5,1775,4.5,1776,4.5,1777,2.34,1778,3.656,1779,2.34,1780,3.656,1781,3.656,1782,2.34,1783,2.34,1784,2.34,1785,2.34,1786,2.34,1787,2.34,1788,2.34,1789,2.34,1790,3.656,1791,3.656,1792,3.656,1793,3.656,1794,3.656,1795,4.403,1796,3.656,1797,3.656,1798,5.087,1799,5.087,1800,5.087,1801,5.087,1802,3.164,1803,3.656]],["title/interfaces/ProjectFile.html",[279,0.492,321,1.439]],["body/interfaces/ProjectFile.html",[3,0.18,4,0.18,8,0.16,15,1.254,30,0.182,31,0.317,57,0.016,58,0.384,59,0.208,67,1.456,73,1.351,74,0.628,112,0.315,163,1.649,165,1.456,167,1.583,168,1.456,169,2.121,206,1.805,253,1.159,277,0.012,278,0.012,279,0.988,280,1.653,281,1.456,282,1.805,283,1.583,284,1.545,285,1.369,286,1.941,287,1.67,288,1.653,289,1.653,290,1.653,291,1.895,292,1.805,293,1.186,294,1.818,295,1.818,296,1.287,297,1.287,298,1.34,299,1.583,300,1.583,301,1.583,302,1.583,303,1.518,304,1.34,305,2.061,306,2.248,307,1.609,308,2.248,309,1.456,310,2.87,311,1.726,312,1.726,313,1.805,314,1.805,315,1.805,316,1.805,317,2.248,318,2.35,319,2.248,320,1.889,321,2.152]],["title/injectables/ProjectService.html",[34,1.645,322,0.682]],["body/injectables/ProjectService.html",[3,0.092,4,0.092,8,0.129,15,0.657,17,1.133,30,0.157,31,0.196,34,1.519,36,3.345,37,0.716,39,3.478,41,3.848,44,0.657,45,1.784,46,2.169,47,2.028,54,1.163,56,0.928,57,0.016,58,0.372,59,0.266,60,0.928,62,1.259,63,0.778,73,1.248,74,0.785,75,1.366,78,0.983,79,0.401,87,1.511,88,1.784,91,2.416,92,1.671,93,1.41,96,1.015,108,2.076,109,1.958,110,1.632,112,0.092,113,0.195,114,1.451,155,1.632,163,0.916,165,0.746,167,0.811,168,0.746,169,1.916,171,1.329,207,2.815,217,3.118,220,1.632,226,1.515,277,0.007,278,0.007,285,1.06,286,1.078,287,1.606,290,0.847,291,1.636,307,0.993,309,2.19,310,1.451,311,0.885,312,0.885,313,0.925,314,0.925,315,0.925,316,0.925,317,0.885,318,0.925,319,0.885,321,2.018,322,0.629,324,0.811,330,0.811,364,1.078,370,1.323,371,1.323,379,1.386,392,3.313,394,2.715,478,0.746,548,1.784,563,1.632,715,1.987,726,3.454,743,1.511,851,2.37,869,3.118,880,3.118,889,1.632,890,1.987,911,1.987,932,1.987,937,1.987,941,2.925,980,1.987,982,1.987,990,1.987,994,1.987,1016,1.987,1116,1.632,1140,1.632,1235,1.784,1283,1.784,1284,1.987,1301,1.987,1304,1.987,1321,1.632,1745,4.358,1770,1.632,1802,4.358,1804,1.987,1805,4.446,1806,4.446,1807,4.446,1808,4.446,1809,4.446,1810,4.446,1811,4.446,1812,4.446,1813,4.446,1814,4.446,1815,4.446,1816,5.035,1817,4.446,1818,3.602,1819,3.602,1820,5.035,1821,4.446,1822,5.035,1823,3.602,1824,3.602,1825,5.035,1826,3.602,1827,3.602,1828,2.296,1829,3.602,1830,2.296,1831,2.296,1832,2.296,1833,2.296,1834,2.296,1835,3.602,1836,2.296,1837,3.602,1838,2.296,1839,3.602,1840,2.296,1841,2.296,1842,2.296,1843,2.296,1844,2.296,1845,2.296,1846,3.602,1847,2.296,1848,3.602,1849,2.296,1850,2.296,1851,2.296,1852,2.296,1853,2.296,1854,2.296,1855,2.296,1856,3.602,1857,2.296,1858,2.296,1859,3.602,1860,2.296,1861,2.296,1862,2.296,1863,1.784,1864,1.784,1865,3.602,1866,2.296,1867,2.296,1868,5.804,1869,2.296,1870,3.602,1871,2.296,1872,2.296,1873,4.446,1874,2.296,1875,3.602,1876,4.446,1877,5.804,1878,3.602,1879,3.602,1880,3.602,1881,3.602,1882,2.296,1883,2.296,1884,2.296,1885,2.296,1886,2.296,1887,2.296,1888,2.296,1889,2.296,1890,2.296,1891,2.296,1892,3.602,1893,2.296,1894,2.296,1895,3.602,1896,3.602,1897,3.602,1898,2.296,1899,2.296,1900,2.296,1901,2.296,1902,2.296,1903,2.296,1904,2.296,1905,2.296,1906,2.296,1907,2.296,1908,2.296,1909,2.296,1910,2.296,1911,3.602,1912,3.602,1913,2.296,1914,2.296,1915,1.987,1916,5.035,1917,3.602,1918,2.296,1919,2.296,1920,2.296,1921,3.602,1922,1.987,1923,2.296,1924,2.296,1925,2.296,1926,2.296,1927,2.296,1928,1.987,1929,2.296,1930,2.296,1931,2.296,1932,2.296,1933,2.296,1934,2.296,1935,2.296,1936,2.296,1937,2.296,1938,2.296,1939,2.296,1940,2.296,1941,2.296,1942,2.296,1943,2.296,1944,3.602,1945,2.296,1946,2.296,1947,2.296,1948,2.296,1949,3.602,1950,2.296]],["title/interfaces/Rect.html",[279,0.492,284,1.033]],["body/interfaces/Rect.html",[3,0.177,4,0.177,8,0.157,15,0.801,30,0.18,31,0.313,57,0.016,58,0.38,59,0.243,67,1.427,73,1.34,74,0.62,112,0.315,163,1.633,165,1.427,167,1.552,168,1.427,169,2.114,206,1.769,253,1.144,277,0.011,278,0.011,279,0.985,280,1.62,281,1.427,282,1.769,283,1.552,284,1.701,285,1.4,286,1.922,287,1.659,288,1.62,289,1.62,290,1.62,291,1.871,292,1.769,293,1.163,294,2.207,295,2.207,296,1.958,297,1.958,298,1.314,299,1.552,300,1.552,301,1.552,302,1.552,303,1.488,304,1.314,305,2.035,306,2.218,307,1.588,308,2.218,309,1.427,310,2.32,311,1.692,312,1.692,313,1.769,314,1.769,315,1.769,316,1.769,317,2.218,318,2.32,319,2.218,320,1.852,321,1.62]],["title/interfaces/Rect-1.html",[171,1.202,279,0.411,284,0.863]],["body/interfaces/Rect-1.html",[3,0.223,4,0.223,8,0.198,30,0.173,31,0.362,57,0.016,59,0.265,112,0.287,277,0.013,278,0.013,279,0.9,281,1.797,284,1.763,285,1.42,293,1.465,294,2.364,295,2.364,296,2.129,297,2.129,298,1.655,299,1.955,300,1.955,301,1.955,302,1.955,325,2.131,1641,3.932]],["title/components/SVGElementsComponent.html",[0,0.712,266,1.321]],["body/components/SVGElementsComponent.html",[0,1.088,1,1.283,2,1.842,3,0.152,4,0.152,5,1.397,6,1.397,7,1.397,8,0.135,12,1.397,13,2.908,14,2.889,16,1.923,17,1.173,18,1.923,20,1.283,26,2.1,28,2.1,30,0.118,31,0.283,32,2.077,33,3.005,37,1.036,44,0.691,46,3.133,47,2.713,54,1.109,56,0.833,57,0.016,58,0.38,59,0.259,60,0.833,62,0.721,63,0.818,73,0.872,74,0.408,75,0.721,78,1.04,79,0.662,84,1.526,89,1.948,90,1.757,96,1.674,112,0.152,113,0.322,213,1.625,219,2.543,228,1.397,229,1.923,230,1.397,231,2.269,232,1.397,233,1.397,234,1.283,235,1.923,236,1.397,237,1.283,238,1.397,239,1.283,240,1.339,241,1.923,242,1.339,243,1.397,244,1.397,245,1.339,246,1.397,247,1.283,248,1.397,249,1.283,250,1.397,251,1.397,252,1.283,253,0.753,254,1.397,255,1.283,256,1.397,257,1.397,258,1.283,259,1.397,260,1.397,261,1.283,262,1.397,263,1.397,264,1.283,265,1.283,266,2.175,267,1.397,268,1.283,269,1.397,270,1.283,271,1.397,272,1.283,273,1.133,274,1.397,275,1.397,276,1.397,277,0.01,278,0.01,284,1.7,293,1.003,298,1.56,323,4.431,325,2.84,337,3.201,340,4.237,457,2.183,506,4.237,521,2.943,546,2.326,590,4.58,1024,5.16,1178,3.279,1651,5.828,1951,3.279,1952,5.214,1953,5.214,1954,5.214,1955,5.214,1956,5.961,1957,5.214,1958,3.788,1959,5.214,1960,3.788,1961,3.788,1962,3.788,1963,3.788,1964,3.788,1965,5.214,1966,3.788,1967,3.788,1968,3.788,1969,3.788,1970,3.788,1971,3.788,1972,3.788,1973,3.788]],["title/injectables/SVGUIService.html",[322,0.682,590,2.395]],["body/injectables/SVGUIService.html",[3,0.213,4,0.213,8,0.189,15,0.968,30,0.166,31,0.353,37,1.289,44,1.279,54,1.145,56,0.848,57,0.016,58,0.314,59,0.232,60,0.848,62,1.335,63,1.401,73,1.085,74,0.571,75,1.01,78,0.946,79,0.927,91,2.882,112,0.213,113,0.451,277,0.013,278,0.013,293,1.985,322,1.134,324,1.874,325,2.938,330,1.874,590,3.985,627,3.49,1556,3.77,1974,4.591,1975,7.012,1976,6.489,1977,7.306,1978,7.012,1979,6.489,1980,5.304,1981,5.304,1982,5.304,1983,5.304,1984,5.304]],["title/interfaces/SegInstance.html",[279,0.492,288,1.439]],["body/interfaces/SegInstance.html",[3,0.179,4,0.179,8,0.158,15,0.809,30,0.181,31,0.315,57,0.016,58,0.382,59,0.231,67,1.441,73,1.346,74,0.624,112,0.315,163,1.852,165,1.441,167,1.567,168,1.441,169,2.118,206,1.787,253,1.411,277,0.011,278,0.011,279,0.987,280,1.636,281,1.441,282,1.787,283,1.567,284,1.535,285,1.379,286,2.125,287,1.665,288,2.138,289,2.525,290,1.636,291,1.883,292,1.787,293,1.175,294,1.807,295,1.807,296,1.274,297,1.274,298,1.327,299,1.567,300,1.567,301,1.567,302,1.567,303,1.502,304,1.327,305,2.048,306,2.233,307,1.598,308,2.233,309,1.441,310,2.335,311,1.709,312,1.709,313,1.787,314,1.787,315,1.787,316,1.787,317,2.233,318,2.335,319,2.233,320,1.87,321,1.636]],["title/interfaces/SegLabel.html",[279,0.492,286,1.167]],["body/interfaces/SegLabel.html",[3,0.176,4,0.176,8,0.156,15,0.797,30,0.179,31,0.312,57,0.016,58,0.379,59,0.243,67,1.419,73,1.352,74,0.618,112,0.314,163,1.844,165,2.21,167,2.404,168,2.21,169,2.142,206,1.759,253,1.14,277,0.011,278,0.011,279,0.985,280,1.611,281,1.419,282,1.759,283,1.543,284,1.519,285,1.364,286,2.035,287,1.733,288,1.611,289,1.611,290,1.611,291,1.864,292,1.759,293,1.156,294,1.788,295,1.788,296,1.254,297,1.254,298,1.306,299,1.543,300,1.543,301,1.543,302,1.543,303,1.479,304,1.306,305,2.027,306,2.21,307,1.582,308,2.21,309,1.419,310,2.311,311,1.682,312,1.682,313,1.759,314,1.759,315,1.759,316,1.759,317,2.21,318,2.311,319,2.21,320,1.841,321,1.611]],["title/injectables/StateManagerService.html",[322,0.682,423,2.006]],["body/injectables/StateManagerService.html",[3,0.119,4,0.119,8,0.105,15,0.539,30,0.092,31,0.237,32,2.142,33,2.58,37,0.867,44,0.539,54,1.17,56,0.978,57,0.016,58,0.362,59,0.262,60,0.978,62,1.364,63,1.469,74,0.733,75,1.295,78,0.757,79,0.516,90,1.369,112,0.119,113,0.251,171,2.726,173,2.871,200,2.294,226,1.217,277,0.009,278,0.009,285,1.28,287,1.434,293,2.009,294,2.338,295,2.338,296,1.903,297,1.995,322,0.762,324,1.043,325,2.962,327,2.098,330,1.043,347,1.245,379,0.92,394,2.465,423,2.243,432,2.555,450,2.555,453,2.555,455,2.555,478,2.152,627,1.943,934,5.973,1023,4.962,1052,2.098,1556,4.349,1985,5.19,1986,5.19,1987,5.19,1988,5.19,1989,5.19,1990,5.19,1991,5.733,1992,5.733,1993,5.733,1994,5.733,1995,5.733,1996,5.733,1997,5.733,1998,4.363,1999,4.363,2000,4.363,2001,4.363,2002,4.363,2003,2.952,2004,2.952,2005,2.952,2006,2.952,2007,2.952,2008,2.952,2009,2.952,2010,4.363,2011,2.952,2012,4.363,2013,2.952,2014,4.363,2015,4.363,2016,2.952,2017,2.952,2018,2.952,2019,6.404,2020,2.952,2021,2.952,2022,4.363,2023,4.363,2024,2.952,2025,2.952,2026,4.363,2027,4.363,2028,2.952,2029,2.952,2030,2.952,2031,2.952,2032,2.952,2033,2.952,2034,5.295,2035,2.952,2036,3.776,2037,2.952,2038,3.776,2039,2.952,2040,3.776,2041,2.952,2042,2.952,2043,4.363,2044,4.363,2045,2.952,2046,2.952,2047,2.952]],["title/components/TestingComponent.html",[0,0.712,268,1.321]],["body/components/TestingComponent.html",[0,1.228,1,1.642,2,2.168,3,0.195,4,0.195,5,1.787,6,1.787,7,1.787,8,0.173,12,1.787,13,2.975,14,2.964,16,2.263,17,1.38,18,1.787,20,1.642,26,2.472,28,2.472,57,0.016,58,0.363,78,0.707,79,0.847,112,0.195,113,0.412,213,1.912,228,1.787,229,2.263,230,1.787,231,2.5,232,1.787,233,1.787,234,1.642,235,2.263,236,1.787,237,1.642,238,1.787,239,1.642,240,1.712,241,2.263,242,1.712,243,1.787,244,1.787,245,1.712,246,1.787,247,1.642,248,1.787,249,1.642,250,1.787,251,1.787,252,1.642,253,0.963,254,1.787,255,1.642,256,1.787,257,1.787,258,1.642,259,1.787,260,1.787,261,1.642,262,1.787,263,1.787,264,1.642,265,1.642,266,1.642,267,1.787,268,2.397,269,1.787,270,1.642,271,1.787,272,1.642,273,1.45,274,1.787,275,1.787,276,1.787,277,0.012,278,0.012,1155,5.31,2048,4.194,2049,6.732,2050,6.135,2051,6.135,2052,4.846,2053,4.846]],["title/interfaces/Thumbnail.html",[279,0.492,290,1.439]],["body/interfaces/Thumbnail.html",[3,0.18,4,0.18,8,0.16,15,0.817,30,0.182,31,0.317,57,0.016,58,0.433,59,0.208,67,1.456,73,1.342,74,0.628,112,0.315,163,1.649,165,1.456,167,1.583,168,1.456,169,2.121,206,1.805,253,1.159,277,0.012,278,0.012,279,0.988,280,1.653,281,1.456,282,1.805,283,1.583,284,1.545,285,1.369,286,1.941,287,1.67,288,1.653,289,1.653,290,2.152,291,2.373,292,2.768,293,1.186,294,1.818,295,1.818,296,1.287,297,1.287,298,1.34,299,1.583,300,1.583,301,1.583,302,1.583,303,1.518,304,1.34,305,2.061,306,2.248,307,1.609,308,2.248,309,1.456,310,2.35,311,1.726,312,1.726,313,1.805,314,1.805,315,1.805,316,1.805,317,2.248,318,2.35,319,2.248,320,1.889,321,1.653]],["title/classes/Tool.html",[113,0.332,273,1.167]],["body/classes/Tool.html",[3,0.189,4,0.189,8,0.168,30,0.147,31,0.327,32,2.191,44,0.856,54,1.068,56,0.75,57,0.016,58,0.451,59,0.25,60,0.75,73,1.296,97,2.704,112,0.281,113,0.511,199,3.087,273,1.798,277,0.012,278,0.012,285,1.263,307,1.294,364,2.163,379,1.462,384,4.756,630,2.704,705,3.335,707,3.335,808,4.272,813,3.645,821,3.645,824,3.645,825,3.645,826,3.645,2054,3.087,2055,6.508,2056,5.202,2057,6.01,2058,4.691,2059,4.691,2060,4.061,2061,4.061,2062,4.061,2063,6.401,2064,5.202,2065,4.061,2066,6.71,2067,4.061,2068,4.061,2069,5.202,2070,4.061,2071,4.061,2072,6.052,2073,4.061,2074,5.739,2075,4.061,2076,5.202,2077,4.061,2078,4.061,2079,4.061,2080,4.061,2081,4.061,2082,4.272,2083,4.669,2084,3.087]],["title/components/ToolSettingComponent.html",[0,0.712,272,1.321]],["body/components/ToolSettingComponent.html",[0,1.002,1,1.104,2,1.658,3,0.131,4,0.131,5,1.203,6,1.203,7,1.203,8,0.116,12,1.203,13,2.859,14,2.837,16,1.73,17,1.055,18,1.73,20,1.104,21,3.616,26,1.89,28,1.89,30,0.102,31,0.255,32,1.964,33,2.565,34,3.048,44,0.856,54,1.013,56,0.521,57,0.016,58,0.325,59,0.215,60,0.521,74,0.505,75,0.893,78,1.104,79,0.57,84,1.314,85,1.772,90,1.512,97,3.167,98,3.087,112,0.131,113,0.277,209,2.549,213,1.462,228,1.203,229,1.73,230,1.203,231,2.123,232,1.203,233,1.203,234,1.104,235,1.73,236,1.203,237,1.104,238,1.203,239,1.104,240,1.152,241,1.73,242,1.152,243,1.203,244,1.203,245,1.152,246,1.203,247,1.104,248,1.203,249,1.104,250,1.203,251,1.203,252,1.104,253,0.648,254,1.203,255,1.104,256,1.203,257,1.203,258,2.036,259,1.203,260,1.203,261,1.104,262,1.203,263,1.203,264,1.104,265,1.104,266,1.104,267,1.203,268,1.104,269,1.203,270,1.104,271,1.203,272,2.036,273,2.044,274,2.027,275,1.203,276,1.203,277,0.009,278,0.009,484,4.669,503,3.167,540,1.772,542,2.318,565,3.954,633,3.335,660,4.06,661,3.335,732,3.645,743,3.087,833,3.374,834,3.374,858,2.002,875,4.269,888,2.533,1032,4.19,1033,2.533,1035,3.645,1036,3.645,1038,3.645,1075,5.152,1116,3.335,1162,2.145,1164,3.906,1179,2.318,1185,4.269,1186,4.269,1187,4.269,1217,2.533,1219,2.533,1429,4.06,1452,4.06,1456,4.06,1590,4.06,1664,2.822,1701,4.06,1768,2.533,1769,2.533,1795,4.06,2084,4.363,2085,5.914,2086,5.914,2087,2.822,2088,5.495,2089,4.691,2090,4.691,2091,6.367,2092,5.495,2093,3.261,2094,4.691,2095,3.261,2096,3.261,2097,3.261,2098,3.261,2099,3.261,2100,4.691,2101,6.992,2102,4.691,2103,4.691,2104,5.201,2105,4.691,2106,4.691,2107,4.691,2108,4.691,2109,6.009,2110,4.691,2111,4.691,2112,4.691,2113,6.009,2114,6.009,2115,4.691,2116,4.691,2117,4.691,2118,4.691,2119,4.691,2120,4.06,2121,4.691,2122,4.691,2123,4.691,2124,4.06,2125,4.691,2126,4.691]],["title/components/ToolbarComponent.html",[0,0.712,270,1.321]],["body/components/ToolbarComponent.html",[0,1.081,1,1.269,2,1.828,3,0.151,4,0.151,5,1.382,6,1.382,7,1.382,8,0.134,10,2.66,11,4.605,12,1.382,13,2.904,14,2.886,16,1.909,17,1.164,18,1.909,19,5.13,20,1.269,25,5.13,26,2.084,28,2.084,30,0.117,31,0.281,32,1.634,33,2.962,37,1.028,43,5.532,44,0.944,50,4.605,51,4.966,54,0.976,56,0.599,57,0.016,58,0.351,59,0.185,60,0.599,62,0.713,63,1.117,74,0.404,75,0.713,78,1.126,79,0.655,80,3.243,84,1.509,86,2.301,90,1.738,98,2.466,111,3.243,112,0.151,113,0.319,114,1.509,153,2.911,209,2.812,213,1.613,228,1.382,229,1.909,230,1.382,231,2.259,232,1.382,233,1.382,234,2.165,235,1.909,236,1.382,237,2.165,238,1.382,239,1.269,240,1.324,241,1.909,242,1.324,243,1.382,244,1.382,245,1.324,246,1.382,247,1.269,248,1.382,249,1.269,250,1.382,251,1.382,252,1.269,253,0.744,254,1.382,255,1.269,256,1.382,257,1.382,258,2.165,259,1.382,260,1.382,261,1.269,262,1.382,263,1.382,264,1.269,265,1.269,266,1.269,267,1.382,268,1.269,269,1.382,270,2.165,271,1.382,272,1.269,273,1.121,274,1.382,275,1.382,276,1.382,277,0.01,278,0.01,503,3.416,504,4.213,540,2.036,630,3.684,633,3.678,661,3.678,833,3.639,834,3.639,858,2.301,955,3.177,1052,2.663,1162,2.466,1164,4.213,1179,2.663,1185,4.605,1186,4.605,1217,2.911,1219,2.911,1418,4.479,1768,2.911,1769,2.911,2127,3.243,2128,5.174,2129,5.174,2130,5.174,2131,5.174,2132,3.747,2133,3.747,2134,5.174,2135,3.747,2136,3.747,2137,5.174,2138,5.174,2139,5.174,2140,5.174,2141,5.174,2142,4.479,2143,5.174]],["title/classes/Tools.html",[113,0.332,630,2.249]],["body/classes/Tools.html",[3,0.176,4,0.176,8,0.156,30,0.137,31,0.312,32,2.093,54,1.108,57,0.016,58,0.38,59,0.156,73,1.138,74,0.782,75,1.382,97,2.52,112,0.274,113,0.488,199,2.877,273,1.308,277,0.011,278,0.011,285,1.003,307,1.206,364,2.292,379,1.363,384,3.778,630,3.309,705,3.108,707,3.108,808,4.081,813,4.461,821,4.461,824,4.461,825,4.461,826,4.461,2054,2.877,2055,5.549,2056,3.785,2060,3.785,2061,3.785,2062,3.785,2063,6.886,2064,6.119,2065,4.97,2066,6.919,2067,4.97,2068,4.97,2069,6.119,2070,4.97,2071,4.97,2072,6.569,2073,4.97,2074,6.401,2075,4.97,2076,5.892,2077,5.549,2078,4.97,2079,4.97,2080,5.549,2081,3.785,2082,4.081,2083,4.461,2084,2.877,2144,4.373,2145,4.373,2146,4.373,2147,4.373,2148,4.373,2149,4.373]],["title/interfaces/UndoRedoCanvasElement.html",[279,0.492,303,1.321]],["body/interfaces/UndoRedoCanvasElement.html",[3,0.179,4,0.179,8,0.159,15,0.813,30,0.222,31,0.316,57,0.016,58,0.383,59,0.208,67,1.447,73,1.341,74,0.626,112,0.315,163,1.645,165,1.447,167,1.574,168,1.447,169,2.119,206,1.795,253,1.155,277,0.011,278,0.011,279,0.987,280,1.643,281,1.447,282,1.795,283,1.574,284,1.539,285,1.38,286,1.935,287,1.667,288,1.643,289,1.643,290,1.643,291,1.888,292,1.795,293,1.18,294,1.812,295,1.812,296,1.279,297,1.279,298,1.333,299,1.574,300,1.574,301,1.574,302,1.574,303,1.969,304,2.051,305,2.577,306,2.239,307,1.603,308,2.239,309,1.447,310,2.341,311,1.716,312,1.716,313,1.795,314,1.795,315,1.795,316,1.795,317,2.239,318,2.341,319,2.239,320,1.878,321,1.643]],["title/injectables/UndoRedoService.html",[322,0.682,588,2.773]],["body/injectables/UndoRedoService.html",[3,0.143,4,0.143,8,0.127,15,0.65,17,1.407,30,0.219,31,0.272,32,1.883,33,2.825,37,0.993,44,0.912,46,2.816,47,2.52,54,1.043,56,0.57,57,0.016,58,0.211,59,0.223,60,0.57,62,1.191,63,1.246,74,0.384,75,1.099,78,1.023,79,0.623,89,1.833,90,1.654,112,0.143,113,0.303,114,2.52,171,1.315,207,1.654,213,1.95,226,1.466,277,0.01,278,0.01,291,1.875,304,2.141,305,2.478,322,0.873,324,1.26,325,2.702,330,1.26,364,1.495,367,1.833,379,2.231,397,3.936,423,3.216,426,3.544,430,4.116,456,2.055,457,2.881,463,2.055,465,3.841,468,3.289,478,2.278,479,3.841,489,2.534,568,4.485,588,3.553,631,3.841,638,3.884,640,3.884,685,3.086,766,4.116,997,3.086,1005,4.326,1467,4.116,2150,6.069,2151,3.086,2152,6.256,2153,3.565,2154,4.998,2155,3.565,2156,3.565,2157,3.565,2158,3.565,2159,5.772,2160,4.998,2161,2.189,2162,3.565,2163,3.565,2164,3.565,2165,3.565,2166,3.565,2167,3.565,2168,3.565,2169,3.565,2170,4.998,2171,4.998,2172,4.998,2173,4.998,2174,4.998,2175,4.998,2176,4.998,2177,4.998,2178,3.565,2179,3.565,2180,3.565,2181,4.998,2182,3.565,2183,3.565,2184,3.565,2185,3.565,2186,3.565,2187,3.565,2188,3.565,2189,4.998,2190,3.565,2191,3.565,2192,3.565]],["title/classes/UndoRedoStack.html",[113,0.332,2193,2.395]],["body/classes/UndoRedoStack.html",[3,0.183,4,0.183,8,0.163,30,0.142,31,0.32,37,1.171,54,1.121,56,0.728,57,0.016,58,0.27,59,0.233,60,0.728,62,1.317,63,1.273,74,0.635,75,1.123,78,0.664,112,0.263,113,0.556,213,2.287,226,1.72,277,0.012,278,0.012,279,0.574,303,2.613,307,1.256,364,2.143,379,2.038,478,1.915,631,4.245,766,4.549,851,3.879,1467,4.827,2161,2.796,2193,4.014,2194,2.996,2195,5.079,2196,5.079,2197,4.58,2198,4.712,2199,4.553,2200,4.712,2201,4.553,2202,4.553,2203,5.372,2204,4.553,2205,4.553,2206,4.553,2207,4.19,2208,4.58,2209,4.58,2210,4.58,2211,4.58,2212,4.58,2213,4.58,2214,3.538,2215,3.538,2216,4.58,2217,3.538,2218,3.538,2219,3.538,2220,4.58,2221,3.538,2222,4.58,2223,3.538]],["title/injectables/ViewService.html",[36,2.249,322,0.682]],["body/injectables/ViewService.html",[3,0.189,4,0.189,8,0.168,15,0.859,30,0.147,31,0.327,36,3.471,37,1.196,44,0.859,54,1.164,56,0.963,57,0.016,58,0.357,59,0.258,60,0.963,62,1.333,63,1.434,73,1.21,74,0.715,75,1.264,78,0.878,79,0.822,83,3.656,112,0.189,113,0.4,137,6.059,226,1.411,277,0.012,278,0.012,285,1.052,287,1.696,322,1.052,324,1.663,330,1.663,347,1.984,394,2.675,900,5.212,1915,4.073,2224,4.073,2225,6.64,2226,6.64,2227,6.64,2228,7,2229,7,2230,7,2231,6.021,2232,4.706,2233,6.406,2234,6.021,2235,4.706,2236,4.706,2237,4.706,2238,6.021,2239,4.706,2240,6.021,2241,4.706,2242,4.706,2243,6.021,2244,6.021,2245,4.706,2246,4.706,2247,4.706]],["title/interfaces/Viewbox.html",[279,0.492,298,1.167]],["body/interfaces/Viewbox.html",[3,0.177,4,0.177,8,0.157,15,0.801,30,0.18,31,0.313,57,0.016,58,0.38,59,0.243,67,1.427,73,1.34,74,0.62,112,0.315,163,1.633,165,1.427,167,1.552,168,1.427,169,2.114,206,1.769,253,1.144,277,0.011,278,0.011,279,0.985,280,1.62,281,1.427,282,1.769,283,1.552,284,1.525,285,1.4,286,1.922,287,1.659,288,1.62,289,1.62,290,1.62,291,1.871,292,1.769,293,1.163,294,1.795,295,1.795,296,1.261,297,1.261,298,1.723,299,2.409,300,2.409,301,2.409,302,2.409,303,1.488,304,1.314,305,2.035,306,2.218,307,1.588,308,2.218,309,1.427,310,2.32,311,1.692,312,1.692,313,1.769,314,1.769,315,1.769,316,1.769,317,2.218,318,2.32,319,2.218,320,1.852,321,1.62]],["title/interfaces/Viewbox-1.html",[171,1.202,279,0.411,298,0.975]],["body/interfaces/Viewbox-1.html",[3,0.223,4,0.223,8,0.198,30,0.173,31,0.362,57,0.016,59,0.265,112,0.287,277,0.013,278,0.013,279,0.9,281,1.797,284,1.465,285,1.42,293,1.465,294,2.075,295,2.075,296,1.589,297,1.589,298,1.992,299,2.619,300,2.619,301,2.619,302,2.619,325,2.131,1641,3.932]],["title/injectables/ZoomPanService.html",[322,0.682,587,2.773]],["body/injectables/ZoomPanService.html",[3,0.076,4,0.076,8,0.067,15,0.344,17,1.462,30,0.059,31,0.167,32,2.167,37,0.611,44,0.344,54,1.146,56,0.967,57,0.016,58,0.358,59,0.246,60,0.967,62,1.337,63,1.343,74,0.7,75,1.238,78,0.656,79,0.329,112,0.076,113,0.16,114,2.74,139,4.046,171,2.232,226,1.493,277,0.006,278,0.006,284,1.485,285,1.188,287,1.418,293,1.902,294,2.026,295,2.026,296,0.542,297,0.542,298,1.346,299,1.751,300,1.751,301,1.589,302,1.589,322,0.538,324,0.666,325,2.899,330,0.666,347,0.795,363,2.247,364,0.921,367,0.969,379,2.353,394,2.142,422,1.632,423,2.313,426,1.889,456,1.087,457,1.087,463,1.087,465,1.158,478,2.181,479,2.762,568,3.029,586,3.374,587,2.187,600,5.237,621,2.663,622,5.237,627,1.241,638,3.495,640,2.391,739,3.495,740,3.029,752,1.632,773,3.374,805,2.391,1056,3.85,1556,1.34,1575,5.062,1675,1.632,2034,3.374,2036,2.663,2038,1.632,2040,1.632,2104,4.602,2248,6.513,2249,1.632,2250,4.956,2251,3.898,2252,3.898,2253,3.898,2254,3.898,2255,3.898,2256,3.898,2257,4.498,2258,3.077,2259,4.498,2260,4.498,2261,3.077,2262,3.898,2263,3.898,2264,3.898,2265,3.898,2266,4.498,2267,4.498,2268,4.498,2269,3.077,2270,3.077,2271,3.898,2272,4.498,2273,4.498,2274,3.077,2275,1.885,2276,3.077,2277,1.885,2278,1.885,2279,1.885,2280,3.077,2281,1.885,2282,1.885,2283,1.885,2284,1.885,2285,1.885,2286,1.885,2287,1.885,2288,1.885,2289,1.885,2290,5.316,2291,5.316,2292,1.885,2293,3.077,2294,4.498,2295,1.885,2296,3.077,2297,1.885,2298,1.885,2299,1.885,2300,1.885,2301,1.885,2302,1.885,2303,1.885,2304,1.885,2305,1.885,2306,1.885,2307,1.885,2308,3.077,2309,1.885,2310,1.885,2311,1.885,2312,1.885,2313,1.885,2314,3.898,2315,4.956,2316,1.885,2317,3.898,2318,4.956,2319,1.885,2320,6.712,2321,1.885,2322,3.077,2323,5.608,2324,3.077,2325,5.608,2326,3.077,2327,3.077,2328,1.885,2329,1.885,2330,5.316,2331,1.885,2332,5.316,2333,1.885,2334,3.898,2335,1.885,2336,3.898,2337,1.885,2338,4.498,2339,4.498,2340,4.498,2341,4.498,2342,3.077,2343,3.077,2344,3.898,2345,4.498,2346,3.077,2347,3.898,2348,4.498,2349,3.077,2350,3.077,2351,3.077,2352,1.885,2353,3.077,2354,1.885,2355,3.077,2356,1.885,2357,1.885,2358,4.956,2359,3.898,2360,3.077,2361,1.885,2362,4.498,2363,1.885,2364,3.898,2365,3.898,2366,3.898,2367,1.885,2368,1.885,2369,1.885,2370,1.885,2371,1.885,2372,1.885,2373,1.885,2374,1.885]],["title/classes/_RedoStack.html",[113,0.332,2198,2.567]],["body/classes/_RedoStack.html",[3,0.186,4,0.186,8,0.165,30,0.144,31,0.323,37,1.181,54,1.099,56,0.738,57,0.016,58,0.273,59,0.212,60,0.738,62,1.323,63,1.284,74,0.497,75,0.879,78,0.673,112,0.265,113,0.56,213,2.295,226,1.726,277,0.012,278,0.012,279,0.582,287,1.082,303,2.652,307,1.272,364,1.968,379,2.051,478,1.932,631,2.833,766,3.036,851,4.329,1467,4.845,2161,2.833,2193,3.651,2194,3.036,2195,3.585,2196,3.585,2197,4.62,2198,4.572,2200,4.329,2203,5.399,2207,4.939,2208,4.62,2209,4.62,2210,4.62,2211,5.588,2212,4.62,2213,4.62,2214,3.585,2215,3.585,2216,4.62,2217,3.585,2218,3.585,2219,3.585,2220,4.62,2221,3.585,2222,4.62,2223,3.585,2375,5.694,2376,4.614,2377,4.614,2378,4.614,2379,4.614,2380,4.614]],["title/classes/_UndoStack.html",[113,0.332,2200,2.567]],["body/classes/_UndoStack.html",[3,0.186,4,0.186,8,0.165,30,0.144,31,0.323,37,1.181,54,1.099,56,0.738,57,0.016,58,0.273,59,0.212,60,0.738,62,1.323,63,1.284,74,0.497,75,0.879,78,0.673,112,0.265,113,0.56,213,2.295,226,1.726,277,0.012,278,0.012,279,0.582,287,1.082,303,2.652,307,1.272,364,1.968,379,2.051,478,1.932,631,2.833,766,3.036,851,4.329,1467,4.845,2161,2.833,2193,3.651,2194,3.036,2195,3.585,2196,3.585,2197,4.62,2198,4.329,2200,4.572,2203,5.399,2207,4.939,2208,4.62,2209,4.62,2210,4.62,2211,5.588,2212,4.62,2213,4.62,2214,3.585,2215,3.585,2216,4.62,2217,3.585,2218,3.585,2219,3.585,2220,4.62,2221,3.585,2222,4.62,2223,3.585,2375,5.694,2381,4.614,2382,4.614,2383,4.614,2384,4.614,2385,4.614]],["title/coverage.html",[2386,4.604]],["body/coverage.html",[0,1.39,1,1.029,8,0.109,9,2.631,20,1.029,33,1.224,34,1.282,36,1.752,47,1.224,49,1.866,52,2.16,57,0.016,59,0.109,67,0.987,87,2.933,108,1.752,109,1.652,113,0.569,173,2,234,1.029,237,1.029,239,1.029,242,1.074,245,1.074,247,1.029,249,1.029,252,1.029,255,1.029,258,1.029,261,1.029,264,1.029,266,1.029,268,1.029,270,1.029,272,1.029,273,0.909,277,0.009,278,0.009,279,0.96,280,1.121,282,2.968,284,1.18,286,0.909,288,1.121,290,1.121,293,1.18,298,1.334,303,1.029,306,1.171,308,1.171,309,0.987,321,1.121,322,1.316,323,2,325,2.884,326,2.631,327,3.752,331,2.631,349,2.631,354,3.463,364,0.909,372,2.16,397,1.752,398,2.361,423,1.563,424,1.866,478,2.657,499,3.463,500,3.463,501,3.463,565,2,566,2.631,587,2.16,588,2.16,589,2,590,1.866,630,1.752,754,2.631,831,2.631,856,2.361,873,2.631,874,2.631,889,2.16,902,2.631,927,2.16,934,2.361,935,2.361,936,2.361,1032,2,1033,2.361,1034,2.631,1125,2.631,1126,2.361,1127,2.631,1139,2.361,1150,2.631,1151,2.631,1152,2.631,1156,2.631,1161,2.631,1162,2,1163,2.631,1182,2.631,1239,2.631,1281,2.361,1320,2.631,1329,3.463,1348,3.463,1349,3.463,1399,2.361,1401,2.361,1641,3.752,1642,2.631,1643,2.631,1731,2.631,1770,2.16,1804,2.631,1863,2.361,1864,2.361,1951,2.631,1974,2.631,2048,2.631,2054,3.473,2084,2,2085,2.631,2086,2.631,2087,2.631,2127,2.631,2150,2.631,2151,2.631,2161,1.866,2193,1.866,2194,3.826,2198,2,2200,2,2224,2.631,2248,2.631,2249,2.631,2386,2.631,2387,2.631,2388,3.039,2389,3.039,2390,7.113,2391,3.039,2392,3.039,2393,3.039,2394,7.767,2395,5.814,2396,6.858,2397,3.039,2398,3.039,2399,3.039,2400,4.458,2401,6.471,2402,6.191,2403,3.039,2404,3.039,2405,3.039,2406,5.279,2407,4.458,2408,5.279,2409,3.039,2410,5.814,2411,2.631,2412,7.294,2413,5.359,2414,2.631,2415,5.359,2416,2.631,2417,2.631,2418,6.998,2419,2.631,2420,2.631,2421,2.631,2422,2.631,2423,3.039,2424,3.039,2425,3.039,2426,3.858,2427,2.631,2428,3.858,2429,2.631,2430,2.631,2431,2.631,2432,3.039,2433,3.039]],["title/dependencies.html",[2434,2.822,2435,3.645]],["body/dependencies.html",[53,4.622,57,0.016,79,0.933,83,4.149,84,2.151,91,3.541,92,3.263,93,3.279,277,0.013,278,0.013,367,2.746,540,2.902,664,4.622,948,4.149,950,4.149,1158,4.622,1397,4.622,1398,4.149,1766,5.641,1767,4.622,2435,4.149,2436,5.34,2437,7.807,2438,5.34,2439,5.34,2440,5.34,2441,6.517,2442,6.517,2443,5.34,2444,5.34,2445,5.34,2446,5.34,2447,5.34,2448,5.34,2449,6.517,2450,5.34,2451,5.34,2452,5.34,2453,5.34,2454,5.34,2455,5.34,2456,5.34,2457,5.34,2458,5.34,2459,5.34,2460,5.34,2461,5.34,2462,5.34,2463,5.34,2464,5.34,2465,5.34,2466,5.34,2467,5.34,2468,5.34,2469,5.34]],["title/miscellaneous/enumerations.html",[2470,2.002,2471,4.06]],["body/miscellaneous/enumerations.html",[30,0.191,57,0.015,75,1.418,97,4.069,277,0.014,278,0.014,808,5.019,2054,4.021,2082,5.019,2083,5.486,2470,3.753,2471,5.29,2472,5.29]],["title/miscellaneous/functions.html",[2470,2.002,2473,4.06]],["body/miscellaneous/functions.html",[15,0.837,30,0.143,56,1.251,57,0.016,58,0.463,59,0.278,60,1.251,62,1.367,73,1.342,277,0.012,278,0.012,285,1.367,291,1.924,305,2.318,309,2.252,550,5.097,889,4.21,935,4.602,936,4.602,941,4.562,955,2.817,1007,3.97,1139,4.602,1199,3.564,1281,4.602,1399,4.602,1470,3.97,1472,5.127,1474,5.127,1586,5.127,1770,4.21,1863,4.602,1864,4.602,1922,3.97,2411,3.97,2413,3.97,2414,5.127,2415,3.97,2416,5.127,2417,5.127,2422,3.97,2470,2.817,2473,3.97,2474,7.178,2475,7.178,2476,4.587,2477,4.587,2478,4.587,2479,4.587,2480,5.923,2481,4.587,2482,5.923,2483,4.587,2484,4.587,2485,4.587,2486,4.587,2487,4.587,2488,4.587,2489,4.587,2490,4.587]],["title/index.html",[30,0.102,2491,3.26,2492,2.822]],["body/index.html",[15,0.67,48,4.556,57,0.016,58,0.302,76,4.416,78,1.051,91,1.995,92,3.089,126,2.61,132,3.178,141,5.075,176,2.416,182,3.178,183,3.178,184,3.178,185,3.178,193,3.178,195,3.178,209,3.842,220,4.168,226,0.861,240,2.353,265,1.244,277,0.012,278,0.01,304,1.526,307,1.407,311,1.415,312,1.415,317,1.415,319,1.415,478,1.193,489,2.61,502,2.61,563,2.61,627,2.416,661,4.733,941,2.416,949,4.416,957,4.923,959,4.923,960,5.355,1075,2.852,1177,2.61,1236,3.964,1292,3.626,1398,4.556,1427,3.178,1547,3.178,1572,3.178,1576,3.178,1618,3.178,1628,3.178,1717,2.852,1928,3.178,2082,2.61,2120,4.416,2124,3.178,2142,3.178,2207,2.61,2387,3.178,2435,2.852,2493,6.892,2494,3.671,2495,5.102,2496,3.671,2497,3.671,2498,6.336,2499,3.178,2500,3.671,2501,5.102,2502,3.671,2503,5.102,2504,3.671,2505,3.671,2506,3.671,2507,3.671,2508,3.671,2509,5.102,2510,3.671,2511,5.102,2512,6.336,2513,3.671,2514,3.671,2515,3.671,2516,3.671,2517,3.671,2518,3.671,2519,3.671,2520,3.671,2521,3.671,2522,3.671,2523,3.671,2524,3.671,2525,3.671,2526,5.863,2527,5.102,2528,5.102,2529,3.671,2530,3.671,2531,3.671,2532,6.336,2533,5.102,2534,5.102,2535,5.102,2536,6.658,2537,3.671,2538,3.671,2539,3.671,2540,3.671,2541,3.671,2542,3.671,2543,3.671,2544,3.671,2545,3.671,2546,3.671,2547,3.671,2548,3.671,2549,5.102,2550,5.863,2551,3.671,2552,3.671,2553,3.671,2554,5.102,2555,3.671,2556,3.671,2557,3.671,2558,3.671,2559,6.658,2560,5.102,2561,5.102,2562,5.863,2563,7.208,2564,3.671,2565,6.336,2566,3.671,2567,3.671,2568,3.671,2569,5.102,2570,5.102,2571,3.671,2572,3.671,2573,3.671,2574,3.671,2575,3.671,2576,3.671,2577,3.671,2578,3.671,2579,3.671,2580,3.671,2581,3.671,2582,3.671,2583,2.852,2584,3.671,2585,3.671,2586,3.671,2587,3.671,2588,3.671,2589,3.671,2590,3.671,2591,3.671,2592,3.671,2593,3.671,2594,3.671,2595,6.336,2596,3.671,2597,3.671,2598,3.671,2599,3.671,2600,3.671,2601,5.102,2602,5.102,2603,3.671,2604,3.671,2605,3.671,2606,3.671,2607,3.671,2608,3.671,2609,3.671,2610,3.671,2611,5.102,2612,3.671,2613,3.671,2614,3.671,2615,3.671,2616,3.671,2617,3.671,2618,3.671,2619,5.102,2620,3.671,2621,3.671,2622,3.671,2623,3.671,2624,3.671,2625,3.671,2626,3.671,2627,3.671,2628,3.671,2629,3.671,2630,3.671,2631,5.102,2632,3.671,2633,3.671,2634,3.671,2635,3.671,2636,3.671,2637,3.671,2638,3.671,2639,3.671,2640,3.671,2641,3.671,2642,3.671,2643,3.671,2644,3.671,2645,3.671,2646,3.671,2647,3.671,2648,3.671,2649,3.671]],["title/modules.html",[2650,4.604]],["body/modules.html",[57,0.014,277,0.014,278,0.014,2650,5.485]],["title/overview.html",[2583,4.133]],["body/overview.html",[2,2.203,57,0.014,277,0.014,278,0.014,281,2.026,307,1.719,324,2.203,1687,5.397,2583,4.844,2651,7.142,2652,6.235]],["title/properties.html",[31,0.255,2434,2.822]],["body/properties.html",[31,0.342,57,0.015,277,0.014,278,0.014,2499,5.452,2653,6.298]],["title/miscellaneous/variables.html",[2470,2.002,2654,4.06]],["body/miscellaneous/variables.html",[30,0.15,34,2.031,57,0.016,59,0.273,74,0.824,75,1.458,87,4.646,199,3.169,226,1.129,265,2.07,277,0.012,278,0.012,364,1.828,379,1.905,456,2.776,502,3.423,705,3.423,707,3.423,1348,3.742,1349,4.748,1401,4.748,1639,5.289,2054,3.169,2084,4.021,2161,3.752,2193,2.957,2194,3.169,2233,4.168,2419,4.168,2420,5.289,2421,5.289,2426,4.168,2427,5.289,2428,6.444,2429,4.168,2430,4.168,2431,4.168,2470,2.957,2472,4.168,2492,4.168,2654,4.168,2655,6.111,2656,4.816,2657,4.816,2658,4.816,2659,4.816,2660,4.816,2661,4.816,2662,4.816,2663,4.816,2664,4.816,2665,4.816,2666,4.816,2667,6.111,2668,6.111,2669,6.111,2670,4.816,2671,6.111,2672,4.816,2673,6.111,2674,4.816,2675,6.111,2676,6.111,2677,4.816,2678,4.816,2679,4.816,2680,4.816,2681,4.816,2682,6.712,2683,4.816]]],"invertedIndex":[["",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"interfaces/BboxLabel.html":{},"injectables/BboxManagerService.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"components/ClassificationConfigurationComponent.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"interfaces/EventPayload.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"interfaces/ImageFromCLI.html":{},"injectables/ImageProcessingService.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"interfaces/LabelFormat.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"components/LoadingComponent.html":{},"interfaces/MulticlassInterface.html":{},"classes/MulticlassTask.html":{},"interfaces/MultilabelInterface.html":{},"classes/MultilabelTask.html":{},"injectables/OpenCVService.html":{},"interfaces/Point2D.html":{},"interfaces/Point2D-1.html":{},"injectables/PostProcessService.html":{},"interfaces/ProjectConfig.html":{},"components/ProjectConfigurationComponent.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"interfaces/Rect-1.html":{},"components/SVGElementsComponent.html":{},"injectables/SVGUIService.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"injectables/StateManagerService.html":{},"components/TestingComponent.html":{},"interfaces/Thumbnail.html":{},"classes/Tool.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"classes/Tools.html":{},"interfaces/UndoRedoCanvasElement.html":{},"injectables/UndoRedoService.html":{},"classes/UndoRedoStack.html":{},"injectables/ViewService.html":{},"interfaces/Viewbox.html":{},"interfaces/Viewbox-1.html":{},"injectables/ZoomPanService.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":478,"title":{},"body":{"injectables/CanvasManagerService.html":{},"injectables/DrawService.html":{},"components/GalleryComponent.html":{},"injectables/IOService.html":{},"injectables/ImageProcessingService.html":{},"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"injectables/OpenCVService.html":{},"injectables/PostProcessService.html":{},"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{},"injectables/StateManagerService.html":{},"injectables/UndoRedoService.html":{},"classes/UndoRedoStack.html":{},"injectables/ZoomPanService.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{},"coverage.html":{},"index.html":{}}}],["0.0.1",{"_index":2653,"title":{},"body":{"properties.html":{}}}],["0.01",{"_index":2308,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["0.05",{"_index":2368,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["0.1",{"_index":2363,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["0.12.7",{"_index":2454,"title":{},"body":{"dependencies.html":{}}}],["0.14.3",{"_index":2469,"title":{},"body":{"dependencies.html":{}}}],["0.25",{"_index":1675,"title":{},"body":{"injectables/PostProcessService.html":{},"injectables/ZoomPanService.html":{}}}],["0.3.4",{"_index":2465,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":811,"title":{},"body":{"injectables/EditorService.html":{}}}],["0/1",{"_index":2394,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2408,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2407,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":2409,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":2425,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":2399,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":2400,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":2398,"title":{},"body":{"coverage.html":{}}}],["0/25",{"_index":2397,"title":{},"body":{"coverage.html":{}}}],["0/28",{"_index":2423,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2396,"title":{},"body":{"coverage.html":{}}}],["0/31",{"_index":2403,"title":{},"body":{"coverage.html":{}}}],["0/34",{"_index":2424,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2410,"title":{},"body":{"coverage.html":{}}}],["0/43",{"_index":2405,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2390,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2401,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2402,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2406,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2395,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":171,"title":{"interfaces/Point2D-1.html":{},"interfaces/Rect-1.html":{},"interfaces/Viewbox-1.html":{}},"body":{"components/AppComponent.html":{},"components/ClassificationConfigurationComponent.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"injectables/ImageProcessingService.html":{},"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"injectables/OpenCVService.html":{},"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{},"injectables/StateManagerService.html":{},"injectables/UndoRedoService.html":{},"injectables/ZoomPanService.html":{}}}],["1.0",{"_index":1568,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["1.0.1",{"_index":2456,"title":{},"body":{"dependencies.html":{}}}],["1.7.1",{"_index":2445,"title":{},"body":{"dependencies.html":{}}}],["1/35",{"_index":2393,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":805,"title":{},"body":{"injectables/EditorService.html":{},"injectables/OpenCVService.html":{},"injectables/ZoomPanService.html":{}}}],["100",{"_index":869,"title":{},"body":{"components/GalleryComponent.html":{},"injectables/ProjectService.html":{}}}],["128",{"_index":900,"title":{},"body":{"components/GalleryElementComponent.html":{},"injectables/ViewService.html":{}}}],["16",{"_index":1687,"title":{},"body":{"injectables/PostProcessService.html":{},"overview.html":{}}}],["17.3.10",{"_index":2439,"title":{},"body":{"dependencies.html":{}}}],["18",{"_index":2651,"title":{},"body":{"overview.html":{}}}],["18.0.2",{"_index":2461,"title":{},"body":{"dependencies.html":{}}}],["18.2.12",{"_index":2500,"title":{},"body":{"index.html":{}}}],["18.2.13",{"_index":2437,"title":{},"body":{"dependencies.html":{}}}],["19.0.2",{"_index":2447,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"injectables/DrawService.html":{},"injectables/OpenCVService.html":{},"injectables/StateManagerService.html":{},"coverage.html":{}}}],["2.0",{"_index":1677,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["2.0.1",{"_index":2449,"title":{},"body":{"dependencies.html":{}}}],["2.0.2",{"_index":2451,"title":{},"body":{"dependencies.html":{}}}],["2.1.1",{"_index":2448,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":2467,"title":{},"body":{"dependencies.html":{}}}],["2000",{"_index":1730,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["209fb5",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["255",{"_index":1493,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["255*(lesions",{"_index":2617,"title":{},"body":{"index.html":{}}}],["255*(od_mask==i",{"_index":2620,"title":{},"body":{"index.html":{}}}],["255.0",{"_index":1578,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["256",{"_index":1491,"title":{},"body":{"injectables/OpenCVService.html":{},"injectables/PostProcessService.html":{}}}],["3",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"injectables/EditorService.html":{},"injectables/ImageProcessingService.html":{},"injectables/OpenCVService.html":{},"index.html":{}}}],["3.3.1",{"_index":2458,"title":{},"body":{"dependencies.html":{}}}],["3000",{"_index":854,"title":{},"body":{"components/GalleryComponent.html":{}}}],["4",{"_index":1455,"title":{},"body":{"injectables/OpenCVService.html":{},"injectables/PostProcessService.html":{}}}],["4.5.0",{"_index":2453,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":201,"title":{},"body":{"components/AppComponent.html":{}}}],["5",{"_index":1628,"title":{},"body":{"injectables/OpenCVService.html":{},"index.html":{}}}],["50",{"_index":867,"title":{},"body":{"components/GalleryComponent.html":{},"injectables/PostProcessService.html":{}}}],["512",{"_index":1023,"title":{},"body":{"injectables/IOService.html":{},"injectables/StateManagerService.html":{}}}],["6.0.3",{"_index":2452,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":2652,"title":{},"body":{"overview.html":{}}}],["7.0.0",{"_index":2460,"title":{},"body":{"dependencies.html":{}}}],["7.8.0",{"_index":2462,"title":{},"body":{"dependencies.html":{}}}],["8839ef",{"_index":174,"title":{},"body":{"components/AppComponent.html":{}}}],["_lasttool",{"_index":755,"title":{},"body":{"injectables/EditorService.html":{}}}],["_redostack",{"_index":2198,"title":{"classes/_RedoStack.html":{}},"body":{"classes/UndoRedoStack.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{},"coverage.html":{}}}],["_treenode",{"_index":1240,"title":{},"body":{"injectables/LabelsService.html":{}}}],["_undostack",{"_index":2200,"title":{"classes/_UndoStack.html":{}},"body":{"classes/UndoRedoStack.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{},"coverage.html":{}}}],["absent",{"_index":181,"title":{},"body":{"components/AppComponent.html":{}}}],["accumulate",{"_index":1489,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["activatepanmode",{"_index":771,"title":{},"body":{"injectables/EditorService.html":{}}}],["active",{"_index":667,"title":{},"body":{"injectables/DrawService.html":{}}}],["activectx",{"_index":1683,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["activectx.drawimage",{"_index":1711,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["activectx.drawimage(buffercanvas",{"_index":1686,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["activeimage",{"_index":1805,"title":{},"body":{"injectables/ProjectService.html":{}}}],["activeindex",{"_index":726,"title":{},"body":{"injectables/DrawService.html":{},"injectables/PostProcessService.html":{},"injectables/ProjectService.html":{}}}],["activelabel",{"_index":1241,"title":{},"body":{"injectables/LabelsService.html":{}}}],["activeseginstance",{"_index":1242,"title":{},"body":{"injectables/LabelsService.html":{}}}],["actual_component",{"_index":276,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["add",{"_index":1299,"title":{},"body":{"injectables/LabelsService.html":{}}}],["addclassificationtask",{"_index":1246,"title":{},"body":{"injectables/LabelsService.html":{}}}],["addclassificationtask(task",{"_index":1257,"title":{},"body":{"injectables/LabelsService.html":{}}}],["addclasstotask",{"_index":513,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["addclasstotask(taskindex",{"_index":523,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["addlabel",{"_index":1342,"title":{},"body":{"classes/MultilabelTask.html":{}}}],["addlabel(label",{"_index":1337,"title":{},"body":{"classes/MulticlassTask.html":{},"classes/MultilabelTask.html":{}}}],["addmulticlasstask",{"_index":514,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["addmultilabelclass",{"_index":515,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["addmultilabelclass(name",{"_index":527,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["addmultilabeltask",{"_index":516,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{},"injectables/LabelsService.html":{}}}],["addmultilabeltask(task",{"_index":1259,"title":{},"body":{"injectables/LabelsService.html":{}}}],["addnewclassificationtask",{"_index":1247,"title":{},"body":{"injectables/LabelsService.html":{}}}],["addpoint",{"_index":1976,"title":{},"body":{"injectables/SVGUIService.html":{}}}],["addpoint(point",{"_index":1980,"title":{},"body":{"injectables/SVGUIService.html":{}}}],["addseglabel",{"_index":1248,"title":{},"body":{"injectables/LabelsService.html":{}}}],["addseglabel(label",{"_index":1262,"title":{},"body":{"injectables/LabelsService.html":{}}}],["addsegmentationclass",{"_index":1738,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["advanced",{"_index":2524,"title":{},"body":{"index.html":{}}}],["affectsmultiplelabels",{"_index":772,"title":{},"body":{"injectables/EditorService.html":{}}}],["afterviewinit",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/GalleryElementComponent.html":{},"components/ToolbarComponent.html":{}}}],["aliasing",{"_index":1592,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["all_files",{"_index":2628,"title":{},"body":{"index.html":{}}}],["all_tools",{"_index":2080,"title":{},"body":{"classes/Tool.html":{},"classes/Tools.html":{}}}],["allpromises",{"_index":997,"title":{},"body":{"injectables/IOService.html":{},"injectables/UndoRedoService.html":{}}}],["allpromises$.push(blob",{"_index":1009,"title":{},"body":{"injectables/IOService.html":{}}}],["allpromises.push(blob",{"_index":2187,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["alpha",{"_index":468,"title":{},"body":{"injectables/CanvasManagerService.html":{},"injectables/ImageProcessingService.html":{},"injectables/OpenCVService.html":{},"injectables/PostProcessService.html":{},"injectables/UndoRedoService.html":{}}}],["already",{"_index":1284,"title":{},"body":{"injectables/LabelsService.html":{},"injectables/ProjectService.html":{}}}],["alt",{"_index":2068,"title":{},"body":{"classes/Tool.html":{},"classes/Tools.html":{}}}],["amd",{"_index":192,"title":{},"body":{"components/AppComponent.html":{}}}],["angular",{"_index":2498,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":2436,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2438,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":2440,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"injectables/BboxManagerService.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"components/ClassificationConfigurationComponent.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"interfaces/EventPayload.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"injectables/ImageProcessingService.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"components/LoadingComponent.html":{},"injectables/OpenCVService.html":{},"injectables/PostProcessService.html":{},"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{},"components/SVGElementsComponent.html":{},"injectables/SVGUIService.html":{},"injectables/StateManagerService.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UndoRedoService.html":{},"injectables/ViewService.html":{},"injectables/ZoomPanService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":540,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":2441,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"injectables/ViewService.html":{},"dependencies.html":{}}}],["annotation",{"_index":2506,"title":{},"body":{"index.html":{}}}],["annotations",{"_index":949,"title":{},"body":{"injectables/IOService.html":{},"index.html":{}}}],["annotator",{"_index":227,"title":{},"body":{"components/AppComponent.html":{}}}],["anti",{"_index":1591,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["app",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["app.component.html",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":2427,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["applicationconfig",{"_index":2662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apply",{"_index":1411,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["applylasso",{"_index":570,"title":{},"body":{"injectables/DrawService.html":{}}}],["applylassoeraser",{"_index":571,"title":{},"body":{"injectables/DrawService.html":{}}}],["applylassoeraser(ctx",{"_index":593,"title":{},"body":{"injectables/DrawService.html":{}}}],["apps/api",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{},"dependencies.html":{}}}],["apps/api/core",{"_index":371,"title":{},"body":{"injectables/CLIService.html":{},"interfaces/EventPayload.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"interfaces/LabelFormat.html":{},"injectables/PostProcessService.html":{},"injectables/ProjectService.html":{}}}],["apps/api/event",{"_index":369,"title":{},"body":{"injectables/CLIService.html":{},"interfaces/EventPayload.html":{}}}],["apps/plugin",{"_index":1766,"title":{},"body":{"components/ProjectConfigurationComponent.html":{},"dependencies.html":{}}}],["architecture",{"_index":2544,"title":{},"body":{"index.html":{}}}],["area",{"_index":2112,"title":{},"body":{"components/ToolSettingComponent.html":{}}}],["array",{"_index":1224,"title":{},"body":{"components/LabelsComponent.html":{}}}],["array(256).fill(0",{"_index":1517,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["array.isarray(element.data",{"_index":2170,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["arraybufferlike",{"_index":1680,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["arrows",{"_index":2067,"title":{},"body":{"classes/Tool.html":{},"classes/Tools.html":{}}}],["artifacts",{"_index":1631,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["assets/opencv",{"_index":2668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["async",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"injectables/DrawService.html":{},"interfaces/EventPayload.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"injectables/PostProcessService.html":{},"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{}}}],["atop",{"_index":719,"title":{},"body":{"injectables/DrawService.html":{}}}],["aura",{"_index":100,"title":{},"body":{"components/AppComponent.html":{}}}],["auto",{"_index":660,"title":{},"body":{"injectables/DrawService.html":{},"components/ToolSettingComponent.html":{}}}],["automatically",{"_index":2109,"title":{},"body":{"components/ToolSettingComponent.html":{}}}],["autopostprocess",{"_index":756,"title":{},"body":{"injectables/EditorService.html":{}}}],["autopostprocessopening",{"_index":757,"title":{},"body":{"injectables/EditorService.html":{}}}],["await",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"injectables/CLIService.html":{},"injectables/DrawService.html":{},"interfaces/EventPayload.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"injectables/PostProcessService.html":{},"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{},"injectables/UndoRedoService.html":{}}}],["b",{"_index":1474,"title":{},"body":{"injectables/OpenCVService.html":{},"miscellaneous/functions.html":{}}}],["b_cdf",{"_index":1519,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["b_cdf[i",{"_index":1524,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["back",{"_index":1576,"title":{},"body":{"injectables/OpenCVService.html":{},"index.html":{}}}],["backend",{"_index":2554,"title":{},"body":{"index.html":{}}}],["background",{"_index":1616,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["base",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["based",{"_index":2121,"title":{},"body":{"components/ToolSettingComponent.html":{}}}],["bbox",{"_index":283,"title":{},"body":{"interfaces/BboxLabel.html":{},"injectables/DrawService.html":{},"interfaces/ImageFromCLI.html":{},"components/InteractiveBboxComponent.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"injectables/OpenCVService.html":{},"interfaces/Point2D.html":{},"injectables/PostProcessService.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{}}}],["bbox'},{'name",{"_index":257,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["bbox.component.html",{"_index":1153,"title":{},"body":{"components/InteractiveBboxComponent.html":{}}}],["bbox.component.scss",{"_index":1154,"title":{},"body":{"components/InteractiveBboxComponent.html":{}}}],["bbox.component.ts",{"_index":1152,"title":{},"body":{"components/InteractiveBboxComponent.html":{},"coverage.html":{}}}],["bbox.height",{"_index":695,"title":{},"body":{"injectables/DrawService.html":{},"injectables/OpenCVService.html":{}}}],["bbox.width",{"_index":694,"title":{},"body":{"injectables/DrawService.html":{},"injectables/OpenCVService.html":{}}}],["bbox.x",{"_index":692,"title":{},"body":{"injectables/DrawService.html":{},"injectables/OpenCVService.html":{}}}],["bbox.y",{"_index":693,"title":{},"body":{"injectables/DrawService.html":{},"injectables/OpenCVService.html":{}}}],["bbox/interactive",{"_index":1151,"title":{},"body":{"components/InteractiveBboxComponent.html":{},"coverage.html":{}}}],["bboxes.length",{"_index":1727,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["bboxlabel",{"_index":280,"title":{"interfaces/BboxLabel.html":{}},"body":{"interfaces/BboxLabel.html":{},"injectables/BboxManagerService.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{},"coverage.html":{}}}],["bboxmanager",{"_index":1651,"title":{},"body":{"injectables/PostProcessService.html":{},"components/SVGElementsComponent.html":{}}}],["bboxmanagerservice",{"_index":323,"title":{"injectables/BboxManagerService.html":{}},"body":{"injectables/BboxManagerService.html":{},"injectables/PostProcessService.html":{},"components/SVGElementsComponent.html":{},"coverage.html":{}}}],["behaviorsubject",{"_index":2159,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["behaviorsubject(false",{"_index":2160,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["between",{"_index":1547,"title":{},"body":{"injectables/OpenCVService.html":{},"index.html":{}}}],["bhist",{"_index":1496,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["bhist.delete",{"_index":1512,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["bidirectional",{"_index":2574,"title":{},"body":{"index.html":{}}}],["bilateralweight",{"_index":1676,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["binaries",{"_index":2540,"title":{},"body":{"index.html":{}}}],["binarizecanvas",{"_index":572,"title":{},"body":{"injectables/DrawService.html":{},"injectables/OpenCVService.html":{}}}],["binarizecanvas(ctx",{"_index":596,"title":{},"body":{"injectables/DrawService.html":{},"injectables/OpenCVService.html":{}}}],["binarizemulticolorcanvas",{"_index":1355,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["binarizemulticolorcanvas(ctx",{"_index":1368,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["binary",{"_index":1589,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["binary.delete",{"_index":1610,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["blob",{"_index":305,"title":{},"body":{"interfaces/BboxLabel.html":{},"injectables/IOService.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/LabelFormat.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"injectables/UndoRedoService.html":{},"interfaces/Viewbox.html":{},"miscellaneous/functions.html":{}}}],["blob$.then((blob",{"_index":2192,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["blobs",{"_index":2190,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["blobtodataurl",{"_index":935,"title":{},"body":{"injectables/IOService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["blobtodataurl(blob",{"_index":1007,"title":{},"body":{"injectables/IOService.html":{},"miscellaneous/functions.html":{}}}],["blockable",{"_index":235,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["blockablediv",{"_index":234,"title":{"components/BlockableDiv.html":{}},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["blockablep",{"_index":237,"title":{"components/BlockableP.html":{}},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["blockableui",{"_index":332,"title":{},"body":{"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/LabelledSwitchComponent.html":{}}}],["blockuimodule",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/ToolbarComponent.html":{}}}],["blur",{"_index":1545,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["bmax",{"_index":1529,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["bmin",{"_index":1525,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["bnorm_hist",{"_index":1506,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["bnorm_hist.delete",{"_index":1540,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["boolean",{"_index":287,"title":{},"body":{"interfaces/BboxLabel.html":{},"injectables/EditorService.html":{},"interfaces/ImageFromCLI.html":{},"injectables/ImageProcessingService.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"injectables/OpenCVService.html":{},"interfaces/Point2D.html":{},"injectables/PostProcessService.html":{},"interfaces/ProjectConfig.html":{},"components/ProjectConfigurationComponent.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"injectables/StateManagerService.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"injectables/ViewService.html":{},"interfaces/Viewbox.html":{},"injectables/ZoomPanService.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{}}}],["bottom",{"_index":1461,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["bounding",{"_index":1796,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["box",{"_index":1797,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["break",{"_index":648,"title":{},"body":{"injectables/DrawService.html":{}}}],["brightness",{"_index":1035,"title":{},"body":{"injectables/ImageProcessingService.html":{},"injectables/OpenCVService.html":{},"components/ToolSettingComponent.html":{}}}],["brightness_contrast",{"_index":1356,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["brightness_contrast(input",{"_index":1371,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["browser",{"_index":2442,"title":{},"body":{"dependencies.html":{}}}],["browserify",{"_index":2455,"title":{},"body":{"dependencies.html":{}}}],["brush",{"_index":2114,"title":{},"body":{"components/ToolSettingComponent.html":{}}}],["buffer",{"_index":664,"title":{},"body":{"injectables/DrawService.html":{},"dependencies.html":{}}}],["buffercanvas",{"_index":399,"title":{},"body":{"injectables/CanvasManagerService.html":{},"injectables/DrawService.html":{},"injectables/PostProcessService.html":{}}}],["bufferctx",{"_index":400,"title":{},"body":{"injectables/CanvasManagerService.html":{},"injectables/PostProcessService.html":{}}}],["bufferctx.canvas",{"_index":1712,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["bufferctx.getimagedata",{"_index":1665,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["bufferctx.putimagedata",{"_index":1684,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["bufferctx.putimagedata(newmask",{"_index":1710,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["buildexecutables",{"_index":2541,"title":{},"body":{"index.html":{}}}],["built",{"_index":2497,"title":{},"body":{"index.html":{}}}],["button",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/LabelsComponent.html":{}}}],["buttonmodule",{"_index":504,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/ToolbarComponent.html":{}}}],["c",{"_index":2485,"title":{},"body":{"miscellaneous/functions.html":{}}}],["calculations",{"_index":1558,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["calls",{"_index":130,"title":{},"body":{"components/AppComponent.html":{}}}],["canactivatefn",{"_index":2677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canpan",{"_index":773,"title":{},"body":{"injectables/EditorService.html":{},"injectables/ZoomPanService.html":{}}}],["canvas",{"_index":463,"title":{},"body":{"injectables/CanvasManagerService.html":{},"injectables/DrawService.html":{},"injectables/IOService.html":{},"injectables/OpenCVService.html":{},"injectables/PostProcessService.html":{},"injectables/UndoRedoService.html":{},"injectables/ZoomPanService.html":{}}}],["canvas'},{'name",{"_index":244,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["canvas.component.ts",{"_index":2392,"title":{},"body":{"coverage.html":{}}}],["canvas.getboundingclientrect",{"_index":2329,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["canvas.height",{"_index":2333,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["canvas.width",{"_index":2331,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["canvas/component/drawable",{"_index":2391,"title":{},"body":{"coverage.html":{}}}],["canvas/component/interactive",{"_index":1150,"title":{},"body":{"components/InteractiveBboxComponent.html":{},"coverage.html":{}}}],["canvas/component/svgelements/svgelements.component.ts",{"_index":1951,"title":{},"body":{"components/SVGElementsComponent.html":{},"coverage.html":{}}}],["canvas/component/svgelements/svgelements.component.ts:18",{"_index":1958,"title":{},"body":{"components/SVGElementsComponent.html":{}}}],["canvas/component/svgelements/svgelements.component.ts:20",{"_index":1957,"title":{},"body":{"components/SVGElementsComponent.html":{}}}],["canvas/component/svgelements/svgelements.component.ts:22",{"_index":1963,"title":{},"body":{"components/SVGElementsComponent.html":{}}}],["canvas/component/svgelements/svgelements.component.ts:23",{"_index":1962,"title":{},"body":{"components/SVGElementsComponent.html":{}}}],["canvas/component/svgelements/svgelements.component.ts:24",{"_index":1961,"title":{},"body":{"components/SVGElementsComponent.html":{}}}],["canvas/component/svgelements/svgelements.component.ts:25",{"_index":1966,"title":{},"body":{"components/SVGElementsComponent.html":{}}}],["canvas/component/svgelements/svgelements.component.ts:27",{"_index":1960,"title":{},"body":{"components/SVGElementsComponent.html":{}}}],["canvas/models.ts",{"_index":1641,"title":{},"body":{"interfaces/Point2D-1.html":{},"interfaces/Rect-1.html":{},"interfaces/Viewbox-1.html":{},"coverage.html":{}}}],["canvas/service/bbox",{"_index":326,"title":{},"body":{"injectables/BboxManagerService.html":{},"coverage.html":{}}}],["canvas/service/canvas",{"_index":398,"title":{},"body":{"injectables/CanvasManagerService.html":{},"injectables/IOService.html":{},"coverage.html":{}}}],["canvas/service/draw.service.ts",{"_index":566,"title":{},"body":{"injectables/DrawService.html":{},"coverage.html":{}}}],["canvas/service/draw.service.ts:105",{"_index":595,"title":{},"body":{"injectables/DrawService.html":{}}}],["canvas/service/draw.service.ts:127",{"_index":597,"title":{},"body":{"injectables/DrawService.html":{}}}],["canvas/service/draw.service.ts:137",{"_index":598,"title":{},"body":{"injectables/DrawService.html":{}}}],["canvas/service/draw.service.ts:143",{"_index":601,"title":{},"body":{"injectables/DrawService.html":{}}}],["canvas/service/draw.service.ts:188",{"_index":603,"title":{},"body":{"injectables/DrawService.html":{}}}],["canvas/service/draw.service.ts:21",{"_index":624,"title":{},"body":{"injectables/DrawService.html":{}}}],["canvas/service/draw.service.ts:211",{"_index":604,"title":{},"body":{"injectables/DrawService.html":{}}}],["canvas/service/draw.service.ts:22",{"_index":625,"title":{},"body":{"injectables/DrawService.html":{}}}],["canvas/service/draw.service.ts:23",{"_index":626,"title":{},"body":{"injectables/DrawService.html":{}}}],["canvas/service/draw.service.ts:24",{"_index":591,"title":{},"body":{"injectables/DrawService.html":{}}}],["canvas/service/draw.service.ts:280",{"_index":606,"title":{},"body":{"injectables/DrawService.html":{}}}],["canvas/service/draw.service.ts:330",{"_index":608,"title":{},"body":{"injectables/DrawService.html":{}}}],["canvas/service/draw.service.ts:334",{"_index":609,"title":{},"body":{"injectables/DrawService.html":{}}}],["canvas/service/draw.service.ts:346",{"_index":610,"title":{},"body":{"injectables/DrawService.html":{}}}],["canvas/service/draw.service.ts:361",{"_index":611,"title":{},"body":{"injectables/DrawService.html":{}}}],["canvas/service/draw.service.ts:365",{"_index":615,"title":{},"body":{"injectables/DrawService.html":{}}}],["canvas/service/draw.service.ts:408",{"_index":612,"title":{},"body":{"injectables/DrawService.html":{}}}],["canvas/service/draw.service.ts:417",{"_index":617,"title":{},"body":{"injectables/DrawService.html":{}}}],["canvas/service/draw.service.ts:425",{"_index":618,"title":{},"body":{"injectables/DrawService.html":{}}}],["canvas/service/draw.service.ts:478",{"_index":620,"title":{},"body":{"injectables/DrawService.html":{}}}],["canvas/service/draw.service.ts:484",{"_index":623,"title":{},"body":{"injectables/DrawService.html":{}}}],["canvas/service/draw.service.ts:59",{"_index":592,"title":{},"body":{"injectables/DrawService.html":{}}}],["canvas/service/image",{"_index":1033,"title":{},"body":{"injectables/ImageProcessingService.html":{},"components/ToolSettingComponent.html":{},"coverage.html":{}}}],["canvas/service/post",{"_index":1642,"title":{},"body":{"injectables/PostProcessService.html":{},"coverage.html":{}}}],["canvas/service/state",{"_index":934,"title":{},"body":{"injectables/IOService.html":{},"injectables/StateManagerService.html":{},"coverage.html":{}}}],["canvas/service/svgui.service.ts",{"_index":1974,"title":{},"body":{"injectables/SVGUIService.html":{},"coverage.html":{}}}],["canvas/service/svgui.service.ts:14",{"_index":1982,"title":{},"body":{"injectables/SVGUIService.html":{}}}],["canvas/service/svgui.service.ts:28",{"_index":1983,"title":{},"body":{"injectables/SVGUIService.html":{}}}],["canvas/service/svgui.service.ts:32",{"_index":1981,"title":{},"body":{"injectables/SVGUIService.html":{}}}],["canvas/service/svgui.service.ts:9",{"_index":1979,"title":{},"body":{"injectables/SVGUIService.html":{}}}],["canvas/service/undo",{"_index":2150,"title":{},"body":{"injectables/UndoRedoService.html":{},"coverage.html":{}}}],["canvas/service/zoom",{"_index":2248,"title":{},"body":{"injectables/ZoomPanService.html":{},"coverage.html":{}}}],["canvasclear",{"_index":758,"title":{},"body":{"injectables/EditorService.html":{}}}],["canvascoord",{"_index":748,"title":{},"body":{"injectables/DrawService.html":{}}}],["canvasctx",{"_index":401,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["canvases",{"_index":669,"title":{},"body":{"injectables/DrawService.html":{},"injectables/OpenCVService.html":{}}}],["canvasmanagerservice",{"_index":397,"title":{"injectables/CanvasManagerService.html":{}},"body":{"injectables/CanvasManagerService.html":{},"injectables/DrawService.html":{},"injectables/IOService.html":{},"injectables/PostProcessService.html":{},"injectables/UndoRedoService.html":{},"coverage.html":{}}}],["canvasredraw",{"_index":759,"title":{},"body":{"injectables/EditorService.html":{}}}],["canvasref",{"_index":2250,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["canvasrenderingcontext2d",{"_index":594,"title":{},"body":{"injectables/DrawService.html":{},"injectables/OpenCVService.html":{}}}],["canvasscale",{"_index":2318,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["canvassumrefresh",{"_index":760,"title":{},"body":{"injectables/EditorService.html":{}}}],["canzoom",{"_index":2251,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["cardmodule",{"_index":875,"title":{},"body":{"components/GalleryElementComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/ToolSettingComponent.html":{}}}],["case",{"_index":663,"title":{},"body":{"injectables/DrawService.html":{}}}],["cast",{"_index":1094,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["catch",{"_index":387,"title":{},"body":{"injectables/CLIService.html":{},"interfaces/EventPayload.html":{},"injectables/ImageProcessingService.html":{}}}],["catch((error",{"_index":944,"title":{},"body":{"injectables/IOService.html":{}}}],["catppuccin/palette",{"_index":2444,"title":{},"body":{"dependencies.html":{}}}],["catract",{"_index":194,"title":{},"body":{"components/AppComponent.html":{}}}],["cdr",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/ToolbarComponent.html":{}}}],["chain",{"_index":129,"title":{},"body":{"components/AppComponent.html":{}}}],["changeactive",{"_index":1130,"title":{},"body":{"components/InstanceLabelComponent.html":{}}}],["changeactive(index",{"_index":1134,"title":{},"body":{"components/InstanceLabelComponent.html":{}}}],["changeactivelabel",{"_index":1190,"title":{},"body":{"components/LabelsComponent.html":{}}}],["changeactivelabel(event",{"_index":1198,"title":{},"body":{"components/LabelsComponent.html":{}}}],["changeallvisibility",{"_index":1191,"title":{},"body":{"components/LabelsComponent.html":{}}}],["changecolor",{"_index":1192,"title":{},"body":{"components/LabelsComponent.html":{}}}],["changedetectorref",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/ToolbarComponent.html":{}}}],["changevisibility",{"_index":1193,"title":{},"body":{"components/LabelsComponent.html":{}}}],["changevisibility(node",{"_index":1203,"title":{},"body":{"components/LabelsComponent.html":{}}}],["check",{"_index":1283,"title":{},"body":{"injectables/LabelsService.html":{},"injectables/OpenCVService.html":{},"injectables/ProjectService.html":{}}}],["checkboxmodule",{"_index":505,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{},"components/ProjectConfigurationComponent.html":{}}}],["checked",{"_index":1168,"title":{},"body":{"components/LabelledSwitchComponent.html":{}}}],["checkedchange",{"_index":1170,"title":{},"body":{"components/LabelledSwitchComponent.html":{}}}],["checkifdataexists",{"_index":904,"title":{},"body":{"injectables/IOService.html":{}}}],["checkvalidinput",{"_index":1048,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["choice",{"_index":988,"title":{},"body":{"injectables/IOService.html":{},"classes/MulticlassTask.html":{},"classes/MultilabelTask.html":{}}}],["choices",{"_index":1336,"title":{},"body":{"classes/MulticlassTask.html":{},"classes/MultilabelTask.html":{}}}],["choose",{"_index":1798,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["class",{"_index":113,"title":{"classes/MulticlassTask.html":{},"classes/MultilabelTask.html":{},"classes/Tool.html":{},"classes/Tools.html":{},"classes/UndoRedoStack.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{}},"body":{"components/AppComponent.html":{},"injectables/BboxManagerService.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"components/ClassificationConfigurationComponent.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"interfaces/EventPayload.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"injectables/ImageProcessingService.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"components/LoadingComponent.html":{},"classes/MulticlassTask.html":{},"classes/MultilabelTask.html":{},"injectables/OpenCVService.html":{},"injectables/PostProcessService.html":{},"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{},"components/SVGElementsComponent.html":{},"injectables/SVGUIService.html":{},"injectables/StateManagerService.html":{},"components/TestingComponent.html":{},"classes/Tool.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"classes/Tools.html":{},"injectables/UndoRedoService.html":{},"classes/UndoRedoStack.html":{},"injectables/ViewService.html":{},"injectables/ZoomPanService.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{},"coverage.html":{}}}],["classcanvas",{"_index":2169,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["classcanvas.converttoblob",{"_index":2186,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["classcanvas.getcontext('2d",{"_index":2177,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["classctx.drawimage",{"_index":747,"title":{},"body":{"injectables/DrawService.html":{}}}],["classctx.globalcompositeoperation",{"_index":746,"title":{},"body":{"injectables/DrawService.html":{}}}],["classes",{"_index":307,"title":{},"body":{"interfaces/BboxLabel.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"classes/MulticlassTask.html":{},"interfaces/MultilabelInterface.html":{},"classes/MultilabelTask.html":{},"interfaces/Point2D.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"classes/Tool.html":{},"classes/Tools.html":{},"interfaces/UndoRedoCanvasElement.html":{},"classes/UndoRedoStack.html":{},"interfaces/Viewbox.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{},"index.html":{},"overview.html":{}}}],["classification",{"_index":240,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"index.html":{}}}],["classification_classes",{"_index":318,"title":{},"body":{"interfaces/BboxLabel.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{}}}],["classification_classes=classifications_classes",{"_index":2636,"title":{},"body":{"index.html":{}}}],["classification_multilabel",{"_index":319,"title":{},"body":{"interfaces/BboxLabel.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{},"index.html":{}}}],["classification_multilabel=classification_multilabel",{"_index":2637,"title":{},"body":{"index.html":{}}}],["classificationconfigurationcomponent",{"_index":239,"title":{"components/ClassificationConfigurationComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["classifications_classes",{"_index":2603,"title":{},"body":{"index.html":{}}}],["classindex",{"_index":532,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["classlabels",{"_index":1330,"title":{},"body":{"classes/MulticlassTask.html":{},"classes/MultilabelTask.html":{}}}],["classtask",{"_index":1294,"title":{},"body":{"injectables/LabelsService.html":{}}}],["clean",{"_index":1607,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["clearcanvas",{"_index":406,"title":{},"body":{"injectables/CanvasManagerService.html":{},"injectables/DrawService.html":{},"components/LabelsComponent.html":{}}}],["clearcanvas(ctx",{"_index":427,"title":{},"body":{"injectables/CanvasManagerService.html":{},"injectables/DrawService.html":{}}}],["clearcanvas(node",{"_index":1206,"title":{},"body":{"components/LabelsComponent.html":{}}}],["clearcanvasatindex",{"_index":407,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["clearcanvasatindex(index",{"_index":431,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["clearinterval(this.intervalfunction",{"_index":864,"title":{},"body":{"components/GalleryComponent.html":{}}}],["cli",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/ProjectConfigurationComponent.html":{},"index.html":{}}}],["cli.load_image(filepath",{"_index":2640,"title":{},"body":{"index.html":{}}}],["client",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["clientx",{"_index":2344,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["clienty",{"_index":2347,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["cliservice",{"_index":49,"title":{"injectables/CLIService.html":{}},"body":{"components/AppComponent.html":{},"injectables/CLIService.html":{},"interfaces/EventPayload.html":{},"components/ProjectConfigurationComponent.html":{},"coverage.html":{}}}],["cloud",{"_index":2076,"title":{},"body":{"classes/Tool.html":{},"classes/Tools.html":{}}}],["coarsemask",{"_index":1690,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["color",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"interfaces/BboxLabel.html":{},"injectables/DrawService.html":{},"injectables/IOService.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"injectables/OpenCVService.html":{},"interfaces/Point2D.html":{},"interfaces/ProjectConfig.html":{},"components/ProjectConfigurationComponent.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{}}}],["colorpickermodule",{"_index":1184,"title":{},"body":{"components/LabelsComponent.html":{},"components/ProjectConfigurationComponent.html":{}}}],["colors",{"_index":958,"title":{},"body":{"injectables/IOService.html":{},"interfaces/LabelFormat.html":{},"injectables/OpenCVService.html":{}}}],["combinedcanvas",{"_index":402,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["combinedctx",{"_index":403,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["combines",{"_index":2545,"title":{},"body":{"index.html":{}}}],["commandprocessed",{"_index":355,"title":{},"body":{"injectables/CLIService.html":{},"interfaces/EventPayload.html":{}}}],["commonmodule",{"_index":833,"title":{},"body":{"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/LabelsComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["communication",{"_index":2565,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":232,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"overview.html":{}}}],["components/core/drawable",{"_index":933,"title":{},"body":{"injectables/IOService.html":{}}}],["components/interface/loading/loading.component",{"_index":82,"title":{},"body":{"components/AppComponent.html":{}}}],["componenttohex",{"_index":2416,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["componenttohex(c",{"_index":2484,"title":{},"body":{"miscellaneous/functions.html":{}}}],["compute",{"_index":1543,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["computecombinedcanvas",{"_index":408,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["computed",{"_index":2316,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["conditional",{"_index":2123,"title":{},"body":{"components/ToolSettingComponent.html":{}}}],["config",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"injectables/CLIService.html":{},"interfaces/EventPayload.html":{},"injectables/ProjectService.html":{}}}],["config.classification_classes",{"_index":1939,"title":{},"body":{"injectables/ProjectService.html":{}}}],["config.classification_classes.foreach((task",{"_index":1940,"title":{},"body":{"injectables/ProjectService.html":{}}}],["config.classification_multilabel",{"_index":1945,"title":{},"body":{"injectables/ProjectService.html":{}}}],["config.classification_multilabel.classes",{"_index":1948,"title":{},"body":{"injectables/ProjectService.html":{}}}],["config.classification_multilabel.default",{"_index":1949,"title":{},"body":{"injectables/ProjectService.html":{}}}],["config.classification_multilabel.name",{"_index":1947,"title":{},"body":{"injectables/ProjectService.html":{}}}],["config.input_dir",{"_index":1934,"title":{},"body":{"injectables/ProjectService.html":{}}}],["config.is_bbox_detection",{"_index":1932,"title":{},"body":{"injectables/ProjectService.html":{}}}],["config.is_classification",{"_index":1929,"title":{},"body":{"injectables/ProjectService.html":{}}}],["config.is_instance_segmentation",{"_index":1931,"title":{},"body":{"injectables/ProjectService.html":{}}}],["config.is_segmentation",{"_index":1930,"title":{},"body":{"injectables/ProjectService.html":{}}}],["config.output_dir",{"_index":1935,"title":{},"body":{"injectables/ProjectService.html":{}}}],["config.project_name",{"_index":1933,"title":{},"body":{"injectables/ProjectService.html":{}}}],["config.segmentation_classes",{"_index":1936,"title":{},"body":{"injectables/ProjectService.html":{}}}],["config.segmentation_classes.map((label",{"_index":1937,"title":{},"body":{"injectables/ProjectService.html":{}}}],["configuration",{"_index":502,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{},"components/ProjectConfigurationComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["configuration'},{'name",{"_index":241,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["configuration.component",{"_index":1771,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["configuration.component.html",{"_index":511,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{},"components/ProjectConfigurationComponent.html":{}}}],["configuration.component.scss",{"_index":512,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{},"components/ProjectConfigurationComponent.html":{}}}],["configuration.component.ts",{"_index":501,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{},"components/ProjectConfigurationComponent.html":{},"coverage.html":{}}}],["configuration.component.ts:104",{"_index":1747,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["configuration.component.ts:115",{"_index":1749,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["configuration.component.ts:119",{"_index":1752,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["configuration.component.ts:124",{"_index":1750,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["configuration.component.ts:133",{"_index":1757,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["configuration.component.ts:21",{"_index":522,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["configuration.component.ts:23",{"_index":539,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["configuration.component.ts:25",{"_index":526,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["configuration.component.ts:29",{"_index":529,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["configuration.component.ts:34",{"_index":524,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["configuration.component.ts:39",{"_index":534,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["configuration.component.ts:45",{"_index":528,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["configuration.component.ts:55",{"_index":1759,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["configuration.component.ts:57",{"_index":1760,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["configuration.component.ts:58",{"_index":1761,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["configuration.component.ts:59",{"_index":1746,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["configuration.component.ts:60",{"_index":538,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["configuration.component.ts:61",{"_index":1763,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["configuration.component.ts:62",{"_index":1762,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["configuration.component.ts:64",{"_index":536,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["configuration.component.ts:67",{"_index":1753,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["configuration.component.ts:68",{"_index":531,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["configuration.component.ts:76",{"_index":1754,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["configuration.component.ts:87",{"_index":1755,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["configuration.component.ts:94",{"_index":1758,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["configuration/classification",{"_index":500,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{},"components/ProjectConfigurationComponent.html":{},"coverage.html":{}}}],["configuration/project",{"_index":1731,"title":{},"body":{"components/ProjectConfigurationComponent.html":{},"coverage.html":{}}}],["configure",{"_index":1794,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["connected",{"_index":1456,"title":{},"body":{"injectables/OpenCVService.html":{},"components/ToolSettingComponent.html":{}}}],["connectedness",{"_index":1705,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["connectivity",{"_index":2116,"title":{},"body":{"components/ToolSettingComponent.html":{}}}],["console.error('error",{"_index":1405,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["console.error(e",{"_index":1102,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["console.log(\"pushing",{"_index":2221,"title":{},"body":{"classes/UndoRedoStack.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{}}}],["console.log(\"redoing",{"_index":2218,"title":{},"body":{"classes/UndoRedoStack.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{}}}],["console.log(\"undoing",{"_index":2214,"title":{},"body":{"classes/UndoRedoStack.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{}}}],["console.log('command",{"_index":1773,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["console.log('crf",{"_index":1681,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["console.log('image",{"_index":222,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log('is",{"_index":2681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(event",{"_index":381,"title":{},"body":{"injectables/CLIService.html":{},"interfaces/EventPayload.html":{}}}],["console.log(this.percentagebeforerefresh",{"_index":871,"title":{},"body":{"components/GalleryComponent.html":{}}}],["const",{"_index":379,"title":{},"body":{"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"components/ClassificationConfigurationComponent.html":{},"injectables/DrawService.html":{},"interfaces/EventPayload.html":{},"injectables/IOService.html":{},"injectables/LabelsService.html":{},"injectables/OpenCVService.html":{},"injectables/PostProcessService.html":{},"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{},"injectables/StateManagerService.html":{},"classes/Tool.html":{},"classes/Tools.html":{},"injectables/UndoRedoService.html":{},"classes/UndoRedoStack.html":{},"injectables/ZoomPanService.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{},"miscellaneous/variables.html":{}}}],["construction",{"_index":2649,"title":{},"body":{"index.html":{}}}],["constructlabeltreenode",{"_index":1281,"title":{},"body":{"injectables/LabelsService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["constructlabeltreenode(labels",{"_index":2490,"title":{},"body":{"miscellaneous/functions.html":{}}}],["constructlabeltreenode(this.listsegmentationlabels",{"_index":1309,"title":{},"body":{"injectables/LabelsService.html":{}}}],["constructor",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"injectables/BboxManagerService.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"components/ClassificationConfigurationComponent.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"injectables/ImageProcessingService.html":{},"components/InstanceLabelComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"components/LoadingComponent.html":{},"classes/MulticlassTask.html":{},"classes/MultilabelTask.html":{},"injectables/OpenCVService.html":{},"injectables/PostProcessService.html":{},"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{},"components/SVGElementsComponent.html":{},"injectables/SVGUIService.html":{},"injectables/StateManagerService.html":{},"classes/Tool.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UndoRedoService.html":{},"injectables/ViewService.html":{},"injectables/ZoomPanService.html":{}}}],["constructor(canvasmanagerservice",{"_index":2153,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["constructor(drawservice",{"_index":2093,"title":{},"body":{"components/ToolSettingComponent.html":{}}}],["constructor(editorservice",{"_index":1052,"title":{},"body":{"injectables/ImageProcessingService.html":{},"injectables/PostProcessService.html":{},"injectables/StateManagerService.html":{},"components/ToolbarComponent.html":{}}}],["constructor(el",{"_index":339,"title":{},"body":{"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/LabelledSwitchComponent.html":{}}}],["constructor(id",{"_index":2056,"title":{},"body":{"classes/Tool.html":{},"classes/Tools.html":{}}}],["constructor(labelservice",{"_index":521,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{},"injectables/DrawService.html":{},"components/SVGElementsComponent.html":{}}}],["constructor(labelsservice",{"_index":1196,"title":{},"body":{"components/LabelsComponent.html":{}}}],["constructor(ngxopencv",{"_index":1363,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["constructor(ngzone",{"_index":359,"title":{},"body":{"injectables/CLIService.html":{}}}],["constructor(private",{"_index":347,"title":{},"body":{"components/BlockableDiv.html":{},"components/BlockableP.html":{},"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"interfaces/EventPayload.html":{},"components/GalleryElementComponent.html":{},"injectables/ImageProcessingService.html":{},"components/InstanceLabelComponent.html":{},"components/LabelledSwitchComponent.html":{},"injectables/OpenCVService.html":{},"injectables/StateManagerService.html":{},"injectables/ViewService.html":{},"injectables/ZoomPanService.html":{}}}],["constructor(projectservice",{"_index":845,"title":{},"body":{"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"components/InstanceLabelComponent.html":{},"components/ProjectConfigurationComponent.html":{}}}],["constructor(public",{"_index":546,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/LoadingComponent.html":{},"classes/MulticlassTask.html":{},"classes/MultilabelTask.html":{},"components/SVGElementsComponent.html":{}}}],["constructor(router",{"_index":2232,"title":{},"body":{"injectables/ViewService.html":{}}}],["constructor(stateservice",{"_index":422,"title":{},"body":{"injectables/CanvasManagerService.html":{},"injectables/ZoomPanService.html":{}}}],["constructor(taskname",{"_index":1332,"title":{},"body":{"classes/MulticlassTask.html":{},"classes/MultilabelTask.html":{}}}],["constructor(viewservice",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/LoadingComponent.html":{},"injectables/ProjectService.html":{}}}],["context",{"_index":1424,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["contrast",{"_index":1036,"title":{},"body":{"injectables/ImageProcessingService.html":{},"injectables/OpenCVService.html":{},"components/ToolSettingComponent.html":{}}}],["convert",{"_index":1116,"title":{},"body":{"injectables/ImageProcessingService.html":{},"injectables/OpenCVService.html":{},"injectables/ProjectService.html":{},"components/ToolSettingComponent.html":{}}}],["converttoblob",{"_index":1004,"title":{},"body":{"injectables/IOService.html":{}}}],["copy",{"_index":1603,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["core/blockable/div/div.component",{"_index":2136,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["core/blockable/p/p.component",{"_index":2135,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["core/drawable",{"_index":2099,"title":{},"body":{"components/ToolSettingComponent.html":{}}}],["core/interface",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"injectables/BboxManagerService.html":{},"injectables/CLIService.html":{},"interfaces/EventPayload.html":{},"injectables/IOService.html":{},"components/InstanceLabelComponent.html":{},"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"injectables/OpenCVService.html":{},"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{},"components/SVGElementsComponent.html":{}}}],["core/io/formats",{"_index":929,"title":{},"body":{"injectables/IOService.html":{}}}],["core/io/images",{"_index":890,"title":{},"body":{"components/GalleryElementComponent.html":{},"injectables/ProjectService.html":{}}}],["core/io/save_load",{"_index":937,"title":{},"body":{"injectables/IOService.html":{},"injectables/ProjectService.html":{}}}],["core/labelled",{"_index":1768,"title":{},"body":{"components/ProjectConfigurationComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["core/misc/colors",{"_index":1140,"title":{},"body":{"components/InstanceLabelComponent.html":{},"injectables/OpenCVService.html":{},"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{}}}],["core/misc/undoredo",{"_index":2162,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["core/task",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"components/ClassificationConfigurationComponent.html":{},"injectables/LabelsService.html":{},"injectables/ProjectService.html":{}}}],["core/tools",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["corrected",{"_index":1572,"title":{},"body":{"injectables/OpenCVService.html":{},"index.html":{}}}],["corrected.convertto(corrected",{"_index":1577,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["corrected.delete",{"_index":1583,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["correction",{"_index":1564,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["coverage",{"_index":2386,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["covered",{"_index":2113,"title":{},"body":{"components/ToolSettingComponent.html":{}}}],["create",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"injectables/OpenCVService.html":{},"components/ProjectConfigurationComponent.html":{},"index.html":{}}}],["create_project",{"_index":1818,"title":{},"body":{"injectables/ProjectService.html":{}}}],["create_project(config",{"_index":1827,"title":{},"body":{"injectables/ProjectService.html":{}}}],["createclisubscription",{"_index":38,"title":{},"body":{"components/AppComponent.html":{}}}],["createimagebitmap(data",{"_index":2175,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["crf",{"_index":2083,"title":{},"body":{"classes/Tool.html":{},"classes/Tools.html":{},"miscellaneous/enumerations.html":{}}}],["crf_post_process",{"_index":1645,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["csslayer",{"_index":120,"title":{},"body":{"components/AppComponent.html":{}}}],["ctx",{"_index":430,"title":{},"body":{"injectables/CanvasManagerService.html":{},"injectables/DrawService.html":{},"injectables/ImageProcessingService.html":{},"injectables/OpenCVService.html":{},"injectables/UndoRedoService.html":{}}}],["ctx.beginpath",{"_index":673,"title":{},"body":{"injectables/DrawService.html":{}}}],["ctx.canvas",{"_index":691,"title":{},"body":{"injectables/DrawService.html":{}}}],["ctx.canvas.height",{"_index":1423,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["ctx.canvas.width",{"_index":1421,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["ctx.clearrect(0",{"_index":496,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["ctx.drawimage",{"_index":735,"title":{},"body":{"injectables/DrawService.html":{},"injectables/PostProcessService.html":{}}}],["ctx.drawimage(img",{"_index":1093,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["ctx.fillrect(0",{"_index":720,"title":{},"body":{"injectables/DrawService.html":{}}}],["ctx.fillrect(rect.x",{"_index":741,"title":{},"body":{"injectables/DrawService.html":{}}}],["ctx.fillstyle",{"_index":717,"title":{},"body":{"injectables/DrawService.html":{}}}],["ctx.getimagedata(0",{"_index":1426,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["ctx.getimagedata(bbox.x",{"_index":1587,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["ctx.globalcompositeoperation",{"_index":671,"title":{},"body":{"injectables/DrawService.html":{},"injectables/PostProcessService.html":{}}}],["ctx.imagesmoothingenabled",{"_index":1092,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["ctx.lineto",{"_index":677,"title":{},"body":{"injectables/DrawService.html":{}}}],["ctx.moveto",{"_index":674,"title":{},"body":{"injectables/DrawService.html":{}}}],["ctx.putimagedata(processedimagedata",{"_index":1606,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["ctx.stroke",{"_index":680,"title":{},"body":{"injectables/DrawService.html":{}}}],["ctx.strokestyle",{"_index":718,"title":{},"body":{"injectables/DrawService.html":{}}}],["ctx?.clearrect",{"_index":2182,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["ctx?.clearrect(0",{"_index":2178,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["ctx?.drawimage",{"_index":2183,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["ctx?.drawimage(img",{"_index":2179,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["ctxclass.drawimage",{"_index":690,"title":{},"body":{"injectables/DrawService.html":{}}}],["ctxclass.globalcompositeoperation",{"_index":687,"title":{},"body":{"injectables/DrawService.html":{}}}],["current",{"_index":732,"title":{},"body":{"injectables/DrawService.html":{},"injectables/OpenCVService.html":{},"components/ToolSettingComponent.html":{}}}],["current_instance",{"_index":1315,"title":{},"body":{"injectables/LabelsService.html":{}}}],["currentpoint",{"_index":1985,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["custom",{"_index":2577,"title":{},"body":{"index.html":{}}}],["cv",{"_index":1401,"title":{},"body":{"injectables/OpenCVService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cv.addweighted(src",{"_index":1552,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.calchist(srcvec",{"_index":1498,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.color_gray2rgba",{"_index":1480,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.color_rgba2gray",{"_index":1479,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.color_rgba2rgb",{"_index":1485,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.convertscaleabs(image",{"_index":1541,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.convertscaleabs(src",{"_index":1482,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.cv_32f",{"_index":1502,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.cv_8u",{"_index":1415,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.cvtcolor(image",{"_index":1484,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.cvtcolor(src",{"_index":1478,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.divide(bhist",{"_index":1509,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.divide(ghist",{"_index":1510,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.divide(rhist",{"_index":1508,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.gaussianblur(src",{"_index":1550,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.imread(canvas",{"_index":1439,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.imread(input",{"_index":1477,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.imshow(canvas",{"_index":1440,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.imshow(output",{"_index":1481,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.inrange(src",{"_index":1630,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.mat",{"_index":1410,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.mat(rhist.rows",{"_index":1500,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.mat(src.size",{"_index":1596,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.mat.ones(3",{"_index":1414,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.mat.zeros(src.size",{"_index":1613,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.matfromimagedata(imgdata",{"_index":1428,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.matvector",{"_index":1487,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.medianblur(src",{"_index":1483,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.merge(vec",{"_index":1536,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.morph_gradient",{"_index":1431,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.morphologyex(src",{"_index":1430,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.norm_minmax",{"_index":1563,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.normalize(dst",{"_index":1562,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.pow(dst",{"_index":1574,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.scalar(image.rows",{"_index":1503,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.scalar(r",{"_index":1627,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.scalar(rgb[0",{"_index":1599,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.service",{"_index":459,"title":{},"body":{"injectables/CanvasManagerService.html":{},"injectables/DrawService.html":{},"injectables/ImageProcessingService.html":{}}}],["cv.service.ts",{"_index":1349,"title":{},"body":{"injectables/OpenCVService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cv.service.ts:121",{"_index":1389,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.service.ts:13",{"_index":1390,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.service.ts:131",{"_index":1372,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.service.ts:139",{"_index":1382,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.service.ts:14",{"_index":1393,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.service.ts:147",{"_index":1387,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.service.ts:15",{"_index":1395,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.service.ts:16",{"_index":1391,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.service.ts:17",{"_index":1365,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.service.ts:241",{"_index":1385,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.service.ts:267",{"_index":1380,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.service.ts:302",{"_index":1367,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.service.ts:342",{"_index":1370,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.service.ts:39",{"_index":1374,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.service.ts:65",{"_index":1378,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.service.ts:76",{"_index":1376,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.size(0",{"_index":1551,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.split(image",{"_index":1532,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.thresh_binary",{"_index":1594,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.threshold(gray",{"_index":1593,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.threshold(mask",{"_index":1632,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv_ready",{"_index":1350,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cvstate.error",{"_index":1404,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cvstate.loading",{"_index":1406,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cvstate.ready",{"_index":1408,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["d20f39",{"_index":177,"title":{},"body":{"components/AppComponent.html":{}}}],["darkmodeselector",{"_index":118,"title":{},"body":{"components/AppComponent.html":{}}}],["darktheme",{"_index":119,"title":{},"body":{"components/AppComponent.html":{}}}],["data",{"_index":304,"title":{},"body":{"interfaces/BboxLabel.html":{},"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"interfaces/EventPayload.html":{},"injectables/IOService.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"injectables/OpenCVService.html":{},"interfaces/Point2D.html":{},"injectables/PostProcessService.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"injectables/UndoRedoService.html":{},"interfaces/Viewbox.html":{},"index.html":{}}}],["data.classification_classes",{"_index":1019,"title":{},"body":{"injectables/IOService.html":{}}}],["data.classification_multilabel",{"_index":1020,"title":{},"body":{"injectables/IOService.html":{}}}],["data.colors[index",{"_index":976,"title":{},"body":{"injectables/IOService.html":{}}}],["data.mask_data",{"_index":1017,"title":{},"body":{"injectables/IOService.html":{}}}],["data.masksname.foreach((label",{"_index":975,"title":{},"body":{"injectables/IOService.html":{}}}],["data.multiclass",{"_index":984,"title":{},"body":{"injectables/IOService.html":{}}}],["data.multiclass.foreach((choice",{"_index":986,"title":{},"body":{"injectables/IOService.html":{}}}],["data.multiclass.length",{"_index":985,"title":{},"body":{"injectables/IOService.html":{}}}],["data.multilabel",{"_index":981,"title":{},"body":{"injectables/IOService.html":{}}}],["data.shades",{"_index":977,"title":{},"body":{"injectables/IOService.html":{}}}],["data.shades[index",{"_index":978,"title":{},"body":{"injectables/IOService.html":{}}}],["data[((y",{"_index":1458,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["data[((y+1",{"_index":1460,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["data[(y",{"_index":1462,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["data[idx",{"_index":1454,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["data[idx+1",{"_index":1471,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["data[idx+2",{"_index":1473,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["data[idx+3",{"_index":1475,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["dataset",{"_index":2591,"title":{},"body":{"index.html":{}}}],["dataviewmodule",{"_index":835,"title":{},"body":{"components/GalleryComponent.html":{}}}],["debug",{"_index":40,"title":{},"body":{"components/AppComponent.html":{}}}],["declare",{"_index":1400,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["decorators",{"_index":1964,"title":{},"body":{"components/SVGElementsComponent.html":{}}}],["def",{"_index":2610,"title":{},"body":{"index.html":{}}}],["default",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"interfaces/BboxLabel.html":{},"injectables/BboxManagerService.html":{},"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"interfaces/ImageFromCLI.html":{},"injectables/ImageProcessingService.html":{},"components/InstanceLabelComponent.html":{},"injectables/LabelsService.html":{},"interfaces/MulticlassInterface.html":{},"classes/MulticlassTask.html":{},"interfaces/MultilabelInterface.html":{},"classes/MultilabelTask.html":{},"injectables/OpenCVService.html":{},"interfaces/Point2D.html":{},"injectables/PostProcessService.html":{},"interfaces/ProjectConfig.html":{},"components/ProjectConfigurationComponent.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"components/SVGElementsComponent.html":{},"injectables/SVGUIService.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"injectables/StateManagerService.html":{},"interfaces/Thumbnail.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"classes/Tools.html":{},"interfaces/UndoRedoCanvasElement.html":{},"injectables/UndoRedoService.html":{},"classes/UndoRedoStack.html":{},"injectables/ViewService.html":{},"interfaces/Viewbox.html":{},"injectables/ZoomPanService.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{},"miscellaneous/variables.html":{}}}],["defaultinputfolder",{"_index":2671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultoutputfolder",{"_index":2673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultprojectname",{"_index":2669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultregex",{"_index":2675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"injectables/BboxManagerService.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"components/ClassificationConfigurationComponent.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"injectables/ImageProcessingService.html":{},"components/InstanceLabelComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"components/LoadingComponent.html":{},"classes/MulticlassTask.html":{},"classes/MultilabelTask.html":{},"injectables/OpenCVService.html":{},"injectables/PostProcessService.html":{},"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{},"components/SVGElementsComponent.html":{},"injectables/SVGUIService.html":{},"injectables/StateManagerService.html":{},"classes/Tool.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"classes/Tools.html":{},"injectables/UndoRedoService.html":{},"classes/UndoRedoStack.html":{},"injectables/ViewService.html":{},"injectables/ZoomPanService.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{}}}],["deletesegmentationclass",{"_index":1739,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["deletesegmentationclass(seglabel",{"_index":1748,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["demo",{"_index":2670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dependencies",{"_index":2435,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{}}}],["desktop",{"_index":2567,"title":{},"body":{"index.html":{}}}],["destination",{"_index":688,"title":{},"body":{"injectables/DrawService.html":{},"injectables/PostProcessService.html":{}}}],["detailed",{"_index":2644,"title":{},"body":{"index.html":{}}}],["detect",{"_index":1417,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["devbuilding",{"_index":2538,"title":{},"body":{"index.html":{}}}],["development",{"_index":2534,"title":{},"body":{"index.html":{}}}],["df8e1d",{"_index":172,"title":{},"body":{"components/AppComponent.html":{}}}],["diabetic",{"_index":2604,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":1767,"title":{},"body":{"components/ProjectConfigurationComponent.html":{},"dependencies.html":{}}}],["difference",{"_index":1546,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["different",{"_index":1419,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["directive",{"_index":230,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["directives",{"_index":275,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["directly",{"_index":2579,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1774,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["disabledrag",{"_index":2257,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["diseases",{"_index":2608,"title":{},"body":{"index.html":{}}}],["disk",{"_index":1793,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["div",{"_index":333,"title":{},"body":{"components/BlockableDiv.html":{}}}],["div'},{'name",{"_index":236,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["dividermodule",{"_index":510,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{},"components/LabelsComponent.html":{},"components/ProjectConfigurationComponent.html":{}}}],["doc",{"_index":952,"title":{},"body":{"injectables/IOService.html":{}}}],["doc.getelementsbytagname('image",{"_index":963,"title":{},"body":{"injectables/IOService.html":{}}}],["doc.getelementsbytagname('multilabel",{"_index":968,"title":{},"body":{"injectables/IOService.html":{}}}],["document.createelement('canvas",{"_index":1086,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["document.createelementns('http://www.w3.org/2000/svg",{"_index":1025,"title":{},"body":{"injectables/IOService.html":{}}}],["documentation",{"_index":2387,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["domparser",{"_index":951,"title":{},"body":{"injectables/IOService.html":{}}}],["don't",{"_index":1074,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["dr",{"_index":2606,"title":{},"body":{"index.html":{}}}],["drag",{"_index":2258,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["drag(event",{"_index":2276,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["draw",{"_index":573,"title":{},"body":{"injectables/DrawService.html":{}}}],["draw(event",{"_index":599,"title":{},"body":{"injectables/DrawService.html":{}}}],["drawable",{"_index":243,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["drawablecanvascomponent",{"_index":242,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["drawimage(this.ref_canvas",{"_index":1109,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["drawing",{"_index":2143,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["drawpen",{"_index":574,"title":{},"body":{"injectables/DrawService.html":{}}}],["drawpen(ctx",{"_index":602,"title":{},"body":{"injectables/DrawService.html":{}}}],["drawquadtreebbox",{"_index":1646,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["drawquadtreebbox(maskdata",{"_index":1654,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["drawservice",{"_index":565,"title":{"injectables/DrawService.html":{}},"body":{"injectables/DrawService.html":{},"components/LabelsComponent.html":{},"components/ToolSettingComponent.html":{},"coverage.html":{}}}],["dst",{"_index":1549,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["dst.delete",{"_index":1553,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["dx",{"_index":2334,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["dy",{"_index":2336,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["dynamic",{"_index":2443,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1101,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["each",{"_index":1619,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["ease",{"_index":2505,"title":{},"body":{"index.html":{}}}],["easefactor",{"_index":2362,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["easy",{"_index":2520,"title":{},"body":{"index.html":{}}}],["edge",{"_index":484,"title":{},"body":{"injectables/CanvasManagerService.html":{},"injectables/OpenCVService.html":{},"components/ToolSettingComponent.html":{}}}],["edgedetection",{"_index":1357,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["edgedetection(ctx",{"_index":1373,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["edgedetection_v2",{"_index":1358,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["edgedetection_v2(ctx",{"_index":1375,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["edgedetectioncanvas",{"_index":1359,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["edgedetectioncanvas(canvas",{"_index":1377,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["edges",{"_index":1418,"title":{},"body":{"injectables/OpenCVService.html":{},"components/ToolbarComponent.html":{}}}],["edgesonly",{"_index":733,"title":{},"body":{"injectables/DrawService.html":{},"injectables/EditorService.html":{}}}],["edgestrength",{"_index":1037,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["editor",{"_index":1915,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/ViewService.html":{}}}],["editor'},{'name",{"_index":246,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["editorcomponent",{"_index":245,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["editorservice",{"_index":33,"title":{"injectables/EditorService.html":{}},"body":{"components/AppComponent.html":{},"injectables/CanvasManagerService.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"injectables/ImageProcessingService.html":{},"components/LabelsComponent.html":{},"injectables/PostProcessService.html":{},"components/SVGElementsComponent.html":{},"injectables/StateManagerService.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UndoRedoService.html":{},"coverage.html":{}}}],["el",{"_index":342,"title":{},"body":{"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/LabelledSwitchComponent.html":{}}}],["element",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UndoRedoService.html":{},"classes/UndoRedoStack.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{}}}],["element'},{'name",{"_index":251,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["element.component",{"_index":857,"title":{},"body":{"components/GalleryComponent.html":{}}}],["element.component.html",{"_index":876,"title":{},"body":{"components/GalleryElementComponent.html":{}}}],["element.component.scss",{"_index":877,"title":{},"body":{"components/GalleryElementComponent.html":{}}}],["element.component.ts",{"_index":874,"title":{},"body":{"components/GalleryElementComponent.html":{},"coverage.html":{}}}],["element.component.ts:21",{"_index":884,"title":{},"body":{"components/GalleryElementComponent.html":{}}}],["element.component.ts:22",{"_index":883,"title":{},"body":{"components/GalleryElementComponent.html":{}}}],["element.component.ts:23",{"_index":882,"title":{},"body":{"components/GalleryElementComponent.html":{}}}],["element.component.ts:28",{"_index":886,"title":{},"body":{"components/GalleryElementComponent.html":{}}}],["element.component.ts:36",{"_index":887,"title":{},"body":{"components/GalleryElementComponent.html":{}}}],["element.component.ts:41",{"_index":885,"title":{},"body":{"components/GalleryElementComponent.html":{}}}],["element.data",{"_index":2173,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["element.data[index",{"_index":2171,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["element.index",{"_index":2172,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["element/gallery",{"_index":856,"title":{},"body":{"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"coverage.html":{}}}],["elementref",{"_index":340,"title":{},"body":{"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/LabelledSwitchComponent.html":{},"components/SVGElementsComponent.html":{}}}],["elements",{"_index":961,"title":{},"body":{"injectables/IOService.html":{}}}],["emit",{"_index":145,"title":{},"body":{"components/AppComponent.html":{}}}],["empty",{"_index":1467,"title":{},"body":{"injectables/OpenCVService.html":{},"injectables/UndoRedoService.html":{},"classes/UndoRedoStack.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{}}}],["enabled",{"_index":662,"title":{},"body":{"injectables/DrawService.html":{}}}],["enabledrag",{"_index":2259,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["enables",{"_index":2571,"title":{},"body":{"index.html":{}}}],["enddrag",{"_index":2260,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["enddraw",{"_index":575,"title":{},"body":{"injectables/DrawService.html":{}}}],["endloading",{"_index":2228,"title":{},"body":{"injectables/ViewService.html":{}}}],["enforceconnectivity",{"_index":761,"title":{},"body":{"injectables/EditorService.html":{}}}],["ensuring",{"_index":2514,"title":{},"body":{"index.html":{}}}],["enter",{"_index":1799,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["enum",{"_index":2081,"title":{},"body":{"classes/Tool.html":{},"classes/Tools.html":{}}}],["enumerations",{"_index":2471,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.defaultinputfolder",{"_index":1846,"title":{},"body":{"injectables/ProjectService.html":{}}}],["environment.defaultoutputfolder",{"_index":1856,"title":{},"body":{"injectables/ProjectService.html":{}}}],["environment.defaultprojectname",{"_index":1859,"title":{},"body":{"injectables/ProjectService.html":{}}}],["environment.defaultregex",{"_index":1848,"title":{},"body":{"injectables/ProjectService.html":{}}}],["environments/environment",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{}}}],["erase",{"_index":2140,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["eraseall",{"_index":670,"title":{},"body":{"injectables/DrawService.html":{},"injectables/EditorService.html":{}}}],["eraseall_post_process",{"_index":1647,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["eraser",{"_index":2072,"title":{},"body":{"classes/Tool.html":{},"classes/Tools.html":{}}}],["eraserpath",{"_index":1975,"title":{},"body":{"injectables/SVGUIService.html":{}}}],["eraserpen",{"_index":576,"title":{},"body":{"injectables/DrawService.html":{}}}],["eraserpen(ctx",{"_index":605,"title":{},"body":{"injectables/DrawService.html":{}}}],["error",{"_index":388,"title":{},"body":{"injectables/CLIService.html":{},"interfaces/EventPayload.html":{}}}],["error('no",{"_index":700,"title":{},"body":{"injectables/DrawService.html":{}}}],["error.message",{"_index":391,"title":{},"body":{"injectables/CLIService.html":{},"interfaces/EventPayload.html":{}}}],["errormessage",{"_index":389,"title":{},"body":{"injectables/CLIService.html":{},"interfaces/EventPayload.html":{}}}],["even",{"_index":150,"title":{},"body":{"components/AppComponent.html":{}}}],["event",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"injectables/CLIService.html":{},"components/ClassificationConfigurationComponent.html":{},"injectables/DrawService.html":{},"interfaces/EventPayload.html":{},"components/LabelsComponent.html":{},"injectables/ZoomPanService.html":{}}}],["event.ctrlkey",{"_index":751,"title":{},"body":{"injectables/DrawService.html":{}}}],["event.data",{"_index":1225,"title":{},"body":{"components/LabelsComponent.html":{}}}],["event.deltay",{"_index":752,"title":{},"body":{"injectables/DrawService.html":{},"injectables/ZoomPanService.html":{}}}],["event.movementx",{"_index":2335,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["event.movementy",{"_index":2337,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["event.node.data",{"_index":1228,"title":{},"body":{"components/LabelsComponent.html":{}}}],["event.payload.data",{"_index":380,"title":{},"body":{"injectables/CLIService.html":{},"interfaces/EventPayload.html":{}}}],["event.payload.event_id",{"_index":385,"title":{},"body":{"injectables/CLIService.html":{},"interfaces/EventPayload.html":{}}}],["event.preventdefault",{"_index":2373,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["event.target",{"_index":558,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["event_id",{"_index":373,"title":{},"body":{"injectables/CLIService.html":{},"interfaces/EventPayload.html":{}}}],["eventemitter",{"_index":1173,"title":{},"body":{"components/LabelledSwitchComponent.html":{}}}],["eventpayload",{"_index":372,"title":{"interfaces/EventPayload.html":{}},"body":{"injectables/CLIService.html":{},"interfaces/EventPayload.html":{},"coverage.html":{}}}],["events",{"_index":128,"title":{},"body":{"components/AppComponent.html":{}}}],["example",{"_index":2536,"title":{},"body":{"index.html":{}}}],["example1/class",{"_index":170,"title":{},"body":{"components/AppComponent.html":{}}}],["example2/class",{"_index":175,"title":{},"body":{"components/AppComponent.html":{}}}],["examples",{"_index":2645,"title":{},"body":{"index.html":{}}}],["exchange",{"_index":2575,"title":{},"body":{"index.html":{}}}],["exist",{"_index":1300,"title":{},"body":{"injectables/LabelsService.html":{}}}],["existing",{"_index":2138,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["existingroots",{"_index":1890,"title":{},"body":{"injectables/ProjectService.html":{}}}],["existingroots.includes(projectfile.root",{"_index":1893,"title":{},"body":{"injectables/ProjectService.html":{}}}],["exists",{"_index":972,"title":{},"body":{"injectables/IOService.html":{},"injectables/LabelsService.html":{}}}],["explorer",{"_index":1801,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["export",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"interfaces/BboxLabel.html":{},"injectables/BboxManagerService.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"components/ClassificationConfigurationComponent.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"interfaces/EventPayload.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"interfaces/ImageFromCLI.html":{},"injectables/ImageProcessingService.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"interfaces/LabelFormat.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"components/LoadingComponent.html":{},"interfaces/MulticlassInterface.html":{},"classes/MulticlassTask.html":{},"interfaces/MultilabelInterface.html":{},"classes/MultilabelTask.html":{},"injectables/OpenCVService.html":{},"interfaces/Point2D.html":{},"interfaces/Point2D-1.html":{},"injectables/PostProcessService.html":{},"interfaces/ProjectConfig.html":{},"components/ProjectConfigurationComponent.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"interfaces/Rect-1.html":{},"components/SVGElementsComponent.html":{},"injectables/SVGUIService.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"injectables/StateManagerService.html":{},"components/TestingComponent.html":{},"interfaces/Thumbnail.html":{},"classes/Tool.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"classes/Tools.html":{},"interfaces/UndoRedoCanvasElement.html":{},"injectables/UndoRedoService.html":{},"classes/UndoRedoStack.html":{},"injectables/ViewService.html":{},"interfaces/Viewbox.html":{},"interfaces/Viewbox-1.html":{},"injectables/ZoomPanService.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{}}}],["extractfeatures",{"_index":1693,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["extractimagesname",{"_index":1819,"title":{},"body":{"injectables/ProjectService.html":{}}}],["extractimagesname(files",{"_index":1829,"title":{},"body":{"injectables/ProjectService.html":{}}}],["extrema",{"_index":2111,"title":{},"body":{"components/ToolSettingComponent.html":{}}}],["false",{"_index":394,"title":{},"body":{"injectables/CLIService.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"interfaces/EventPayload.html":{},"injectables/IOService.html":{},"injectables/ImageProcessingService.html":{},"components/LabelsComponent.html":{},"injectables/OpenCVService.html":{},"injectables/PostProcessService.html":{},"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{},"injectables/StateManagerService.html":{},"injectables/ViewService.html":{},"injectables/ZoomPanService.html":{}}}],["fast",{"_index":1158,"title":{},"body":{"interfaces/LabelFormat.html":{},"dependencies.html":{}}}],["features",{"_index":2509,"title":{},"body":{"index.html":{}}}],["featuresextracted",{"_index":1644,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["ffffff",{"_index":703,"title":{},"body":{"injectables/DrawService.html":{}}}],["field",{"_index":2125,"title":{},"body":{"components/ToolSettingComponent.html":{}}}],["fieldset",{"_index":508,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["fieldsetmodule",{"_index":1187,"title":{},"body":{"components/LabelsComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/ToolSettingComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"interfaces/BboxLabel.html":{},"injectables/BboxManagerService.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"components/ClassificationConfigurationComponent.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"interfaces/EventPayload.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"interfaces/ImageFromCLI.html":{},"injectables/ImageProcessingService.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"interfaces/LabelFormat.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"components/LoadingComponent.html":{},"interfaces/MulticlassInterface.html":{},"classes/MulticlassTask.html":{},"interfaces/MultilabelInterface.html":{},"classes/MultilabelTask.html":{},"injectables/OpenCVService.html":{},"interfaces/Point2D.html":{},"interfaces/Point2D-1.html":{},"injectables/PostProcessService.html":{},"interfaces/ProjectConfig.html":{},"components/ProjectConfigurationComponent.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"interfaces/Rect-1.html":{},"components/SVGElementsComponent.html":{},"injectables/SVGUIService.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"injectables/StateManagerService.html":{},"components/TestingComponent.html":{},"interfaces/Thumbnail.html":{},"classes/Tool.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"classes/Tools.html":{},"interfaces/UndoRedoCanvasElement.html":{},"injectables/UndoRedoService.html":{},"classes/UndoRedoStack.html":{},"injectables/ViewService.html":{},"interfaces/Viewbox.html":{},"interfaces/Viewbox-1.html":{},"injectables/ZoomPanService.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{},"coverage.html":{}}}],["file.split(this.inputfolder)[1",{"_index":1914,"title":{},"body":{"injectables/ProjectService.html":{}}}],["file.then((value",{"_index":1775,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["filelist",{"_index":1905,"title":{},"body":{"injectables/ProjectService.html":{}}}],["filename",{"_index":217,"title":{},"body":{"components/AppComponent.html":{},"injectables/ProjectService.html":{}}}],["filepath",{"_index":941,"title":{},"body":{"injectables/IOService.html":{},"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["files",{"_index":1831,"title":{},"body":{"injectables/ProjectService.html":{}}}],["files.map((file",{"_index":1913,"title":{},"body":{"injectables/ProjectService.html":{}}}],["finalizedraw",{"_index":577,"title":{},"body":{"injectables/DrawService.html":{}}}],["finalizedraw(ctx",{"_index":607,"title":{},"body":{"injectables/DrawService.html":{}}}],["find",{"_index":729,"title":{},"body":{"injectables/DrawService.html":{}}}],["findandloadprojectfile",{"_index":1740,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["finished",{"_index":1013,"title":{},"body":{"injectables/IOService.html":{}}}],["flexible",{"_index":2519,"title":{},"body":{"index.html":{}}}],["float",{"_index":1095,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["floating",{"_index":1555,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["floatlabelmodule",{"_index":1733,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["folder",{"_index":220,"title":{},"body":{"components/AppComponent.html":{},"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{},"index.html":{}}}],["folders",{"_index":2523,"title":{},"body":{"index.html":{}}}],["followed",{"_index":131,"title":{},"body":{"components/AppComponent.html":{}}}],["for(let",{"_index":498,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["force",{"_index":2115,"title":{},"body":{"components/ToolSettingComponent.html":{}}}],["foreground",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"injectables/OpenCVService.html":{}}}],["foreground.copyto(output",{"_index":1604,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["foreground.delete",{"_index":1611,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["foreground.setto(new",{"_index":1598,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["format",{"_index":1432,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["formsmodule",{"_index":503,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["formula",{"_index":1565,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["framework",{"_index":2550,"title":{},"body":{"index.html":{}}}],["free",{"_index":1581,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["from_hex_to_rgb",{"_index":1399,"title":{},"body":{"injectables/OpenCVService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["from_hex_to_rgb(color",{"_index":1585,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["from_hex_to_rgb(hex",{"_index":2486,"title":{},"body":{"miscellaneous/functions.html":{}}}],["from_hex_to_rgb(labelcolor",{"_index":1621,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["from_rgb_to_hex",{"_index":2417,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["from_rgb_to_hex(r",{"_index":2487,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fromcanvastoimagecoordinates",{"_index":2261,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["fromcanvastoimagecoordinates(point",{"_index":2280,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["frontend",{"_index":2549,"title":{},"body":{"index.html":{}}}],["fs",{"_index":2450,"title":{},"body":{"dependencies.html":{}}}],["function",{"_index":2412,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":2473,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["fundus_data_toolkit.functional",{"_index":2592,"title":{},"body":{"index.html":{}}}],["fundus_lesions_toolkit.constants",{"_index":2594,"title":{},"body":{"index.html":{}}}],["fundus_lesions_toolkit.models.segmentation",{"_index":2589,"title":{},"body":{"index.html":{}}}],["fundus_odmac_toolkit.models.segmentation",{"_index":2596,"title":{},"body":{"index.html":{}}}],["g",{"_index":1472,"title":{},"body":{"injectables/OpenCVService.html":{},"miscellaneous/functions.html":{}}}],["g_cdf",{"_index":1518,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["g_cdf[i",{"_index":1522,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["gallery",{"_index":250,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["gallery'},{'name",{"_index":248,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["gallery.component.html",{"_index":837,"title":{},"body":{"components/GalleryComponent.html":{}}}],["gallery.component.scss",{"_index":838,"title":{},"body":{"components/GalleryComponent.html":{}}}],["gallerycomponent",{"_index":247,"title":{"components/GalleryComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["galleryelementcomponent",{"_index":249,"title":{"components/GalleryElementComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["gamma",{"_index":1038,"title":{},"body":{"injectables/ImageProcessingService.html":{},"injectables/OpenCVService.html":{},"components/ToolSettingComponent.html":{}}}],["gamma_inv",{"_index":1567,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["gammacorrection",{"_index":1360,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["gammacorrection(input",{"_index":1379,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["gaussian",{"_index":1544,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["generate_shades",{"_index":1139,"title":{},"body":{"components/InstanceLabelComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["generate_shades(hex",{"_index":2488,"title":{},"body":{"miscellaneous/functions.html":{}}}],["generate_shades(this.label.color",{"_index":1146,"title":{},"body":{"components/InstanceLabelComponent.html":{}}}],["generated",{"_index":2542,"title":{},"body":{"index.html":{}}}],["generatethumbnails",{"_index":1734,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["getactivecanvas",{"_index":409,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["getactivectx",{"_index":410,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["getactiveindex",{"_index":411,"title":{},"body":{"injectables/CanvasManagerService.html":{},"injectables/LabelsService.html":{}}}],["getactivesavepath",{"_index":905,"title":{},"body":{"injectables/IOService.html":{}}}],["getactivesavepath(imagename",{"_index":916,"title":{},"body":{"injectables/IOService.html":{}}}],["getallcanvas",{"_index":412,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["getallcanvasctx",{"_index":413,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["getattribute('classes",{"_index":966,"title":{},"body":{"injectables/IOService.html":{}}}],["getblockableelement",{"_index":336,"title":{},"body":{"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/LabelledSwitchComponent.html":{}}}],["getboundingbox",{"_index":1991,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["getbrushsizeoffset",{"_index":1992,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["getbuffercanvas",{"_index":414,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["getbufferctx",{"_index":415,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["getcanvascoordinates",{"_index":2262,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["getcanvascoordinates(event",{"_index":2282,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["getcombinedcanvas",{"_index":416,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["getcombinedctx",{"_index":417,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["getcontext('2d",{"_index":1667,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["getcurrentcanvas",{"_index":1049,"title":{},"body":{"injectables/ImageProcessingService.html":{},"injectables/PostProcessService.html":{}}}],["getdefaultcolor",{"_index":1770,"title":{},"body":{"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getdefaultcolor(index",{"_index":1938,"title":{},"body":{"injectables/ProjectService.html":{}}}],["getdefaultcolor(n",{"_index":2489,"title":{},"body":{"miscellaneous/functions.html":{}}}],["geteraserpathassvg",{"_index":1977,"title":{},"body":{"injectables/SVGUIService.html":{}}}],["getfillcolor",{"_index":578,"title":{},"body":{"injectables/DrawService.html":{}}}],["getimagecoordinates",{"_index":2263,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["getimagecoordinates(event",{"_index":2284,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["getimagedata",{"_index":1668,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["getimagedata(rect.x",{"_index":1695,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["getinterval",{"_index":842,"title":{},"body":{"components/GalleryComponent.html":{}}}],["getoffset",{"_index":2264,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["getscale",{"_index":2265,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["getshades",{"_index":1131,"title":{},"body":{"components/InstanceLabelComponent.html":{}}}],["getsvgviewbox",{"_index":2266,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["getthumbnail",{"_index":879,"title":{},"body":{"components/GalleryElementComponent.html":{}}}],["getting",{"_index":2491,"title":{"index.html":{}},"body":{}}],["gettransform",{"_index":2267,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["gettreenode",{"_index":1249,"title":{},"body":{"injectables/LabelsService.html":{}}}],["getviewbox",{"_index":2268,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["ghist",{"_index":1495,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["ghist.delete",{"_index":1513,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["gif|jpe?g|tiff?|png|webp|bmp",{"_index":2676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["given",{"_index":1416,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["glaucoma",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["gmax",{"_index":1528,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["gmin",{"_index":1523,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["gnorm_hist",{"_index":1507,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["gnorm_hist.delete",{"_index":1539,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["gonext",{"_index":1820,"title":{},"body":{"injectables/ProjectService.html":{}}}],["good",{"_index":187,"title":{},"body":{"components/AppComponent.html":{}}}],["goprevious",{"_index":1821,"title":{},"body":{"injectables/ProjectService.html":{}}}],["gradient",{"_index":1351,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["grading",{"_index":180,"title":{},"body":{"components/AppComponent.html":{}}}],["gray",{"_index":1588,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["gray.delete",{"_index":1609,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["grayscale",{"_index":1429,"title":{},"body":{"injectables/OpenCVService.html":{},"components/ToolSettingComponent.html":{}}}],["gryscale",{"_index":1117,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["h",{"_index":1722,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["haschild",{"_index":1194,"title":{},"body":{"components/LabelsComponent.html":{}}}],["haschild(node",{"_index":1208,"title":{},"body":{"components/LabelsComponent.html":{}}}],["hasemptyneighbor",{"_index":1457,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["height",{"_index":297,"title":{},"body":{"interfaces/BboxLabel.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"injectables/OpenCVService.html":{},"interfaces/Point2D.html":{},"interfaces/Point2D-1.html":{},"injectables/PostProcessService.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"interfaces/Rect.html":{},"interfaces/Rect-1.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"injectables/StateManagerService.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{},"interfaces/Viewbox-1.html":{},"injectables/ZoomPanService.html":{}}}],["hex",{"_index":1586,"title":{},"body":{"injectables/OpenCVService.html":{},"miscellaneous/functions.html":{}}}],["histogram",{"_index":2102,"title":{},"body":{"components/ToolSettingComponent.html":{}}}],["history",{"_index":1790,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["histsize",{"_index":1490,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["home/clement/documents/data/hmrformationrd",{"_index":2672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["home/clement/documents/tmp",{"_index":2674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["html",{"_index":229,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["htmlcanvaselement",{"_index":1056,"title":{},"body":{"injectables/ImageProcessingService.html":{},"injectables/OpenCVService.html":{},"injectables/ZoomPanService.html":{}}}],["htmlelement",{"_index":345,"title":{},"body":{"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/LabelledSwitchComponent.html":{}}}],["htmlimageelement",{"_index":1060,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["htmlinputelement).value",{"_index":559,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["http://www.w3.org/1999/xlink",{"_index":1027,"title":{},"body":{"injectables/IOService.html":{}}}],["hypertension",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["i).astype(np.uint8",{"_index":2618,"title":{},"body":{"index.html":{}}}],["i.e",{"_index":214,"title":{},"body":{"components/AppComponent.html":{}}}],["icon",{"_index":2055,"title":{},"body":{"classes/Tool.html":{},"classes/Tools.html":{}}}],["id",{"_index":384,"title":{},"body":{"injectables/CLIService.html":{},"interfaces/EventPayload.html":{},"components/GalleryElementComponent.html":{},"classes/Tool.html":{},"classes/Tools.html":{}}}],["idea",{"_index":216,"title":{},"body":{"components/AppComponent.html":{}}}],["identifier",{"_index":2388,"title":{},"body":{"coverage.html":{}}}],["if(!this.labelservice.listsegmentationlabels[index].isvisible",{"_index":481,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["if(!this.labelservice.multilabeltask",{"_index":555,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["if(element",{"_index":2216,"title":{},"body":{"classes/UndoRedoStack.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{}}}],["if(name",{"_index":554,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["if(this.contrast",{"_index":1112,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["if(this.editorservice.edgesonly",{"_index":483,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["if(this.gamma",{"_index":1114,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["if(this.labelservice.multilabeltask.tasklabels.includes(name",{"_index":556,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["if(this.reinforceedges",{"_index":1123,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["if(this.shades.length",{"_index":1144,"title":{},"body":{"components/InstanceLabelComponent.html":{}}}],["if(this.stretchhist",{"_index":1110,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["if(this.use_medianblur",{"_index":1120,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["image",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"injectables/CanvasManagerService.html":{},"injectables/IOService.html":{},"injectables/OpenCVService.html":{},"injectables/PostProcessService.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"index.html":{}}}],["image.cols",{"_index":1504,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["image.convertto(image",{"_index":1531,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["image.delete",{"_index":1542,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["image/png",{"_index":1005,"title":{},"body":{"injectables/IOService.html":{},"injectables/UndoRedoService.html":{}}}],["image/svg+xml",{"_index":954,"title":{},"body":{"injectables/IOService.html":{}}}],["image_name",{"_index":215,"title":{},"body":{"components/AppComponent.html":{}}}],["image_path",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"interfaces/BboxLabel.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{}}}],["image_path.split(this.projectservice.inputfolder)[1",{"_index":221,"title":{},"body":{"components/AppComponent.html":{}}}],["imagebitmap",{"_index":2174,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["imagebitmap.then((img",{"_index":2176,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["imageconfig",{"_index":69,"title":{},"body":{"components/AppComponent.html":{}}}],["imagedata",{"_index":1441,"title":{},"body":{"injectables/OpenCVService.html":{},"injectables/PostProcessService.html":{}}}],["imagedata(new",{"_index":1434,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["imagedata.buffer",{"_index":1698,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["imagedata.data",{"_index":1442,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["imageelements",{"_index":962,"title":{},"body":{"injectables/IOService.html":{}}}],["imagefromcli",{"_index":67,"title":{"interfaces/ImageFromCLI.html":{}},"body":{"components/AppComponent.html":{},"interfaces/BboxLabel.html":{},"injectables/CLIService.html":{},"interfaces/EventPayload.html":{},"injectables/IOService.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{},"coverage.html":{}}}],["imageinput",{"_index":895,"title":{},"body":{"components/GalleryElementComponent.html":{}}}],["imageloaded",{"_index":356,"title":{},"body":{"injectables/CLIService.html":{},"interfaces/EventPayload.html":{}}}],["imagename",{"_index":881,"title":{},"body":{"components/GalleryElementComponent.html":{},"injectables/IOService.html":{}}}],["imagepath",{"_index":878,"title":{},"body":{"components/GalleryElementComponent.html":{}}}],["imageprocess",{"_index":2091,"title":{},"body":{"components/ToolSettingComponent.html":{}}}],["imageprocessingservice",{"_index":1032,"title":{"injectables/ImageProcessingService.html":{}},"body":{"injectables/ImageProcessingService.html":{},"injectables/PostProcessService.html":{},"components/ToolSettingComponent.html":{},"coverage.html":{}}}],["images",{"_index":1928,"title":{},"body":{"injectables/ProjectService.html":{},"index.html":{}}}],["imagesname",{"_index":1806,"title":{},"body":{"injectables/ProjectService.html":{}}}],["imagex",{"_index":2340,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["imagey",{"_index":2341,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["img",{"_index":489,"title":{},"body":{"injectables/CanvasManagerService.html":{},"injectables/ImageProcessingService.html":{},"injectables/UndoRedoService.html":{},"index.html":{}}}],["img.height",{"_index":1090,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["img.onload",{"_index":493,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["img.src",{"_index":490,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["img.width",{"_index":1088,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["imgdata",{"_index":1425,"title":{},"body":{"injectables/OpenCVService.html":{},"injectables/PostProcessService.html":{}}}],["imgdata.buffer",{"_index":1673,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["implements",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/ToolbarComponent.html":{}}}],["import",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"injectables/BboxManagerService.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"components/ClassificationConfigurationComponent.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"interfaces/EventPayload.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"injectables/ImageProcessingService.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"interfaces/LabelFormat.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"components/LoadingComponent.html":{},"injectables/OpenCVService.html":{},"injectables/PostProcessService.html":{},"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{},"components/SVGElementsComponent.html":{},"injectables/SVGUIService.html":{},"injectables/StateManagerService.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UndoRedoService.html":{},"classes/UndoRedoStack.html":{},"injectables/ViewService.html":{},"injectables/ZoomPanService.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{},"index.html":{}}}],["importprovidersfrom(ngxopencvmodule.forroot(opencvconfig",{"_index":2666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["imports",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["increment",{"_index":2100,"title":{},"body":{"components/ToolSettingComponent.html":{}}}],["incrementactiveinstance",{"_index":1250,"title":{},"body":{"injectables/LabelsService.html":{}}}],["incrementafterstroke",{"_index":762,"title":{},"body":{"injectables/EditorService.html":{}}}],["index",{"_index":30,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"interfaces/BboxLabel.html":{},"injectables/BboxManagerService.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"components/ClassificationConfigurationComponent.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"interfaces/EventPayload.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"interfaces/ImageFromCLI.html":{},"injectables/ImageProcessingService.html":{},"components/InstanceLabelComponent.html":{},"interfaces/LabelFormat.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"components/LoadingComponent.html":{},"interfaces/MulticlassInterface.html":{},"classes/MulticlassTask.html":{},"interfaces/MultilabelInterface.html":{},"classes/MultilabelTask.html":{},"injectables/OpenCVService.html":{},"interfaces/Point2D.html":{},"interfaces/Point2D-1.html":{},"injectables/PostProcessService.html":{},"interfaces/ProjectConfig.html":{},"components/ProjectConfigurationComponent.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"interfaces/Rect-1.html":{},"components/SVGElementsComponent.html":{},"injectables/SVGUIService.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"injectables/StateManagerService.html":{},"interfaces/Thumbnail.html":{},"classes/Tool.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"classes/Tools.html":{},"interfaces/UndoRedoCanvasElement.html":{},"injectables/UndoRedoService.html":{},"classes/UndoRedoStack.html":{},"injectables/ViewService.html":{},"interfaces/Viewbox.html":{},"interfaces/Viewbox-1.html":{},"injectables/ZoomPanService.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["index:number):promise",{"_index":488,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["indication",{"_index":2122,"title":{},"body":{"components/ToolSettingComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"interfaces/BboxLabel.html":{},"injectables/BboxManagerService.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"components/ClassificationConfigurationComponent.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"interfaces/EventPayload.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"interfaces/ImageFromCLI.html":{},"injectables/ImageProcessingService.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"interfaces/LabelFormat.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"components/LoadingComponent.html":{},"interfaces/MulticlassInterface.html":{},"classes/MulticlassTask.html":{},"interfaces/MultilabelInterface.html":{},"classes/MultilabelTask.html":{},"injectables/OpenCVService.html":{},"interfaces/Point2D.html":{},"interfaces/Point2D-1.html":{},"injectables/PostProcessService.html":{},"interfaces/ProjectConfig.html":{},"components/ProjectConfigurationComponent.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"interfaces/Rect-1.html":{},"components/SVGElementsComponent.html":{},"injectables/SVGUIService.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"injectables/StateManagerService.html":{},"components/TestingComponent.html":{},"interfaces/Thumbnail.html":{},"classes/Tool.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"classes/Tools.html":{},"interfaces/UndoRedoCanvasElement.html":{},"injectables/UndoRedoService.html":{},"classes/UndoRedoStack.html":{},"injectables/ViewService.html":{},"interfaces/Viewbox.html":{},"interfaces/Viewbox-1.html":{},"injectables/ZoomPanService.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{}}}],["initcanvas",{"_index":418,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["initialize",{"_index":1614,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["initializelisteners",{"_index":358,"title":{},"body":{"injectables/CLIService.html":{},"interfaces/EventPayload.html":{}}}],["inject(projectservice",{"_index":2679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(router",{"_index":2680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectable",{"_index":322,"title":{"injectables/BboxManagerService.html":{},"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"injectables/IOService.html":{},"injectables/ImageProcessingService.html":{},"injectables/LabelsService.html":{},"injectables/OpenCVService.html":{},"injectables/PostProcessService.html":{},"injectables/ProjectService.html":{},"injectables/SVGUIService.html":{},"injectables/StateManagerService.html":{},"injectables/UndoRedoService.html":{},"injectables/ViewService.html":{},"injectables/ZoomPanService.html":{}},"body":{"injectables/BboxManagerService.html":{},"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"interfaces/EventPayload.html":{},"injectables/IOService.html":{},"injectables/ImageProcessingService.html":{},"injectables/LabelsService.html":{},"injectables/OpenCVService.html":{},"injectables/PostProcessService.html":{},"injectables/ProjectService.html":{},"injectables/SVGUIService.html":{},"injectables/StateManagerService.html":{},"injectables/UndoRedoService.html":{},"injectables/ViewService.html":{},"injectables/ZoomPanService.html":{},"coverage.html":{}}}],["injectables",{"_index":324,"title":{},"body":{"injectables/BboxManagerService.html":{},"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"injectables/IOService.html":{},"injectables/ImageProcessingService.html":{},"injectables/LabelsService.html":{},"injectables/OpenCVService.html":{},"injectables/PostProcessService.html":{},"injectables/ProjectService.html":{},"injectables/SVGUIService.html":{},"injectables/StateManagerService.html":{},"injectables/UndoRedoService.html":{},"injectables/ViewService.html":{},"injectables/ZoomPanService.html":{},"overview.html":{}}}],["input",{"_index":219,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/LabelledSwitchComponent.html":{},"injectables/OpenCVService.html":{},"injectables/PostProcessService.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{}}}],["input/output",{"_index":2522,"title":{},"body":{"index.html":{}}}],["input^(1/gamma",{"_index":1566,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["input_dir",{"_index":311,"title":{},"body":{"interfaces/BboxLabel.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{},"index.html":{}}}],["input_dir=str(path(input_dir).resolve",{"_index":2634,"title":{},"body":{"index.html":{}}}],["inputcolor",{"_index":614,"title":{},"body":{"injectables/DrawService.html":{}}}],["inputctx",{"_index":616,"title":{},"body":{"injectables/DrawService.html":{},"injectables/PostProcessService.html":{}}}],["inputctx.getimagedata",{"_index":1715,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["inputfolder",{"_index":1807,"title":{},"body":{"injectables/ProjectService.html":{}}}],["inputfundus",{"_index":2630,"title":{},"body":{"index.html":{}}}],["inputregex",{"_index":1808,"title":{},"body":{"injectables/ProjectService.html":{}}}],["inputs",{"_index":337,"title":{},"body":{"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/SVGElementsComponent.html":{}}}],["inputswitchmodule",{"_index":1164,"title":{},"body":{"components/LabelledSwitchComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["inputtextmodule",{"_index":509,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{},"components/ProjectConfigurationComponent.html":{}}}],["install",{"_index":2535,"title":{},"body":{"index.html":{}}}],["instance",{"_index":253,"title":{},"body":{"components/AppComponent.html":{},"interfaces/BboxLabel.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"injectables/DrawService.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"interfaces/ImageFromCLI.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"components/LoadingComponent.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/ProjectConfig.html":{},"components/ProjectConfigurationComponent.html":{},"interfaces/ProjectFile.html":{},"interfaces/Rect.html":{},"components/SVGElementsComponent.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"components/TestingComponent.html":{},"interfaces/Thumbnail.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{}}}],["instancelabelcomponent",{"_index":252,"title":{"components/InstanceLabelComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["instanceof",{"_index":390,"title":{},"body":{"injectables/CLIService.html":{},"interfaces/EventPayload.html":{},"components/LabelsComponent.html":{}}}],["instead",{"_index":666,"title":{},"body":{"injectables/DrawService.html":{}}}],["integrated",{"_index":2525,"title":{},"body":{"index.html":{}}}],["integration",{"_index":2559,"title":{},"body":{"index.html":{}}}],["inter",{"_index":2568,"title":{},"body":{"index.html":{}}}],["interactive",{"_index":256,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["interactivebboxcomponent",{"_index":255,"title":{"components/InteractiveBboxComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["interface",{"_index":279,"title":{"interfaces/BboxLabel.html":{},"interfaces/EventPayload.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/LabelFormat.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/Point2D-1.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"interfaces/Rect.html":{},"interfaces/Rect-1.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{},"interfaces/Viewbox-1.html":{}},"body":{"interfaces/BboxLabel.html":{},"injectables/CLIService.html":{},"interfaces/EventPayload.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/LabelFormat.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/Point2D-1.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"interfaces/Rect.html":{},"interfaces/Rect-1.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"classes/UndoRedoStack.html":{},"interfaces/Viewbox.html":{},"interfaces/Viewbox-1.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{},"coverage.html":{}}}],["interfaces",{"_index":281,"title":{},"body":{"interfaces/BboxLabel.html":{},"interfaces/EventPayload.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/LabelFormat.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/Point2D-1.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"interfaces/Rect.html":{},"interfaces/Rect-1.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{},"interfaces/Viewbox-1.html":{},"overview.html":{}}}],["interval",{"_index":866,"title":{},"body":{"components/GalleryComponent.html":{}}}],["intervalfunction",{"_index":839,"title":{},"body":{"components/GalleryComponent.html":{}}}],["inverse",{"_index":1701,"title":{},"body":{"injectables/PostProcessService.html":{},"components/ToolSettingComponent.html":{}}}],["invoke",{"_index":370,"title":{},"body":{"injectables/CLIService.html":{},"interfaces/EventPayload.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"interfaces/LabelFormat.html":{},"injectables/PostProcessService.html":{},"injectables/ProjectService.html":{}}}],["invoke('check_file_exists",{"_index":940,"title":{},"body":{"injectables/IOService.html":{}}}],["invoke('create_thumbnail",{"_index":899,"title":{},"body":{"components/GalleryElementComponent.html":{}}}],["invoke('crf_refine",{"_index":1671,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["invoke('event_processed",{"_index":383,"title":{},"body":{"injectables/CLIService.html":{},"interfaces/EventPayload.html":{}}}],["invoke('get_overlapping_region_with_mask",{"_index":1718,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["invoke('get_quad_tree_bbox",{"_index":1723,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["invoke('list_files_in_folder",{"_index":1906,"title":{},"body":{"injectables/ProjectService.html":{}}}],["invoke('load_xml_file",{"_index":946,"title":{},"body":{"injectables/IOService.html":{}}}],["invoke('otsu_segmentation",{"_index":1697,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["invoke('sam_segment",{"_index":1689,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["invokeloadjsonfile",{"_index":1863,"title":{},"body":{"injectables/ProjectService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["invokeloadjsonfile(filepath",{"_index":2478,"title":{},"body":{"miscellaneous/functions.html":{}}}],["invokeloadjsonfile(filepath).then((projectconfig",{"_index":1900,"title":{},"body":{"injectables/ProjectService.html":{}}}],["invokesavejsonfile",{"_index":2414,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["invokesavejsonfile(filepath",{"_index":2479,"title":{},"body":{"miscellaneous/functions.html":{}}}],["invokesavexmlfile",{"_index":936,"title":{},"body":{"injectables/IOService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["invokesavexmlfile(filepath",{"_index":2481,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ioservice",{"_index":52,"title":{"injectables/IOService.html":{}},"body":{"components/AppComponent.html":{},"injectables/IOService.html":{},"coverage.html":{}}}],["is_bbox_detection",{"_index":316,"title":{},"body":{"interfaces/BboxLabel.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{}}}],["is_classification",{"_index":314,"title":{},"body":{"interfaces/BboxLabel.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{}}}],["is_instance_segmentation",{"_index":315,"title":{},"body":{"interfaces/BboxLabel.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{}}}],["is_segmentation",{"_index":313,"title":{},"body":{"interfaces/BboxLabel.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{}}}],["isboundingboxdetection",{"_index":1809,"title":{},"body":{"injectables/ProjectService.html":{}}}],["isclassification",{"_index":1810,"title":{},"body":{"injectables/ProjectService.html":{}}}],["isdragging",{"_index":2252,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["isdrawing",{"_index":1986,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["isdrawingtool",{"_index":774,"title":{},"body":{"injectables/EditorService.html":{}}}],["isempty",{"_index":2375,"title":{},"body":{"classes/_RedoStack.html":{},"classes/_UndoStack.html":{}}}],["isempty():boolean",{"_index":2208,"title":{},"body":{"classes/UndoRedoStack.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{}}}],["iseraser",{"_index":775,"title":{},"body":{"injectables/EditorService.html":{}}}],["isfirststroke",{"_index":1993,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["isinputvalid",{"_index":1735,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["isinstancesegmentation",{"_index":1811,"title":{},"body":{"injectables/ProjectService.html":{}}}],["isloading",{"_index":2225,"title":{},"body":{"injectables/ViewService.html":{}}}],["isnamevalid",{"_index":1736,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["isoutputvalid",{"_index":1737,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["isprojectstarted",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"injectables/ProjectService.html":{}}}],["issegmentation",{"_index":1812,"title":{},"body":{"injectables/ProjectService.html":{}}}],["isstarted",{"_index":202,"title":{},"body":{"components/AppComponent.html":{}}}],["isstarted$.then",{"_index":204,"title":{},"body":{"components/AppComponent.html":{}}}],["istoolwithbrushsize",{"_index":776,"title":{},"body":{"injectables/EditorService.html":{}}}],["isupdated",{"_index":1039,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["isvisible",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"interfaces/BboxLabel.html":{},"injectables/IOService.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/ProjectConfig.html":{},"components/ProjectConfigurationComponent.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{}}}],["it's",{"_index":1076,"title":{},"body":{"injectables/ImageProcessingService.html":{},"injectables/OpenCVService.html":{}}}],["j",{"_index":564,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["join(this.inputfolder",{"_index":1918,"title":{},"body":{"injectables/ProjectService.html":{}}}],["json",{"_index":1901,"title":{},"body":{"injectables/ProjectService.html":{}}}],["json.parse",{"_index":1866,"title":{},"body":{"injectables/ProjectService.html":{}}}],["json.parse(projectconfig",{"_index":1902,"title":{},"body":{"injectables/ProjectService.html":{}}}],["json.stringify(this.localstoragesprojectsfilepaths",{"_index":1897,"title":{},"body":{"injectables/ProjectService.html":{}}}],["jsoncontent",{"_index":2480,"title":{},"body":{"miscellaneous/functions.html":{}}}],["kernel",{"_index":2106,"title":{},"body":{"components/ToolSettingComponent.html":{}}}],["kernel_size",{"_index":1040,"title":{},"body":{"injectables/ImageProcessingService.html":{},"injectables/OpenCVService.html":{}}}],["kernelsize",{"_index":1703,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["key",{"_index":2508,"title":{},"body":{"index.html":{}}}],["knobmodule",{"_index":836,"title":{},"body":{"components/GalleryComponent.html":{}}}],["l",{"_index":1292,"title":{},"body":{"injectables/LabelsService.html":{},"classes/MulticlassTask.html":{},"classes/MultilabelTask.html":{},"index.html":{}}}],["l.label",{"_index":1303,"title":{},"body":{"injectables/LabelsService.html":{}}}],["label",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"interfaces/BboxLabel.html":{},"components/ClassificationConfigurationComponent.html":{},"injectables/IOService.html":{},"interfaces/ImageFromCLI.html":{},"components/InstanceLabelComponent.html":{},"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"interfaces/MulticlassInterface.html":{},"classes/MulticlassTask.html":{},"interfaces/MultilabelInterface.html":{},"classes/MultilabelTask.html":{},"injectables/OpenCVService.html":{},"interfaces/Point2D.html":{},"injectables/PostProcessService.html":{},"interfaces/ProjectConfig.html":{},"components/ProjectConfigurationComponent.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{}}}],["label'},{'name",{"_index":254,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["label.component",{"_index":1218,"title":{},"body":{"components/LabelsComponent.html":{}}}],["label.component.html",{"_index":1128,"title":{},"body":{"components/InstanceLabelComponent.html":{}}}],["label.component.scss",{"_index":1129,"title":{},"body":{"components/InstanceLabelComponent.html":{}}}],["label.component.ts",{"_index":1127,"title":{},"body":{"components/InstanceLabelComponent.html":{},"coverage.html":{}}}],["label.component.ts:18",{"_index":1133,"title":{},"body":{"components/InstanceLabelComponent.html":{}}}],["label.component.ts:19",{"_index":1132,"title":{},"body":{"components/InstanceLabelComponent.html":{}}}],["label.component.ts:21",{"_index":1138,"title":{},"body":{"components/InstanceLabelComponent.html":{}}}],["label.component.ts:26",{"_index":1137,"title":{},"body":{"components/InstanceLabelComponent.html":{}}}],["label.component.ts:30",{"_index":1136,"title":{},"body":{"components/InstanceLabelComponent.html":{}}}],["label.component.ts:41",{"_index":1135,"title":{},"body":{"components/InstanceLabelComponent.html":{}}}],["label.copyto(output",{"_index":1634,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["label.delete",{"_index":1638,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["label.isvisible",{"_index":1232,"title":{},"body":{"components/LabelsComponent.html":{},"injectables/LabelsService.html":{}}}],["label.label",{"_index":1304,"title":{},"body":{"injectables/LabelsService.html":{},"injectables/ProjectService.html":{}}}],["label.setto(new",{"_index":1633,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["label.shades",{"_index":998,"title":{},"body":{"injectables/IOService.html":{}}}],["label.taskname",{"_index":562,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["label/instance",{"_index":1126,"title":{},"body":{"components/InstanceLabelComponent.html":{},"components/LabelsComponent.html":{},"coverage.html":{}}}],["labelcanvas",{"_index":404,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["labelcolor",{"_index":1620,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["labelcolors",{"_index":1369,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["labeldata",{"_index":1714,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["labeldata.buffer",{"_index":1719,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["labelformat",{"_index":927,"title":{"interfaces/LabelFormat.html":{}},"body":{"injectables/IOService.html":{},"interfaces/LabelFormat.html":{},"coverage.html":{}}}],["labelformat.masks.length",{"_index":1031,"title":{},"body":{"injectables/IOService.html":{}}}],["labeling",{"_index":2496,"title":{},"body":{"index.html":{}}}],["labelled",{"_index":259,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["labelledswitchcomponent",{"_index":258,"title":{"components/LabelledSwitchComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["labelmed",{"_index":2493,"title":{},"body":{"index.html":{}}}],["labelopacity",{"_index":763,"title":{},"body":{"injectables/EditorService.html":{}}}],["labels",{"_index":955,"title":{},"body":{"injectables/IOService.html":{},"interfaces/LabelFormat.html":{},"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"components/ToolbarComponent.html":{},"miscellaneous/functions.html":{}}}],["labels'},{'name",{"_index":262,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["labels.component.html",{"_index":1188,"title":{},"body":{"components/LabelsComponent.html":{}}}],["labels.component.scss",{"_index":1189,"title":{},"body":{"components/LabelsComponent.html":{}}}],["labels.multiclass",{"_index":964,"title":{},"body":{"injectables/IOService.html":{}}}],["labels.multilabel",{"_index":970,"title":{},"body":{"injectables/IOService.html":{}}}],["labels.service",{"_index":1862,"title":{},"body":{"injectables/ProjectService.html":{}}}],["labelscomponent",{"_index":261,"title":{"components/LabelsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["labelservice",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"injectables/CanvasManagerService.html":{},"components/ClassificationConfigurationComponent.html":{},"injectables/DrawService.html":{},"injectables/IOService.html":{},"components/InstanceLabelComponent.html":{},"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{},"components/SVGElementsComponent.html":{},"injectables/UndoRedoService.html":{}}}],["labelsservice",{"_index":47,"title":{"injectables/LabelsService.html":{}},"body":{"components/AppComponent.html":{},"injectables/CanvasManagerService.html":{},"components/ClassificationConfigurationComponent.html":{},"injectables/DrawService.html":{},"injectables/IOService.html":{},"components/InstanceLabelComponent.html":{},"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{},"components/SVGElementsComponent.html":{},"injectables/UndoRedoService.html":{},"coverage.html":{}}}],["labeltreenode",{"_index":1282,"title":{},"body":{"injectables/LabelsService.html":{}}}],["lara",{"_index":104,"title":{},"body":{"components/AppComponent.html":{}}}],["lasso",{"_index":2074,"title":{},"body":{"classes/Tool.html":{},"classes/Tools.html":{}}}],["lasso_eraser",{"_index":2077,"title":{},"body":{"classes/Tool.html":{},"classes/Tools.html":{}}}],["lassopoints",{"_index":567,"title":{},"body":{"injectables/DrawService.html":{}}}],["last",{"_index":212,"title":{},"body":{"components/AppComponent.html":{}}}],["left",{"_index":1463,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["legend",{"_index":228,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["len(classification_multilabel['classes']))).tolist",{"_index":2623,"title":{},"body":{"index.html":{}}}],["len(multilabel",{"_index":2627,"title":{},"body":{"index.html":{}}}],["lesions",{"_index":2595,"title":{},"body":{"index.html":{}}}],["lesions[1",{"_index":2600,"title":{},"body":{"index.html":{}}}],["library",{"_index":2564,"title":{},"body":{"index.html":{}}}],["linewidth",{"_index":764,"title":{},"body":{"injectables/EditorService.html":{}}}],["list",{"_index":1301,"title":{},"body":{"injectables/LabelsService.html":{},"injectables/ProjectService.html":{}}}],["list(path(root_folder).glob('*.jpeg",{"_index":2629,"title":{},"body":{"index.html":{}}}],["listbbox",{"_index":328,"title":{},"body":{"injectables/BboxManagerService.html":{}}}],["listclassificationtasks",{"_index":1243,"title":{},"body":{"injectables/LabelsService.html":{}}}],["listen",{"_index":368,"title":{},"body":{"injectables/CLIService.html":{},"interfaces/EventPayload.html":{}}}],["listen>('create_project",{"_index":376,"title":{},"body":{"injectables/CLIService.html":{},"interfaces/EventPayload.html":{}}}],["listen>('load_image",{"_index":395,"title":{},"body":{"injectables/CLIService.html":{},"interfaces/EventPayload.html":{}}}],["listens",{"_index":134,"title":{},"body":{"components/AppComponent.html":{}}}],["listfiles",{"_index":1822,"title":{},"body":{"injectables/ProjectService.html":{}}}],["listsegmentationlabels",{"_index":1244,"title":{},"body":{"injectables/LabelsService.html":{}}}],["load",{"_index":906,"title":{},"body":{"injectables/IOService.html":{},"components/ProjectConfigurationComponent.html":{}}}],["load_image",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["load_image(imageconfig",{"_index":66,"title":{},"body":{"components/AppComponent.html":{}}}],["loadallcanvas",{"_index":419,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["loadallcanvas(data",{"_index":445,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["loadcanvas",{"_index":420,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["loadcanvas(data",{"_index":447,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["loaded",{"_index":1160,"title":{},"body":{"interfaces/LabelFormat.html":{}}}],["loadexistingannotations",{"_index":907,"title":{},"body":{"injectables/IOService.html":{}}}],["loadimagefile",{"_index":889,"title":{},"body":{"components/GalleryElementComponent.html":{},"injectables/ProjectService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["loadimagefile(filepath",{"_index":1922,"title":{},"body":{"injectables/ProjectService.html":{},"miscellaneous/functions.html":{}}}],["loadimagefile(thumbnailpath",{"_index":901,"title":{},"body":{"components/GalleryElementComponent.html":{}}}],["loading",{"_index":1321,"title":{},"body":{"components/LoadingComponent.html":{},"injectables/OpenCVService.html":{},"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{}}}],["loading'},{'name",{"_index":263,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["loading.component.html",{"_index":1323,"title":{},"body":{"components/LoadingComponent.html":{}}}],["loading.component.scss",{"_index":1324,"title":{},"body":{"components/LoadingComponent.html":{}}}],["loadingcomponent",{"_index":20,"title":{"components/LoadingComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["loadingstatus",{"_index":2226,"title":{},"body":{"injectables/ViewService.html":{}}}],["loadnext",{"_index":908,"title":{},"body":{"injectables/IOService.html":{}}}],["loadprevious",{"_index":909,"title":{},"body":{"injectables/IOService.html":{}}}],["loadprojectfile",{"_index":1823,"title":{},"body":{"injectables/ProjectService.html":{}}}],["loadprojectfile(filepath",{"_index":1835,"title":{},"body":{"injectables/ProjectService.html":{}}}],["loadprojectfromfilepath",{"_index":1741,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["loadprojectfromfilepath(filepath",{"_index":1751,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["local",{"_index":2510,"title":{},"body":{"index.html":{}}}],["localhost",{"_index":135,"title":{},"body":{"components/AppComponent.html":{}}}],["locally",{"_index":2513,"title":{},"body":{"index.html":{}}}],["localstorage",{"_index":1889,"title":{},"body":{"injectables/ProjectService.html":{}}}],["localstorage.getitem('projects",{"_index":1867,"title":{},"body":{"injectables/ProjectService.html":{}}}],["localstorage.setitem",{"_index":1895,"title":{},"body":{"injectables/ProjectService.html":{}}}],["localstoragesprojectsfilepaths",{"_index":1813,"title":{},"body":{"injectables/ProjectService.html":{}}}],["loop",{"_index":1617,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["lowerbound",{"_index":1622,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["lowerbound.delete",{"_index":1636,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["lowerbound.setto(new",{"_index":1626,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["m",{"_index":1352,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["mac",{"_index":2602,"title":{},"body":{"index.html":{}}}],["manager.service",{"_index":457,"title":{},"body":{"injectables/CanvasManagerService.html":{},"injectables/DrawService.html":{},"injectables/IOService.html":{},"injectables/PostProcessService.html":{},"components/SVGElementsComponent.html":{},"injectables/UndoRedoService.html":{},"injectables/ZoomPanService.html":{}}}],["manager.service.ts",{"_index":327,"title":{},"body":{"injectables/BboxManagerService.html":{},"injectables/CanvasManagerService.html":{},"injectables/StateManagerService.html":{},"coverage.html":{}}}],["manager.service.ts:10",{"_index":2021,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["manager.service.ts:103",{"_index":435,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["manager.service.ts:108",{"_index":441,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["manager.service.ts:11",{"_index":2018,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["manager.service.ts:112",{"_index":443,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["manager.service.ts:116",{"_index":442,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["manager.service.ts:12",{"_index":329,"title":{},"body":{"injectables/BboxManagerService.html":{}}}],["manager.service.ts:120",{"_index":436,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["manager.service.ts:123",{"_index":438,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["manager.service.ts:127",{"_index":437,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["manager.service.ts:13",{"_index":455,"title":{},"body":{"injectables/CanvasManagerService.html":{},"injectables/StateManagerService.html":{}}}],["manager.service.ts:14",{"_index":452,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["manager.service.ts:15",{"_index":2017,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["manager.service.ts:16",{"_index":453,"title":{},"body":{"injectables/CanvasManagerService.html":{},"injectables/StateManagerService.html":{}}}],["manager.service.ts:17",{"_index":454,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["manager.service.ts:18",{"_index":2020,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["manager.service.ts:19",{"_index":450,"title":{},"body":{"injectables/CanvasManagerService.html":{},"injectables/StateManagerService.html":{}}}],["manager.service.ts:20",{"_index":451,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["manager.service.ts:21",{"_index":2002,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["manager.service.ts:22",{"_index":425,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["manager.service.ts:26",{"_index":2016,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["manager.service.ts:30",{"_index":2013,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["manager.service.ts:31",{"_index":444,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["manager.service.ts:34",{"_index":2011,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["manager.service.ts:39",{"_index":2008,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["manager.service.ts:44",{"_index":2007,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["manager.service.ts:47",{"_index":433,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["manager.service.ts:48",{"_index":2009,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["manager.service.ts:52",{"_index":2006,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["manager.service.ts:59",{"_index":2005,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["manager.service.ts:63",{"_index":432,"title":{},"body":{"injectables/CanvasManagerService.html":{},"injectables/StateManagerService.html":{}}}],["manager.service.ts:67",{"_index":448,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["manager.service.ts:75",{"_index":2003,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["manager.service.ts:80",{"_index":429,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["manager.service.ts:84",{"_index":449,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["manager.service.ts:86",{"_index":2004,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["manager.service.ts:88",{"_index":446,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["manager.service.ts:94",{"_index":439,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["manager.service.ts:98",{"_index":434,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["manually",{"_index":1800,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["markers",{"_index":2139,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mask",{"_index":1497,"title":{},"body":{"injectables/OpenCVService.html":{},"injectables/PostProcessService.html":{}}}],["mask.delete",{"_index":1635,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["mask_data",{"_index":320,"title":{},"body":{"interfaces/BboxLabel.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{}}}],["maskdata",{"_index":1659,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["maskdata.buffer",{"_index":1672,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["masks",{"_index":957,"title":{},"body":{"injectables/IOService.html":{},"interfaces/LabelFormat.html":{},"index.html":{}}}],["masksname",{"_index":956,"title":{},"body":{"injectables/IOService.html":{},"interfaces/LabelFormat.html":{}}}],["matching",{"_index":278,"title":{},"body":{"components/AppComponent.html":{},"interfaces/BboxLabel.html":{},"injectables/BboxManagerService.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"components/ClassificationConfigurationComponent.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"interfaces/EventPayload.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"interfaces/ImageFromCLI.html":{},"injectables/ImageProcessingService.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"interfaces/LabelFormat.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"components/LoadingComponent.html":{},"interfaces/MulticlassInterface.html":{},"classes/MulticlassTask.html":{},"interfaces/MultilabelInterface.html":{},"classes/MultilabelTask.html":{},"injectables/OpenCVService.html":{},"interfaces/Point2D.html":{},"interfaces/Point2D-1.html":{},"injectables/PostProcessService.html":{},"interfaces/ProjectConfig.html":{},"components/ProjectConfigurationComponent.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"interfaces/Rect-1.html":{},"components/SVGElementsComponent.html":{},"injectables/SVGUIService.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"injectables/StateManagerService.html":{},"components/TestingComponent.html":{},"interfaces/Thumbnail.html":{},"classes/Tool.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"classes/Tools.html":{},"interfaces/UndoRedoCanvasElement.html":{},"injectables/UndoRedoService.html":{},"classes/UndoRedoStack.html":{},"injectables/ViewService.html":{},"interfaces/Viewbox.html":{},"interfaces/Viewbox-1.html":{},"injectables/ZoomPanService.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":102,"title":{},"body":{"components/AppComponent.html":{}}}],["math.abs(this.targetoffset.x",{"_index":2369,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["math.abs(this.targetoffset.y",{"_index":2370,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["math.abs(this.targetscale",{"_index":2367,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["math.max(0",{"_index":2036,"title":{},"body":{"injectables/StateManagerService.html":{},"injectables/ZoomPanService.html":{}}}],["math.max(this.maxpoint.x",{"_index":2041,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["math.max(this.maxpoint.y",{"_index":2042,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["math.min(this.minpoint.x",{"_index":2037,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["math.min(this.minpoint.y",{"_index":2039,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["math.min(this.stateservice.height",{"_index":2357,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["math.min(this.stateservice.width",{"_index":2356,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["math.round((clientx",{"_index":2352,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["math.round((clienty",{"_index":2354,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["math.round(imagex",{"_index":2342,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["math.round(imagey",{"_index":2343,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["math.round(this.offset.x",{"_index":2319,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["math.round(this.offset.y",{"_index":2321,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["matrices",{"_index":1554,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["matrix",{"_index":1570,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["maxdepth",{"_index":1657,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["maxinstances",{"_index":1814,"title":{},"body":{"injectables/ProjectService.html":{}}}],["maxpoint",{"_index":1987,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["maxscale",{"_index":2253,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["med",{"_index":2117,"title":{},"body":{"components/ToolSettingComponent.html":{}}}],["median_blur",{"_index":1361,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["median_blur(input",{"_index":1381,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["medical",{"_index":2495,"title":{},"body":{"index.html":{}}}],["medsam",{"_index":2082,"title":{},"body":{"classes/Tool.html":{},"classes/Tools.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["memory",{"_index":1582,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["merge",{"_index":1289,"title":{},"body":{"injectables/LabelsService.html":{}}}],["message",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"injectables/ViewService.html":{}}}],["metadata",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["methods",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"components/ClassificationConfigurationComponent.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"injectables/ImageProcessingService.html":{},"components/InstanceLabelComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"classes/MultilabelTask.html":{},"injectables/OpenCVService.html":{},"injectables/PostProcessService.html":{},"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{},"components/SVGElementsComponent.html":{},"injectables/SVGUIService.html":{},"injectables/StateManagerService.html":{},"components/ToolbarComponent.html":{},"injectables/UndoRedoService.html":{},"classes/UndoRedoStack.html":{},"injectables/ViewService.html":{},"injectables/ZoomPanService.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{}}}],["mild",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["minpoint",{"_index":1988,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["minscale",{"_index":2254,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["minsize",{"_index":1656,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["miscellaneous",{"_index":2470,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ml",{"_index":2569,"title":{},"body":{"index.html":{}}}],["model",{"_index":2570,"title":{},"body":{"index.html":{}}}],["models",{"_index":627,"title":{},"body":{"injectables/DrawService.html":{},"injectables/SVGUIService.html":{},"injectables/StateManagerService.html":{},"injectables/ZoomPanService.html":{},"index.html":{}}}],["moderate",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["modules",{"_index":2650,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":1927,"title":{},"body":{"injectables/ProjectService.html":{}}}],["morphological",{"_index":1412,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["morphosize",{"_index":765,"title":{},"body":{"injectables/EditorService.html":{}}}],["mouseevent",{"_index":600,"title":{},"body":{"injectables/DrawService.html":{},"injectables/ZoomPanService.html":{}}}],["mouseevent).clientx",{"_index":2345,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["mouseevent).clienty",{"_index":2348,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["multi",{"_index":2516,"title":{},"body":{"index.html":{}}}],["multiclass",{"_index":959,"title":{},"body":{"injectables/IOService.html":{},"interfaces/LabelFormat.html":{},"index.html":{}}}],["multiclass_choices=multiclass",{"_index":2642,"title":{},"body":{"index.html":{}}}],["multiclasselements[0",{"_index":965,"title":{},"body":{"injectables/IOService.html":{}}}],["multiclassinterface",{"_index":306,"title":{"interfaces/MulticlassInterface.html":{}},"body":{"interfaces/BboxLabel.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{},"coverage.html":{}}}],["multiclasstask",{"_index":108,"title":{"classes/MulticlassTask.html":{}},"body":{"components/AppComponent.html":{},"injectables/LabelsService.html":{},"classes/MulticlassTask.html":{},"classes/MultilabelTask.html":{},"injectables/ProjectService.html":{},"coverage.html":{}}}],["multiclasstask('dr",{"_index":179,"title":{},"body":{"components/AppComponent.html":{}}}],["multiclasstask('quality",{"_index":186,"title":{},"body":{"components/AppComponent.html":{}}}],["multilabel",{"_index":960,"title":{},"body":{"injectables/IOService.html":{},"interfaces/LabelFormat.html":{},"index.html":{}}}],["multilabel_choices=multilabel",{"_index":2643,"title":{},"body":{"index.html":{}}}],["multilabelelements",{"_index":967,"title":{},"body":{"injectables/IOService.html":{}}}],["multilabelelements.length",{"_index":969,"title":{},"body":{"injectables/IOService.html":{}}}],["multilabelelements[0",{"_index":971,"title":{},"body":{"injectables/IOService.html":{}}}],["multilabelinterface",{"_index":308,"title":{"interfaces/MultilabelInterface.html":{}},"body":{"interfaces/BboxLabel.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{},"coverage.html":{}}}],["multilabeltask",{"_index":109,"title":{"classes/MultilabelTask.html":{}},"body":{"components/AppComponent.html":{},"components/ClassificationConfigurationComponent.html":{},"injectables/LabelsService.html":{},"classes/MulticlassTask.html":{},"classes/MultilabelTask.html":{},"injectables/ProjectService.html":{},"coverage.html":{}}}],["multilabeltask('misc",{"_index":191,"title":{},"body":{"components/AppComponent.html":{}}}],["multilabeltask('multilabel",{"_index":549,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["multiple",{"_index":1236,"title":{},"body":{"components/LabelsComponent.html":{},"injectables/OpenCVService.html":{},"index.html":{}}}],["myopia",{"_index":2609,"title":{},"body":{"index.html":{}}}],["n",{"_index":550,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{},"injectables/PostProcessService.html":{},"miscellaneous/functions.html":{}}}],["name",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"interfaces/BboxLabel.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"components/ClassificationConfigurationComponent.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"interfaces/ImageFromCLI.html":{},"injectables/ImageProcessingService.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"components/LoadingComponent.html":{},"interfaces/MulticlassInterface.html":{},"classes/MulticlassTask.html":{},"interfaces/MultilabelInterface.html":{},"classes/MultilabelTask.html":{},"injectables/OpenCVService.html":{},"interfaces/Point2D.html":{},"injectables/PostProcessService.html":{},"interfaces/ProjectConfig.html":{},"components/ProjectConfigurationComponent.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"components/SVGElementsComponent.html":{},"injectables/SVGUIService.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"injectables/StateManagerService.html":{},"components/TestingComponent.html":{},"interfaces/Thumbnail.html":{},"classes/Tool.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"classes/Tools.html":{},"interfaces/UndoRedoCanvasElement.html":{},"injectables/UndoRedoService.html":{},"classes/UndoRedoStack.html":{},"injectables/ViewService.html":{},"interfaces/Viewbox.html":{},"injectables/ZoomPanService.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["native",{"_index":2558,"title":{},"body":{"index.html":{}}}],["navigatetoeditor",{"_index":2229,"title":{},"body":{"injectables/ViewService.html":{}}}],["navigatetogallery",{"_index":2230,"title":{},"body":{"injectables/ViewService.html":{}}}],["need",{"_index":665,"title":{},"body":{"injectables/DrawService.html":{}}}],["needed",{"_index":151,"title":{},"body":{"components/AppComponent.html":{}}}],["neighbor",{"_index":1468,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["neighbors",{"_index":1453,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["nelements",{"_index":1030,"title":{},"body":{"injectables/IOService.html":{}}}],["new",{"_index":364,"title":{},"body":{"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"components/ClassificationConfigurationComponent.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"interfaces/EventPayload.html":{},"injectables/IOService.html":{},"components/LabelledSwitchComponent.html":{},"injectables/LabelsService.html":{},"injectables/OpenCVService.html":{},"injectables/PostProcessService.html":{},"injectables/ProjectService.html":{},"classes/Tool.html":{},"classes/Tools.html":{},"injectables/UndoRedoService.html":{},"classes/UndoRedoStack.html":{},"injectables/ZoomPanService.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["new_shade",{"_index":1318,"title":{},"body":{"injectables/LabelsService.html":{}}}],["newheight",{"_index":1725,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["newmask",{"_index":1708,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["newoffsetx",{"_index":2365,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["newoffsety",{"_index":2366,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["newscale",{"_index":2364,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["newwidth",{"_index":1724,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["ngafterviewinit",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/ToolbarComponent.html":{}}}],["ngclass",{"_index":335,"title":{},"body":{"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/InstanceLabelComponent.html":{},"components/ProjectConfigurationComponent.html":{}}}],["ngfor",{"_index":506,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{},"components/InstanceLabelComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{}}}],["ngif",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/ClassificationConfigurationComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/ToolSettingComponent.html":{}}}],["ngoninit",{"_index":843,"title":{},"body":{"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/LabelsComponent.html":{},"components/ProjectConfigurationComponent.html":{}}}],["ngstyle",{"_index":334,"title":{},"body":{"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{}}}],["ngswitch",{"_index":2088,"title":{},"body":{"components/ToolSettingComponent.html":{}}}],["ngx",{"_index":1397,"title":{},"body":{"injectables/OpenCVService.html":{},"dependencies.html":{}}}],["ngxopencv",{"_index":1366,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["ngxopencvservice",{"_index":1364,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["ngzone",{"_index":360,"title":{},"body":{"injectables/CLIService.html":{},"interfaces/EventPayload.html":{}}}],["node",{"_index":1205,"title":{},"body":{"components/LabelsComponent.html":{}}}],["node.children",{"_index":1222,"title":{},"body":{"components/LabelsComponent.html":{}}}],["node.children.length",{"_index":1223,"title":{},"body":{"components/LabelsComponent.html":{}}}],["node.data",{"_index":1230,"title":{},"body":{"components/LabelsComponent.html":{}}}],["node.js",{"_index":2531,"title":{},"body":{"index.html":{}}}],["node.label",{"_index":1238,"title":{},"body":{"components/LabelsComponent.html":{}}}],["nodejs.timeout",{"_index":850,"title":{},"body":{"components/GalleryComponent.html":{}}}],["none",{"_index":2626,"title":{},"body":{"index.html":{}}}],["nora",{"_index":106,"title":{},"body":{"components/AppComponent.html":{}}}],["normalize",{"_index":1560,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["now",{"_index":742,"title":{},"body":{"injectables/DrawService.html":{}}}],["np",{"_index":2588,"title":{},"body":{"index.html":{}}}],["np.random.choice(classification_multilabel['classes",{"_index":2621,"title":{},"body":{"index.html":{}}}],["np.random.choice(classifications_classes[0]['classes",{"_index":2624,"title":{},"body":{"index.html":{}}}],["npm",{"_index":2532,"title":{},"body":{"index.html":{}}}],["null",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"interfaces/BboxLabel.html":{},"injectables/DrawService.html":{},"injectables/IOService.html":{},"interfaces/ImageFromCLI.html":{},"injectables/ImageProcessingService.html":{},"interfaces/LabelFormat.html":{},"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"injectables/OpenCVService.html":{},"interfaces/Point2D.html":{},"interfaces/ProjectConfig.html":{},"components/ProjectConfigurationComponent.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{}}}],["number",{"_index":285,"title":{},"body":{"interfaces/BboxLabel.html":{},"injectables/CanvasManagerService.html":{},"components/ClassificationConfigurationComponent.html":{},"injectables/EditorService.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"interfaces/ImageFromCLI.html":{},"injectables/ImageProcessingService.html":{},"components/InstanceLabelComponent.html":{},"injectables/LabelsService.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"injectables/OpenCVService.html":{},"interfaces/Point2D.html":{},"interfaces/Point2D-1.html":{},"injectables/PostProcessService.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"interfaces/Rect-1.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"injectables/StateManagerService.html":{},"interfaces/Thumbnail.html":{},"classes/Tool.html":{},"classes/Tools.html":{},"interfaces/UndoRedoCanvasElement.html":{},"injectables/ViewService.html":{},"interfaces/Viewbox.html":{},"interfaces/Viewbox-1.html":{},"injectables/ZoomPanService.html":{},"miscellaneous/functions.html":{}}}],["number.max_value",{"_index":2019,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["numiterations",{"_index":1678,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["numpy",{"_index":2587,"title":{},"body":{"index.html":{}}}],["object",{"_index":1639,"title":{},"body":{"injectables/OpenCVService.html":{},"miscellaneous/variables.html":{}}}],["occurred",{"_index":393,"title":{},"body":{"injectables/CLIService.html":{},"interfaces/EventPayload.html":{}}}],["od",{"_index":2601,"title":{},"body":{"index.html":{}}}],["od_mask",{"_index":2615,"title":{},"body":{"index.html":{}}}],["offscreencanvas",{"_index":440,"title":{},"body":{"injectables/CanvasManagerService.html":{},"injectables/ImageProcessingService.html":{},"injectables/OpenCVService.html":{}}}],["offscreencanvas(0",{"_index":1392,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["offscreencanvas(this.stateservice.width",{"_index":464,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["offscreencanvas(width",{"_index":1444,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["offscreencanvasrenderingcontext2d",{"_index":428,"title":{},"body":{"injectables/CanvasManagerService.html":{},"injectables/DrawService.html":{},"injectables/OpenCVService.html":{}}}],["offset",{"_index":2034,"title":{},"body":{"injectables/StateManagerService.html":{},"injectables/ZoomPanService.html":{}}}],["offsetx",{"_index":2290,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["offsety",{"_index":2291,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["one",{"_index":1466,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["oninit",{"_index":832,"title":{},"body":{"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/LabelsComponent.html":{},"components/ProjectConfigurationComponent.html":{}}}],["onnx",{"_index":2560,"title":{},"body":{"index.html":{}}}],["opacity",{"_index":1237,"title":{},"body":{"components/LabelsComponent.html":{}}}],["opaque",{"_index":1602,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["open",{"_index":1765,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["open_image",{"_index":2593,"title":{},"body":{"index.html":{}}}],["open_image(filepath",{"_index":2612,"title":{},"body":{"index.html":{}}}],["opencv",{"_index":1398,"title":{},"body":{"injectables/OpenCVService.html":{},"dependencies.html":{},"index.html":{}}}],["opencv.js",{"_index":1078,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["opencvconfig",{"_index":2428,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["opencvdirpath",{"_index":2667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["opencvservice",{"_index":424,"title":{"injectables/OpenCVService.html":{}},"body":{"injectables/CanvasManagerService.html":{},"injectables/DrawService.html":{},"injectables/ImageProcessingService.html":{},"injectables/OpenCVService.html":{},"coverage.html":{}}}],["opencvstate",{"_index":1396,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["openeditor",{"_index":880,"title":{},"body":{"components/GalleryElementComponent.html":{},"injectables/ProjectService.html":{}}}],["openeditor(index",{"_index":1837,"title":{},"body":{"injectables/ProjectService.html":{}}}],["opening",{"_index":1699,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["openinputfolder",{"_index":1742,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["openoutputfolder",{"_index":1743,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["openpromise",{"_index":1917,"title":{},"body":{"injectables/ProjectService.html":{}}}],["operations",{"_index":2511,"title":{},"body":{"index.html":{}}}],["optimal",{"_index":2547,"title":{},"body":{"index.html":{}}}],["optional",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"components/ClassificationConfigurationComponent.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"injectables/ImageProcessingService.html":{},"components/InstanceLabelComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"components/LoadingComponent.html":{},"classes/MulticlassTask.html":{},"classes/MultilabelTask.html":{},"injectables/OpenCVService.html":{},"injectables/PostProcessService.html":{},"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{},"components/SVGElementsComponent.html":{},"injectables/SVGUIService.html":{},"injectables/StateManagerService.html":{},"classes/Tool.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UndoRedoService.html":{},"classes/UndoRedoStack.html":{},"injectables/ViewService.html":{},"injectables/ZoomPanService.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":117,"title":{},"body":{"components/AppComponent.html":{}}}],["order",{"_index":121,"title":{},"body":{"components/AppComponent.html":{}}}],["original",{"_index":1548,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["others",{"_index":2607,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":668,"title":{},"body":{"injectables/DrawService.html":{}}}],["otsu",{"_index":808,"title":{},"body":{"injectables/EditorService.html":{},"classes/Tool.html":{},"classes/Tools.html":{},"miscellaneous/enumerations.html":{}}}],["otsu_post_process",{"_index":1648,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["out",{"_index":689,"title":{},"body":{"injectables/DrawService.html":{},"injectables/PostProcessService.html":{}}}],["outcanvas",{"_index":1443,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["outcanvas.getcontext('2d",{"_index":1446,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["outctx",{"_index":1445,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["outctx.createimagedata(width",{"_index":1448,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["outctx.putimagedata(outimagedata",{"_index":1476,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["outdata",{"_index":1449,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["outdata[idx",{"_index":1469,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["outimagedata",{"_index":1447,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["outimagedata.data",{"_index":1450,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["output",{"_index":1177,"title":{},"body":{"components/LabelledSwitchComponent.html":{},"injectables/OpenCVService.html":{},"components/ProjectConfigurationComponent.html":{},"index.html":{}}}],["output.delete",{"_index":1612,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["output_dir",{"_index":312,"title":{},"body":{"interfaces/BboxLabel.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{},"index.html":{}}}],["output_dir=str(path(output_dir).resolve",{"_index":2635,"title":{},"body":{"index.html":{}}}],["outputcanvas",{"_index":1353,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["outputctx",{"_index":1354,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["outputfolder",{"_index":1815,"title":{},"body":{"injectables/ProjectService.html":{}}}],["outputs",{"_index":1169,"title":{},"body":{"components/LabelledSwitchComponent.html":{}}}],["over",{"_index":672,"title":{},"body":{"injectables/DrawService.html":{},"injectables/PostProcessService.html":{}}}],["overlap",{"_index":731,"title":{},"body":{"injectables/DrawService.html":{}}}],["overlapped",{"_index":744,"title":{},"body":{"injectables/DrawService.html":{}}}],["overview",{"_index":2583,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":350,"title":{},"body":{"components/BlockableP.html":{}}}],["p'},{'name",{"_index":238,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["package",{"_index":2434,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["pan",{"_index":2064,"title":{},"body":{"classes/Tool.html":{},"classes/Tools.html":{}}}],["pan.service",{"_index":629,"title":{},"body":{"injectables/DrawService.html":{}}}],["pan.service.ts",{"_index":2249,"title":{},"body":{"injectables/ZoomPanService.html":{},"coverage.html":{}}}],["pan.service.ts:10",{"_index":2306,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["pan.service.ts:11",{"_index":2311,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["pan.service.ts:119",{"_index":2285,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["pan.service.ts:12",{"_index":2310,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["pan.service.ts:13",{"_index":2307,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["pan.service.ts:14",{"_index":2309,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["pan.service.ts:144",{"_index":2289,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["pan.service.ts:15",{"_index":2313,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["pan.service.ts:152",{"_index":2299,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["pan.service.ts:16",{"_index":2312,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["pan.service.ts:168",{"_index":2295,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["pan.service.ts:17",{"_index":2305,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["pan.service.ts:18",{"_index":2303,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["pan.service.ts:185",{"_index":2300,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["pan.service.ts:19",{"_index":2304,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["pan.service.ts:209",{"_index":2301,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["pan.service.ts:21",{"_index":2274,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["pan.service.ts:213",{"_index":2302,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["pan.service.ts:233",{"_index":2287,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["pan.service.ts:237",{"_index":2286,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["pan.service.ts:25",{"_index":2297,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["pan.service.ts:29",{"_index":2278,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["pan.service.ts:33",{"_index":2275,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["pan.service.ts:37",{"_index":2292,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["pan.service.ts:60",{"_index":2288,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["pan.service.ts:68",{"_index":2277,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["pan.service.ts:89",{"_index":2279,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["pan.service.ts:93",{"_index":2281,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["pan.service.ts:99",{"_index":2283,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["panelmodule",{"_index":834,"title":{},"body":{"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/LabelsComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["parameters",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"components/ClassificationConfigurationComponent.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"injectables/ImageProcessingService.html":{},"components/InstanceLabelComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"components/LoadingComponent.html":{},"classes/MulticlassTask.html":{},"classes/MultilabelTask.html":{},"injectables/OpenCVService.html":{},"injectables/PostProcessService.html":{},"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{},"components/SVGElementsComponent.html":{},"injectables/SVGUIService.html":{},"injectables/StateManagerService.html":{},"classes/Tool.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UndoRedoService.html":{},"classes/UndoRedoStack.html":{},"injectables/ViewService.html":{},"injectables/ZoomPanService.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{},"miscellaneous/functions.html":{}}}],["parse",{"_index":947,"title":{},"body":{"injectables/IOService.html":{}}}],["parser",{"_index":950,"title":{},"body":{"injectables/IOService.html":{},"interfaces/LabelFormat.html":{},"dependencies.html":{}}}],["parser.parsefromstring(response",{"_index":953,"title":{},"body":{"injectables/IOService.html":{}}}],["path",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{},"injectables/SVGUIService.html":{},"dependencies.html":{},"index.html":{}}}],["path.join(filepath",{"_index":1785,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["path.join(this.outputfolder",{"_index":1876,"title":{},"body":{"injectables/ProjectService.html":{}}}],["path.resolve(imageconfig.image_path",{"_index":208,"title":{},"body":{"components/AppComponent.html":{}}}],["path.resolve(this.inputfolder",{"_index":1869,"title":{},"body":{"injectables/ProjectService.html":{}}}],["path.resolve(this.outputfolder",{"_index":1874,"title":{},"body":{"injectables/ProjectService.html":{}}}],["path.resolve(this.projectservice.inputfolder",{"_index":896,"title":{},"body":{"components/GalleryElementComponent.html":{}}}],["path.sep",{"_index":1871,"title":{},"body":{"injectables/ProjectService.html":{}}}],["pathlib",{"_index":2585,"title":{},"body":{"index.html":{}}}],["payload",{"_index":146,"title":{},"body":{"components/AppComponent.html":{}}}],["pen",{"_index":2069,"title":{},"body":{"classes/Tool.html":{},"classes/Tools.html":{}}}],["pencil",{"_index":2071,"title":{},"body":{"classes/Tool.html":{},"classes/Tools.html":{}}}],["percent",{"_index":1520,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["percentagebeforerefresh",{"_index":840,"title":{},"body":{"components/GalleryComponent.html":{}}}],["perform",{"_index":1573,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["performance",{"_index":2548,"title":{},"body":{"index.html":{}}}],["performance.now",{"_index":1670,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["pi",{"_index":2066,"title":{},"body":{"classes/Tool.html":{},"classes/Tools.html":{}}}],["pixel",{"_index":1465,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["pixels",{"_index":1452,"title":{},"body":{"injectables/OpenCVService.html":{},"components/ToolSettingComponent.html":{}}}],["point",{"_index":1556,"title":{},"body":{"injectables/OpenCVService.html":{},"injectables/SVGUIService.html":{},"injectables/StateManagerService.html":{},"injectables/ZoomPanService.html":{}}}],["point.x",{"_index":2038,"title":{},"body":{"injectables/StateManagerService.html":{},"injectables/ZoomPanService.html":{}}}],["point.y",{"_index":2040,"title":{},"body":{"injectables/StateManagerService.html":{},"injectables/ZoomPanService.html":{}}}],["point2d",{"_index":293,"title":{"interfaces/Point2D.html":{},"interfaces/Point2D-1.html":{}},"body":{"interfaces/BboxLabel.html":{},"injectables/DrawService.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/Point2D-1.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"interfaces/Rect.html":{},"interfaces/Rect-1.html":{},"components/SVGElementsComponent.html":{},"injectables/SVGUIService.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"injectables/StateManagerService.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{},"interfaces/Viewbox-1.html":{},"injectables/ZoomPanService.html":{},"coverage.html":{}}}],["point2d).x",{"_index":2346,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["point2d).y",{"_index":2349,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["pop",{"_index":2211,"title":{},"body":{"classes/UndoRedoStack.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{}}}],["port",{"_index":136,"title":{},"body":{"components/AppComponent.html":{}}}],["post",{"_index":633,"title":{},"body":{"injectables/DrawService.html":{},"injectables/ImageProcessingService.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["postprocess",{"_index":1649,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["postprocesscallback",{"_index":650,"title":{},"body":{"injectables/DrawService.html":{}}}],["postprocesscallback?.then",{"_index":656,"title":{},"body":{"injectables/DrawService.html":{}}}],["postprocessdraw",{"_index":579,"title":{},"body":{"injectables/DrawService.html":{}}}],["postprocesserase",{"_index":580,"title":{},"body":{"injectables/DrawService.html":{}}}],["postprocessingoptions",{"_index":2084,"title":{},"body":{"classes/Tool.html":{},"components/ToolSettingComponent.html":{},"classes/Tools.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["postprocessoption",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"classes/Tool.html":{},"components/ToolSettingComponent.html":{},"classes/Tools.html":{},"miscellaneous/enumerations.html":{}}}],["postprocessoption.crf",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"injectables/DrawService.html":{},"classes/Tool.html":{},"classes/Tools.html":{},"miscellaneous/variables.html":{}}}],["postprocessoption.medsam",{"_index":707,"title":{},"body":{"injectables/DrawService.html":{},"classes/Tool.html":{},"classes/Tools.html":{},"miscellaneous/variables.html":{}}}],["postprocessoption.otsu",{"_index":705,"title":{},"body":{"injectables/DrawService.html":{},"classes/Tool.html":{},"classes/Tools.html":{},"miscellaneous/variables.html":{}}}],["postprocessservice",{"_index":589,"title":{"injectables/PostProcessService.html":{}},"body":{"injectables/DrawService.html":{},"injectables/ImageProcessingService.html":{},"injectables/PostProcessService.html":{},"coverage.html":{}}}],["powerful",{"_index":2494,"title":{},"body":{"index.html":{}}}],["ppoption",{"_index":2092,"title":{},"body":{"components/ToolSettingComponent.html":{}}}],["precise",{"_index":1557,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["preprocess",{"_index":1050,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["preprocessimage",{"_index":1041,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["preprocessing",{"_index":2529,"title":{},"body":{"index.html":{}}}],["prerequisites",{"_index":2530,"title":{},"body":{"index.html":{}}}],["preset",{"_index":116,"title":{},"body":{"components/AppComponent.html":{}}}],["previouspoint",{"_index":1989,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["primeflex",{"_index":2457,"title":{},"body":{"dependencies.html":{}}}],["primeicons",{"_index":2459,"title":{},"body":{"dependencies.html":{}}}],["primeng",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["primeng/api",{"_index":346,"title":{},"body":{"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"injectables/LabelsService.html":{}}}],["primeng/blockui",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/ToolbarComponent.html":{}}}],["primeng/button",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/LabelsComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/ToolbarComponent.html":{}}}],["primeng/card",{"_index":888,"title":{},"body":{"components/GalleryElementComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/ToolSettingComponent.html":{}}}],["primeng/checkbox",{"_index":541,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{},"components/ProjectConfigurationComponent.html":{}}}],["primeng/colorpicker",{"_index":1216,"title":{},"body":{"components/LabelsComponent.html":{},"components/ProjectConfigurationComponent.html":{}}}],["primeng/config",{"_index":99,"title":{},"body":{"components/AppComponent.html":{}}}],["primeng/dataview",{"_index":859,"title":{},"body":{"components/GalleryComponent.html":{}}}],["primeng/divider",{"_index":543,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{},"components/LabelsComponent.html":{},"components/ProjectConfigurationComponent.html":{}}}],["primeng/fieldset",{"_index":542,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{},"components/LabelsComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/ToolSettingComponent.html":{}}}],["primeng/floatlabel",{"_index":1764,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["primeng/inputswitch",{"_index":1179,"title":{},"body":{"components/LabelledSwitchComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["primeng/inputtext",{"_index":544,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{},"components/ProjectConfigurationComponent.html":{}}}],["primeng/knob",{"_index":860,"title":{},"body":{"components/GalleryComponent.html":{}}}],["primeng/panel",{"_index":858,"title":{},"body":{"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/LabelsComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["primeng/progressbar",{"_index":1327,"title":{},"body":{"components/LoadingComponent.html":{}}}],["primeng/selectbutton",{"_index":1219,"title":{},"body":{"components/LabelsComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["primeng/slider",{"_index":1217,"title":{},"body":{"components/LabelsComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["primeng/table",{"_index":1772,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["primeng/tag",{"_index":545,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["primeng/themes",{"_index":2446,"title":{},"body":{"dependencies.html":{}}}],["primeng/themes/aura",{"_index":101,"title":{},"body":{"components/AppComponent.html":{}}}],["primeng/themes/lara",{"_index":105,"title":{},"body":{"components/AppComponent.html":{}}}],["primeng/themes/material",{"_index":103,"title":{},"body":{"components/AppComponent.html":{}}}],["primeng/themes/nora",{"_index":107,"title":{},"body":{"components/AppComponent.html":{}}}],["primeng/toolbar",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/ToolbarComponent.html":{}}}],["primeng/tree",{"_index":1215,"title":{},"body":{"components/LabelsComponent.html":{}}}],["primeui",{"_index":2464,"title":{},"body":{"dependencies.html":{}}}],["prioritizes",{"_index":2502,"title":{},"body":{"index.html":{}}}],["privacy",{"_index":2503,"title":{},"body":{"index.html":{}}}],["private",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"injectables/DrawService.html":{},"interfaces/EventPayload.html":{},"injectables/IOService.html":{},"injectables/ImageProcessingService.html":{},"injectables/LabelsService.html":{},"injectables/PostProcessService.html":{},"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{},"components/ToolbarComponent.html":{},"injectables/UndoRedoService.html":{},"injectables/ZoomPanService.html":{}}}],["process",{"_index":2142,"title":{},"body":{"components/ToolbarComponent.html":{},"index.html":{}}}],["process.service",{"_index":634,"title":{},"body":{"injectables/DrawService.html":{},"injectables/ImageProcessingService.html":{}}}],["process.service.ts",{"_index":1643,"title":{},"body":{"injectables/PostProcessService.html":{},"coverage.html":{}}}],["process.service.ts:124",{"_index":1661,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["process.service.ts:14",{"_index":1652,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["process.service.ts:171",{"_index":1660,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["process.service.ts:221",{"_index":1658,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["process.service.ts:24",{"_index":1662,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["process.service.ts:26",{"_index":1653,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["process.service.ts:72",{"_index":1663,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["processed",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"components/ProjectConfigurationComponent.html":{}}}],["processedimagedata",{"_index":1433,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["processes",{"_index":2576,"title":{},"body":{"index.html":{}}}],["processing",{"_index":661,"title":{},"body":{"injectables/DrawService.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"index.html":{}}}],["processing.service",{"_index":1664,"title":{},"body":{"injectables/PostProcessService.html":{},"components/ToolSettingComponent.html":{}}}],["processing.service.ts",{"_index":1034,"title":{},"body":{"injectables/ImageProcessingService.html":{},"coverage.html":{}}}],["processing.service.ts:11",{"_index":1070,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["processing.service.ts:12",{"_index":1069,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["processing.service.ts:14",{"_index":1068,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["processing.service.ts:16",{"_index":1072,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["processing.service.ts:17",{"_index":1073,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["processing.service.ts:18",{"_index":1063,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["processing.service.ts:19",{"_index":1062,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["processing.service.ts:21",{"_index":1065,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["processing.service.ts:23",{"_index":1071,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["processing.service.ts:25",{"_index":1067,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["processing.service.ts:26",{"_index":1066,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["processing.service.ts:27",{"_index":1064,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["processing.service.ts:28",{"_index":1053,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["processing.service.ts:34",{"_index":1058,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["processing.service.ts:39",{"_index":1055,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["processing.service.ts:54",{"_index":1061,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["processing.service.ts:67",{"_index":1054,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["processing.service.ts:76",{"_index":1057,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["production",{"_index":2539,"title":{},"body":{"index.html":{}}}],["progressbarmodule",{"_index":1322,"title":{},"body":{"components/LoadingComponent.html":{}}}],["project",{"_index":265,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["project(project_name=\"funduslesions",{"_index":2633,"title":{},"body":{"index.html":{}}}],["project/labels.service",{"_index":931,"title":{},"body":{"injectables/IOService.html":{}}}],["project/project.service",{"_index":930,"title":{},"body":{"injectables/IOService.html":{}}}],["project_config.json",{"_index":1786,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["project_name",{"_index":310,"title":{},"body":{"interfaces/BboxLabel.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{}}}],["projectconfig",{"_index":309,"title":{"interfaces/ProjectConfig.html":{}},"body":{"interfaces/BboxLabel.html":{},"injectables/CLIService.html":{},"interfaces/EventPayload.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["projectconfigurationcomponent",{"_index":264,"title":{"components/ProjectConfigurationComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["projectcreated",{"_index":357,"title":{},"body":{"injectables/CLIService.html":{},"interfaces/EventPayload.html":{}}}],["projectfile",{"_index":321,"title":{"interfaces/ProjectFile.html":{}},"body":{"interfaces/BboxLabel.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{},"coverage.html":{}}}],["projectfile.root",{"_index":1892,"title":{},"body":{"injectables/ProjectService.html":{}}}],["projectfolder",{"_index":1816,"title":{},"body":{"injectables/ProjectService.html":{}}}],["projectname",{"_index":1817,"title":{},"body":{"injectables/ProjectService.html":{}}}],["projectname/config",{"_index":1888,"title":{},"body":{"injectables/ProjectService.html":{}}}],["projects",{"_index":1896,"title":{},"body":{"injectables/ProjectService.html":{}}}],["projectservice",{"_index":34,"title":{"injectables/ProjectService.html":{}},"body":{"components/AppComponent.html":{},"injectables/DrawService.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"components/InstanceLabelComponent.html":{},"components/LabelsComponent.html":{},"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{},"components/ToolSettingComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["projectservice.inputfolder",{"_index":211,"title":{},"body":{"components/AppComponent.html":{}}}],["projectservice.isprojectstarted",{"_index":2682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projectservice:projectservice",{"_index":1141,"title":{},"body":{"components/InstanceLabelComponent.html":{}}}],["projectstartedguard",{"_index":2421,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["proliferative",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["promise",{"_index":291,"title":{},"body":{"interfaces/BboxLabel.html":{},"injectables/CanvasManagerService.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"injectables/UndoRedoService.html":{},"interfaces/Viewbox.html":{},"miscellaneous/functions.html":{}}}],["promise((resolve",{"_index":491,"title":{},"body":{"injectables/CanvasManagerService.html":{},"injectables/DrawService.html":{}}}],["promise.all(allpromises",{"_index":1014,"title":{},"body":{"injectables/IOService.html":{}}}],["promise.all(allpromises).then((blobs",{"_index":2188,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["promise.resolve('no",{"_index":1926,"title":{},"body":{"injectables/ProjectService.html":{}}}],["properties",{"_index":31,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"interfaces/BboxLabel.html":{},"injectables/BboxManagerService.html":{},"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"components/ClassificationConfigurationComponent.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"interfaces/EventPayload.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"interfaces/ImageFromCLI.html":{},"injectables/ImageProcessingService.html":{},"components/InstanceLabelComponent.html":{},"interfaces/LabelFormat.html":{},"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"components/LoadingComponent.html":{},"interfaces/MulticlassInterface.html":{},"classes/MulticlassTask.html":{},"interfaces/MultilabelInterface.html":{},"classes/MultilabelTask.html":{},"injectables/OpenCVService.html":{},"interfaces/Point2D.html":{},"interfaces/Point2D-1.html":{},"injectables/PostProcessService.html":{},"interfaces/ProjectConfig.html":{},"components/ProjectConfigurationComponent.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"interfaces/Rect-1.html":{},"components/SVGElementsComponent.html":{},"injectables/SVGUIService.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"injectables/StateManagerService.html":{},"interfaces/Thumbnail.html":{},"classes/Tool.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"classes/Tools.html":{},"interfaces/UndoRedoCanvasElement.html":{},"injectables/UndoRedoService.html":{},"classes/UndoRedoStack.html":{},"injectables/ViewService.html":{},"interfaces/Viewbox.html":{},"interfaces/Viewbox-1.html":{},"injectables/ZoomPanService.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{},"properties.html":{}}}],["provideanimationsasync",{"_index":2665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":330,"title":{},"body":{"injectables/BboxManagerService.html":{},"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"interfaces/EventPayload.html":{},"injectables/IOService.html":{},"injectables/ImageProcessingService.html":{},"injectables/LabelsService.html":{},"injectables/OpenCVService.html":{},"injectables/PostProcessService.html":{},"injectables/ProjectService.html":{},"injectables/SVGUIService.html":{},"injectables/StateManagerService.html":{},"injectables/UndoRedoService.html":{},"injectables/ViewService.html":{},"injectables/ZoomPanService.html":{}}}],["providerouter(routes",{"_index":2664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":2663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"injectables/CLIService.html":{},"components/ClassificationConfigurationComponent.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"interfaces/EventPayload.html":{},"components/GalleryComponent.html":{},"injectables/IOService.html":{},"components/InstanceLabelComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"classes/MulticlassTask.html":{},"classes/MultilabelTask.html":{},"injectables/PostProcessService.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"injectables/StateManagerService.html":{},"classes/Tool.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"classes/Tools.html":{},"injectables/UndoRedoService.html":{},"injectables/ZoomPanService.html":{}}}],["push",{"_index":2197,"title":{},"body":{"classes/UndoRedoStack.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{}}}],["push(element",{"_index":2203,"title":{},"body":{"classes/UndoRedoStack.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{}}}],["pynotate",{"_index":2586,"title":{},"body":{"index.html":{}}}],["python",{"_index":2563,"title":{},"body":{"index.html":{}}}],["r",{"_index":1470,"title":{},"body":{"injectables/OpenCVService.html":{},"miscellaneous/functions.html":{}}}],["r_cdf",{"_index":1516,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["r_cdf[i",{"_index":1526,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["random",{"_index":2124,"title":{},"body":{"components/ToolSettingComponent.html":{},"index.html":{}}}],["range",{"_index":1561,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["range(1",{"_index":2619,"title":{},"body":{"index.html":{}}}],["ranges",{"_index":1492,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["readable",{"_index":188,"title":{},"body":{"components/AppComponent.html":{}}}],["real",{"_index":2527,"title":{},"body":{"index.html":{}}}],["rebuildtreenodes",{"_index":1251,"title":{},"body":{"injectables/LabelsService.html":{}}}],["receive",{"_index":2581,"title":{},"body":{"index.html":{}}}],["received",{"_index":138,"title":{},"body":{"components/AppComponent.html":{}}}],["recomputecanvassum",{"_index":1990,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["rect",{"_index":284,"title":{"interfaces/Rect.html":{},"interfaces/Rect-1.html":{}},"body":{"interfaces/BboxLabel.html":{},"injectables/DrawService.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"injectables/OpenCVService.html":{},"interfaces/Point2D.html":{},"interfaces/Point2D-1.html":{},"injectables/PostProcessService.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"interfaces/Rect.html":{},"interfaces/Rect-1.html":{},"components/SVGElementsComponent.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{},"interfaces/Viewbox-1.html":{},"injectables/ZoomPanService.html":{},"coverage.html":{}}}],["rect.height",{"_index":740,"title":{},"body":{"injectables/DrawService.html":{},"injectables/PostProcessService.html":{},"injectables/ZoomPanService.html":{}}}],["rect.height).data",{"_index":1696,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["rect.left",{"_index":2353,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["rect.top",{"_index":2355,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["rect.width",{"_index":739,"title":{},"body":{"injectables/DrawService.html":{},"injectables/PostProcessService.html":{},"injectables/ZoomPanService.html":{}}}],["rect.x",{"_index":737,"title":{},"body":{"injectables/DrawService.html":{},"injectables/PostProcessService.html":{}}}],["rect.y",{"_index":738,"title":{},"body":{"injectables/DrawService.html":{},"injectables/PostProcessService.html":{}}}],["recursive",{"_index":1802,"title":{},"body":{"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{}}}],["redo",{"_index":766,"title":{},"body":{"injectables/EditorService.html":{},"injectables/UndoRedoService.html":{},"classes/UndoRedoStack.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{}}}],["redo.service",{"_index":632,"title":{},"body":{"injectables/DrawService.html":{}}}],["redo.service.ts",{"_index":2151,"title":{},"body":{"injectables/UndoRedoService.html":{},"coverage.html":{}}}],["redo.service.ts:100",{"_index":2158,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["redo.service.ts:13",{"_index":2154,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["redo.service.ts:34",{"_index":2157,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["redo.service.ts:58",{"_index":2156,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["redo.service.ts:96",{"_index":2155,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["redostack",{"_index":2195,"title":{},"body":{"classes/UndoRedoStack.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{}}}],["redraw",{"_index":2294,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["redrawrequest",{"_index":568,"title":{},"body":{"injectables/DrawService.html":{},"injectables/UndoRedoService.html":{},"injectables/ZoomPanService.html":{}}}],["ref_canvas",{"_index":1042,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["ref_image",{"_index":1043,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["refine",{"_index":2126,"title":{},"body":{"components/ToolSettingComponent.html":{}}}],["refresh",{"_index":844,"title":{},"body":{"components/GalleryComponent.html":{},"injectables/ImageProcessingService.html":{}}}],["refreshallcolors",{"_index":581,"title":{},"body":{"injectables/DrawService.html":{}}}],["refreshcolor",{"_index":582,"title":{},"body":{"injectables/DrawService.html":{}}}],["refreshcolor(inputctx",{"_index":613,"title":{},"body":{"injectables/DrawService.html":{}}}],["refreshinterval",{"_index":841,"title":{},"body":{"components/GalleryComponent.html":{}}}],["regex",{"_index":1803,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["regexfilter",{"_index":1907,"title":{},"body":{"injectables/ProjectService.html":{}}}],["reinforceedges",{"_index":1044,"title":{},"body":{"injectables/ImageProcessingService.html":{},"injectables/OpenCVService.html":{}}}],["reinforceedges(input",{"_index":1383,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["reinforcement",{"_index":2105,"title":{},"body":{"components/ToolSettingComponent.html":{}}}],["reject",{"_index":492,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["relative",{"_index":218,"title":{},"body":{"components/AppComponent.html":{}}}],["remove",{"_index":743,"title":{},"body":{"injectables/DrawService.html":{},"injectables/OpenCVService.html":{},"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{},"components/ToolSettingComponent.html":{}}}],["removeclassfrommultitask",{"_index":517,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["removeclassfrommultitask(classindex",{"_index":530,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["removeclassfromtask",{"_index":518,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["removeclassfromtask(taskindex",{"_index":533,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["removeclassificationtask",{"_index":1252,"title":{},"body":{"injectables/LabelsService.html":{}}}],["removeclassificationtask(task",{"_index":1268,"title":{},"body":{"injectables/LabelsService.html":{}}}],["removelabel",{"_index":1343,"title":{},"body":{"classes/MultilabelTask.html":{}}}],["removelabel(label",{"_index":1339,"title":{},"body":{"classes/MulticlassTask.html":{},"classes/MultilabelTask.html":{}}}],["removeprojectfile",{"_index":1824,"title":{},"body":{"injectables/ProjectService.html":{}}}],["removeprojectfile(filepath",{"_index":1839,"title":{},"body":{"injectables/ProjectService.html":{}}}],["removeprojectfromfilepath",{"_index":1744,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["removeprojectfromfilepath(filepath",{"_index":1756,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["removeseglabel",{"_index":1253,"title":{},"body":{"injectables/LabelsService.html":{}}}],["removeseglabel(seglabel",{"_index":1270,"title":{},"body":{"injectables/LabelsService.html":{}}}],["removetask",{"_index":519,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["removetask(taskindex",{"_index":535,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["requestanimationframe",{"_index":2371,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["requestcanvasclear",{"_index":777,"title":{},"body":{"injectables/EditorService.html":{}}}],["requestcanvasclear(index",{"_index":789,"title":{},"body":{"injectables/EditorService.html":{}}}],["requestcanvasredraw",{"_index":778,"title":{},"body":{"injectables/EditorService.html":{}}}],["requestedreload",{"_index":903,"title":{},"body":{"injectables/IOService.html":{}}}],["requestredo",{"_index":779,"title":{},"body":{"injectables/EditorService.html":{}}}],["requestredraw",{"_index":405,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["requestreload",{"_index":910,"title":{},"body":{"injectables/IOService.html":{}}}],["requestundo",{"_index":780,"title":{},"body":{"injectables/EditorService.html":{}}}],["reset",{"_index":1994,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["resetcombinedcanvas",{"_index":421,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["resetcurrentpoint",{"_index":1995,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["resetminmaxpoints",{"_index":1996,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["resetpath",{"_index":1978,"title":{},"body":{"injectables/SVGUIService.html":{}}}],["resetpreviouspoint",{"_index":1997,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["resetproject",{"_index":1825,"title":{},"body":{"injectables/ProjectService.html":{}}}],["resetzoomandpan",{"_index":2269,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["resetzoomandpan(smooth",{"_index":2293,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["resolve",{"_index":651,"title":{},"body":{"injectables/DrawService.html":{}}}],["resolve(true",{"_index":495,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["response",{"_index":943,"title":{},"body":{"injectables/IOService.html":{}}}],["responsive",{"_index":2551,"title":{},"body":{"index.html":{}}}],["restorelasttool",{"_index":781,"title":{},"body":{"injectables/EditorService.html":{}}}],["result",{"_index":1580,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["results",{"_index":277,"title":{},"body":{"components/AppComponent.html":{},"interfaces/BboxLabel.html":{},"injectables/BboxManagerService.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"components/ClassificationConfigurationComponent.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"interfaces/EventPayload.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"interfaces/ImageFromCLI.html":{},"injectables/ImageProcessingService.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"interfaces/LabelFormat.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"components/LoadingComponent.html":{},"interfaces/MulticlassInterface.html":{},"classes/MulticlassTask.html":{},"interfaces/MultilabelInterface.html":{},"classes/MultilabelTask.html":{},"injectables/OpenCVService.html":{},"interfaces/Point2D.html":{},"interfaces/Point2D-1.html":{},"injectables/PostProcessService.html":{},"interfaces/ProjectConfig.html":{},"components/ProjectConfigurationComponent.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"interfaces/Rect-1.html":{},"components/SVGElementsComponent.html":{},"injectables/SVGUIService.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"injectables/StateManagerService.html":{},"components/TestingComponent.html":{},"interfaces/Thumbnail.html":{},"classes/Tool.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"classes/Tools.html":{},"interfaces/UndoRedoCanvasElement.html":{},"injectables/UndoRedoService.html":{},"classes/UndoRedoStack.html":{},"injectables/ViewService.html":{},"interfaces/Viewbox.html":{},"interfaces/Viewbox-1.html":{},"injectables/ZoomPanService.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retinopathy",{"_index":2605,"title":{},"body":{"index.html":{}}}],["return",{"_index":226,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"injectables/CanvasManagerService.html":{},"components/ClassificationConfigurationComponent.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"injectables/ImageProcessingService.html":{},"components/InstanceLabelComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"injectables/OpenCVService.html":{},"injectables/PostProcessService.html":{},"injectables/ProjectService.html":{},"injectables/StateManagerService.html":{},"injectables/UndoRedoService.html":{},"classes/UndoRedoStack.html":{},"injectables/ViewService.html":{},"injectables/ZoomPanService.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"components/ClassificationConfigurationComponent.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"injectables/ImageProcessingService.html":{},"components/InstanceLabelComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"classes/MultilabelTask.html":{},"injectables/OpenCVService.html":{},"injectables/PostProcessService.html":{},"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{},"components/SVGElementsComponent.html":{},"injectables/SVGUIService.html":{},"injectables/StateManagerService.html":{},"components/ToolbarComponent.html":{},"injectables/UndoRedoService.html":{},"classes/UndoRedoStack.html":{},"injectables/ViewService.html":{},"injectables/ZoomPanService.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{},"miscellaneous/functions.html":{}}}],["rgb",{"_index":1584,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["rgb[1",{"_index":1600,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["rgb[2",{"_index":1601,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["rgba",{"_index":1595,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["rgba.delete",{"_index":1640,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["rhist",{"_index":1494,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["rhist.cols",{"_index":1501,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["rhist.delete",{"_index":1511,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["right",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"injectables/OpenCVService.html":{}}}],["rmax",{"_index":1527,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["rmin",{"_index":1521,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["rnorm_hist",{"_index":1505,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["rnorm_hist.delete",{"_index":1538,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["root",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"interfaces/BboxLabel.html":{},"injectables/BboxManagerService.html":{},"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"interfaces/EventPayload.html":{},"injectables/IOService.html":{},"interfaces/ImageFromCLI.html":{},"injectables/ImageProcessingService.html":{},"injectables/LabelsService.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"injectables/OpenCVService.html":{},"interfaces/Point2D.html":{},"injectables/PostProcessService.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"injectables/SVGUIService.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"injectables/StateManagerService.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"injectables/UndoRedoService.html":{},"injectables/ViewService.html":{},"interfaces/Viewbox.html":{},"injectables/ZoomPanService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["root'},{'name",{"_index":233,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["route",{"_index":2678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router",{"_index":2233,"title":{},"body":{"injectables/ViewService.html":{},"miscellaneous/variables.html":{}}}],["router.navigate(['/project",{"_index":2683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routermodule",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["routeroutlet",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["rows.project_name",{"_index":1791,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["rows.root",{"_index":1792,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["run",{"_index":2512,"title":{},"body":{"index.html":{}}}],["run_model(filepath",{"_index":2611,"title":{},"body":{"index.html":{}}}],["runtime",{"_index":2561,"title":{},"body":{"index.html":{}}}],["rust",{"_index":2533,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":367,"title":{},"body":{"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"interfaces/EventPayload.html":{},"injectables/IOService.html":{},"injectables/UndoRedoService.html":{},"injectables/ZoomPanService.html":{},"dependencies.html":{}}}],["sam",{"_index":2118,"title":{},"body":{"components/ToolSettingComponent.html":{}}}],["sam_post_process",{"_index":1650,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["same",{"_index":2632,"title":{},"body":{"index.html":{}}}],["samthreshold",{"_index":767,"title":{},"body":{"injectables/EditorService.html":{}}}],["save",{"_index":911,"title":{},"body":{"injectables/IOService.html":{},"injectables/ProjectService.html":{}}}],["saved",{"_index":1159,"title":{},"body":{"interfaces/LabelFormat.html":{}}}],["savefile",{"_index":996,"title":{},"body":{"injectables/IOService.html":{}}}],["savefile.colors.push(label.color",{"_index":1010,"title":{},"body":{"injectables/IOService.html":{}}}],["savefile.labels.push(label.label",{"_index":1001,"title":{},"body":{"injectables/IOService.html":{}}}],["savefile.masks.push(blob",{"_index":1008,"title":{},"body":{"injectables/IOService.html":{}}}],["savefile.masks.push(data.mask_data[index",{"_index":1018,"title":{},"body":{"injectables/IOService.html":{}}}],["savefile.masksname.push(label.label",{"_index":1002,"title":{},"body":{"injectables/IOService.html":{}}}],["savefile.multiclass",{"_index":1011,"title":{},"body":{"injectables/IOService.html":{}}}],["savefile.multiclass?.push(task.choice",{"_index":1012,"title":{},"body":{"injectables/IOService.html":{}}}],["savefile.multilabel",{"_index":1021,"title":{},"body":{"injectables/IOService.html":{}}}],["savefile.shades",{"_index":999,"title":{},"body":{"injectables/IOService.html":{}}}],["savefile.shades.push(label.shades",{"_index":1000,"title":{},"body":{"injectables/IOService.html":{}}}],["savefromcli",{"_index":912,"title":{},"body":{"injectables/IOService.html":{}}}],["savefromcli(data",{"_index":924,"title":{},"body":{"injectables/IOService.html":{}}}],["saveprojectconfigfile",{"_index":1864,"title":{},"body":{"injectables/ProjectService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["saveprojectconfigfile(root",{"_index":2483,"title":{},"body":{"miscellaneous/functions.html":{}}}],["saveprojectconfigfile(this.projectfolder",{"_index":1887,"title":{},"body":{"injectables/ProjectService.html":{}}}],["saving",{"_index":995,"title":{},"body":{"injectables/IOService.html":{}}}],["scale",{"_index":1575,"title":{},"body":{"injectables/OpenCVService.html":{},"injectables/ZoomPanService.html":{}}}],["scalex",{"_index":2330,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["scaley",{"_index":2332,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["scan",{"_index":1451,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["scripts",{"_index":2573,"title":{},"body":{"index.html":{}}}],["sdk",{"_index":2647,"title":{},"body":{"index.html":{}}}],["seamless",{"_index":2572,"title":{},"body":{"index.html":{}}}],["security",{"_index":2515,"title":{},"body":{"index.html":{}}}],["see",{"_index":2646,"title":{},"body":{"index.html":{}}}],["seginstance",{"_index":288,"title":{"interfaces/SegInstance.html":{}},"body":{"interfaces/BboxLabel.html":{},"interfaces/ImageFromCLI.html":{},"injectables/LabelsService.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{},"coverage.html":{}}}],["seglabel",{"_index":286,"title":{"interfaces/SegLabel.html":{}},"body":{"interfaces/BboxLabel.html":{},"injectables/IOService.html":{},"interfaces/ImageFromCLI.html":{},"components/InstanceLabelComponent.html":{},"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/ProjectConfig.html":{},"components/ProjectConfigurationComponent.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{},"coverage.html":{}}}],["seglabel.label",{"_index":1307,"title":{},"body":{"injectables/LabelsService.html":{}}}],["segment",{"_index":2120,"title":{},"body":{"components/ToolSettingComponent.html":{},"index.html":{}}}],["segment_lesions",{"_index":2590,"title":{},"body":{"index.html":{}}}],["segment_lesions(img",{"_index":2613,"title":{},"body":{"index.html":{}}}],["segment_odmac",{"_index":2597,"title":{},"body":{"index.html":{}}}],["segment_odmac(img).argmax(0).cpu().numpy",{"_index":2616,"title":{},"body":{"index.html":{}}}],["segmentation",{"_index":1795,"title":{},"body":{"components/ProjectConfigurationComponent.html":{},"components/ToolSettingComponent.html":{}}}],["segmentation_classes",{"_index":317,"title":{},"body":{"interfaces/BboxLabel.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{},"index.html":{}}}],["segmentation_classes=segmentation_classes",{"_index":2638,"title":{},"body":{"index.html":{}}}],["segmentation_masks=masks",{"_index":2641,"title":{},"body":{"index.html":{}}}],["selectbuttonmodule",{"_index":1185,"title":{},"body":{"components/LabelsComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["selectedtool",{"_index":768,"title":{},"body":{"injectables/EditorService.html":{}}}],["selector",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["send",{"_index":2578,"title":{},"body":{"index.html":{}}}],["sent",{"_index":140,"title":{},"body":{"components/AppComponent.html":{}}}],["sep",{"_index":1870,"title":{},"body":{"injectables/ProjectService.html":{}}}],["server",{"_index":2537,"title":{},"body":{"index.html":{}}}],["service",{"_index":143,"title":{},"body":{"components/AppComponent.html":{}}}],["service/bbox",{"_index":1967,"title":{},"body":{"components/SVGElementsComponent.html":{}}}],["service/svgui.service",{"_index":1968,"title":{},"body":{"components/SVGElementsComponent.html":{}}}],["services",{"_index":2555,"title":{},"body":{"index.html":{}}}],["services/cli.service",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/ProjectConfigurationComponent.html":{}}}],["services/io.service",{"_index":95,"title":{},"body":{"components/AppComponent.html":{}}}],["services/open",{"_index":458,"title":{},"body":{"injectables/CanvasManagerService.html":{},"injectables/DrawService.html":{},"injectables/ImageProcessingService.html":{}}}],["services/project/labels.service",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"injectables/CanvasManagerService.html":{},"components/ClassificationConfigurationComponent.html":{},"injectables/DrawService.html":{},"components/InstanceLabelComponent.html":{},"components/LabelsComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"injectables/UndoRedoService.html":{}}}],["services/project/project.service",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"injectables/DrawService.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/LabelsComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/ToolSettingComponent.html":{}}}],["services/ui/editor.service",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"injectables/CanvasManagerService.html":{},"injectables/DrawService.html":{},"injectables/ImageProcessingService.html":{},"components/LabelsComponent.html":{},"injectables/PostProcessService.html":{},"components/SVGElementsComponent.html":{},"injectables/StateManagerService.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UndoRedoService.html":{}}}],["services/ui/view.service",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/LoadingComponent.html":{}}}],["serving",{"_index":2557,"title":{},"body":{"index.html":{}}}],["setactiveindex",{"_index":1254,"title":{},"body":{"injectables/LabelsService.html":{}}}],["setactiveindex(index",{"_index":1272,"title":{},"body":{"injectables/LabelsService.html":{}}}],["setcontext",{"_index":2270,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["setcontext(canvasref",{"_index":2296,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["setimage",{"_index":1051,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["setimage(img",{"_index":1059,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["setinterval",{"_index":868,"title":{},"body":{"components/GalleryComponent.html":{}}}],["setloading",{"_index":2231,"title":{},"body":{"injectables/ViewService.html":{}}}],["setloading(status",{"_index":2238,"title":{},"body":{"injectables/ViewService.html":{}}}],["settimeout",{"_index":1729,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["setting",{"_index":274,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["setting.component.html",{"_index":2089,"title":{},"body":{"components/ToolSettingComponent.html":{}}}],["setting.component.scss",{"_index":2090,"title":{},"body":{"components/ToolSettingComponent.html":{}}}],["setting.component.ts",{"_index":2087,"title":{},"body":{"components/ToolSettingComponent.html":{},"coverage.html":{}}}],["setting.component.ts:36",{"_index":2097,"title":{},"body":{"components/ToolSettingComponent.html":{}}}],["setting.component.ts:37",{"_index":2094,"title":{},"body":{"components/ToolSettingComponent.html":{}}}],["setting.component.ts:39",{"_index":2095,"title":{},"body":{"components/ToolSettingComponent.html":{}}}],["setting.component.ts:40",{"_index":2098,"title":{},"body":{"components/ToolSettingComponent.html":{}}}],["setting.component.ts:41",{"_index":2096,"title":{},"body":{"components/ToolSettingComponent.html":{}}}],["setting/tool",{"_index":2086,"title":{},"body":{"components/ToolSettingComponent.html":{},"coverage.html":{}}}],["settransform",{"_index":2271,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["settransform(scale",{"_index":2298,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["setup",{"_index":2521,"title":{},"body":{"index.html":{}}}],["setviewbox",{"_index":1955,"title":{},"body":{"components/SVGElementsComponent.html":{}}}],["setviewbox(viewbox",{"_index":1959,"title":{},"body":{"components/SVGElementsComponent.html":{}}}],["setwidthandheight",{"_index":1998,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["setwidthandheight(width",{"_index":2010,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["severe",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["shade",{"_index":289,"title":{},"body":{"interfaces/BboxLabel.html":{},"interfaces/ImageFromCLI.html":{},"components/InstanceLabelComponent.html":{},"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{}}}],["shades",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"interfaces/BboxLabel.html":{},"injectables/IOService.html":{},"interfaces/ImageFromCLI.html":{},"components/InstanceLabelComponent.html":{},"interfaces/LabelFormat.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/ProjectConfig.html":{},"components/ProjectConfigurationComponent.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{}}}],["shape",{"_index":730,"title":{},"body":{"injectables/DrawService.html":{}}}],["show",{"_index":2141,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["showalllabels",{"_index":1245,"title":{},"body":{"injectables/LabelsService.html":{}}}],["side",{"_index":2553,"title":{},"body":{"index.html":{}}}],["singledrawrequest",{"_index":569,"title":{},"body":{"injectables/DrawService.html":{}}}],["size",{"_index":2107,"title":{},"body":{"components/ToolSettingComponent.html":{}}}],["size=1).tolist",{"_index":2625,"title":{},"body":{"index.html":{}}}],["size=np.random.randint(0",{"_index":2622,"title":{},"body":{"index.html":{}}}],["slash",{"_index":2079,"title":{},"body":{"classes/Tool.html":{},"classes/Tools.html":{}}}],["slidermodule",{"_index":1186,"title":{},"body":{"components/LabelsComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["slight",{"_index":1623,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["smooth",{"_index":2104,"title":{},"body":{"components/ToolSettingComponent.html":{},"injectables/ZoomPanService.html":{}}}],["smoothupdatetransform",{"_index":2272,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["snap",{"_index":2110,"title":{},"body":{"components/ToolSettingComponent.html":{}}}],["something",{"_index":1403,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"interfaces/BboxLabel.html":{},"injectables/BboxManagerService.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"components/ClassificationConfigurationComponent.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"interfaces/EventPayload.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"interfaces/ImageFromCLI.html":{},"injectables/ImageProcessingService.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"interfaces/LabelFormat.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"components/LoadingComponent.html":{},"interfaces/MulticlassInterface.html":{},"classes/MulticlassTask.html":{},"interfaces/MultilabelInterface.html":{},"classes/MultilabelTask.html":{},"injectables/OpenCVService.html":{},"interfaces/Point2D.html":{},"interfaces/Point2D-1.html":{},"injectables/PostProcessService.html":{},"interfaces/ProjectConfig.html":{},"components/ProjectConfigurationComponent.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"interfaces/Rect-1.html":{},"components/SVGElementsComponent.html":{},"injectables/SVGUIService.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"injectables/StateManagerService.html":{},"components/TestingComponent.html":{},"interfaces/Thumbnail.html":{},"classes/Tool.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"classes/Tools.html":{},"interfaces/UndoRedoCanvasElement.html":{},"injectables/UndoRedoService.html":{},"classes/UndoRedoStack.html":{},"injectables/ViewService.html":{},"interfaces/Viewbox.html":{},"interfaces/Viewbox-1.html":{},"injectables/ZoomPanService.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{}}}],["spatialweight",{"_index":1674,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["speed",{"_index":2504,"title":{},"body":{"index.html":{}}}],["split",{"_index":210,"title":{},"body":{"components/AppComponent.html":{},"injectables/IOService.html":{}}}],["src",{"_index":1427,"title":{},"body":{"injectables/OpenCVService.html":{},"index.html":{}}}],["src.convertto(dst",{"_index":1559,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["src.delete",{"_index":1437,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["src.type",{"_index":1597,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["src/.../app.config.ts",{"_index":2655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../colors.ts",{"_index":2475,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../environment.development.ts",{"_index":2657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../images.ts",{"_index":2477,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../labeltreenode.ts",{"_index":2476,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../main.ts",{"_index":2659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../open",{"_index":2656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../project",{"_index":2660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../save_load.ts",{"_index":2474,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../tools.ts",{"_index":2472,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../undoredo.ts",{"_index":2661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:103",{"_index":64,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:145",{"_index":68,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:161",{"_index":65,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:49",{"_index":55,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:52",{"_index":77,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:53",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:54",{"_index":71,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:79",{"_index":61,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:99",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":2426,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/core/blockable/div/div.component.ts",{"_index":331,"title":{},"body":{"components/BlockableDiv.html":{},"coverage.html":{}}}],["src/app/components/core/blockable/div/div.component.ts:15",{"_index":343,"title":{},"body":{"components/BlockableDiv.html":{}}}],["src/app/components/core/blockable/div/div.component.ts:16",{"_index":341,"title":{},"body":{"components/BlockableDiv.html":{}}}],["src/app/components/core/blockable/div/div.component.ts:21",{"_index":344,"title":{},"body":{"components/BlockableDiv.html":{}}}],["src/app/components/core/blockable/p/p.component.ts",{"_index":349,"title":{},"body":{"components/BlockableP.html":{},"coverage.html":{}}}],["src/app/components/core/blockable/p/p.component.ts:15",{"_index":352,"title":{},"body":{"components/BlockableP.html":{}}}],["src/app/components/core/blockable/p/p.component.ts:16",{"_index":351,"title":{},"body":{"components/BlockableP.html":{}}}],["src/app/components/core/blockable/p/p.component.ts:21",{"_index":353,"title":{},"body":{"components/BlockableP.html":{}}}],["src/app/components/core/drawable",{"_index":325,"title":{},"body":{"injectables/BboxManagerService.html":{},"injectables/CanvasManagerService.html":{},"injectables/DrawService.html":{},"injectables/ImageProcessingService.html":{},"components/InteractiveBboxComponent.html":{},"interfaces/Point2D-1.html":{},"injectables/PostProcessService.html":{},"interfaces/Rect-1.html":{},"components/SVGElementsComponent.html":{},"injectables/SVGUIService.html":{},"injectables/StateManagerService.html":{},"injectables/UndoRedoService.html":{},"interfaces/Viewbox-1.html":{},"injectables/ZoomPanService.html":{},"coverage.html":{}}}],["src/app/components/core/labelled",{"_index":1161,"title":{},"body":{"components/LabelledSwitchComponent.html":{},"coverage.html":{}}}],["src/app/components/core/testing/testing.component.ts",{"_index":2048,"title":{},"body":{"components/TestingComponent.html":{},"coverage.html":{}}}],["src/app/components/interface/editor/editor.component.ts",{"_index":2404,"title":{},"body":{"coverage.html":{}}}],["src/app/components/interface/editor/labels/instance",{"_index":1125,"title":{},"body":{"components/InstanceLabelComponent.html":{},"coverage.html":{}}}],["src/app/components/interface/editor/labels/labels.component.ts",{"_index":1182,"title":{},"body":{"components/LabelsComponent.html":{},"coverage.html":{}}}],["src/app/components/interface/editor/labels/labels.component.ts:38",{"_index":1197,"title":{},"body":{"components/LabelsComponent.html":{}}}],["src/app/components/interface/editor/labels/labels.component.ts:40",{"_index":1213,"title":{},"body":{"components/LabelsComponent.html":{}}}],["src/app/components/interface/editor/labels/labels.component.ts:41",{"_index":1212,"title":{},"body":{"components/LabelsComponent.html":{}}}],["src/app/components/interface/editor/labels/labels.component.ts:42",{"_index":1214,"title":{},"body":{"components/LabelsComponent.html":{}}}],["src/app/components/interface/editor/labels/labels.component.ts:45",{"_index":1210,"title":{},"body":{"components/LabelsComponent.html":{}}}],["src/app/components/interface/editor/labels/labels.component.ts:50",{"_index":1209,"title":{},"body":{"components/LabelsComponent.html":{}}}],["src/app/components/interface/editor/labels/labels.component.ts:57",{"_index":1200,"title":{},"body":{"components/LabelsComponent.html":{}}}],["src/app/components/interface/editor/labels/labels.component.ts:73",{"_index":1207,"title":{},"body":{"components/LabelsComponent.html":{}}}],["src/app/components/interface/editor/labels/labels.component.ts:80",{"_index":1204,"title":{},"body":{"components/LabelsComponent.html":{}}}],["src/app/components/interface/editor/labels/labels.component.ts:86",{"_index":1202,"title":{},"body":{"components/LabelsComponent.html":{}}}],["src/app/components/interface/editor/labels/labels.component.ts:90",{"_index":1201,"title":{},"body":{"components/LabelsComponent.html":{}}}],["src/app/components/interface/editor/labels/labels.component.ts:95",{"_index":1211,"title":{},"body":{"components/LabelsComponent.html":{}}}],["src/app/components/interface/editor/tool",{"_index":2085,"title":{},"body":{"components/ToolSettingComponent.html":{},"coverage.html":{}}}],["src/app/components/interface/editor/toolbar/toolbar.component.ts",{"_index":2127,"title":{},"body":{"components/ToolbarComponent.html":{},"coverage.html":{}}}],["src/app/components/interface/editor/toolbar/toolbar.component.ts:38",{"_index":2131,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/components/interface/editor/toolbar/toolbar.component.ts:41",{"_index":2133,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/components/interface/editor/toolbar/toolbar.component.ts:45",{"_index":2132,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/components/interface/gallery/gallery",{"_index":873,"title":{},"body":{"components/GalleryElementComponent.html":{},"coverage.html":{}}}],["src/app/components/interface/gallery/gallery.component.ts",{"_index":831,"title":{},"body":{"components/GalleryComponent.html":{},"coverage.html":{}}}],["src/app/components/interface/gallery/gallery.component.ts:27",{"_index":855,"title":{},"body":{"components/GalleryComponent.html":{}}}],["src/app/components/interface/gallery/gallery.component.ts:28",{"_index":852,"title":{},"body":{"components/GalleryComponent.html":{}}}],["src/app/components/interface/gallery/gallery.component.ts:29",{"_index":846,"title":{},"body":{"components/GalleryComponent.html":{}}}],["src/app/components/interface/gallery/gallery.component.ts:30",{"_index":853,"title":{},"body":{"components/GalleryComponent.html":{}}}],["src/app/components/interface/gallery/gallery.component.ts:32",{"_index":848,"title":{},"body":{"components/GalleryComponent.html":{}}}],["src/app/components/interface/gallery/gallery.component.ts:35",{"_index":849,"title":{},"body":{"components/GalleryComponent.html":{}}}],["src/app/components/interface/gallery/gallery.component.ts:44",{"_index":847,"title":{},"body":{"components/GalleryComponent.html":{}}}],["src/app/components/interface/loading/loading.component.ts",{"_index":1320,"title":{},"body":{"components/LoadingComponent.html":{},"coverage.html":{}}}],["src/app/components/interface/loading/loading.component.ts:13",{"_index":1325,"title":{},"body":{"components/LoadingComponent.html":{}}}],["src/app/components/interface/loading/loading.component.ts:15",{"_index":1326,"title":{},"body":{"components/LoadingComponent.html":{}}}],["src/app/components/interface/project",{"_index":499,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{},"components/ProjectConfigurationComponent.html":{},"coverage.html":{}}}],["src/app/core/interface.ts",{"_index":282,"title":{},"body":{"interfaces/BboxLabel.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{},"coverage.html":{}}}],["src/app/core/io/formats.ts",{"_index":1156,"title":{},"body":{"interfaces/LabelFormat.html":{},"coverage.html":{}}}],["src/app/core/io/images.ts",{"_index":2411,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/core/io/save_load.ts",{"_index":2413,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/core/misc/colors.ts",{"_index":2415,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/core/misc/undoredo.ts",{"_index":2194,"title":{},"body":{"classes/UndoRedoStack.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/misc/undoredo.ts:12",{"_index":2385,"title":{},"body":{"classes/_UndoStack.html":{}}}],["src/app/core/misc/undoredo.ts:16",{"_index":2384,"title":{},"body":{"classes/_UndoStack.html":{}}}],["src/app/core/misc/undoredo.ts:20",{"_index":2382,"title":{},"body":{"classes/_UndoStack.html":{}}}],["src/app/core/misc/undoredo.ts:27",{"_index":2376,"title":{},"body":{"classes/_RedoStack.html":{}}}],["src/app/core/misc/undoredo.ts:29",{"_index":2378,"title":{},"body":{"classes/_RedoStack.html":{}}}],["src/app/core/misc/undoredo.ts:33",{"_index":2380,"title":{},"body":{"classes/_RedoStack.html":{}}}],["src/app/core/misc/undoredo.ts:37",{"_index":2379,"title":{},"body":{"classes/_RedoStack.html":{}}}],["src/app/core/misc/undoredo.ts:41",{"_index":2377,"title":{},"body":{"classes/_RedoStack.html":{}}}],["src/app/core/misc/undoredo.ts:47",{"_index":2201,"title":{},"body":{"classes/UndoRedoStack.html":{}}}],["src/app/core/misc/undoredo.ts:48",{"_index":2199,"title":{},"body":{"classes/UndoRedoStack.html":{}}}],["src/app/core/misc/undoredo.ts:50",{"_index":2206,"title":{},"body":{"classes/UndoRedoStack.html":{}}}],["src/app/core/misc/undoredo.ts:59",{"_index":2205,"title":{},"body":{"classes/UndoRedoStack.html":{}}}],["src/app/core/misc/undoredo.ts:6",{"_index":2381,"title":{},"body":{"classes/_UndoStack.html":{}}}],["src/app/core/misc/undoredo.ts:68",{"_index":2204,"title":{},"body":{"classes/UndoRedoStack.html":{}}}],["src/app/core/misc/undoredo.ts:74",{"_index":2202,"title":{},"body":{"classes/UndoRedoStack.html":{}}}],["src/app/core/misc/undoredo.ts:8",{"_index":2383,"title":{},"body":{"classes/_UndoStack.html":{}}}],["src/app/core/task.ts",{"_index":1329,"title":{},"body":{"classes/MulticlassTask.html":{},"classes/MultilabelTask.html":{},"coverage.html":{}}}],["src/app/core/task.ts:10",{"_index":1345,"title":{},"body":{"classes/MultilabelTask.html":{}}}],["src/app/core/task.ts:13",{"_index":1346,"title":{},"body":{"classes/MultilabelTask.html":{}}}],["src/app/core/task.ts:17",{"_index":1347,"title":{},"body":{"classes/MultilabelTask.html":{}}}],["src/app/core/task.ts:3",{"_index":1333,"title":{},"body":{"classes/MulticlassTask.html":{}}}],["src/app/core/task.ts:5",{"_index":1334,"title":{},"body":{"classes/MulticlassTask.html":{}}}],["src/app/core/task.ts:9",{"_index":1344,"title":{},"body":{"classes/MultilabelTask.html":{}}}],["src/app/core/tools.ts",{"_index":2054,"title":{},"body":{"classes/Tool.html":{},"classes/Tools.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/tools.ts:17",{"_index":2148,"title":{},"body":{"classes/Tools.html":{}}}],["src/app/core/tools.ts:18",{"_index":2149,"title":{},"body":{"classes/Tools.html":{}}}],["src/app/core/tools.ts:19",{"_index":2145,"title":{},"body":{"classes/Tools.html":{}}}],["src/app/core/tools.ts:20",{"_index":2146,"title":{},"body":{"classes/Tools.html":{}}}],["src/app/core/tools.ts:21",{"_index":2147,"title":{},"body":{"classes/Tools.html":{}}}],["src/app/core/tools.ts:22",{"_index":2144,"title":{},"body":{"classes/Tools.html":{}}}],["src/app/core/tools.ts:5",{"_index":2058,"title":{},"body":{"classes/Tool.html":{}}}],["src/app/core/tools.ts:6",{"_index":2059,"title":{},"body":{"classes/Tool.html":{}}}],["src/app/core/tools.ts:7",{"_index":2057,"title":{},"body":{"classes/Tool.html":{}}}],["src/app/guards/project",{"_index":2419,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/cli.service.ts",{"_index":354,"title":{},"body":{"injectables/CLIService.html":{},"interfaces/EventPayload.html":{},"coverage.html":{}}}],["src/app/services/cli.service.ts:16",{"_index":365,"title":{},"body":{"injectables/CLIService.html":{}}}],["src/app/services/cli.service.ts:17",{"_index":366,"title":{},"body":{"injectables/CLIService.html":{}}}],["src/app/services/cli.service.ts:18",{"_index":361,"title":{},"body":{"injectables/CLIService.html":{}}}],["src/app/services/cli.service.ts:23",{"_index":362,"title":{},"body":{"injectables/CLIService.html":{}}}],["src/app/services/io.service.ts",{"_index":902,"title":{},"body":{"injectables/IOService.html":{},"coverage.html":{}}}],["src/app/services/io.service.ts:105",{"_index":918,"title":{},"body":{"injectables/IOService.html":{}}}],["src/app/services/io.service.ts:152",{"_index":923,"title":{},"body":{"injectables/IOService.html":{}}}],["src/app/services/io.service.ts:18",{"_index":914,"title":{},"body":{"injectables/IOService.html":{}}}],["src/app/services/io.service.ts:212",{"_index":925,"title":{},"body":{"injectables/IOService.html":{}}}],["src/app/services/io.service.ts:249",{"_index":928,"title":{},"body":{"injectables/IOService.html":{}}}],["src/app/services/io.service.ts:28",{"_index":921,"title":{},"body":{"injectables/IOService.html":{}}}],["src/app/services/io.service.ts:297",{"_index":917,"title":{},"body":{"injectables/IOService.html":{}}}],["src/app/services/io.service.ts:30",{"_index":920,"title":{},"body":{"injectables/IOService.html":{}}}],["src/app/services/io.service.ts:32",{"_index":922,"title":{},"body":{"injectables/IOService.html":{}}}],["src/app/services/io.service.ts:36",{"_index":915,"title":{},"body":{"injectables/IOService.html":{}}}],["src/app/services/io.service.ts:48",{"_index":919,"title":{},"body":{"injectables/IOService.html":{}}}],["src/app/services/open",{"_index":1348,"title":{},"body":{"injectables/OpenCVService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/project/labels.service.ts",{"_index":1239,"title":{},"body":{"injectables/LabelsService.html":{},"coverage.html":{}}}],["src/app/services/project/labels.service.ts:10",{"_index":1279,"title":{},"body":{"injectables/LabelsService.html":{}}}],["src/app/services/project/labels.service.ts:104",{"_index":1265,"title":{},"body":{"injectables/LabelsService.html":{}}}],["src/app/services/project/labels.service.ts:112",{"_index":1267,"title":{},"body":{"injectables/LabelsService.html":{}}}],["src/app/services/project/labels.service.ts:116",{"_index":1274,"title":{},"body":{"injectables/LabelsService.html":{}}}],["src/app/services/project/labels.service.ts:12",{"_index":1278,"title":{},"body":{"injectables/LabelsService.html":{}}}],["src/app/services/project/labels.service.ts:123",{"_index":1266,"title":{},"body":{"injectables/LabelsService.html":{}}}],["src/app/services/project/labels.service.ts:14",{"_index":1280,"title":{},"body":{"injectables/LabelsService.html":{}}}],["src/app/services/project/labels.service.ts:16",{"_index":1275,"title":{},"body":{"injectables/LabelsService.html":{}}}],["src/app/services/project/labels.service.ts:17",{"_index":1276,"title":{},"body":{"injectables/LabelsService.html":{}}}],["src/app/services/project/labels.service.ts:19",{"_index":1277,"title":{},"body":{"injectables/LabelsService.html":{}}}],["src/app/services/project/labels.service.ts:20",{"_index":1256,"title":{},"body":{"injectables/LabelsService.html":{}}}],["src/app/services/project/labels.service.ts:24",{"_index":1258,"title":{},"body":{"injectables/LabelsService.html":{}}}],["src/app/services/project/labels.service.ts:36",{"_index":1260,"title":{},"body":{"injectables/LabelsService.html":{}}}],["src/app/services/project/labels.service.ts:53",{"_index":1261,"title":{},"body":{"injectables/LabelsService.html":{}}}],["src/app/services/project/labels.service.ts:61",{"_index":1269,"title":{},"body":{"injectables/LabelsService.html":{}}}],["src/app/services/project/labels.service.ts:67",{"_index":1263,"title":{},"body":{"injectables/LabelsService.html":{}}}],["src/app/services/project/labels.service.ts:79",{"_index":1273,"title":{},"body":{"injectables/LabelsService.html":{}}}],["src/app/services/project/labels.service.ts:84",{"_index":1271,"title":{},"body":{"injectables/LabelsService.html":{}}}],["src/app/services/project/labels.service.ts:95",{"_index":1264,"title":{},"body":{"injectables/LabelsService.html":{}}}],["src/app/services/project/labeltreenode.ts",{"_index":2422,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/services/project/project.service.ts",{"_index":1804,"title":{},"body":{"injectables/ProjectService.html":{},"coverage.html":{}}}],["src/app/services/project/project.service.ts:113",{"_index":1836,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project/project.service.ts:126",{"_index":1840,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project/project.service.ts:136",{"_index":1834,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project/project.service.ts:147",{"_index":1830,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project/project.service.ts:154",{"_index":1838,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project/project.service.ts:172",{"_index":1832,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project/project.service.ts:182",{"_index":1833,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project/project.service.ts:188",{"_index":1841,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project/project.service.ts:195",{"_index":1828,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project/project.service.ts:22",{"_index":1851,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project/project.service.ts:23",{"_index":1854,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project/project.service.ts:24",{"_index":1852,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project/project.service.ts:25",{"_index":1850,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project/project.service.ts:27",{"_index":1849,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project/project.service.ts:28",{"_index":1861,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project/project.service.ts:29",{"_index":1853,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project/project.service.ts:30",{"_index":1860,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project/project.service.ts:31",{"_index":1857,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project/project.service.ts:32",{"_index":1847,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project/project.service.ts:34",{"_index":1858,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project/project.service.ts:35",{"_index":1845,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project/project.service.ts:37",{"_index":1855,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project/project.service.ts:39",{"_index":1844,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project/project.service.ts:40",{"_index":1843,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project/project.service.ts:42",{"_index":1826,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project/project.service.ts:54",{"_index":1842,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/ui/editor.service.ts",{"_index":754,"title":{},"body":{"injectables/EditorService.html":{},"coverage.html":{}}}],["src/app/services/ui/editor.service.ts:10",{"_index":795,"title":{},"body":{"injectables/EditorService.html":{}}}],["src/app/services/ui/editor.service.ts:11",{"_index":796,"title":{},"body":{"injectables/EditorService.html":{}}}],["src/app/services/ui/editor.service.ts:12",{"_index":797,"title":{},"body":{"injectables/EditorService.html":{}}}],["src/app/services/ui/editor.service.ts:13",{"_index":798,"title":{},"body":{"injectables/EditorService.html":{}}}],["src/app/services/ui/editor.service.ts:14",{"_index":799,"title":{},"body":{"injectables/EditorService.html":{}}}],["src/app/services/ui/editor.service.ts:15",{"_index":800,"title":{},"body":{"injectables/EditorService.html":{}}}],["src/app/services/ui/editor.service.ts:16",{"_index":801,"title":{},"body":{"injectables/EditorService.html":{}}}],["src/app/services/ui/editor.service.ts:17",{"_index":802,"title":{},"body":{"injectables/EditorService.html":{}}}],["src/app/services/ui/editor.service.ts:18",{"_index":803,"title":{},"body":{"injectables/EditorService.html":{}}}],["src/app/services/ui/editor.service.ts:19",{"_index":804,"title":{},"body":{"injectables/EditorService.html":{}}}],["src/app/services/ui/editor.service.ts:20",{"_index":806,"title":{},"body":{"injectables/EditorService.html":{}}}],["src/app/services/ui/editor.service.ts:21",{"_index":807,"title":{},"body":{"injectables/EditorService.html":{}}}],["src/app/services/ui/editor.service.ts:22",{"_index":810,"title":{},"body":{"injectables/EditorService.html":{}}}],["src/app/services/ui/editor.service.ts:23",{"_index":814,"title":{},"body":{"injectables/EditorService.html":{}}}],["src/app/services/ui/editor.service.ts:24",{"_index":815,"title":{},"body":{"injectables/EditorService.html":{}}}],["src/app/services/ui/editor.service.ts:25",{"_index":816,"title":{},"body":{"injectables/EditorService.html":{}}}],["src/app/services/ui/editor.service.ts:26",{"_index":817,"title":{},"body":{"injectables/EditorService.html":{}}}],["src/app/services/ui/editor.service.ts:27",{"_index":818,"title":{},"body":{"injectables/EditorService.html":{}}}],["src/app/services/ui/editor.service.ts:29",{"_index":812,"title":{},"body":{"injectables/EditorService.html":{}}}],["src/app/services/ui/editor.service.ts:31",{"_index":809,"title":{},"body":{"injectables/EditorService.html":{}}}],["src/app/services/ui/editor.service.ts:33",{"_index":782,"title":{},"body":{"injectables/EditorService.html":{}}}],["src/app/services/ui/editor.service.ts:36",{"_index":783,"title":{},"body":{"injectables/EditorService.html":{}}}],["src/app/services/ui/editor.service.ts:41",{"_index":784,"title":{},"body":{"injectables/EditorService.html":{}}}],["src/app/services/ui/editor.service.ts:45",{"_index":785,"title":{},"body":{"injectables/EditorService.html":{}}}],["src/app/services/ui/editor.service.ts:49",{"_index":786,"title":{},"body":{"injectables/EditorService.html":{}}}],["src/app/services/ui/editor.service.ts:53",{"_index":787,"title":{},"body":{"injectables/EditorService.html":{}}}],["src/app/services/ui/editor.service.ts:57",{"_index":788,"title":{},"body":{"injectables/EditorService.html":{}}}],["src/app/services/ui/editor.service.ts:62",{"_index":790,"title":{},"body":{"injectables/EditorService.html":{}}}],["src/app/services/ui/editor.service.ts:66",{"_index":791,"title":{},"body":{"injectables/EditorService.html":{}}}],["src/app/services/ui/editor.service.ts:70",{"_index":792,"title":{},"body":{"injectables/EditorService.html":{}}}],["src/app/services/ui/editor.service.ts:74",{"_index":793,"title":{},"body":{"injectables/EditorService.html":{}}}],["src/app/services/ui/editor.service.ts:78",{"_index":794,"title":{},"body":{"injectables/EditorService.html":{}}}],["src/app/services/ui/view.service.ts",{"_index":2224,"title":{},"body":{"injectables/ViewService.html":{},"coverage.html":{}}}],["src/app/services/ui/view.service.ts:10",{"_index":2241,"title":{},"body":{"injectables/ViewService.html":{}}}],["src/app/services/ui/view.service.ts:11",{"_index":2242,"title":{},"body":{"injectables/ViewService.html":{}}}],["src/app/services/ui/view.service.ts:12",{"_index":2234,"title":{},"body":{"injectables/ViewService.html":{}}}],["src/app/services/ui/view.service.ts:16",{"_index":2239,"title":{},"body":{"injectables/ViewService.html":{}}}],["src/app/services/ui/view.service.ts:22",{"_index":2235,"title":{},"body":{"injectables/ViewService.html":{}}}],["src/app/services/ui/view.service.ts:27",{"_index":2237,"title":{},"body":{"injectables/ViewService.html":{}}}],["src/app/services/ui/view.service.ts:31",{"_index":2236,"title":{},"body":{"injectables/ViewService.html":{}}}],["src/environments/environment.development.ts",{"_index":2429,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":2430,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":2431,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["srcvec",{"_index":1486,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["srcvec.delete",{"_index":1515,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["srcvec.push_back(image",{"_index":1488,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["stack",{"_index":2207,"title":{},"body":{"classes/UndoRedoStack.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{},"index.html":{}}}],["standalone",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["start",{"_index":1717,"title":{},"body":{"injectables/PostProcessService.html":{},"components/ProjectConfigurationComponent.html":{},"index.html":{}}}],["startdrag",{"_index":2273,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["startdraw",{"_index":583,"title":{},"body":{"injectables/DrawService.html":{}}}],["started",{"_index":2492,"title":{"index.html":{}},"body":{"miscellaneous/variables.html":{}}}],["started.guard.ts",{"_index":2420,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["startproject",{"_index":1745,"title":{},"body":{"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{}}}],["state",{"_index":456,"title":{},"body":{"injectables/CanvasManagerService.html":{},"injectables/DrawService.html":{},"injectables/OpenCVService.html":{},"injectables/PostProcessService.html":{},"injectables/UndoRedoService.html":{},"injectables/ZoomPanService.html":{},"miscellaneous/variables.html":{}}}],["statemanagerservice",{"_index":423,"title":{"injectables/StateManagerService.html":{}},"body":{"injectables/CanvasManagerService.html":{},"injectables/DrawService.html":{},"injectables/IOService.html":{},"injectables/PostProcessService.html":{},"injectables/StateManagerService.html":{},"injectables/UndoRedoService.html":{},"injectables/ZoomPanService.html":{},"coverage.html":{}}}],["statements",{"_index":2389,"title":{},"body":{"coverage.html":{}}}],["stateservice",{"_index":426,"title":{},"body":{"injectables/CanvasManagerService.html":{},"injectables/DrawService.html":{},"injectables/IOService.html":{},"injectables/PostProcessService.html":{},"injectables/UndoRedoService.html":{},"injectables/ZoomPanService.html":{}}}],["static",{"_index":2063,"title":{},"body":{"classes/Tool.html":{},"classes/Tools.html":{}}}],["status",{"_index":2240,"title":{},"body":{"injectables/ViewService.html":{}}}],["step",{"_index":2119,"title":{},"body":{"components/ToolSettingComponent.html":{}}}],["store",{"_index":1571,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["stored",{"_index":2631,"title":{},"body":{"index.html":{}}}],["strengh",{"_index":1384,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["strength",{"_index":2108,"title":{},"body":{"components/ToolSettingComponent.html":{}}}],["stretchhist",{"_index":1045,"title":{},"body":{"injectables/ImageProcessingService.html":{},"injectables/OpenCVService.html":{}}}],["stretchhist(input",{"_index":1386,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["stretching",{"_index":2103,"title":{},"body":{"components/ToolSettingComponent.html":{}}}],["string",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"interfaces/BboxLabel.html":{},"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"components/ClassificationConfigurationComponent.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"interfaces/EventPayload.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"interfaces/ImageFromCLI.html":{},"components/InstanceLabelComponent.html":{},"interfaces/LabelFormat.html":{},"interfaces/MulticlassInterface.html":{},"classes/MulticlassTask.html":{},"interfaces/MultilabelInterface.html":{},"classes/MultilabelTask.html":{},"injectables/OpenCVService.html":{},"interfaces/Point2D.html":{},"interfaces/ProjectConfig.html":{},"components/ProjectConfigurationComponent.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"components/SVGElementsComponent.html":{},"injectables/SVGUIService.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"classes/Tool.html":{},"classes/Tools.html":{},"interfaces/UndoRedoCanvasElement.html":{},"injectables/ViewService.html":{},"interfaces/Viewbox.html":{},"miscellaneous/functions.html":{}}}],["stroke",{"_index":2101,"title":{},"body":{"components/ToolSettingComponent.html":{}}}],["style",{"_index":338,"title":{},"body":{"components/BlockableDiv.html":{},"components/BlockableP.html":{}}}],["styleurl",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["subject",{"_index":363,"title":{},"body":{"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"interfaces/EventPayload.html":{},"injectables/IOService.html":{},"injectables/ZoomPanService.html":{}}}],["subject.next",{"_index":144,"title":{},"body":{"components/AppComponent.html":{}}}],["subscriptions",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["success",{"_index":386,"title":{},"body":{"injectables/CLIService.html":{},"interfaces/EventPayload.html":{}}}],["support",{"_index":2517,"title":{},"body":{"index.html":{}}}],["supported",{"_index":1077,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["sure",{"_index":147,"title":{},"body":{"components/AppComponent.html":{}}}],["svg",{"_index":1024,"title":{},"body":{"injectables/IOService.html":{},"components/SVGElementsComponent.html":{}}}],["svg.setattribute('height",{"_index":1028,"title":{},"body":{"injectables/IOService.html":{}}}],["svg.setattribute('width",{"_index":1029,"title":{},"body":{"injectables/IOService.html":{}}}],["svg.setattribute('xmlns:xlink",{"_index":1026,"title":{},"body":{"injectables/IOService.html":{}}}],["svgelements",{"_index":1952,"title":{},"body":{"components/SVGElementsComponent.html":{}}}],["svgelements'},{'name",{"_index":267,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["svgelements.component.html",{"_index":1953,"title":{},"body":{"components/SVGElementsComponent.html":{}}}],["svgelements.component.scss",{"_index":1954,"title":{},"body":{"components/SVGElementsComponent.html":{}}}],["svgelementscomponent",{"_index":266,"title":{"components/SVGElementsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["svgui.service",{"_index":635,"title":{},"body":{"injectables/DrawService.html":{},"injectables/PostProcessService.html":{}}}],["svguiservice",{"_index":590,"title":{"injectables/SVGUIService.html":{}},"body":{"injectables/DrawService.html":{},"injectables/PostProcessService.html":{},"components/SVGElementsComponent.html":{},"injectables/SVGUIService.html":{},"coverage.html":{}}}],["swap",{"_index":2137,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["swapmarkers",{"_index":584,"title":{},"body":{"injectables/DrawService.html":{},"injectables/EditorService.html":{}}}],["switch",{"_index":704,"title":{},"body":{"injectables/DrawService.html":{},"components/LabelledSwitchComponent.html":{}}}],["switch'},{'name",{"_index":260,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["switch.component",{"_index":1769,"title":{},"body":{"components/ProjectConfigurationComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["switch.component.html",{"_index":1165,"title":{},"body":{"components/LabelledSwitchComponent.html":{}}}],["switch.component.scss",{"_index":1166,"title":{},"body":{"components/LabelledSwitchComponent.html":{}}}],["switch.component.ts",{"_index":1163,"title":{},"body":{"components/LabelledSwitchComponent.html":{},"coverage.html":{}}}],["switch.component.ts:16",{"_index":1172,"title":{},"body":{"components/LabelledSwitchComponent.html":{}}}],["switch.component.ts:17",{"_index":1174,"title":{},"body":{"components/LabelledSwitchComponent.html":{}}}],["switch.component.ts:19",{"_index":1176,"title":{},"body":{"components/LabelledSwitchComponent.html":{}}}],["switch.component.ts:21",{"_index":1171,"title":{},"body":{"components/LabelledSwitchComponent.html":{}}}],["switch.component.ts:25",{"_index":1175,"title":{},"body":{"components/LabelledSwitchComponent.html":{}}}],["switch/labelled",{"_index":1162,"title":{},"body":{"components/LabelledSwitchComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["switchvisibilityallseglabels",{"_index":1255,"title":{},"body":{"injectables/LabelsService.html":{}}}],["system",{"_index":2582,"title":{},"body":{"index.html":{}}}],["t",{"_index":374,"title":{},"body":{"injectables/CLIService.html":{},"interfaces/EventPayload.html":{},"injectables/LabelsService.html":{}}}],["t.taskname",{"_index":1286,"title":{},"body":{"injectables/LabelsService.html":{}}}],["table",{"_index":2433,"title":{},"body":{"coverage.html":{}}}],["tablemodule",{"_index":1732,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2432,"title":{},"body":{"coverage.html":{}}}],["tagmodule",{"_index":507,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["tailwind",{"_index":122,"title":{},"body":{"components/AppComponent.html":{}}}],["tailwindcss",{"_index":2463,"title":{},"body":{"dependencies.html":{}}}],["targetoffset",{"_index":2255,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["targetscale",{"_index":2256,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["task",{"_index":563,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{},"injectables/LabelsService.html":{},"injectables/ProjectService.html":{},"index.html":{}}}],["task.choice",{"_index":990,"title":{},"body":{"injectables/IOService.html":{},"injectables/ProjectService.html":{}}}],["task.classes",{"_index":1943,"title":{},"body":{"injectables/ProjectService.html":{}}}],["task.classlabels",{"_index":1884,"title":{},"body":{"injectables/ProjectService.html":{}}}],["task.default",{"_index":1944,"title":{},"body":{"injectables/ProjectService.html":{}}}],["task.name",{"_index":1942,"title":{},"body":{"injectables/ProjectService.html":{}}}],["task.tasklabels.foreach((label",{"_index":1290,"title":{},"body":{"injectables/LabelsService.html":{}}}],["task.taskname",{"_index":1235,"title":{},"body":{"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"injectables/ProjectService.html":{}}}],["taskindex",{"_index":525,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["tasklabels",{"_index":1335,"title":{},"body":{"classes/MulticlassTask.html":{},"classes/MultilabelTask.html":{}}}],["taskname",{"_index":1331,"title":{},"body":{"classes/MulticlassTask.html":{},"classes/MultilabelTask.html":{}}}],["tasks",{"_index":2507,"title":{},"body":{"index.html":{}}}],["tauri",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"injectables/CLIService.html":{},"interfaces/EventPayload.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"interfaces/LabelFormat.html":{},"injectables/PostProcessService.html":{},"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{},"dependencies.html":{},"index.html":{}}}],["tauri/rust",{"_index":2556,"title":{},"body":{"index.html":{}}}],["tauri/target/release",{"_index":2543,"title":{},"body":{"index.html":{}}}],["technical",{"_index":2566,"title":{},"body":{"index.html":{}}}],["technologies",{"_index":2546,"title":{},"body":{"index.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["templateurl",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["temporary",{"_index":1569,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["test",{"_index":2052,"title":{},"body":{"components/TestingComponent.html":{}}}],["testing",{"_index":2049,"title":{},"body":{"components/TestingComponent.html":{}}}],["testing'},{'name",{"_index":269,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["testing.component.html",{"_index":2050,"title":{},"body":{"components/TestingComponent.html":{}}}],["testing.component.scss",{"_index":2051,"title":{},"body":{"components/TestingComponent.html":{}}}],["testingcomponent",{"_index":268,"title":{"components/TestingComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["testtesting",{"_index":2053,"title":{},"body":{"components/TestingComponent.html":{}}}],["then((bboxes",{"_index":1726,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["then((blob",{"_index":1006,"title":{},"body":{"injectables/IOService.html":{}}}],["then((filepath",{"_index":1920,"title":{},"body":{"injectables/ProjectService.html":{}}}],["then((imagebitmap",{"_index":1679,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["then((mask",{"_index":1707,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["then((response",{"_index":942,"title":{},"body":{"injectables/IOService.html":{}}}],["this._lasttool",{"_index":819,"title":{},"body":{"injectables/EditorService.html":{}}}],["this._treenode",{"_index":1308,"title":{},"body":{"injectables/LabelsService.html":{}}}],["this.activeimage",{"_index":1921,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.activeimage.then((image",{"_index":1923,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.activeindex",{"_index":1916,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.activelabel",{"_index":1306,"title":{},"body":{"injectables/LabelsService.html":{}}}],["this.activelabel!.label",{"_index":1311,"title":{},"body":{"injectables/LabelsService.html":{}}}],["this.activelabel.shades!.length",{"_index":1317,"title":{},"body":{"injectables/LabelsService.html":{}}}],["this.activelabel.shades![current_instance",{"_index":1319,"title":{},"body":{"injectables/LabelsService.html":{}}}],["this.activeseginstance",{"_index":1314,"title":{},"body":{"injectables/LabelsService.html":{}}}],["this.activeseginstance.instance",{"_index":1316,"title":{},"body":{"injectables/LabelsService.html":{}}}],["this.applylassoeraser(activectx",{"_index":646,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.applylassoeraser(ctx",{"_index":645,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.bboxmanager.listbbox",{"_index":1728,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["this.binarizecanvas(ctx",{"_index":681,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.brightness",{"_index":1097,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["this.buffercanvas",{"_index":472,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["this.buffercanvas.getcontext('2d",{"_index":474,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["this.bufferctx",{"_index":473,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["this.bufferctx.filter",{"_index":475,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["this.canpan",{"_index":2328,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["this.canvasclear.next(index",{"_index":827,"title":{},"body":{"injectables/EditorService.html":{}}}],["this.canvasctx",{"_index":461,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["this.canvasctx.push(canvas.getcontext('2d",{"_index":467,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["this.canvasctx[index].drawimage(img",{"_index":494,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["this.canvasmanagerservice.canvasctx",{"_index":712,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.canvasmanagerservice.canvasctx.length",{"_index":713,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.canvasmanagerservice.clearcanvasatindex(value",{"_index":643,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.canvasmanagerservice.computecombinedcanvas",{"_index":637,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.canvasmanagerservice.getactivecanvas().converttoblob",{"_index":2191,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["this.canvasmanagerservice.getactivectx",{"_index":711,"title":{},"body":{"injectables/DrawService.html":{},"injectables/PostProcessService.html":{}}}],["this.canvasmanagerservice.getactiveindex",{"_index":1716,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["this.canvasmanagerservice.getallcanvas().foreach((classcanvas",{"_index":2181,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["this.canvasmanagerservice.getallcanvas().foreach(async",{"_index":2168,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["this.canvasmanagerservice.getallcanvasctx().foreach((classctx",{"_index":745,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.canvasmanagerservice.getallcanvasctx().foreach((ctx",{"_index":721,"title":{},"body":{"injectables/DrawService.html":{},"injectables/PostProcessService.html":{}}}],["this.canvasmanagerservice.getallcanvasctx().foreach((ctxclass",{"_index":684,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.canvasmanagerservice.getbuffercanvas",{"_index":728,"title":{},"body":{"injectables/DrawService.html":{},"injectables/PostProcessService.html":{}}}],["this.canvasmanagerservice.getbufferctx",{"_index":727,"title":{},"body":{"injectables/DrawService.html":{},"injectables/PostProcessService.html":{}}}],["this.canvasmanagerservice.getcombinedcanvas",{"_index":736,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.canvasmanagerservice.getcombinedctx",{"_index":1713,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["this.canvasmanagerservice.initcanvas",{"_index":992,"title":{},"body":{"injectables/IOService.html":{}}}],["this.canvasmanagerservice.labelcanvas[index",{"_index":1003,"title":{},"body":{"injectables/IOService.html":{}}}],["this.canvasmanagerservice.loadallcanvas(data.masks",{"_index":993,"title":{},"body":{"injectables/IOService.html":{}}}],["this.canvasredraw.next(true",{"_index":828,"title":{},"body":{"injectables/EditorService.html":{}}}],["this.canvasref",{"_index":2314,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["this.canvasref.getboundingclientrect",{"_index":2317,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["this.canvasref.height",{"_index":2351,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["this.canvasref.width",{"_index":2350,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["this.canzoom",{"_index":2372,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["this.cdr.detectchanges",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/ToolbarComponent.html":{}}}],["this.checkedchange.emit(this.checked",{"_index":1180,"title":{},"body":{"components/LabelledSwitchComponent.html":{}}}],["this.checkifdataexists",{"_index":973,"title":{},"body":{"injectables/IOService.html":{}}}],["this.checkvalidinput",{"_index":1100,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["this.clearcanvas(this.canvasctx[index",{"_index":487,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["this.clearcanvas(this.canvasmanagerservice.bufferctx",{"_index":724,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.clearcanvas(this.combinedctx",{"_index":497,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["this.cli.commandprocessed.subscribe((value",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"components/ProjectConfigurationComponent.html":{}}}],["this.cli.imageloaded.subscribe((imageconfig",{"_index":158,"title":{},"body":{"components/AppComponent.html":{}}}],["this.cli.projectcreated.subscribe((config",{"_index":154,"title":{},"body":{"components/AppComponent.html":{}}}],["this.combinedcanvas",{"_index":469,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["this.combinedcanvas.getcontext('2d",{"_index":471,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["this.combinedctx",{"_index":470,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["this.combinedctx.clearrect(0",{"_index":477,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["this.combinedctx.drawimage(canvas",{"_index":482,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["this.combinedctx.drawimage(edge",{"_index":486,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["this.contrast",{"_index":1096,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["this.create_project(projectconfig",{"_index":1903,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.createclisubscription",{"_index":125,"title":{},"body":{"components/AppComponent.html":{}}}],["this.currentpoint",{"_index":2023,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["this.cv_ready",{"_index":1407,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["this.debug",{"_index":160,"title":{},"body":{"components/AppComponent.html":{}}}],["this.drawquadtreebbox(maskdata",{"_index":1688,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["this.drawservice.requestcanvasclear(index",{"_index":1231,"title":{},"body":{"components/LabelsComponent.html":{}}}],["this.drawservice.requestcanvasredraw",{"_index":1233,"title":{},"body":{"components/LabelsComponent.html":{}}}],["this.edgestrength",{"_index":1099,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["this.editorservice.affectsmultiplelabels",{"_index":2185,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["this.editorservice.autopostprocess",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"injectables/DrawService.html":{}}}],["this.editorservice.autopostprocessopening",{"_index":1700,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["this.editorservice.canvasclear.subscribe((value",{"_index":642,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.editorservice.canvasredraw.subscribe((value",{"_index":639,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.editorservice.canvassumrefresh.subscribe((value",{"_index":636,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.editorservice.edgesonly",{"_index":734,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.editorservice.enforceconnectivity",{"_index":1706,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["this.editorservice.eraseall",{"_index":686,"title":{},"body":{"injectables/DrawService.html":{},"injectables/PostProcessService.html":{}}}],["this.editorservice.incrementafterstroke",{"_index":658,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.editorservice.isdrawingtool",{"_index":654,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.editorservice.iseraser",{"_index":652,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.editorservice.istoolwithbrushsize",{"_index":2047,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["this.editorservice.linewidth",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"injectables/DrawService.html":{},"injectables/StateManagerService.html":{}}}],["this.editorservice.morphosize",{"_index":1704,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["this.editorservice.postprocessoption",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"injectables/DrawService.html":{}}}],["this.editorservice.redo.subscribe((value",{"_index":2165,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["this.editorservice.requestcanvasredraw",{"_index":1080,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["this.editorservice.samthreshold",{"_index":1692,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["this.editorservice.undo.subscribe((value",{"_index":2163,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["this.editorservice.useinverse",{"_index":1702,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["this.editorservice.useprocessing",{"_index":1081,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["this.el.nativeelement",{"_index":348,"title":{},"body":{"components/BlockableDiv.html":{},"components/BlockableP.html":{}}}],["this.el.nativeelement.children[0",{"_index":1181,"title":{},"body":{"components/LabelledSwitchComponent.html":{}}}],["this.eraseall",{"_index":822,"title":{},"body":{"injectables/EditorService.html":{}}}],["this.eraserpath.length",{"_index":1984,"title":{},"body":{"injectables/SVGUIService.html":{}}}],["this.extractimagesname(filelist",{"_index":1910,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.featuresextracted",{"_index":1694,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["this.gamma",{"_index":1098,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["this.getactivesavepath",{"_index":945,"title":{},"body":{"injectables/IOService.html":{}}}],["this.getactivesavepath().then((filepath",{"_index":939,"title":{},"body":{"injectables/IOService.html":{}}}],["this.getbrushsizeoffset",{"_index":2035,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["this.getfillcolor",{"_index":682,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.getinterval",{"_index":862,"title":{},"body":{"components/GalleryComponent.html":{}}}],["this.getshades",{"_index":1143,"title":{},"body":{"components/InstanceLabelComponent.html":{}}}],["this.getshades()[index",{"_index":1149,"title":{},"body":{"components/InstanceLabelComponent.html":{}}}],["this.getthumbnail().then((path",{"_index":891,"title":{},"body":{"components/GalleryElementComponent.html":{}}}],["this.gradient",{"_index":1409,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["this.height",{"_index":2025,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["this.icon",{"_index":2062,"title":{},"body":{"classes/Tool.html":{},"classes/Tools.html":{}}}],["this.id",{"_index":2060,"title":{},"body":{"classes/Tool.html":{},"classes/Tools.html":{}}}],["this.imageloaded.next(config",{"_index":396,"title":{},"body":{"injectables/CLIService.html":{},"interfaces/EventPayload.html":{}}}],["this.imagename",{"_index":897,"title":{},"body":{"components/GalleryElementComponent.html":{}}}],["this.imagepath",{"_index":892,"title":{},"body":{"components/GalleryElementComponent.html":{}}}],["this.imageprocessingservice",{"_index":1666,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["this.imagesname",{"_index":1912,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.imagesname[index",{"_index":1919,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.initializelisteners",{"_index":375,"title":{},"body":{"injectables/CLIService.html":{},"interfaces/EventPayload.html":{}}}],["this.inputfolder",{"_index":1868,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.inputfolder.endswith(sep",{"_index":1872,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.inputregex",{"_index":1908,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.intervalfunction",{"_index":861,"title":{},"body":{"components/GalleryComponent.html":{}}}],["this.ioservice.savefromcli(imageconfig",{"_index":225,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isboundingboxdetection",{"_index":1881,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.isclassification",{"_index":1878,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.isdragging",{"_index":2315,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["this.isdrawing",{"_index":2028,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["this.isinputvalid",{"_index":1780,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["this.isinstancesegmentation",{"_index":1880,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.isloading",{"_index":2243,"title":{},"body":{"injectables/ViewService.html":{}}}],["this.isnamevalid",{"_index":1782,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["this.isoutputvalid",{"_index":1781,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["this.isprojectstarted",{"_index":1911,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.issegmentation",{"_index":1879,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.isupdated",{"_index":1083,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["this.kernel_size",{"_index":1122,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["this.label",{"_index":1148,"title":{},"body":{"components/InstanceLabelComponent.html":{}}}],["this.label.shades",{"_index":1147,"title":{},"body":{"components/InstanceLabelComponent.html":{}}}],["this.labelcanvas",{"_index":460,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["this.labelcanvas.foreach((canvas",{"_index":480,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["this.labelcanvas.push(canvas",{"_index":466,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["this.labelservice.activelabel",{"_index":714,"title":{},"body":{"injectables/DrawService.html":{},"injectables/IOService.html":{}}}],["this.labelservice.activelabel?.color",{"_index":702,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.labelservice.activeseginstance",{"_index":698,"title":{},"body":{"injectables/DrawService.html":{},"components/InstanceLabelComponent.html":{}}}],["this.labelservice.activeseginstance.shade",{"_index":701,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.labelservice.addclassificationtask",{"_index":1941,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.labelservice.addclassificationtask(new",{"_index":178,"title":{},"body":{"components/AppComponent.html":{}}}],["this.labelservice.addmultilabeltask",{"_index":1946,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.labelservice.addmultilabeltask(new",{"_index":190,"title":{},"body":{"components/AppComponent.html":{}}}],["this.labelservice.addnewclassificationtask",{"_index":547,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["this.labelservice.addseglabel",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"components/ProjectConfigurationComponent.html":{}}}],["this.labelservice.addseglabel(seglabel",{"_index":979,"title":{},"body":{"injectables/IOService.html":{}}}],["this.labelservice.getactiveindex",{"_index":685,"title":{},"body":{"injectables/DrawService.html":{},"injectables/UndoRedoService.html":{}}}],["this.labelservice.incrementactiveinstance",{"_index":659,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.labelservice.listclassificationtasks.foreach((task",{"_index":989,"title":{},"body":{"injectables/IOService.html":{}}}],["this.labelservice.listclassificationtasks.length",{"_index":983,"title":{},"body":{"injectables/IOService.html":{}}}],["this.labelservice.listclassificationtasks.map",{"_index":1883,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.labelservice.listclassificationtasks.splice(taskindex",{"_index":560,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["this.labelservice.listclassificationtasks[index].choice",{"_index":987,"title":{},"body":{"injectables/IOService.html":{}}}],["this.labelservice.listclassificationtasks[taskindex].classlabels.length",{"_index":551,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["this.labelservice.listclassificationtasks[taskindex].classlabels.push('class",{"_index":552,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["this.labelservice.listclassificationtasks[taskindex].classlabels.splice(classindex",{"_index":553,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["this.labelservice.listsegmentationlabels",{"_index":715,"title":{},"body":{"injectables/DrawService.html":{},"injectables/ProjectService.html":{}}}],["this.labelservice.listsegmentationlabels.foreach((label",{"_index":462,"title":{},"body":{"injectables/CanvasManagerService.html":{},"injectables/IOService.html":{}}}],["this.labelservice.listsegmentationlabels.length",{"_index":716,"title":{},"body":{"injectables/DrawService.html":{},"components/ProjectConfigurationComponent.html":{}}}],["this.labelservice.listsegmentationlabels.map",{"_index":1882,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.labelservice.listsegmentationlabels[0",{"_index":991,"title":{},"body":{"injectables/IOService.html":{}}}],["this.labelservice.listsegmentationlabels[index].color",{"_index":722,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.labelservice.multilabeltask",{"_index":548,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{},"injectables/IOService.html":{},"injectables/ProjectService.html":{}}}],["this.labelservice.multilabeltask.choices",{"_index":982,"title":{},"body":{"injectables/IOService.html":{},"injectables/ProjectService.html":{}}}],["this.labelservice.multilabeltask.tasklabels",{"_index":1886,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.labelservice.multilabeltask.tasklabels.push(name",{"_index":557,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["this.labelservice.multilabeltask.tasklabels.splice(classindex",{"_index":561,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["this.labelservice.multilabeltask.taskname",{"_index":1885,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.labelservice.rebuildtreenodes",{"_index":980,"title":{},"body":{"injectables/IOService.html":{},"injectables/ProjectService.html":{}}}],["this.labelservice.removeseglabel(seglabel",{"_index":1784,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["this.labelsservice.activelabel",{"_index":1220,"title":{},"body":{"components/LabelsComponent.html":{}}}],["this.labelsservice.activelabel.color",{"_index":1227,"title":{},"body":{"components/LabelsComponent.html":{}}}],["this.labelsservice.activeseginstance",{"_index":1226,"title":{},"body":{"components/LabelsComponent.html":{}}}],["this.labelsservice.listsegmentationlabels.indexof",{"_index":1229,"title":{},"body":{"components/LabelsComponent.html":{}}}],["this.labelsservice.listsegmentationlabels[0",{"_index":1221,"title":{},"body":{"components/LabelsComponent.html":{}}}],["this.labelsservice.switchvisibilityallseglabels",{"_index":1234,"title":{},"body":{"components/LabelsComponent.html":{}}}],["this.lassopoints",{"_index":647,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.lassopoints.length",{"_index":644,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.lassopoints.push(canvascoord",{"_index":750,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.listclassificationtasks",{"_index":1297,"title":{},"body":{"injectables/LabelsService.html":{}}}],["this.listclassificationtasks.filter",{"_index":1298,"title":{},"body":{"injectables/LabelsService.html":{}}}],["this.listclassificationtasks.find((t",{"_index":1285,"title":{},"body":{"injectables/LabelsService.html":{}}}],["this.listclassificationtasks.length",{"_index":1295,"title":{},"body":{"injectables/LabelsService.html":{}}}],["this.listclassificationtasks.push(classtask",{"_index":1296,"title":{},"body":{"injectables/LabelsService.html":{}}}],["this.listclassificationtasks.push(task",{"_index":1287,"title":{},"body":{"injectables/LabelsService.html":{}}}],["this.listfiles",{"_index":1898,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.listsegmentationlabels.find((l",{"_index":1302,"title":{},"body":{"injectables/LabelsService.html":{}}}],["this.listsegmentationlabels.findindex",{"_index":1310,"title":{},"body":{"injectables/LabelsService.html":{}}}],["this.listsegmentationlabels.foreach((label",{"_index":1313,"title":{},"body":{"injectables/LabelsService.html":{}}}],["this.listsegmentationlabels.push(label",{"_index":1305,"title":{},"body":{"injectables/LabelsService.html":{}}}],["this.load_image(imageconfig",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loadexistingannotations",{"_index":974,"title":{},"body":{"injectables/IOService.html":{}}}],["this.loadingstatus",{"_index":2244,"title":{},"body":{"injectables/ViewService.html":{}}}],["this.localstoragesprojectsfilepaths",{"_index":1865,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.localstoragesprojectsfilepaths.filter",{"_index":1904,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.localstoragesprojectsfilepaths.map((projectfile",{"_index":1891,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.localstoragesprojectsfilepaths.push(projectfile",{"_index":1894,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.m",{"_index":1413,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["this.maxpoint",{"_index":2027,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["this.maxpoint.x",{"_index":2045,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["this.maxpoint.y",{"_index":2046,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["this.minpoint",{"_index":2026,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["this.minpoint.x",{"_index":2043,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["this.minpoint.y",{"_index":2044,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["this.multilabeltask",{"_index":1288,"title":{},"body":{"injectables/LabelsService.html":{}}}],["this.multilabeltask!.tasklabels.find((l",{"_index":1291,"title":{},"body":{"injectables/LabelsService.html":{}}}],["this.multilabeltask!.tasklabels.push(label",{"_index":1293,"title":{},"body":{"injectables/LabelsService.html":{}}}],["this.name",{"_index":2061,"title":{},"body":{"classes/Tool.html":{},"classes/Tools.html":{}}}],["this.ngxopencv.cvstate.subscribe((cvstate",{"_index":1402,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["this.ngzone.run",{"_index":378,"title":{},"body":{"injectables/CLIService.html":{},"interfaces/EventPayload.html":{}}}],["this.offset",{"_index":2361,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["this.offset.x",{"_index":2323,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["this.offset.y",{"_index":2325,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["this.opencvservice.brightness_contrast(this.preprocessimage",{"_index":1113,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["this.opencvservice.edgedetection(this.combinedctx",{"_index":485,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["this.opencvservice.gammacorrection(this.preprocessimage",{"_index":1115,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["this.opencvservice.median_blur(this.preprocessimage",{"_index":1121,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["this.opencvservice.reinforceedges(this.preprocessimage",{"_index":1124,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["this.opencvservice.stretchhist(this.preprocessimage",{"_index":1111,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["this.opencvservice.to_grayscale(this.preprocessimage",{"_index":1119,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["this.openeditor(this.activeindex",{"_index":1925,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.outputcanvas",{"_index":1438,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["this.outputcanvas.getcontext('2d",{"_index":1394,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["this.outputcanvas.height",{"_index":1422,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["this.outputcanvas.width",{"_index":1420,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["this.outputctx!.putimagedata(processedimagedata",{"_index":1436,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["this.outputfolder",{"_index":1873,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.percentagebeforerefresh",{"_index":863,"title":{},"body":{"components/GalleryComponent.html":{}}}],["this.postprocessdraw",{"_index":655,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.postprocesserase",{"_index":653,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.postprocessservice.crf_post_process",{"_index":709,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.postprocessservice.eraseall_post_process",{"_index":710,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.postprocessservice.otsu_post_process",{"_index":706,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.postprocessservice.sam_post_process",{"_index":708,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.preprocess",{"_index":1079,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["this.preprocessimage",{"_index":1084,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["this.preprocessimage.getcontext('2d",{"_index":1107,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["this.preprocessimage.height",{"_index":1105,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["this.preprocessimage.width",{"_index":1103,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["this.previouspoint",{"_index":2022,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["this.previouspoint.x",{"_index":2032,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["this.previouspoint.y",{"_index":2033,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["this.primeng.theme.set",{"_index":115,"title":{},"body":{"components/AppComponent.html":{}}}],["this.projectcreated.next(config",{"_index":382,"title":{},"body":{"injectables/CLIService.html":{},"interfaces/EventPayload.html":{}}}],["this.projectfolder",{"_index":1875,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.projectname",{"_index":1877,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.projectservice.create_project(config",{"_index":156,"title":{},"body":{"components/AppComponent.html":{}}}],["this.projectservice.imagesname.includes(image_name",{"_index":223,"title":{},"body":{"components/AppComponent.html":{}}}],["this.projectservice.imagesname.indexof(this.imagename",{"_index":893,"title":{},"body":{"components/GalleryElementComponent.html":{}}}],["this.projectservice.imagesname.push(image_name",{"_index":224,"title":{},"body":{"components/AppComponent.html":{}}}],["this.projectservice.inputfolder",{"_index":1776,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["this.projectservice.isclassification",{"_index":161,"title":{},"body":{"components/AppComponent.html":{}}}],["this.projectservice.isinstancesegmentation",{"_index":657,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.projectservice.isprojectstarted",{"_index":157,"title":{},"body":{"components/AppComponent.html":{}}}],["this.projectservice.issegmentation",{"_index":196,"title":{},"body":{"components/AppComponent.html":{}}}],["this.projectservice.listfiles",{"_index":865,"title":{},"body":{"components/GalleryComponent.html":{}}}],["this.projectservice.loadprojectfile(filepath",{"_index":1787,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["this.projectservice.loadprojectfile(value",{"_index":1788,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["this.projectservice.maxinstances",{"_index":1145,"title":{},"body":{"components/InstanceLabelComponent.html":{}}}],["this.projectservice.openeditor(0",{"_index":205,"title":{},"body":{"components/AppComponent.html":{}}}],["this.projectservice.openeditor(id",{"_index":894,"title":{},"body":{"components/GalleryElementComponent.html":{}}}],["this.projectservice.outputfolder",{"_index":1778,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["this.projectservice.projectname",{"_index":1783,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["this.projectservice.removeprojectfile(filepath",{"_index":1789,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["this.projectservice.resetproject",{"_index":1777,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["this.projectservice.startproject",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"components/ProjectConfigurationComponent.html":{}}}],["this.recursive",{"_index":1909,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.redo",{"_index":2166,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["this.redo.next(true",{"_index":829,"title":{},"body":{"injectables/EditorService.html":{}}}],["this.redostack.empty",{"_index":2222,"title":{},"body":{"classes/UndoRedoStack.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{}}}],["this.redostack.pop",{"_index":2219,"title":{},"body":{"classes/UndoRedoStack.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{}}}],["this.redostack.push(element",{"_index":2217,"title":{},"body":{"classes/UndoRedoStack.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{}}}],["this.redrawrequest.next(true",{"_index":638,"title":{},"body":{"injectables/DrawService.html":{},"injectables/UndoRedoService.html":{},"injectables/ZoomPanService.html":{}}}],["this.ref_canvas",{"_index":1082,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["this.ref_canvas.getcontext('2d",{"_index":1091,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["this.ref_canvas.height",{"_index":1089,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["this.ref_canvas.width",{"_index":1087,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["this.ref_image",{"_index":1085,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["this.ref_image.height",{"_index":1106,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["this.ref_image.width",{"_index":1104,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["this.refresh",{"_index":872,"title":{},"body":{"components/GalleryComponent.html":{}}}],["this.refreshcolor",{"_index":641,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.refreshinterval",{"_index":870,"title":{},"body":{"components/GalleryComponent.html":{}}}],["this.requestedreload.next(true",{"_index":938,"title":{},"body":{"injectables/IOService.html":{}}}],["this.resetcurrentpoint",{"_index":2031,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["this.resetminmaxpoints",{"_index":2029,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["this.resetpreviouspoint",{"_index":2030,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["this.router.navigate(['/editor",{"_index":2247,"title":{},"body":{"injectables/ViewService.html":{}}}],["this.router.navigate(['/gallery",{"_index":2245,"title":{},"body":{"injectables/ViewService.html":{}}}],["this.router.url",{"_index":2246,"title":{},"body":{"injectables/ViewService.html":{}}}],["this.scale",{"_index":2320,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["this.selectedtool",{"_index":820,"title":{},"body":{"injectables/EditorService.html":{}}}],["this.shades",{"_index":1142,"title":{},"body":{"components/InstanceLabelComponent.html":{}}}],["this.showalllabels",{"_index":1312,"title":{},"body":{"injectables/LabelsService.html":{}}}],["this.singledrawrequest.next(ctx",{"_index":697,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.smoothupdatetransform",{"_index":2359,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["this.stack",{"_index":2213,"title":{},"body":{"classes/UndoRedoStack.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{}}}],["this.stack.length",{"_index":2209,"title":{},"body":{"classes/UndoRedoStack.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{}}}],["this.stack.pop",{"_index":2212,"title":{},"body":{"classes/UndoRedoStack.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{}}}],["this.stack.push(element",{"_index":2210,"title":{},"body":{"classes/UndoRedoStack.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{}}}],["this.startproject",{"_index":1950,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.stateservice.currentpoint.x",{"_index":678,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.stateservice.currentpoint.y",{"_index":679,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.stateservice.getboundingbox",{"_index":683,"title":{},"body":{"injectables/DrawService.html":{},"injectables/PostProcessService.html":{}}}],["this.stateservice.height",{"_index":465,"title":{},"body":{"injectables/CanvasManagerService.html":{},"injectables/DrawService.html":{},"injectables/IOService.html":{},"injectables/PostProcessService.html":{},"injectables/UndoRedoService.html":{},"injectables/ZoomPanService.html":{}}}],["this.stateservice.isdrawing",{"_index":649,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.stateservice.previouspoint.x",{"_index":675,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.stateservice.previouspoint.y",{"_index":676,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.stateservice.recomputecanvassum",{"_index":640,"title":{},"body":{"injectables/DrawService.html":{},"injectables/UndoRedoService.html":{},"injectables/ZoomPanService.html":{}}}],["this.stateservice.reset",{"_index":723,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.stateservice.width",{"_index":479,"title":{},"body":{"injectables/CanvasManagerService.html":{},"injectables/DrawService.html":{},"injectables/IOService.html":{},"injectables/PostProcessService.html":{},"injectables/UndoRedoService.html":{},"injectables/ZoomPanService.html":{}}}],["this.svg.nativeelement.setattribute",{"_index":1969,"title":{},"body":{"components/SVGElementsComponent.html":{}}}],["this.svguiservice.addpoint(this.stateservice.currentpoint",{"_index":696,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.svguiservice.resetpath",{"_index":1720,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["this.swapmarkers",{"_index":823,"title":{},"body":{"injectables/EditorService.html":{}}}],["this.targetoffset",{"_index":2360,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["this.targetoffset.x",{"_index":2338,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["this.targetoffset.y",{"_index":2339,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["this.targetscale",{"_index":2358,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["this.tasklabels",{"_index":1340,"title":{},"body":{"classes/MulticlassTask.html":{},"classes/MultilabelTask.html":{}}}],["this.tasklabels.filter((l",{"_index":1341,"title":{},"body":{"classes/MulticlassTask.html":{},"classes/MultilabelTask.html":{}}}],["this.tasklabels.push(label",{"_index":1338,"title":{},"body":{"classes/MulticlassTask.html":{},"classes/MultilabelTask.html":{}}}],["this.to_bw",{"_index":1118,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["this.undo",{"_index":2164,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["this.undo.next(true",{"_index":830,"title":{},"body":{"injectables/EditorService.html":{}}}],["this.undoredoservice.update_undo_redo",{"_index":725,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.undostack.empty",{"_index":2223,"title":{},"body":{"classes/UndoRedoStack.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{}}}],["this.undostack.pop",{"_index":2215,"title":{},"body":{"classes/UndoRedoStack.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{}}}],["this.undostack.push(element",{"_index":2220,"title":{},"body":{"classes/UndoRedoStack.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{}}}],["this.viewservice.endloading",{"_index":1016,"title":{},"body":{"injectables/IOService.html":{},"injectables/ProjectService.html":{}}}],["this.viewservice.navigatetoeditor()?.then",{"_index":1924,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.viewservice.navigatetogallery",{"_index":1899,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.viewservice.setloading(true",{"_index":994,"title":{},"body":{"injectables/IOService.html":{},"injectables/ProjectService.html":{}}}],["this.width",{"_index":2024,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["this.writesave",{"_index":1015,"title":{},"body":{"injectables/IOService.html":{}}}],["this.writesave(savefile",{"_index":1022,"title":{},"body":{"injectables/IOService.html":{}}}],["this.zoompanservice.getimagecoordinates(event",{"_index":749,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.zoompanservice.wheel(event",{"_index":753,"title":{},"body":{"injectables/DrawService.html":{}}}],["threshold",{"_index":1691,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["thresholding",{"_index":1590,"title":{},"body":{"injectables/OpenCVService.html":{},"components/ToolSettingComponent.html":{}}}],["through",{"_index":1618,"title":{},"body":{"injectables/OpenCVService.html":{},"index.html":{}}}],["throw",{"_index":699,"title":{},"body":{"injectables/DrawService.html":{}}}],["thumbnail",{"_index":290,"title":{"interfaces/Thumbnail.html":{}},"body":{"interfaces/BboxLabel.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{},"coverage.html":{}}}],["thumbnailpath",{"_index":292,"title":{},"body":{"interfaces/BboxLabel.html":{},"components/GalleryElementComponent.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{}}}],["thumbnails",{"_index":898,"title":{},"body":{"components/GalleryElementComponent.html":{},"components/ProjectConfigurationComponent.html":{}}}],["thumbnailssize",{"_index":2227,"title":{},"body":{"injectables/ViewService.html":{}}}],["time",{"_index":2528,"title":{},"body":{"index.html":{}}}],["timer",{"_index":1669,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["title",{"_index":35,"title":{},"body":{"components/AppComponent.html":{}}}],["to_bw",{"_index":1046,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["to_grayscale",{"_index":1362,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["to_grayscale(input",{"_index":1388,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["tolerance",{"_index":1624,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["took",{"_index":1682,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["tool",{"_index":273,"title":{"classes/Tool.html":{}},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"injectables/EditorService.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"classes/Tool.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"classes/Tools.html":{},"coverage.html":{}}}],["tool(0",{"_index":2065,"title":{},"body":{"classes/Tool.html":{},"classes/Tools.html":{}}}],["tool(1",{"_index":2070,"title":{},"body":{"classes/Tool.html":{},"classes/Tools.html":{}}}],["tool(2",{"_index":2075,"title":{},"body":{"classes/Tool.html":{},"classes/Tools.html":{}}}],["tool(3",{"_index":2078,"title":{},"body":{"classes/Tool.html":{},"classes/Tools.html":{}}}],["tool(8",{"_index":2073,"title":{},"body":{"classes/Tool.html":{},"classes/Tools.html":{}}}],["toolbar",{"_index":2128,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["toolbar'},{'name",{"_index":271,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["toolbar.component.html",{"_index":2129,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["toolbar.component.scss",{"_index":2130,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["toolbarcomponent",{"_index":270,"title":{"components/ToolbarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["toolbarmodule",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/ToolbarComponent.html":{}}}],["tools",{"_index":630,"title":{"classes/Tools.html":{}},"body":{"injectables/DrawService.html":{},"injectables/EditorService.html":{},"classes/Tool.html":{},"components/ToolbarComponent.html":{},"classes/Tools.html":{},"coverage.html":{}}}],["tools.all_tools",{"_index":2134,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["tools.eraser",{"_index":825,"title":{},"body":{"injectables/EditorService.html":{},"classes/Tool.html":{},"classes/Tools.html":{}}}],["tools.lasso",{"_index":824,"title":{},"body":{"injectables/EditorService.html":{},"classes/Tool.html":{},"classes/Tools.html":{}}}],["tools.lasso_eraser",{"_index":826,"title":{},"body":{"injectables/EditorService.html":{},"classes/Tool.html":{},"classes/Tools.html":{}}}],["tools.pan",{"_index":821,"title":{},"body":{"injectables/EditorService.html":{},"classes/Tool.html":{},"classes/Tools.html":{}}}],["tools.pen",{"_index":813,"title":{},"body":{"injectables/EditorService.html":{},"classes/Tool.html":{},"classes/Tools.html":{}}}],["toolsettingcomponent",{"_index":272,"title":{"components/ToolSettingComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["top",{"_index":1459,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["total",{"_index":1499,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["total.delete",{"_index":1514,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["tqdm",{"_index":2599,"title":{},"body":{"index.html":{}}}],["tqdm(all_files",{"_index":2639,"title":{},"body":{"index.html":{}}}],["tqdm.notebook",{"_index":2598,"title":{},"body":{"index.html":{}}}],["trackbyfn",{"_index":520,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["trackbyfn(index",{"_index":537,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["train_datasets=dataset.idrid).argmax(0).cpu().numpy",{"_index":2614,"title":{},"body":{"index.html":{}}}],["transparent",{"_index":1615,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["treemodule",{"_index":1183,"title":{},"body":{"components/LabelsComponent.html":{}}}],["treenode",{"_index":1199,"title":{},"body":{"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"miscellaneous/functions.html":{}}}],["true",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"components/ClassificationConfigurationComponent.html":{},"injectables/DrawService.html":{},"interfaces/EventPayload.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"injectables/ImageProcessingService.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"components/LoadingComponent.html":{},"injectables/OpenCVService.html":{},"injectables/PostProcessService.html":{},"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UndoRedoService.html":{},"injectables/ZoomPanService.html":{}}}],["try",{"_index":377,"title":{},"body":{"injectables/CLIService.html":{},"interfaces/EventPayload.html":{},"injectables/ImageProcessingService.html":{}}}],["tslib",{"_index":2466,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"interfaces/BboxLabel.html":{},"injectables/BboxManagerService.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"components/ClassificationConfigurationComponent.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"interfaces/EventPayload.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"interfaces/ImageFromCLI.html":{},"injectables/ImageProcessingService.html":{},"components/InstanceLabelComponent.html":{},"interfaces/LabelFormat.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"components/LoadingComponent.html":{},"interfaces/MulticlassInterface.html":{},"classes/MulticlassTask.html":{},"interfaces/MultilabelInterface.html":{},"classes/MultilabelTask.html":{},"injectables/OpenCVService.html":{},"interfaces/Point2D.html":{},"interfaces/Point2D-1.html":{},"injectables/PostProcessService.html":{},"interfaces/ProjectConfig.html":{},"components/ProjectConfigurationComponent.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"interfaces/Rect-1.html":{},"components/SVGElementsComponent.html":{},"injectables/SVGUIService.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"injectables/StateManagerService.html":{},"interfaces/Thumbnail.html":{},"classes/Tool.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"classes/Tools.html":{},"interfaces/UndoRedoCanvasElement.html":{},"injectables/UndoRedoService.html":{},"classes/UndoRedoStack.html":{},"injectables/ViewService.html":{},"interfaces/Viewbox.html":{},"interfaces/Viewbox-1.html":{},"injectables/ZoomPanService.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":2518,"title":{},"body":{"index.html":{}}}],["ui",{"_index":2552,"title":{},"body":{"index.html":{}}}],["ui/view.service",{"_index":932,"title":{},"body":{"injectables/IOService.html":{},"injectables/ProjectService.html":{}}}],["uint8clampedarray",{"_index":1655,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["uint8clampedarray(imagebitmap",{"_index":1685,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["uint8clampedarray(mask",{"_index":1709,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["uint8clampedarray(output.data",{"_index":1605,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["uint8clampedarray(this.gradient.data",{"_index":1435,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["uipoints",{"_index":1956,"title":{},"body":{"components/SVGElementsComponent.html":{}}}],["undefined",{"_index":851,"title":{},"body":{"components/GalleryComponent.html":{},"injectables/ProjectService.html":{},"classes/UndoRedoStack.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{}}}],["under",{"_index":2648,"title":{},"body":{"index.html":{}}}],["undo",{"_index":631,"title":{},"body":{"injectables/DrawService.html":{},"injectables/EditorService.html":{},"injectables/UndoRedoService.html":{},"classes/UndoRedoStack.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{}}}],["undoredo",{"_index":2161,"title":{},"body":{"injectables/UndoRedoService.html":{},"classes/UndoRedoStack.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["undoredo.empty",{"_index":2184,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["undoredo.push",{"_index":2189,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["undoredo.redo",{"_index":2180,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["undoredo.undo",{"_index":2167,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["undoredocanvaselement",{"_index":303,"title":{"interfaces/UndoRedoCanvasElement.html":{}},"body":{"interfaces/BboxLabel.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"classes/UndoRedoStack.html":{},"interfaces/Viewbox.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{},"coverage.html":{}}}],["undoredoservice",{"_index":588,"title":{"injectables/UndoRedoService.html":{}},"body":{"injectables/DrawService.html":{},"injectables/UndoRedoService.html":{},"coverage.html":{}}}],["undoredostack",{"_index":2193,"title":{"classes/UndoRedoStack.html":{}},"body":{"classes/UndoRedoStack.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["undostack",{"_index":2196,"title":{},"body":{"classes/UndoRedoStack.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{}}}],["ungradable",{"_index":189,"title":{},"body":{"components/AppComponent.html":{}}}],["unknown",{"_index":392,"title":{},"body":{"injectables/CLIService.html":{},"interfaces/EventPayload.html":{},"injectables/IOService.html":{},"injectables/PostProcessService.html":{},"injectables/ProjectService.html":{}}}],["up",{"_index":1608,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["update_undo_redo",{"_index":2152,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["updatecheck",{"_index":1167,"title":{},"body":{"components/LabelledSwitchComponent.html":{}}}],["updatecurrentpoint",{"_index":1999,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["updatecurrentpoint(point",{"_index":2012,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["updatelasso",{"_index":585,"title":{},"body":{"injectables/DrawService.html":{}}}],["updatelasso(event",{"_index":619,"title":{},"body":{"injectables/DrawService.html":{}}}],["updateminmaxpoints",{"_index":2000,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["updateminmaxpoints(point",{"_index":2014,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["updateopacity",{"_index":1195,"title":{},"body":{"components/LabelsComponent.html":{}}}],["updatepreviouspoint",{"_index":2001,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["updatepreviouspoint(point",{"_index":2015,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["upperbound",{"_index":1625,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["upperbound.delete",{"_index":1637,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["upperbound.setto(new",{"_index":1629,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["url(#remove",{"_index":476,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["usage",{"_index":2584,"title":{},"body":{"index.html":{}}}],["use",{"_index":1075,"title":{},"body":{"injectables/ImageProcessingService.html":{},"components/ToolSettingComponent.html":{},"index.html":{}}}],["use_medianblur",{"_index":1047,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["useinverse",{"_index":769,"title":{},"body":{"injectables/EditorService.html":{}}}],["useprocessing",{"_index":770,"title":{},"body":{"injectables/EditorService.html":{}}}],["utilities",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["v2",{"_index":2501,"title":{},"body":{"index.html":{}}}],["validate",{"_index":1779,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["validation",{"_index":2580,"title":{},"body":{"index.html":{}}}],["value",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"injectables/BboxManagerService.html":{},"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"injectables/ImageProcessingService.html":{},"components/InstanceLabelComponent.html":{},"injectables/LabelsService.html":{},"classes/MulticlassTask.html":{},"classes/MultilabelTask.html":{},"injectables/OpenCVService.html":{},"injectables/PostProcessService.html":{},"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{},"components/SVGElementsComponent.html":{},"injectables/SVGUIService.html":{},"injectables/StateManagerService.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"classes/Tools.html":{},"injectables/UndoRedoService.html":{},"classes/UndoRedoStack.html":{},"injectables/ViewService.html":{},"injectables/ZoomPanService.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":231,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"injectables/OpenCVService.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["variable",{"_index":2418,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2654,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vec",{"_index":1530,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["vec.delete",{"_index":1537,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["vec.get(0).convertto(vec.get(0",{"_index":1533,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["vec.get(1).convertto(vec.get(1",{"_index":1534,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["vec.get(2).convertto(vec.get(2",{"_index":1535,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["version",{"_index":2499,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["viewbox",{"_index":298,"title":{"interfaces/Viewbox.html":{},"interfaces/Viewbox-1.html":{}},"body":{"interfaces/BboxLabel.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/Point2D-1.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"interfaces/Rect.html":{},"interfaces/Rect-1.html":{},"components/SVGElementsComponent.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{},"interfaces/Viewbox-1.html":{},"injectables/ZoomPanService.html":{},"coverage.html":{}}}],["viewbox.height",{"_index":1973,"title":{},"body":{"components/SVGElementsComponent.html":{}}}],["viewbox.width",{"_index":1972,"title":{},"body":{"components/SVGElementsComponent.html":{}}}],["viewbox.x",{"_index":1970,"title":{},"body":{"components/SVGElementsComponent.html":{}}}],["viewbox.y",{"_index":1971,"title":{},"body":{"components/SVGElementsComponent.html":{}}}],["viewboxheight",{"_index":2327,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["viewboxwidth",{"_index":2326,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["viewboxx",{"_index":2322,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["viewboxy",{"_index":2324,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["viewchild",{"_index":1178,"title":{},"body":{"components/LabelledSwitchComponent.html":{},"components/SVGElementsComponent.html":{}}}],["viewchild('svg",{"_index":1965,"title":{},"body":{"components/SVGElementsComponent.html":{}}}],["viewservice",{"_index":36,"title":{"injectables/ViewService.html":{}},"body":{"components/AppComponent.html":{},"injectables/IOService.html":{},"components/LoadingComponent.html":{},"injectables/ProjectService.html":{},"injectables/ViewService.html":{},"coverage.html":{}}}],["viewservice.loadingstatus",{"_index":1328,"title":{},"body":{"components/LoadingComponent.html":{}}}],["void",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"components/ClassificationConfigurationComponent.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"injectables/ImageProcessingService.html":{},"components/InstanceLabelComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"classes/MultilabelTask.html":{},"injectables/OpenCVService.html":{},"injectables/PostProcessService.html":{},"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{},"components/SVGElementsComponent.html":{},"injectables/SVGUIService.html":{},"injectables/StateManagerService.html":{},"components/ToolbarComponent.html":{},"injectables/UndoRedoService.html":{},"classes/UndoRedoStack.html":{},"injectables/ViewService.html":{},"injectables/ZoomPanService.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{}}}],["w",{"_index":1721,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["wasm",{"_index":2526,"title":{},"body":{"index.html":{}}}],["way",{"_index":149,"title":{},"body":{"components/AppComponent.html":{}}}],["wheel",{"_index":586,"title":{},"body":{"injectables/DrawService.html":{},"injectables/ZoomPanService.html":{}}}],["wheel(event",{"_index":621,"title":{},"body":{"injectables/DrawService.html":{},"injectables/ZoomPanService.html":{}}}],["wheelevent",{"_index":622,"title":{},"body":{"injectables/DrawService.html":{},"injectables/ZoomPanService.html":{}}}],["width",{"_index":296,"title":{},"body":{"interfaces/BboxLabel.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"injectables/OpenCVService.html":{},"interfaces/Point2D.html":{},"interfaces/Point2D-1.html":{},"injectables/PostProcessService.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"interfaces/Rect.html":{},"interfaces/Rect-1.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"injectables/StateManagerService.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{},"interfaces/Viewbox-1.html":{},"injectables/ZoomPanService.html":{}}}],["willreadfrequently",{"_index":1108,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["works",{"_index":1155,"title":{},"body":{"components/InteractiveBboxComponent.html":{},"components/TestingComponent.html":{}}}],["write",{"_index":1579,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["writesave",{"_index":913,"title":{},"body":{"injectables/IOService.html":{}}}],["writesave(labelformat",{"_index":926,"title":{},"body":{"injectables/IOService.html":{}}}],["x",{"_index":294,"title":{},"body":{"interfaces/BboxLabel.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"injectables/OpenCVService.html":{},"interfaces/Point2D.html":{},"interfaces/Point2D-1.html":{},"injectables/PostProcessService.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"interfaces/Rect.html":{},"interfaces/Rect-1.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"injectables/StateManagerService.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{},"interfaces/Viewbox-1.html":{},"injectables/ZoomPanService.html":{}}}],["x+1",{"_index":1464,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["xmax",{"_index":301,"title":{},"body":{"interfaces/BboxLabel.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/Point2D-1.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"interfaces/Rect.html":{},"interfaces/Rect-1.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{},"interfaces/Viewbox-1.html":{},"injectables/ZoomPanService.html":{}}}],["xmin",{"_index":299,"title":{},"body":{"interfaces/BboxLabel.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/Point2D-1.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"interfaces/Rect.html":{},"interfaces/Rect-1.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{},"interfaces/Viewbox-1.html":{},"injectables/ZoomPanService.html":{}}}],["xml",{"_index":948,"title":{},"body":{"injectables/IOService.html":{},"interfaces/LabelFormat.html":{},"dependencies.html":{}}}],["xmlbuilder",{"_index":1157,"title":{},"body":{"interfaces/LabelFormat.html":{}}}],["xmlcontent",{"_index":2482,"title":{},"body":{"miscellaneous/functions.html":{}}}],["y",{"_index":295,"title":{},"body":{"interfaces/BboxLabel.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"injectables/OpenCVService.html":{},"interfaces/Point2D.html":{},"interfaces/Point2D-1.html":{},"injectables/PostProcessService.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"interfaces/Rect.html":{},"interfaces/Rect-1.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"injectables/StateManagerService.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{},"interfaces/Viewbox-1.html":{},"injectables/ZoomPanService.html":{}}}],["ymax",{"_index":302,"title":{},"body":{"interfaces/BboxLabel.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/Point2D-1.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"interfaces/Rect.html":{},"interfaces/Rect-1.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{},"interfaces/Viewbox-1.html":{},"injectables/ZoomPanService.html":{}}}],["ymin",{"_index":300,"title":{},"body":{"interfaces/BboxLabel.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/Point2D-1.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"interfaces/Rect.html":{},"interfaces/Rect-1.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{},"interfaces/Viewbox-1.html":{},"injectables/ZoomPanService.html":{}}}],["zeromq",{"_index":2562,"title":{},"body":{"index.html":{}}}],["zmq.rep",{"_index":133,"title":{},"body":{"components/AppComponent.html":{}}}],["zone.js",{"_index":2468,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":628,"title":{},"body":{"injectables/DrawService.html":{}}}],["zoomintensity",{"_index":2374,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["zoompanservice",{"_index":587,"title":{"injectables/ZoomPanService.html":{}},"body":{"injectables/DrawService.html":{},"injectables/ZoomPanService.html":{},"coverage.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                ToolbarModule\n                                LoadingComponent\n                            NgIf\n                            RouterOutlet\n                            Button\n                            RouterModule\n                            BlockUIModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                editorService\n                            \n                            \n                                    Public\n                                projectService\n                            \n                            \n                                title\n                            \n                            \n                                    Public\n                                viewService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createCLISubscription\n                            \n                            \n                                    Async\n                                debug\n                            \n                            \n                                isProjectStarted\n                            \n                            \n                                    Async\n                                load_image\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(viewService: ViewService, projectService: ProjectService, editorService: EditorService, labelService: LabelsService, cli: CLIService, cdr: ChangeDetectorRef, IOService: IOService, primeNG: PrimeNG)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        viewService\n                                                  \n                                                        \n                                                                        ViewService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        editorService\n                                                  \n                                                        \n                                                                        EditorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        labelService\n                                                  \n                                                        \n                                                                        LabelsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cli\n                                                  \n                                                        \n                                                                        CLIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        IOService\n                                                  \n                                                        \n                                                                        IOService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        primeNG\n                                                  \n                                                        \n                                                                    PrimeNG\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createCLISubscription\n                        \n                    \n                \n            \n            \n                \ncreateCLISubscription()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:79\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        debug\n                        \n                    \n                \n            \n            \n                \n                        \n                    debug()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:103\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isProjectStarted\n                        \n                    \n                \n            \n            \n                \nisProjectStarted()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:161\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        load_image\n                        \n                    \n                \n            \n            \n                \n                        \n                    load_image(imageConfig: ImageFromCLI)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:145\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                imageConfig\n                                            \n                                                            ImageFromCLI\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:99\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        editorService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EditorService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProjectService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Client'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        viewService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ViewService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:52\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n} from '@angular/core';\n\nimport { ToolbarModule } from 'primeng/toolbar';\n\nimport { ViewService } from './Services/UI/view.service';\nimport { LoadingComponent } from './Components/Interface/loading/loading.component';\nimport { RouterOutlet } from '@angular/router';\nimport { NgIf } from '@angular/common';\nimport { ProjectService } from './Services/Project/project.service';\nimport { Button } from 'primeng/button';\nimport { RouterModule } from '@angular/router';\nimport { environment } from '../environments/environment';\nimport { LabelsService } from './Services/Project/labels.service';\nimport { EditorService } from './Services/UI/editor.service';\nimport { path } from '@tauri-apps/api';\nimport { CLIService } from './Services/cli.service';\nimport { IOService } from './Services/io.service';\nimport { ImageFromCLI } from './Core/interface';\nimport { PostProcessOption } from './Core/tools';\nimport { PrimeNG } from 'primeng/config';\nimport Aura from '@primeng/themes/aura';\nimport Material from '@primeng/themes/material';\nimport Lara from '@primeng/themes/lara';\nimport Nora from '@primeng/themes/nora';\nimport { MulticlassTask, MultilabelTask } from './Core/task';\nimport { BlockUIModule } from 'primeng/blockui';\n\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [\n    ToolbarModule,\n    LoadingComponent,\n    NgIf,\n    RouterOutlet,\n    Button,\n    RouterModule,\n    BlockUIModule\n  ],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss',\n})\nexport class AppComponent implements AfterViewInit {\n  title = 'Client';\n\n  constructor(\n    public viewService: ViewService,\n    public projectService: ProjectService,\n    public editorService: EditorService,\n    private labelService: LabelsService,\n    private cli: CLIService,\n    private cdr: ChangeDetectorRef,\n    private IOService: IOService,\n    private primeNG: PrimeNG\n  ) {\n    this.primeNG.theme.set({\n      preset: Aura,\n      options: {\n        darkModeSelector: '.darkTheme',\n        cssLayer: {\n          name: 'primeng',\n          order: 'tailwind-base, primeng, tailwind-utilities',\n        },\n      },\n    });\n    this.createCLISubscription();\n  }\n  /*\n  * Create the subscriptions to CLI events.\n  * The chain of calls is as followed: Tauri (via ZMQ.REP) listens to the localhost port. \n  * If a message is received, an event is sent to the application. Event is then processed by the CLI service.\n  * The CLI service calls a Subject.next() to emit the payload to the application.\n  */\n  createCLISubscription() {\n    // Not sure if this is the right way to do or even needed\n    this.cli.commandProcessed.subscribe((value) => {\n      if (value) {\n        this.cdr.detectChanges();\n      }\n    });\n    this.cli.projectCreated.subscribe((config) => {\n      if (config) {\n        this.projectService.create_project(config);\n        this.projectService.isProjectStarted = true;\n\n      }\n    });\n    this.cli.imageLoaded.subscribe((imageConfig) => {\n      if (imageConfig) {\n        this.load_image(imageConfig);\n      }\n    });\n  }\n  ngAfterViewInit() {\n    // this.debug();\n  }\n\n  async debug() {\n    this.projectService.isClassification = true;\n    this.labelService.addSegLabel({\n      label: 'Foreground',\n      color: '#209fb5',\n      isVisible: true,\n      shades: null,\n    });\n    this.labelService.addSegLabel({\n      label: 'Example1/Class 1',\n      color: '#df8e1d',\n      isVisible: true,\n      shades: null,\n    });\n    this.labelService.addSegLabel({\n      label: 'Example1/Class 2',\n      color: '#8839ef',\n      isVisible: true,\n      shades: null,\n    });\n    this.labelService.addSegLabel({\n      label: 'Example2/Class 3',\n      color: '#d20f39',\n      isVisible: true,\n      shades: null,\n    });\n    this.projectService.isClassification = true;\n    this.labelService.addClassificationTask(new MulticlassTask('DR Grading',\n      ['Absent', 'Mild', 'Moderate', 'Severe', 'Proliferative'], 'Absent'));\n    this.labelService.addClassificationTask(new MulticlassTask('Quality', ['Good', 'Readable', 'Ungradable']));\n    this.labelService.addMultilabelTask(new MultilabelTask('Misc', ['AMD', 'Glaucoma', 'Catract', 'Hypertension']));\n    this.projectService.isSegmentation = true;\n    this.editorService.autoPostProcess = true;\n    this.editorService.postProcessOption = PostProcessOption.CRF;\n    this.editorService.lineWidth = 40;\n\n    let isStarted$ = this.projectService.startProject();\n    isStarted$.then(() => {\n      this.projectService.openEditor(0);\n    });\n  }\n\n  async load_image(imageConfig: ImageFromCLI) {\n    let image_path = await path.resolve(imageConfig.image_path);\n    // Get the image name: we split the path from projectService.inputFolder and get the last element of image_path\n    // i.e image_path = projectService.inputFolder / image_name\n    // The idea is to get not just the filename, but the path relative to the input folder\n    let image_name = image_path.split(this.projectService.inputFolder)[1];\n\n    console.log('Image name:', image_name);\n    if (this.projectService.imagesName.includes(image_name)) {\n    }\n    else {\n      this.projectService.imagesName.push(image_name);\n    }\n    await this.IOService.saveFromCLI(imageConfig, image_name);\n  }\n\n  isProjectStarted() {\n    return this.projectService.isProjectStarted;\n  }\n}\n\n    \n\n    \n        \n  \n     Annotator \n  \n  \n    \n      \n      \n\n      \n      \n\n      \n      \n    \n  \n   \n\n\n \n -->\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       Annotator                                                        -->'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlockableDiv', 'selector': 'blockable-div'},{'name': 'BlockableP', 'selector': 'blockable-p'},{'name': 'ClassificationConfigurationComponent', 'selector': 'app-classification-configuration'},{'name': 'DrawableCanvasComponent', 'selector': 'app-drawable-canvas'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'GalleryComponent', 'selector': 'app-gallery'},{'name': 'GalleryElementComponent', 'selector': 'app-gallery-element'},{'name': 'InstanceLabelComponent', 'selector': 'app-instance-label'},{'name': 'InteractiveBboxComponent', 'selector': 'app-interactive-bbox'},{'name': 'LabelledSwitchComponent', 'selector': 'app-labelled-switch'},{'name': 'LabelsComponent', 'selector': 'app-labels'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'ProjectConfigurationComponent', 'selector': 'app-project-configuration'},{'name': 'SVGElementsComponent', 'selector': 'app-svgelements'},{'name': 'TestingComponent', 'selector': 'app-testing'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'ToolSettingComponent', 'selector': 'app-tool-setting'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BboxLabel.html":{"url":"interfaces/BboxLabel.html","title":"interface - BboxLabel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BboxLabel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Core/interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bbox\n                                        \n                                \n                                \n                                        \n                                            instance\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bbox\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bbox:         Rect\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Rect\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        instance\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        instance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         SegLabel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SegLabel\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SegLabel {\n  label: string;\n  color: string;\n  isVisible: boolean;\n  shades: string[] | null;\n}\n\nexport interface SegInstance {\n  label: SegLabel;\n  instance: number;\n  shade: string;\n}\n\nexport interface BboxLabel {\n  label: SegLabel;\n  bbox: Rect;\n  instance: number;\n}\n\nexport interface Thumbnail {\n  name: Promise;\n  thumbnailPath: Promise;\n}\n\nexport interface Point2D {\n  x: number;\n  y: number;\n}\n\nexport interface Rect {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\n\nexport interface Viewbox {\n  xmin: number;\n  ymin: number;\n  xmax: number;\n  ymax: number;\n}\n\nexport interface UndoRedoCanvasElement {\n  data: Blob | Blob[];\n  index: number;\n}\n\nexport interface MulticlassInterface {\n  name: string;\n  classes: string[];\n  default: string | null;\n}\n\nexport interface MultilabelInterface {\n  name: string;\n  classes: string[];\n  default: string[] | null;\n}\n\nexport interface ProjectConfig {\n  project_name: string;\n  input_dir: string;\n  output_dir: string;\n  is_segmentation: boolean;\n  is_classification: boolean;\n  is_instance_segmentation: boolean;\n  is_bbox_detection: boolean;\n  segmentation_classes: null | string[];\n  classification_classes: null | MulticlassInterface[];\n  classification_multilabel: null | MultilabelInterface;\n}\n\nexport interface ImageFromCLI {\n  image_path: string;\n  mask_data: string[] | null;\n  segmentation_classes: string[] | null;\n  classification_classes: string[] | null;\n  classification_multilabel: string[] | null;\n}\n\n\nexport interface ProjectFile{\n  root: string;\n  project_name: string;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BboxManagerService.html":{"url":"injectables/BboxManagerService.html","title":"injectable - BboxManagerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BboxManagerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Components/Core/drawable-canvas/service/bbox-manager.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                listBbox\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/Components/Core/drawable-canvas/service/bbox-manager.service.ts:12\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        listBbox\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BboxLabel[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/bbox-manager.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BboxLabel } from '../../../../Core/interface';\n\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BboxManagerService {\n\n  listBbox: BboxLabel[] = [];\n\n  constructor() { \n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BlockableDiv.html":{"url":"components/BlockableDiv.html","title":"component - BlockableDiv","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BlockableDiv\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/Components/Core/Blockable/div/div.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                BlockableUI\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                blockable-div\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            NgStyle\n                            NgClass\n                \n            \n\n\n\n            \n                template\n                \n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getBlockableElement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                            \n                                style\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/Components/Core/Blockable/div/div.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        class\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/Components/Core/Blockable/div/div.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        style\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/Components/Core/Blockable/div/div.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getBlockableElement\n                        \n                    \n                \n            \n            \n                \ngetBlockableElement()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/Blockable/div/div.component.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     HTMLElement\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, Input } from '@angular/core';\nimport { NgStyle, NgClass } from '@angular/common';\nimport { BlockableUI } from 'primeng/api';\n\n@Component({\n    selector: 'blockable-div',\n    standalone: true,\n    imports: [NgStyle, NgClass],\n    template: `        \n        \n    `\n})\nexport class BlockableDiv implements BlockableUI {\n\n    @Input() style: any;\n    @Input() class: any;\n\n    constructor(private el: ElementRef) {\n    }\n\n    getBlockableElement(): HTMLElement { \n        return this.el.nativeElement;\n    }\n\n}\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlockableDiv', 'selector': 'blockable-div'},{'name': 'BlockableP', 'selector': 'blockable-p'},{'name': 'ClassificationConfigurationComponent', 'selector': 'app-classification-configuration'},{'name': 'DrawableCanvasComponent', 'selector': 'app-drawable-canvas'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'GalleryComponent', 'selector': 'app-gallery'},{'name': 'GalleryElementComponent', 'selector': 'app-gallery-element'},{'name': 'InstanceLabelComponent', 'selector': 'app-instance-label'},{'name': 'InteractiveBboxComponent', 'selector': 'app-interactive-bbox'},{'name': 'LabelledSwitchComponent', 'selector': 'app-labelled-switch'},{'name': 'LabelsComponent', 'selector': 'app-labels'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'ProjectConfigurationComponent', 'selector': 'app-project-configuration'},{'name': 'SVGElementsComponent', 'selector': 'app-svgelements'},{'name': 'TestingComponent', 'selector': 'app-testing'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'ToolSettingComponent', 'selector': 'app-tool-setting'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BlockableDiv'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BlockableP.html":{"url":"components/BlockableP.html","title":"component - BlockableP","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BlockableP\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/Components/Core/Blockable/p/p.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                BlockableUI\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                blockable-p\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            NgStyle\n                            NgClass\n                \n            \n\n\n\n            \n                template\n                \n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getBlockableElement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                            \n                                style\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/Components/Core/Blockable/p/p.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        class\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/Components/Core/Blockable/p/p.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        style\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/Components/Core/Blockable/p/p.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getBlockableElement\n                        \n                    \n                \n            \n            \n                \ngetBlockableElement()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/Blockable/p/p.component.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     HTMLElement\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, Input } from '@angular/core';\nimport { NgStyle, NgClass } from '@angular/common';\nimport { BlockableUI } from 'primeng/api';\n\n@Component({\n    selector: 'blockable-p',\n    standalone: true,\n    imports: [NgStyle, NgClass],\n    template: `        \n        \n    `\n})\nexport class BlockableP implements BlockableUI {\n\n    @Input() style: any;\n    @Input() class: any;\n\n    constructor(private el: ElementRef) {\n    }\n\n    getBlockableElement(): HTMLElement { \n        return this.el.nativeElement;\n    }\n\n}\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlockableDiv', 'selector': 'blockable-div'},{'name': 'BlockableP', 'selector': 'blockable-p'},{'name': 'ClassificationConfigurationComponent', 'selector': 'app-classification-configuration'},{'name': 'DrawableCanvasComponent', 'selector': 'app-drawable-canvas'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'GalleryComponent', 'selector': 'app-gallery'},{'name': 'GalleryElementComponent', 'selector': 'app-gallery-element'},{'name': 'InstanceLabelComponent', 'selector': 'app-instance-label'},{'name': 'InteractiveBboxComponent', 'selector': 'app-interactive-bbox'},{'name': 'LabelledSwitchComponent', 'selector': 'app-labelled-switch'},{'name': 'LabelsComponent', 'selector': 'app-labels'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'ProjectConfigurationComponent', 'selector': 'app-project-configuration'},{'name': 'SVGElementsComponent', 'selector': 'app-svgelements'},{'name': 'TestingComponent', 'selector': 'app-testing'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'ToolSettingComponent', 'selector': 'app-tool-setting'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BlockableP'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CLIService.html":{"url":"injectables/CLIService.html","title":"injectable - CLIService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CLIService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Services/cli.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                commandProcessed\n                            \n                            \n                                    Public\n                                imageLoaded\n                            \n                            \n                                    Public\n                                projectCreated\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initializeListeners\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ngZone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/app/Services/cli.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initializeListeners\n                        \n                    \n                \n            \n            \n                \n                        \n                    initializeListeners()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/cli.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        commandProcessed\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/cli.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        imageLoaded\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/cli.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectCreated\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/cli.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { ImageFromCLI, ProjectConfig } from '../Core/interface';\nimport { listen } from '@tauri-apps/api/event';\nimport { invoke } from '@tauri-apps/api/core';\n\ninterface EventPayload {\n  event_id: string;\n  data: T;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CLIService {\n  public commandProcessed: Subject = new Subject();\n  public projectCreated = new Subject();\n  public imageLoaded = new Subject();\n\n  constructor(private ngZone: NgZone) {\n    this.initializeListeners();\n  }\n  private initializeListeners() {\n    listen>('create_project', async (event) => {\n      try {\n        await this.ngZone.run(() => {\n          const config = event.payload.data;\n          console.log(event);\n          this.projectCreated.next(config);\n        });\n        await invoke('event_processed', {\n          id: event.payload.event_id,\n          success: true,\n        });\n        \n      } catch (error) {\n        const errorMessage =\n          error instanceof Error ? error.message : 'Unknown error occurred';\n        await invoke('event_processed', {\n          id: event.payload.event_id,\n          success: false,\n          error: errorMessage,\n        });\n      }\n    });\n\n    listen>('load_image', async (event) => {\n      try {\n        await this.ngZone.run(() => {\n          const config = event.payload.data;\n          this.imageLoaded.next(config);\n        });\n        await invoke('event_processed', {\n          id: event.payload.event_id,\n          success: true,\n        });\n      } catch (error) {\n        const errorMessage =\n          error instanceof Error ? error.message : 'Unknown error occurred';\n        await invoke('event_processed', {\n          id: event.payload.event_id,\n          success: false,\n          error: errorMessage,\n        });\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CanvasManagerService.html":{"url":"injectables/CanvasManagerService.html","title":"injectable - CanvasManagerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CanvasManagerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Components/Core/drawable-canvas/service/canvas-manager.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bufferCanvas\n                            \n                            \n                                bufferCtx\n                            \n                            \n                                canvasCtx\n                            \n                            \n                                combinedCanvas\n                            \n                            \n                                combinedCtx\n                            \n                            \n                                labelCanvas\n                            \n                            \n                                requestRedraw\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearCanvas\n                            \n                            \n                                clearCanvasAtIndex\n                            \n                            \n                                computeCombinedCanvas\n                            \n                            \n                                getActiveCanvas\n                            \n                            \n                                getActiveCtx\n                            \n                            \n                                getActiveIndex\n                            \n                            \n                                getAllCanvas\n                            \n                            \n                                getAllCanvasCtx\n                            \n                            \n                                getBufferCanvas\n                            \n                            \n                                getBufferCtx\n                            \n                            \n                                getCombinedCanvas\n                            \n                            \n                                getCombinedCtx\n                            \n                            \n                                initCanvas\n                            \n                            \n                                    Async\n                                loadAllCanvas\n                            \n                            \n                                loadCanvas\n                            \n                            \n                                resetCombinedCanvas\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(stateService: StateManagerService, labelService: LabelsService, openCVService: OpenCVService, editorService: EditorService)\n                    \n                \n                        \n                            \n                                Defined in src/app/Components/Core/drawable-canvas/service/canvas-manager.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stateService\n                                                  \n                                                        \n                                                                        StateManagerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        labelService\n                                                  \n                                                        \n                                                                        LabelsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        openCVService\n                                                  \n                                                        \n                                                                        OpenCVService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        editorService\n                                                  \n                                                        \n                                                                        EditorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearCanvas\n                        \n                    \n                \n            \n            \n                \nclearCanvas(ctx: OffscreenCanvasRenderingContext2D)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/canvas-manager.service.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                        OffscreenCanvasRenderingContext2D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearCanvasAtIndex\n                        \n                    \n                \n            \n            \n                \nclearCanvasAtIndex(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/canvas-manager.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        computeCombinedCanvas\n                        \n                    \n                \n            \n            \n                \ncomputeCombinedCanvas()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/canvas-manager.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getActiveCanvas\n                        \n                    \n                \n            \n            \n                \ngetActiveCanvas()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/canvas-manager.service.ts:98\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getActiveCtx\n                        \n                    \n                \n            \n            \n                \ngetActiveCtx()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/canvas-manager.service.ts:103\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getActiveIndex\n                        \n                    \n                \n            \n            \n                \ngetActiveIndex()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/canvas-manager.service.ts:120\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllCanvas\n                        \n                    \n                \n            \n            \n                \ngetAllCanvas()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/canvas-manager.service.ts:127\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     {}\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllCanvasCtx\n                        \n                    \n                \n            \n            \n                \ngetAllCanvasCtx()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/canvas-manager.service.ts:123\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     {}\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBufferCanvas\n                        \n                    \n                \n            \n            \n                \ngetBufferCanvas()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/canvas-manager.service.ts:94\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     OffscreenCanvas\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBufferCtx\n                        \n                    \n                \n            \n            \n                \ngetBufferCtx()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/canvas-manager.service.ts:108\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     OffscreenCanvasRenderingContext2D\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCombinedCanvas\n                        \n                    \n                \n            \n            \n                \ngetCombinedCanvas()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/canvas-manager.service.ts:116\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     OffscreenCanvas\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCombinedCtx\n                        \n                    \n                \n            \n            \n                \ngetCombinedCtx()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/canvas-manager.service.ts:112\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     OffscreenCanvasRenderingContext2D\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initCanvas\n                        \n                    \n                \n            \n            \n                \ninitCanvas()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/canvas-manager.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loadAllCanvas\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadAllCanvas(data: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/canvas-manager.service.ts:88\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadCanvas\n                        \n                    \n                \n            \n            \n                \nloadCanvas(data: string, index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/canvas-manager.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetCombinedCanvas\n                        \n                    \n                \n            \n            \n                \nresetCombinedCanvas()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/canvas-manager.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        bufferCanvas\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OffscreenCanvas\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/canvas-manager.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bufferCtx\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OffscreenCanvasRenderingContext2D\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/canvas-manager.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canvasCtx\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OffscreenCanvasRenderingContext2D[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/canvas-manager.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        combinedCanvas\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OffscreenCanvas\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/canvas-manager.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        combinedCtx\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OffscreenCanvasRenderingContext2D\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/canvas-manager.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        labelCanvas\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OffscreenCanvas[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/canvas-manager.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requestRedraw\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/canvas-manager.service.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { StateManagerService } from './state-manager.service';\nimport { LabelsService } from '../../../../Services/Project/labels.service';\nimport { OpenCVService } from '../../../../Services/open-cv.service';\nimport { EditorService } from '../../../../Services/UI/editor.service';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CanvasManagerService {\n\n  labelCanvas: OffscreenCanvas[] = [];\n  canvasCtx: OffscreenCanvasRenderingContext2D[] = [];\n\n  combinedCanvas: OffscreenCanvas;\n  combinedCtx: OffscreenCanvasRenderingContext2D;\n\n  bufferCanvas: OffscreenCanvas;\n  bufferCtx: OffscreenCanvasRenderingContext2D;\n\n  requestRedraw: Subject = new Subject();\n\n\n  constructor(private stateService: StateManagerService, \n    private labelService: LabelsService,\n    private openCVService: OpenCVService,\n    private editorService: EditorService) { }\n\n\n  initCanvas(){\n    this.labelCanvas = [];\n    this.canvasCtx = [];\n    this.labelService.listSegmentationLabels.forEach((label) => {\n      const canvas = new OffscreenCanvas(this.stateService.width, this.stateService.height);\n      this.labelCanvas.push(canvas);\n      this.canvasCtx.push(canvas.getContext('2d', {alpha: true})!);\n    });\n    this.combinedCanvas = new OffscreenCanvas(this.stateService.width, this.stateService.height);\n    this.combinedCtx = this.combinedCanvas.getContext('2d', {alpha: true})!;\n    this.bufferCanvas = new OffscreenCanvas(this.stateService.width, this.stateService.height);\n    this.bufferCtx = this.bufferCanvas.getContext('2d', {alpha: true})!;\n\n    this.bufferCtx.filter = 'url(#remove-alpha)';\n  }\n\n  computeCombinedCanvas(){\n    this.combinedCtx.clearRect(0, 0, this.stateService.width, this.stateService.height);\n    this.labelCanvas.forEach((canvas, index) => {\n      if(!this.labelService.listSegmentationLabels[index].isVisible){\n        return;\n      }\n      this.combinedCtx.drawImage(canvas, 0, 0);\n    });\n    if(this.editorService.edgesOnly){\n      let edge = this.openCVService.edgeDetection(this.combinedCtx);\n      this.combinedCtx.clearRect(0, 0, this.stateService.width, this.stateService.height);\n      this.combinedCtx.drawImage(edge, 0, 0);\n\n    }\n  }\n\n  clearCanvasAtIndex(index: number){\n    this.clearCanvas(this.canvasCtx[index]);\n  }\n\n  loadCanvas(data: string, index:number):Promise{\n    const img = new Image();\n    img.src = data;\n    return new Promise((resolve, reject) => {\n      img.onload = () => {\n        this.clearCanvas(this.canvasCtx[index]);\n        this.canvasCtx[index].drawImage(img, 0, 0);\n        resolve(true);\n      };\n    });\n    \n  }\n\n  clearCanvas(ctx: OffscreenCanvasRenderingContext2D){\n    ctx.clearRect(0, 0, this.stateService.width, this.stateService.height);\n  }\n\n  resetCombinedCanvas(){\n    this.clearCanvas(this.combinedCtx);\n  }\n\n  async loadAllCanvas(data: string[]){\n    for(let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ClassificationConfigurationComponent.html":{"url":"components/ClassificationConfigurationComponent.html","title":"component - ClassificationConfigurationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ClassificationConfigurationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/Components/Interface/project-configuration/classification-configuration/classification-configuration.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-classification-configuration\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            FormsModule\n                            ButtonModule\n                            CheckboxModule\n                            NgFor\n                            NgIf\n                            TagModule\n                            Fieldset\n                            InputTextModule\n                            DividerModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./classification-configuration.component.html\n            \n\n\n\n            \n                styleUrl\n                ./classification-configuration.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                labelService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addClassToTask\n                            \n                            \n                                addMulticlassTask\n                            \n                            \n                                addMultiLabelClass\n                            \n                            \n                                addMultiLabelTask\n                            \n                            \n                                removeClassFromMultitask\n                            \n                            \n                                removeClassFromTask\n                            \n                            \n                                removeTask\n                            \n                            \n                                trackByFn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(labelService: LabelsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/Components/Interface/project-configuration/classification-configuration/classification-configuration.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        labelService\n                                                  \n                                                        \n                                                                        LabelsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addClassToTask\n                        \n                    \n                \n            \n            \n                \naddClassToTask(taskIndex: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Interface/project-configuration/classification-configuration/classification-configuration.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                taskIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addMulticlassTask\n                        \n                    \n                \n            \n            \n                \naddMulticlassTask()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Interface/project-configuration/classification-configuration/classification-configuration.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addMultiLabelClass\n                        \n                    \n                \n            \n            \n                \naddMultiLabelClass(name: string, event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Interface/project-configuration/classification-configuration/classification-configuration.component.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addMultiLabelTask\n                        \n                    \n                \n            \n            \n                \naddMultiLabelTask()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Interface/project-configuration/classification-configuration/classification-configuration.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeClassFromMultitask\n                        \n                    \n                \n            \n            \n                \nremoveClassFromMultitask(classIndex: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Interface/project-configuration/classification-configuration/classification-configuration.component.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                classIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeClassFromTask\n                        \n                    \n                \n            \n            \n                \nremoveClassFromTask(taskIndex: number, classIndex: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Interface/project-configuration/classification-configuration/classification-configuration.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                taskIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                classIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeTask\n                        \n                    \n                \n            \n            \n                \nremoveTask(taskIndex: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Interface/project-configuration/classification-configuration/classification-configuration.component.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                taskIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackByFn\n                        \n                    \n                \n            \n            \n                \ntrackByFn(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Interface/project-configuration/classification-configuration/classification-configuration.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        labelService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LabelsService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Interface/project-configuration/classification-configuration/classification-configuration.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { LabelsService } from '../../../../Services/Project/labels.service';\nimport { FormsModule } from '@angular/forms';\nimport { CheckboxModule } from 'primeng/checkbox';\nimport { ButtonModule } from 'primeng/button';\nimport { NgFor, NgIf, NgStyle } from '@angular/common';\nimport { Fieldset } from 'primeng/fieldset';\nimport { DividerModule } from 'primeng/divider';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { MultilabelTask } from '../../../../Core/task';\n\nimport { TagModule } from 'primeng/tag';\n\n@Component({\n  selector: 'app-classification-configuration',\n  standalone: true,\n  imports: [FormsModule, ButtonModule, CheckboxModule, NgFor, NgIf, TagModule, Fieldset, InputTextModule, DividerModule],\n  templateUrl: './classification-configuration.component.html',\n  styleUrl: './classification-configuration.component.scss'\n})\nexport class ClassificationConfigurationComponent {\n\n  constructor(public labelService: LabelsService) { }\n\n  addMulticlassTask(){\n    this.labelService.addNewClassificationTask();\n  }\n\n  addMultiLabelTask(){\n    this.labelService.multiLabelTask = new MultilabelTask('Multilabel', []);\n\n  }\n\n  addClassToTask(taskIndex: number){\n    const n = this.labelService.listClassificationTasks[taskIndex].classLabels.length;\n    this.labelService.listClassificationTasks[taskIndex].classLabels.push('Class ' + (n + 1));\n  }\n\n  removeClassFromTask(taskIndex: number, classIndex: number){\n    this.labelService.listClassificationTasks[taskIndex].classLabels.splice(classIndex, 1);\n  \n\n  }\n\n  addMultiLabelClass(name: string, event: Event){\n    if(name === '') return;\n    if(!this.labelService.multiLabelTask){\n      return;\n    }\n    if(this.labelService.multiLabelTask.taskLabels.includes(name)){\n      return;\n    }\n    this.labelService.multiLabelTask.taskLabels.push(name);\n\n    (event.target as HTMLInputElement).value = '';\n    \n\n  }\n\n  trackByFn(index: number): number {\n    return index;\n  }\n\n  removeTask(taskIndex: number){\n    this.labelService.listClassificationTasks.splice(taskIndex, 1);\n  }\n\n  removeClassFromMultitask(classIndex: number){\n    if(!this.labelService.multiLabelTask){\n      return;\n    }\n\n    this.labelService.multiLabelTask.taskLabels.splice(classIndex, 1);\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{ label.taskName }} \n        \n      \n      \n        Task {{ i + 1 }}:\n        \n        \n      \n      \n\n      \n        Class {{ j }}:\n        \n        \n      \n    \n  \n  \n  \n    \n\n    \n      \n        \n          \n            {{ label }}\n          \n\n          \n         \n        \n      \n    \n  \n  \n    \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ label.taskName }}                             Task {{ i + 1 }}:                                          Class {{ j }}:                                                                            {{ label }}                                                             '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlockableDiv', 'selector': 'blockable-div'},{'name': 'BlockableP', 'selector': 'blockable-p'},{'name': 'ClassificationConfigurationComponent', 'selector': 'app-classification-configuration'},{'name': 'DrawableCanvasComponent', 'selector': 'app-drawable-canvas'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'GalleryComponent', 'selector': 'app-gallery'},{'name': 'GalleryElementComponent', 'selector': 'app-gallery-element'},{'name': 'InstanceLabelComponent', 'selector': 'app-instance-label'},{'name': 'InteractiveBboxComponent', 'selector': 'app-interactive-bbox'},{'name': 'LabelledSwitchComponent', 'selector': 'app-labelled-switch'},{'name': 'LabelsComponent', 'selector': 'app-labels'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'ProjectConfigurationComponent', 'selector': 'app-project-configuration'},{'name': 'SVGElementsComponent', 'selector': 'app-svgelements'},{'name': 'TestingComponent', 'selector': 'app-testing'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'ToolSettingComponent', 'selector': 'app-tool-setting'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ClassificationConfigurationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DrawService.html":{"url":"injectables/DrawService.html","title":"injectable - DrawService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DrawService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Components/Core/drawable-canvas/service/draw.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                lassoPoints\n                            \n                            \n                                    Public\n                                redrawRequest\n                            \n                            \n                                    Public\n                                singleDrawRequest\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                applyLasso\n                            \n                            \n                                    Public\n                                applyLassoEraser\n                            \n                            \n                                    Public\n                                binarizeCanvas\n                            \n                            \n                                    Public\n                                clearCanvas\n                            \n                            \n                                    Public\n                                draw\n                            \n                            \n                                    Public\n                                drawPen\n                            \n                            \n                                    Public\n                                    Async\n                                endDraw\n                            \n                            \n                                    Public\n                                eraserPen\n                            \n                            \n                                    Public\n                                finalizeDraw\n                            \n                            \n                                    Public\n                                getFillColor\n                            \n                            \n                                    Public\n                                postProcessDraw\n                            \n                            \n                                    Public\n                                    Async\n                                postProcessErase\n                            \n                            \n                                    Public\n                                refreshAllColors\n                            \n                            \n                                    Public\n                                refreshColor\n                            \n                            \n                                    Public\n                                startDraw\n                            \n                            \n                                    Public\n                                swapMarkers\n                            \n                            \n                                    Public\n                                updateLasso\n                            \n                            \n                                    Public\n                                wheel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(labelService: LabelsService, openCVService: OpenCVService, projectService: ProjectService, zoomPanService: ZoomPanService, editorService: EditorService, stateService: StateManagerService, canvasManagerService: CanvasManagerService, undoRedoService: UndoRedoService, postProcessService: PostProcessService, svgUIService: SVGUIService)\n                    \n                \n                        \n                            \n                                Defined in src/app/Components/Core/drawable-canvas/service/draw.service.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        labelService\n                                                  \n                                                        \n                                                                        LabelsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        openCVService\n                                                  \n                                                        \n                                                                        OpenCVService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        zoomPanService\n                                                  \n                                                        \n                                                                        ZoomPanService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        editorService\n                                                  \n                                                        \n                                                                        EditorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stateService\n                                                  \n                                                        \n                                                                        StateManagerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        canvasManagerService\n                                                  \n                                                        \n                                                                        CanvasManagerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        undoRedoService\n                                                  \n                                                        \n                                                                        UndoRedoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        postProcessService\n                                                  \n                                                        \n                                                                        PostProcessService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        svgUIService\n                                                  \n                                                        \n                                                                        SVGUIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyLasso\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyLasso()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/draw.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyLassoEraser\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyLassoEraser(ctx: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/draw.service.ts:105\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                        CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        binarizeCanvas\n                        \n                    \n                \n            \n            \n                \n                        \n                    binarizeCanvas(ctx: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D, color: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/draw.service.ts:127\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                        CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                color\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        clearCanvas\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearCanvas(ctx: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/draw.service.ts:137\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                        CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        draw\n                        \n                    \n                \n            \n            \n                \n                        \n                    draw(event: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/draw.service.ts:143\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        drawPen\n                        \n                    \n                \n            \n            \n                \n                        \n                    drawPen(ctx: OffscreenCanvasRenderingContext2D)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/draw.service.ts:188\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                        OffscreenCanvasRenderingContext2D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        endDraw\n                        \n                    \n                \n            \n            \n                \n                        \n                    endDraw()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/draw.service.ts:211\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        eraserPen\n                        \n                    \n                \n            \n            \n                \n                        \n                    eraserPen(ctx: OffscreenCanvasRenderingContext2D)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/draw.service.ts:280\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                        OffscreenCanvasRenderingContext2D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        finalizeDraw\n                        \n                    \n                \n            \n            \n                \n                        \n                    finalizeDraw(ctx: OffscreenCanvasRenderingContext2D)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/draw.service.ts:330\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                        OffscreenCanvasRenderingContext2D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getFillColor\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFillColor()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/draw.service.ts:334\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        postProcessDraw\n                        \n                    \n                \n            \n            \n                \n                        \n                    postProcessDraw()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/draw.service.ts:346\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        postProcessErase\n                        \n                    \n                \n            \n            \n                \n                        \n                    postProcessErase()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/draw.service.ts:361\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        refreshAllColors\n                        \n                    \n                \n            \n            \n                \n                        \n                    refreshAllColors()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/draw.service.ts:408\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        refreshColor\n                        \n                    \n                \n            \n            \n                \n                        \n                    refreshColor(inputCtx: OffscreenCanvasRenderingContext2D | null, inputColor: string | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/draw.service.ts:365\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                inputCtx\n                                            \n                                                        OffscreenCanvasRenderingContext2D | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                        \n                                                inputColor\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        startDraw\n                        \n                    \n                \n            \n            \n                \n                        \n                    startDraw()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/draw.service.ts:417\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        swapMarkers\n                        \n                    \n                \n            \n            \n                \n                        \n                    swapMarkers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/draw.service.ts:425\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateLasso\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateLasso(event: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/draw.service.ts:478\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        wheel\n                        \n                    \n                \n            \n            \n                \n                        \n                    wheel(event: WheelEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/draw.service.ts:484\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        WheelEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        lassoPoints\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Point2D[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/draw.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        redrawRequest\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/draw.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        singleDrawRequest\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/draw.service.ts:23\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Point2D } from '../models';\nimport { LabelsService } from '../../../../Services/Project/labels.service';\nimport { OpenCVService } from '../../../../Services/open-cv.service';\nimport { ProjectService } from '../../../../Services/Project/project.service';\nimport { ZoomPanService } from './zoom-pan.service';\nimport { Tools } from '../../../../Core/tools';\nimport { EditorService } from '../../../../Services/UI/editor.service';\nimport { StateManagerService } from './state-manager.service';\nimport { Subject } from 'rxjs';\nimport { CanvasManagerService } from './canvas-manager.service';\nimport { UndoRedoService } from './undo-redo.service';\nimport { PostProcessService } from './post-process.service';\nimport { SVGUIService } from './svgui.service';\nimport { PostProcessOption } from '../../../../Core/tools';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DrawService {\n  public lassoPoints: Point2D[] = [];\n  public redrawRequest = new Subject();\n  public singleDrawRequest =\n    new Subject();\n\n  constructor(\n    private labelService: LabelsService,\n    private openCVService: OpenCVService,\n    private projectService: ProjectService,\n    private zoomPanService: ZoomPanService,\n    private editorService: EditorService,\n    private stateService: StateManagerService,\n    private canvasManagerService: CanvasManagerService,\n    private undoRedoService: UndoRedoService,\n    private postProcessService: PostProcessService,\n    private svgUIService: SVGUIService\n  ) {\n    this.editorService.canvasSumRefresh.subscribe((value) => {\n      this.canvasManagerService.computeCombinedCanvas();\n      this.redrawRequest.next(true);\n    });\n\n    this.editorService.canvasRedraw.subscribe((value) => {\n      if (value) {\n        this.stateService.recomputeCanvasSum = value;\n        this.refreshColor();\n      }\n    });\n\n    this.editorService.canvasClear.subscribe((value) => {\n      if (value >= 0) {\n        this.stateService.recomputeCanvasSum = true;\n        this.canvasManagerService.clearCanvasAtIndex(value);\n        this.redrawRequest.next(true);\n      }\n    });\n  }\n\n  public applyLasso() {\n    if (this.lassoPoints.length  {\n            this.applyLassoEraser(ctx);\n          });\n        } else {\n          this.applyLassoEraser(activeCtx);\n        }\n        this.lassoPoints = [];\n        break;\n    }\n    this.stateService.isDrawing = false;\n\n    let postProcessCallback = new Promise((resolve) => {\n      resolve();\n    });\n    if (this.editorService.autoPostProcess) {\n      if (this.editorService.isEraser()) {\n        postProcessCallback = this.postProcessErase();\n      } else if (this.editorService.isDrawingTool()) {\n        postProcessCallback = this.postProcessDraw();\n      }\n    }\n    await postProcessCallback?.then(() => {\n      this.redrawRequest.next(true);\n    });\n\n    if (this.projectService.isInstanceSegmentation) {\n      if (this.editorService.incrementAfterStroke) {\n        this.labelService.incrementActiveInstance();\n      }\n    }\n  }\n\n  public eraserPen(ctx: OffscreenCanvasRenderingContext2D) {\n    // Is auto post-processing enabled? In which case, ctx is a buffer canvas\n    // and we need to draw on the buffer canvas instead of the active canvas\n    // Otherwise, we draw on the active canvas or all class canvases if eraseAll is enabled\n\n    ctx.globalCompositeOperation = 'source-over';\n    ctx.beginPath();\n    ctx.moveTo(\n      this.stateService.previousPoint.x,\n      this.stateService.previousPoint.y\n    );\n    ctx.lineTo(\n      this.stateService.currentPoint.x,\n      this.stateService.currentPoint.y\n    );\n    ctx.stroke();\n\n    this.binarizeCanvas(ctx, this.getFillColor());\n    let bbox = this.stateService.getBoundingBox();\n\n    if (!this.editorService.autoPostProcess) {\n      this.canvasManagerService.getAllCanvasCtx().forEach((ctxClass, index) => {\n        if (\n          index != this.labelService.getActiveIndex() &&\n          !this.editorService.eraseAll\n        ) {\n          return;\n        }\n        ctxClass.globalCompositeOperation = 'destination-out';\n        ctxClass.drawImage(\n          ctx.canvas,\n          bbox.x,\n          bbox.y,\n          bbox.width,\n          bbox.height,\n          bbox.x,\n          bbox.y,\n          bbox.width,\n          bbox.height\n        );\n        ctxClass.globalCompositeOperation = 'source-over';\n      });\n    } \n    else {\n      this.svgUIService.addPoint(this.stateService.currentPoint);\n    }\n\n    this.redrawRequest.next(true);\n  }\n\n  public finalizeDraw(ctx: OffscreenCanvasRenderingContext2D) {\n    this.singleDrawRequest.next(ctx);\n  }\n\n  public getFillColor() {\n    if (this.projectService.isInstanceSegmentation) {\n      if (!this.labelService.activeSegInstance) {\n        throw new Error('No active instance');\n      }\n      return this.labelService.activeSegInstance.shade;\n    }\n\n    const color = this.labelService.activeLabel?.color;\n    return color ? color : '#ffffff';\n  }\n\n  public postProcessDraw() {\n    this.stateService.recomputeCanvasSum = true;\n    switch (this.editorService.postProcessOption) {\n      case PostProcessOption.OTSU:\n        return this.postProcessService.otsu_post_process();\n      case PostProcessOption.MEDSAM:\n        return this.postProcessService.sam_post_process();\n      case PostProcessOption.CRF:\n        return this.postProcessService.crf_post_process();\n    }\n    return new Promise((resolve) => {\n      resolve();\n    });\n  }\n\n  public async postProcessErase() {\n    await this.postProcessService.eraseAll_post_process();\n  }\n\n  public refreshColor(\n    inputCtx: OffscreenCanvasRenderingContext2D | null = null,\n    inputColor: string | null = null\n  ) {\n    if (this.projectService.isInstanceSegmentation) {\n      this.redrawRequest.next(true);\n      return;\n    }\n\n    let ctx:\n      | OffscreenCanvasRenderingContext2D\n      | CanvasRenderingContext2D\n      | null;\n    if (!inputCtx) {\n      ctx = this.canvasManagerService.getActiveCtx();\n    } else {\n      ctx = inputCtx;\n    }\n    if (!ctx) {\n      ctx =\n        this.canvasManagerService.canvasCtx[\n          this.canvasManagerService.canvasCtx.length - 1\n        ];\n      this.labelService.activeLabel =\n        this.labelService.listSegmentationLabels[\n          this.labelService.listSegmentationLabels.length - 1\n        ];\n    }\n    if (!ctx) {\n      return;\n    }\n    let color = inputColor ? inputColor : this.labelService.activeLabel?.color;\n\n    ctx.fillStyle = color ? color : '#ffffff';\n    ctx.strokeStyle = color ? color : '#ffffff';\n    ctx.globalCompositeOperation = 'source-atop';\n\n    ctx.fillRect(0, 0, this.stateService.width, this.stateService.height);\n    ctx.globalCompositeOperation = 'source-over';\n\n    this.redrawRequest.next(true);\n  }\n\n  public refreshAllColors() {\n    this.canvasManagerService.getAllCanvasCtx().forEach((ctx, index) => {\n      this.refreshColor(\n        ctx,\n        this.labelService.listSegmentationLabels[index].color\n      );\n    });\n  }\n\n  public startDraw() {\n    this.stateService.reset();\n    this.stateService.isDrawing = true;\n    this.lassoPoints = [];\n    this.clearCanvas(this.canvasManagerService.bufferCtx);\n    return this.undoRedoService.update_undo_redo();\n  }\n\n  public swapMarkers() {\n    const activeIndex = this.labelService.getActiveIndex();\n    let ctx = this.canvasManagerService.getBufferCtx();\n    let bufferCanvas = this.canvasManagerService.getBufferCanvas();\n    ctx.fillStyle = this.getFillColor();\n    // We find the shape that overlap the current buffer with the other class canvas\n    const rect = this.stateService.getBoundingBox();\n    ctx.globalCompositeOperation = 'source-in';\n    this.stateService.recomputeCanvasSum = true;\n    const edgesOnly = this.editorService.edgesOnly;\n    this.editorService.edgesOnly = false;\n    this.canvasManagerService.computeCombinedCanvas();\n    this.editorService.edgesOnly = edgesOnly;\n\n    ctx.drawImage(\n      this.canvasManagerService.getCombinedCanvas(),\n      rect.x,\n      rect.y,\n      rect.width,\n      rect.height,\n      rect.x,\n      rect.y,\n      rect.width,\n      rect.height\n    );\n\n\n    ctx.fillRect(rect.x, rect.y, rect.width, rect.height);\n    ctx.globalCompositeOperation = 'source-over';\n\n    // Now, we remove the overlapped shape from the other class canvas\n    this.canvasManagerService.getAllCanvasCtx().forEach((classCtx, index) => {\n      if (index === activeIndex) {\n        classCtx.globalCompositeOperation = 'source-over';\n      } else {\n        classCtx.globalCompositeOperation = 'destination-out';\n      }\n      classCtx.drawImage(\n        bufferCanvas,\n        rect.x,\n        rect.y,\n        rect.width,\n        rect.height,\n        rect.x,\n        rect.y,\n        rect.width,\n        rect.height\n      );\n      classCtx.globalCompositeOperation = 'source-over';\n    });\n    this.stateService.recomputeCanvasSum = true;\n  }\n\n  public updateLasso(event: MouseEvent) {\n    const canvasCoord = this.zoomPanService.getImageCoordinates(event);\n\n    this.lassoPoints.push(canvasCoord);\n  }\n\n  public wheel(event: WheelEvent) {\n    if (event.ctrlKey) {\n      this.editorService.lineWidth += event.deltaY > 0 ? -2 : 2;\n    } else {\n      this.zoomPanService.wheel(event);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EditorService.html":{"url":"injectables/EditorService.html","title":"injectable - EditorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EditorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Services/UI/editor.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _lastTool\n                            \n                            \n                                    Public\n                                autoPostProcess\n                            \n                            \n                                    Public\n                                autoPostProcessOpening\n                            \n                            \n                                    Public\n                                canvasClear\n                            \n                            \n                                    Public\n                                canvasRedraw\n                            \n                            \n                                    Public\n                                canvasSumRefresh\n                            \n                            \n                                    Public\n                                edgesOnly\n                            \n                            \n                                    Public\n                                enforceConnectivity\n                            \n                            \n                                    Public\n                                eraseAll\n                            \n                            \n                                    Public\n                                incrementAfterStroke\n                            \n                            \n                                    Public\n                                labelOpacity\n                            \n                            \n                                    Public\n                                lineWidth\n                            \n                            \n                                    Public\n                                morphoSize\n                            \n                            \n                                    Public\n                                postProcessOption\n                            \n                            \n                                    Public\n                                redo\n                            \n                            \n                                    Public\n                                samThreshold\n                            \n                            \n                                    Public\n                                selectedTool\n                            \n                            \n                                    Public\n                                swapMarkers\n                            \n                            \n                                    Public\n                                undo\n                            \n                            \n                                    Public\n                                useInverse\n                            \n                            \n                                    Public\n                                useProcessing\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activatePanMode\n                            \n                            \n                                    Public\n                                affectsMultipleLabels\n                            \n                            \n                                    Public\n                                canPan\n                            \n                            \n                                    Public\n                                isDrawingTool\n                            \n                            \n                                    Public\n                                isEraser\n                            \n                            \n                                    Public\n                                isToolWithBrushSize\n                            \n                            \n                                    Public\n                                requestCanvasClear\n                            \n                            \n                                    Public\n                                requestCanvasRedraw\n                            \n                            \n                                    Public\n                                requestRedo\n                            \n                            \n                                    Public\n                                requestUndo\n                            \n                            \n                                    Public\n                                restoreLastTool\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/Services/UI/editor.service.ts:33\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        activatePanMode\n                        \n                    \n                \n            \n            \n                \n                        \n                    activatePanMode()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/UI/editor.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        affectsMultipleLabels\n                        \n                    \n                \n            \n            \n                \n                        \n                    affectsMultipleLabels()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/UI/editor.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        canPan\n                        \n                    \n                \n            \n            \n                \n                        \n                    canPan()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/UI/editor.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isDrawingTool\n                        \n                    \n                \n            \n            \n                \n                        \n                    isDrawingTool()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/UI/editor.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isEraser\n                        \n                    \n                \n            \n            \n                \n                        \n                    isEraser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/UI/editor.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isToolWithBrushSize\n                        \n                    \n                \n            \n            \n                \n                        \n                    isToolWithBrushSize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/UI/editor.service.ts:57\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        requestCanvasClear\n                        \n                    \n                \n            \n            \n                \n                        \n                    requestCanvasClear(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/UI/editor.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    -1\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        requestCanvasRedraw\n                        \n                    \n                \n            \n            \n                \n                        \n                    requestCanvasRedraw()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/UI/editor.service.ts:66\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        requestRedo\n                        \n                    \n                \n            \n            \n                \n                        \n                    requestRedo()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/UI/editor.service.ts:70\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        requestUndo\n                        \n                    \n                \n            \n            \n                \n                        \n                    requestUndo()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/UI/editor.service.ts:74\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        restoreLastTool\n                        \n                    \n                \n            \n            \n                \n                        \n                    restoreLastTool()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/UI/editor.service.ts:78\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        _lastTool\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Tool\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/UI/editor.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        autoPostProcess\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/UI/editor.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        autoPostProcessOpening\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/UI/editor.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        canvasClear\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/UI/editor.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        canvasRedraw\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/UI/editor.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        canvasSumRefresh\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/UI/editor.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        edgesOnly\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/UI/editor.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        enforceConnectivity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/UI/editor.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        eraseAll\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/UI/editor.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        incrementAfterStroke\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/UI/editor.service.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        labelOpacity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/UI/editor.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        lineWidth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/UI/editor.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        morphoSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 3\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/UI/editor.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        postProcessOption\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"otsu\"\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/UI/editor.service.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        redo\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/UI/editor.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        samThreshold\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0.5\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/UI/editor.service.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        selectedTool\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Tool\n\n                    \n                \n                \n                    \n                        Default value : Tools.PEN\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/UI/editor.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        swapMarkers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/UI/editor.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        undo\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/UI/editor.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        useInverse\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/UI/editor.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        useProcessing\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/UI/editor.service.ts:27\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Subject } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { Tool, Tools } from '../../Core/tools';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EditorService {\n\n  public _lastTool: Tool;\n  public autoPostProcess: boolean = false;\n  public autoPostProcessOpening: boolean = false;\n  public canvasClear: Subject = new Subject();\n  public canvasRedraw: Subject = new Subject();\n  public canvasSumRefresh: Subject = new Subject();\n  public edgesOnly: boolean = false;\n  public enforceConnectivity: boolean = false;\n  public eraseAll: boolean = false;\n  public labelOpacity: number = 1;\n  public lineWidth: number = 10;\n  public morphoSize: number = 3;\n  public redo: Subject = new Subject();\n  public selectedTool: Tool = Tools.PEN;\n  public swapMarkers: boolean = false;\n  public undo: Subject = new Subject();\n  public useInverse: boolean = false;\n  public useProcessing: boolean = false;\n\n  public samThreshold: number = 0.5;\n\n  public postProcessOption: string = \"otsu\"\n\n  public incrementAfterStroke: boolean = false;\n  constructor() { }\n  \n  public activatePanMode() {\n    this._lastTool = this.selectedTool;\n    this.selectedTool = Tools.PAN;\n  }\n\n  public affectsMultipleLabels(): boolean {\n    return this.eraseAll || this.swapMarkers;\n  }\n\n  public canPan(): boolean {\n    return this.selectedTool === Tools.PAN;\n  }\n\n  public isDrawingTool(): boolean {\n    return this.selectedTool === Tools.PEN || this.selectedTool === Tools.LASSO;\n  }\n\n  public isEraser(): boolean {\n    return this.selectedTool === Tools.ERASER || this.selectedTool === Tools.LASSO_ERASER;\n  }\n\n  public isToolWithBrushSize(): boolean {\n    return this.selectedTool === Tools.PEN || this.selectedTool === Tools.ERASER;\n  }\n\n\n  public requestCanvasClear(index: number = -1) {\n    this.canvasClear.next(index);\n  }\n\n  public requestCanvasRedraw() {\n    this.canvasRedraw.next(true);\n  }\n\n  public requestRedo() {\n    this.redo.next(true);\n  }\n\n  public requestUndo() {\n    this.undo.next(true);\n  }\n\n  public restoreLastTool() {\n    this.selectedTool = this._lastTool;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventPayload.html":{"url":"interfaces/EventPayload.html","title":"interface - EventPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EventPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Services/cli.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            event_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        event_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        event_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { ImageFromCLI, ProjectConfig } from '../Core/interface';\nimport { listen } from '@tauri-apps/api/event';\nimport { invoke } from '@tauri-apps/api/core';\n\ninterface EventPayload {\n  event_id: string;\n  data: T;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CLIService {\n  public commandProcessed: Subject = new Subject();\n  public projectCreated = new Subject();\n  public imageLoaded = new Subject();\n\n  constructor(private ngZone: NgZone) {\n    this.initializeListeners();\n  }\n  private initializeListeners() {\n    listen>('create_project', async (event) => {\n      try {\n        await this.ngZone.run(() => {\n          const config = event.payload.data;\n          console.log(event);\n          this.projectCreated.next(config);\n        });\n        await invoke('event_processed', {\n          id: event.payload.event_id,\n          success: true,\n        });\n        \n      } catch (error) {\n        const errorMessage =\n          error instanceof Error ? error.message : 'Unknown error occurred';\n        await invoke('event_processed', {\n          id: event.payload.event_id,\n          success: false,\n          error: errorMessage,\n        });\n      }\n    });\n\n    listen>('load_image', async (event) => {\n      try {\n        await this.ngZone.run(() => {\n          const config = event.payload.data;\n          this.imageLoaded.next(config);\n        });\n        await invoke('event_processed', {\n          id: event.payload.event_id,\n          success: true,\n        });\n      } catch (error) {\n        const errorMessage =\n          error instanceof Error ? error.message : 'Unknown error occurred';\n        await invoke('event_processed', {\n          id: event.payload.event_id,\n          success: false,\n          error: errorMessage,\n        });\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GalleryComponent.html":{"url":"components/GalleryComponent.html","title":"component - GalleryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GalleryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/Components/Interface/gallery/gallery.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-gallery\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                GalleryElementComponent\n                            PanelModule\n                            DataViewModule\n                            ButtonModule\n                            KnobModule\n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./gallery.component.html\n            \n\n\n\n            \n                styleUrl\n                ./gallery.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                intervalFunction\n                            \n                            \n                                percentageBeforeRefresh\n                            \n                            \n                                    Public\n                                projectService\n                            \n                            \n                                refreshInterval\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getInterval\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                refresh\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(projectService: ProjectService)\n                    \n                \n                        \n                            \n                                Defined in src/app/Components/Interface/gallery/gallery.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getInterval\n                        \n                    \n                \n            \n            \n                \ngetInterval()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Interface/gallery/gallery.component.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Interface/gallery/gallery.component.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        refresh\n                        \n                    \n                \n            \n            \n                \n                        \n                    refresh()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Interface/gallery/gallery.component.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        intervalFunction\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NodeJS.Timeout | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Interface/gallery/gallery.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        percentageBeforeRefresh\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Interface/gallery/gallery.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProjectService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Interface/gallery/gallery.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refreshInterval\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 3000\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Interface/gallery/gallery.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ProjectService } from '../../../Services/Project/project.service';\nimport { CommonModule } from '@angular/common';\nimport { GalleryElementComponent } from './gallery-element/gallery-element.component';\nimport { PanelModule } from 'primeng/panel';\nimport { DataViewModule } from 'primeng/dataview';\nimport { ButtonModule } from 'primeng/button';\nimport { KnobModule } from 'primeng/knob';\nimport { FormsModule } from '@angular/forms';\n\n@Component({\n  selector: 'app-gallery',\n  standalone: true,\n  imports: [\n    CommonModule,\n    GalleryElementComponent,\n    PanelModule,\n    DataViewModule,\n    ButtonModule,\n    KnobModule,\n    FormsModule,\n  ],\n  templateUrl: './gallery.component.html',\n  styleUrl: './gallery.component.scss',\n})\nexport class GalleryComponent implements OnInit {\n  refreshInterval: number = 3000;\n  percentageBeforeRefresh: number = 0;\n  intervalFunction: NodeJS.Timeout | undefined;\n  constructor(public projectService: ProjectService) {}\n\n  ngOnInit(): void {\n    this.intervalFunction = this.getInterval();\n  }\n  async refresh() {\n    this.percentageBeforeRefresh = 0;\n    if (this.intervalFunction) {\n      clearInterval(this.intervalFunction);\n    }\n    await this.projectService.listFiles();\n    this.intervalFunction = this.getInterval();\n  }\n\n  getInterval() {\n    let interval = 50;\n    return setInterval(() => {\n      this.percentageBeforeRefresh += 100 * (interval / this.refreshInterval);\n      console.log(this.percentageBeforeRefresh);\n      if (this.percentageBeforeRefresh >= 100) {\n        this.refresh();\n        this.percentageBeforeRefresh = 0;\n      }\n    }, interval);\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n\n                    \n                \n                \n            \n        \n        \n            \n                \n                    \n                    \n                \n            \n        \n\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlockableDiv', 'selector': 'blockable-div'},{'name': 'BlockableP', 'selector': 'blockable-p'},{'name': 'ClassificationConfigurationComponent', 'selector': 'app-classification-configuration'},{'name': 'DrawableCanvasComponent', 'selector': 'app-drawable-canvas'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'GalleryComponent', 'selector': 'app-gallery'},{'name': 'GalleryElementComponent', 'selector': 'app-gallery-element'},{'name': 'InstanceLabelComponent', 'selector': 'app-instance-label'},{'name': 'InteractiveBboxComponent', 'selector': 'app-interactive-bbox'},{'name': 'LabelledSwitchComponent', 'selector': 'app-labelled-switch'},{'name': 'LabelsComponent', 'selector': 'app-labels'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'ProjectConfigurationComponent', 'selector': 'app-project-configuration'},{'name': 'SVGElementsComponent', 'selector': 'app-svgelements'},{'name': 'TestingComponent', 'selector': 'app-testing'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'ToolSettingComponent', 'selector': 'app-tool-setting'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GalleryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GalleryElementComponent.html":{"url":"components/GalleryElementComponent.html","title":"component - GalleryElementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GalleryElementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/Components/Interface/gallery/gallery-element/gallery-element.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-gallery-element\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            CardModule\n                            PanelModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./gallery-element.component.html\n            \n\n\n\n            \n                styleUrl\n                ./gallery-element.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                imagePath\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getThumbnail\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openEditor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                imageName\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(projectService: ProjectService)\n                    \n                \n                        \n                            \n                                Defined in src/app/Components/Interface/gallery/gallery-element/gallery-element.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/Components/Interface/gallery/gallery-element/gallery-element.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        imageName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/Components/Interface/gallery/gallery-element/gallery-element.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getThumbnail\n                        \n                    \n                \n            \n            \n                \n                        \n                    getThumbnail()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Interface/gallery/gallery-element/gallery-element.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Interface/gallery/gallery-element/gallery-element.component.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEditor\n                        \n                    \n                \n            \n            \n                \nopenEditor()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Interface/gallery/gallery-element/gallery-element.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        imagePath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Interface/gallery/gallery-element/gallery-element.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, Input, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CardModule } from 'primeng/card';\nimport { PanelModule } from 'primeng/panel';\n\n\nimport { ProjectService } from '../../../../Services/Project/project.service';\nimport { invoke } from '@tauri-apps/api/core';\nimport { path } from '@tauri-apps/api';\nimport { loadImageFile } from '../../../../Core/io/images';\n\n\n@Component({\n  selector: 'app-gallery-element',\n  standalone: true,\n  imports: [CommonModule, CardModule, PanelModule],\n  templateUrl: './gallery-element.component.html',\n  styleUrl: './gallery-element.component.scss'\n})\nexport class GalleryElementComponent implements OnInit {\n  @Input() imageName: string;\n  @Input() id: number;\n  imagePath: string = '';\n\n  constructor(private projectService: ProjectService) {\n  }\n\n  ngOnInit(): void {\n    this.getThumbnail().then((path) => {\n      this.imagePath = path;\n    });\n  }\n\n\n\n  openEditor() {\n    let id = this.projectService.imagesName.indexOf(this.imageName);\n    this.projectService.openEditor(id);\n  }\n\n  async getThumbnail(): Promise {\n    let imageInput = await path.resolve(this.projectService.inputFolder, this.imageName);\n    let thumbnailPath = await path.resolve(this.projectService.inputFolder, '.thumbnails', this.imageName);\n    await invoke('create_thumbnail', { imagePath: imageInput, thumbnailPath: thumbnailPath, width: 128, height: 128 })\n    return loadImageFile(thumbnailPath);\n  }\n}\n    \n\n    \n        \n    \n        \n            \n        \n    \n    \n        \n            {{id}}\n        \n        {{imageName}}\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            {{id}}                {{imageName}}    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlockableDiv', 'selector': 'blockable-div'},{'name': 'BlockableP', 'selector': 'blockable-p'},{'name': 'ClassificationConfigurationComponent', 'selector': 'app-classification-configuration'},{'name': 'DrawableCanvasComponent', 'selector': 'app-drawable-canvas'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'GalleryComponent', 'selector': 'app-gallery'},{'name': 'GalleryElementComponent', 'selector': 'app-gallery-element'},{'name': 'InstanceLabelComponent', 'selector': 'app-instance-label'},{'name': 'InteractiveBboxComponent', 'selector': 'app-interactive-bbox'},{'name': 'LabelledSwitchComponent', 'selector': 'app-labelled-switch'},{'name': 'LabelsComponent', 'selector': 'app-labels'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'ProjectConfigurationComponent', 'selector': 'app-project-configuration'},{'name': 'SVGElementsComponent', 'selector': 'app-svgelements'},{'name': 'TestingComponent', 'selector': 'app-testing'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'ToolSettingComponent', 'selector': 'app-tool-setting'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GalleryElementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IOService.html":{"url":"injectables/IOService.html","title":"injectable - IOService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IOService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Services/io.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                requestedReload\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkIfDataExists\n                            \n                            \n                                    Async\n                                getActiveSavePath\n                            \n                            \n                                    Async\n                                load\n                            \n                            \n                                    Async\n                                loadExistingAnnotations\n                            \n                            \n                                loadNext\n                            \n                            \n                                loadPrevious\n                            \n                            \n                                requestReload\n                            \n                            \n                                save\n                            \n                            \n                                saveFromCLI\n                            \n                            \n                                    Async\n                                writeSave\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(projectService: ProjectService, labelService: LabelsService, viewService: ViewService, canvasManagerService: CanvasManagerService, stateService: StateManagerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/Services/io.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        labelService\n                                                  \n                                                        \n                                                                        LabelsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        viewService\n                                                  \n                                                        \n                                                                        ViewService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        canvasManagerService\n                                                  \n                                                        \n                                                                        CanvasManagerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stateService\n                                                  \n                                                        \n                                                                        StateManagerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkIfDataExists\n                        \n                    \n                \n            \n            \n                \ncheckIfDataExists()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/io.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getActiveSavePath\n                        \n                    \n                \n            \n            \n                \n                        \n                    getActiveSavePath(imageName: string | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/io.service.ts:297\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                imageName\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        load\n                        \n                    \n                \n            \n            \n                \n                        \n                    load()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/io.service.ts:105\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loadExistingAnnotations\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadExistingAnnotations()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/io.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadNext\n                        \n                    \n                \n            \n            \n                \nloadNext()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/io.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadPrevious\n                        \n                    \n                \n            \n            \n                \nloadPrevious()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/io.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requestReload\n                        \n                    \n                \n            \n            \n                \nrequestReload()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/io.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        save\n                        \n                    \n                \n            \n            \n                \nsave()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/io.service.ts:152\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveFromCLI\n                        \n                    \n                \n            \n            \n                \nsaveFromCLI(data: ImageFromCLI, imageName: string | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/io.service.ts:212\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            ImageFromCLI\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                imageName\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        writeSave\n                        \n                    \n                \n            \n            \n                \n                        \n                    writeSave(labelFormat: LabelFormat, width: number, height: number, imageName: string | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/io.service.ts:249\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                labelFormat\n                                            \n                                                            LabelFormat\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                width\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                height\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                imageName\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        requestedReload\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/io.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { LabelFormat } from '../Core/io/formats';\nimport { ProjectService } from './Project/project.service';\nimport { path } from '@tauri-apps/api';\nimport { invoke } from '@tauri-apps/api/core';\nimport { LabelsService } from './Project/labels.service';\nimport { ViewService } from './UI/view.service';\nimport { ImageFromCLI } from '../Core/interface';\nimport { Subject } from 'rxjs';\nimport { CanvasManagerService } from '../Components/Core/drawable-canvas/service/canvas-manager.service';\nimport { StateManagerService } from '../Components/Core/drawable-canvas/service/state-manager.service';\nimport { blobToDataURL, invokeSaveXmlFile } from '../Core/io/save_load';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class IOService {\n  public requestedReload: Subject = new Subject();\n\n  constructor(\n    private projectService: ProjectService,\n    private labelService: LabelsService,\n    private viewService: ViewService,\n    private canvasManagerService: CanvasManagerService,\n    private stateService: StateManagerService\n  ) { }\n\n  loadPrevious() { }\n\n  loadNext() { }\n\n  requestReload() {\n    this.requestedReload.next(true);\n  }\n\n  checkIfDataExists(): Promise {\n    return this.getActiveSavePath().then((filepath) => {\n      return invoke('check_file_exists', { filepath })\n        .then((response) => {\n          return response ? true : false;\n        })\n        .catch((error) => {\n          return false;\n        });\n    });\n  }\n\n  async loadExistingAnnotations(): Promise {\n    const filepath = await this.getActiveSavePath();\n    const response = await invoke('load_xml_file', { filepath });\n\n    // Parse the XML file and load the annotations\n    const parser = new DOMParser();\n    const doc = parser.parseFromString(response as string, 'image/svg+xml');\n\n    let labels = {\n      masksName: [],\n      masks: [],\n      labels: [],\n      colors: [],\n      multiclass: null,\n      multilabel: null,\n      shades: null,\n    } as LabelFormat;\n\n    // Get the image elements and their data\n    const imageElements = doc.getElementsByTagName('image');\n    for (let i = 0; i  0) {\n      labels.multiclass = multiclassElements[0]\n        .getAttribute('classes')!\n        .split(',');\n    }\n\n    // Get the multilabel elements\n    const multilabelElements = doc.getElementsByTagName('multilabel');\n    if (multilabelElements.length > 0) {\n      labels.multilabel = multilabelElements[0]\n        .getAttribute('classes')!\n        .split(',');\n    }\n\n    return labels;\n  }\n\n  async load() {\n    let exists = await this.checkIfDataExists();\n    if (!exists) {\n      return;\n    }\n    let data = await this.loadExistingAnnotations();\n\n    data.masksName.forEach((label, index) => {\n      let segLabel = {\n        label: label,\n        color: data.colors[index],\n        isVisible: true,\n        shades: data.shades ? data.shades[index] : null,\n      };\n      this.labelService.addSegLabel(segLabel);\n    });\n    this.labelService.rebuildTreeNodes();\n\n    if (this.labelService.multiLabelTask) {\n      if (data.multilabel) {\n        this.labelService.multiLabelTask.choices = data.multilabel;\n      }\n      else {\n        this.labelService.multiLabelTask.choices = [];\n      }\n    }\n    if (this.labelService.listClassificationTasks.length > 0) {\n      if (data.multiclass && data.multiclass.length === this.labelService.listClassificationTasks.length) {\n\n        data.multiclass.forEach((choice, index) => {\n          this.labelService.listClassificationTasks[index].choice = choice;\n        });\n      }\n      else if (!data.multiclass) {\n        this.labelService.listClassificationTasks.forEach((task) => {\n          task.choice = '';\n        });\n      }\n\n    }\n\n    this.labelService.activeLabel = this.labelService.listSegmentationLabels[0];\n\n    this.canvasManagerService.initCanvas();\n    await this.canvasManagerService.loadAllCanvas(data.masks as string[]);\n  }\n\n  save() {\n    this.viewService.setLoading(true, 'Saving annotations');\n    let savefile = {\n      masksName: [],\n      masks: [],\n      labels: [],\n      colors: [],\n      shades: null,\n      multiclass: [],\n      multilabel: null,\n    } as LabelFormat;\n\n    let allPromises$: Promise[] = [];\n    this.labelService.listSegmentationLabels.forEach((label, index) => {\n      if (label.shades) {\n        if (!savefile.shades) {\n          savefile.shades = [];\n        }\n        savefile.shades.push(label.shades);\n      }\n\n      savefile.labels.push(label.label);\n      savefile.masksName.push(label.label);\n      let canvas = this.canvasManagerService.labelCanvas[index];\n      let blob$ = canvas\n        .convertToBlob({ type: 'image/png' })\n        .then((blob) => {\n          return blobToDataURL(blob);\n        })\n        .then((blob) => {\n          savefile.masks.push(blob);\n        });\n      allPromises$.push(blob$);\n      savefile.colors.push(label.color);\n    });\n\n    if (this.labelService.multiLabelTask) {\n      savefile.multiclass = this.labelService.multiLabelTask.choices;\n    }\n    this.labelService.listClassificationTasks.forEach((task) => {\n      if (task.choice) {\n        savefile.multiclass?.push(task.choice);\n      }\n    });\n\n    let finished = Promise.all(allPromises$)\n      .then(() => {\n        this.writeSave(\n          savefile,\n          this.stateService.width,\n          this.stateService.height\n        );\n      })\n      .then(() => {\n        this.viewService.endLoading();\n        return true;\n      });\n    return finished;\n  }\n\n  saveFromCLI(data: ImageFromCLI, imageName: string | null = null) {\n    let savefile = {\n      masksName: [],\n      masks: [],\n      labels: [],\n      colors: [],\n      multiclass: null,\n      multilabel: null,\n      shades: null,\n    } as LabelFormat;\n\n    this.labelService.listSegmentationLabels.forEach((label, index) => {\n      if (label.shades) {\n        if (!savefile.shades) {\n          savefile.shades = [];\n        }\n        savefile.shades.push(label.shades);\n      }\n\n      savefile.labels.push(label.label);\n      savefile.masksName.push(label.label);\n      if (data.mask_data) {\n        savefile.masks.push(data.mask_data[index]);\n      }\n      savefile.colors.push(label.color);\n    });\n\n    if (data.classification_classes) {\n      savefile.multiclass = data.classification_classes;\n    }\n\n    if (data.classification_multilabel) {\n      savefile.multilabel = data.classification_multilabel;\n    }\n    return this.writeSave(savefile, 512, 512, imageName);\n  }\n\n  async writeSave(labelFormat: LabelFormat, width: number, height: number, imageName: string | null = null) {\n    let svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttribute('xmlns:xlink', 'http://www.w3.org/1999/xlink');\n    svg.setAttribute('height', `${height}`);\n    svg.setAttribute('width', `${width}`);\n\n    const nElements = labelFormat.masks.length;\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ImageFromCLI.html":{"url":"interfaces/ImageFromCLI.html","title":"interface - ImageFromCLI","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ImageFromCLI\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Core/interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            classification_classes\n                                        \n                                \n                                \n                                        \n                                            classification_multilabel\n                                        \n                                \n                                \n                                        \n                                            image_path\n                                        \n                                \n                                \n                                        \n                                            mask_data\n                                        \n                                \n                                \n                                        \n                                            segmentation_classes\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        classification_classes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        classification_classes:     string[] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[] | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        classification_multilabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        classification_multilabel:     string[] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[] | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image_path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image_path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mask_data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mask_data:     string[] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[] | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        segmentation_classes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        segmentation_classes:     string[] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[] | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SegLabel {\n  label: string;\n  color: string;\n  isVisible: boolean;\n  shades: string[] | null;\n}\n\nexport interface SegInstance {\n  label: SegLabel;\n  instance: number;\n  shade: string;\n}\n\nexport interface BboxLabel {\n  label: SegLabel;\n  bbox: Rect;\n  instance: number;\n}\n\nexport interface Thumbnail {\n  name: Promise;\n  thumbnailPath: Promise;\n}\n\nexport interface Point2D {\n  x: number;\n  y: number;\n}\n\nexport interface Rect {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\n\nexport interface Viewbox {\n  xmin: number;\n  ymin: number;\n  xmax: number;\n  ymax: number;\n}\n\nexport interface UndoRedoCanvasElement {\n  data: Blob | Blob[];\n  index: number;\n}\n\nexport interface MulticlassInterface {\n  name: string;\n  classes: string[];\n  default: string | null;\n}\n\nexport interface MultilabelInterface {\n  name: string;\n  classes: string[];\n  default: string[] | null;\n}\n\nexport interface ProjectConfig {\n  project_name: string;\n  input_dir: string;\n  output_dir: string;\n  is_segmentation: boolean;\n  is_classification: boolean;\n  is_instance_segmentation: boolean;\n  is_bbox_detection: boolean;\n  segmentation_classes: null | string[];\n  classification_classes: null | MulticlassInterface[];\n  classification_multilabel: null | MultilabelInterface;\n}\n\nexport interface ImageFromCLI {\n  image_path: string;\n  mask_data: string[] | null;\n  segmentation_classes: string[] | null;\n  classification_classes: string[] | null;\n  classification_multilabel: string[] | null;\n}\n\n\nexport interface ProjectFile{\n  root: string;\n  project_name: string;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ImageProcessingService.html":{"url":"injectables/ImageProcessingService.html","title":"injectable - ImageProcessingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ImageProcessingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Components/Core/drawable-canvas/service/image-processing.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                brightness\n                            \n                            \n                                contrast\n                            \n                            \n                                edgeStrength\n                            \n                            \n                                gamma\n                            \n                            \n                                isUpdated\n                            \n                            \n                                kernel_size\n                            \n                            \n                                preprocessImage\n                            \n                            \n                                    Private\n                                ref_canvas\n                            \n                            \n                                ref_image\n                            \n                            \n                                reinforceEdges\n                            \n                            \n                                stretchHist\n                            \n                            \n                                to_BW\n                            \n                            \n                                use_medianBlur\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkValidInput\n                            \n                            \n                                getCurrentCanvas\n                            \n                            \n                                preprocess\n                            \n                            \n                                refresh\n                            \n                            \n                                setImage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(editorService: EditorService, openCVService: OpenCVService)\n                    \n                \n                        \n                            \n                                Defined in src/app/Components/Core/drawable-canvas/service/image-processing.service.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        editorService\n                                                  \n                                                        \n                                                                        EditorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        openCVService\n                                                  \n                                                        \n                                                                        OpenCVService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkValidInput\n                        \n                    \n                \n            \n            \n                \ncheckValidInput()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/image-processing.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentCanvas\n                        \n                    \n                \n            \n            \n                \ngetCurrentCanvas()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/image-processing.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     HTMLCanvasElement\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        preprocess\n                        \n                    \n                \n            \n            \n                \npreprocess()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/image-processing.service.ts:76\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refresh\n                        \n                    \n                \n            \n            \n                \nrefresh()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/image-processing.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setImage\n                        \n                    \n                \n            \n            \n                \nsetImage(img: HTMLImageElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/image-processing.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                img\n                                            \n                                                        HTMLImageElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        brightness\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/image-processing.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        contrast\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/image-processing.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        edgeStrength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/image-processing.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gamma\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/image-processing.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUpdated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/image-processing.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        kernel_size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 3\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/image-processing.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        preprocessImage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLCanvasElement | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/image-processing.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ref_canvas\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLCanvasElement | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/image-processing.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ref_image\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLImageElement\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/image-processing.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reinforceEdges\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/image-processing.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stretchHist\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/image-processing.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        to_BW\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/image-processing.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        use_medianBlur\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/image-processing.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { EditorService } from '../../../../Services/UI/editor.service';\nimport { OpenCVService } from '../../../../Services/open-cv.service';\nimport { PostProcessService } from './post-process.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageProcessingService {\n\n  ref_image: HTMLImageElement;\n  private ref_canvas: HTMLCanvasElement | null = null; \n  // We don't use OffscreenCanvas because it's not supported by OpenCV.js\n  preprocessImage: HTMLCanvasElement | null = null;\n\n  to_BW: boolean = false;\n  use_medianBlur: boolean = false;\n  contrast: number = 1;\n  brightness: number = 0;\n\n  gamma: number = 1;\n\n  stretchHist: boolean = false;\n\n  kernel_size: number = 3;\n  isUpdated: boolean = false;\n  edgeStrength: number = 1;\n  reinforceEdges: boolean = false;\n\n  constructor(private editorService: EditorService, \n    private openCVService: OpenCVService) { }\n\n\n  refresh() {\n    this.preprocess()\n    this.editorService.requestCanvasRedraw();\n  }\n\n  getCurrentCanvas(): HTMLCanvasElement {\n\n    if (!this.editorService.useProcessing) {\n      return this.ref_canvas!;\n    }\n\n    if (!this.isUpdated || this.preprocessImage === null) {\n      this.preprocess();\n      this.editorService.requestCanvasRedraw();\n    }\n\n    return this.preprocessImage!;\n\n  }\n\n  setImage(img: HTMLImageElement) {\n    this.ref_image = img;\n    this.isUpdated = false;\n    this.ref_canvas = document.createElement('canvas');\n    this.ref_canvas.width = img.width;\n    this.ref_canvas.height = img.height;\n    let ctx = this.ref_canvas.getContext('2d', { alpha: false })!;\n    ctx.imageSmoothingEnabled = false;\n    ctx.drawImage(img, 0, 0);\n    \n\n  }\n\n  checkValidInput(){\n    // Cast to float\n    this.contrast = this.contrast\n    this.brightness = this.brightness\n    this.gamma = this.gamma\n    this.edgeStrength = this.edgeStrength\n    \n\n  }\n  preprocess() {\n    if (this.ref_canvas === null) {\n      return;\n    }\n    try {\n      this.checkValidInput();\n    }\n    catch (e) {\n      console.error(e);\n      return;\n    }\n\n    if (this.preprocessImage === null) {\n      this.preprocessImage = document.createElement('canvas');\n      this.preprocessImage.width = this.ref_image.width;\n      this.preprocessImage.height = this.ref_image.height;\n\n    }\n    this.preprocessImage.getContext('2d', { alpha: false, willReadFrequently: false })!.drawImage(this.ref_canvas, 0, 0);\n\n    if(this.stretchHist) {\n\n      this.openCVService.stretchHist(this.preprocessImage, this.preprocessImage);\n    }\n\n\n    if(this.contrast !== 1 || this.brightness !== 0) {\n      this.openCVService.brightness_contrast(this.preprocessImage, this.preprocessImage, this.contrast, this.brightness);\n    }\n\n    if(this.gamma !== 1) {\n      this.openCVService.gammaCorrection(this.preprocessImage, this.preprocessImage, this.gamma);\n    }\n\n   \n\n    // Convert to gryscale\n    if (this.to_BW) {\n      this.openCVService.to_grayscale(this.preprocessImage, this.preprocessImage);\n    }\n\n    if(this.use_medianBlur) {\n      this.openCVService.median_blur(this.preprocessImage, this.preprocessImage, this.kernel_size);\n    }\n\n    if(this.reinforceEdges && this.edgeStrength > 0) {\n      this.openCVService.reinforceEdges(this.preprocessImage, this.preprocessImage, this.edgeStrength);\n    }\n\n    \n    this.isUpdated = true;\n\n  }\n\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InstanceLabelComponent.html":{"url":"components/InstanceLabelComponent.html","title":"component - InstanceLabelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InstanceLabelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/Components/Interface/editor/labels/instance-label/instance-label.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-instance-label\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            NgFor\n                            NgClass\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./instance-label.component.html\n            \n\n\n\n            \n                styleUrl\n                ./instance-label.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                labelService\n                            \n                            \n                                shades\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeActive\n                            \n                            \n                                getShades\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(projectService: ProjectService, labelService: LabelsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/Components/Interface/editor/labels/instance-label/instance-label.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        labelService\n                                                  \n                                                        \n                                                                        LabelsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         SegLabel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/Components/Interface/editor/labels/instance-label/instance-label.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeActive\n                        \n                    \n                \n            \n            \n                \nchangeActive(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Interface/editor/labels/instance-label/instance-label.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getShades\n                        \n                    \n                \n            \n            \n                \ngetShades()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Interface/editor/labels/instance-label/instance-label.component.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     {}\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Interface/editor/labels/instance-label/instance-label.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        labelService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LabelsService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Interface/editor/labels/instance-label/instance-label.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shades\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Interface/editor/labels/instance-label/instance-label.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { SegLabel } from '../../../../../Core/interface';\nimport { ProjectService } from '../../../../../Services/Project/project.service';\nimport { generate_shades } from '../../../../../Core/misc/colors';\nimport { NgFor, NgClass } from '@angular/common';\nimport { LabelsService } from '../../../../../Services/Project/labels.service';\n\n\n@Component({\n  selector: 'app-instance-label',\n  standalone: true,\n  imports: [NgFor, NgClass],\n  templateUrl: './instance-label.component.html',\n  styleUrl: './instance-label.component.scss'\n})\nexport class InstanceLabelComponent {\n\n  @Input() label: SegLabel;\n  shades: string[] = [];\n\n  constructor(private projectService:ProjectService, public labelService: LabelsService) { \n\n  }\n\n\n  ngOnInit(): void {\n    this.shades = this.getShades();\n  }\n\n  getShades(){\n    if(this.shades.length !== this.projectService.maxInstances){\n      this.shades = generate_shades(this.label.color, this.projectService.maxInstances);\n    }\n    this.label.shades = this.shades\n    return this.shades;\n    \n\n\n\n  }\n  changeActive(index: number){\n    this.labelService.activeSegInstance = {label: this.label, instance: index, shade: this.getShades()[index]};\n    \n  }\n  \n}\n\n    \n\n    \n        \n    \n    \n \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '         '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlockableDiv', 'selector': 'blockable-div'},{'name': 'BlockableP', 'selector': 'blockable-p'},{'name': 'ClassificationConfigurationComponent', 'selector': 'app-classification-configuration'},{'name': 'DrawableCanvasComponent', 'selector': 'app-drawable-canvas'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'GalleryComponent', 'selector': 'app-gallery'},{'name': 'GalleryElementComponent', 'selector': 'app-gallery-element'},{'name': 'InstanceLabelComponent', 'selector': 'app-instance-label'},{'name': 'InteractiveBboxComponent', 'selector': 'app-interactive-bbox'},{'name': 'LabelledSwitchComponent', 'selector': 'app-labelled-switch'},{'name': 'LabelsComponent', 'selector': 'app-labels'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'ProjectConfigurationComponent', 'selector': 'app-project-configuration'},{'name': 'SVGElementsComponent', 'selector': 'app-svgelements'},{'name': 'TestingComponent', 'selector': 'app-testing'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'ToolSettingComponent', 'selector': 'app-tool-setting'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InstanceLabelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InteractiveBboxComponent.html":{"url":"components/InteractiveBboxComponent.html","title":"component - InteractiveBboxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InteractiveBboxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/Components/Core/drawable-canvas/component/interactive-bbox/interactive-bbox.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-interactive-bbox\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./interactive-bbox.component.html\n            \n\n\n\n            \n                styleUrl\n                ./interactive-bbox.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-interactive-bbox',\n  standalone: true,\n  imports: [],\n  templateUrl: './interactive-bbox.component.html',\n  styleUrl: './interactive-bbox.component.scss'\n})\nexport class InteractiveBboxComponent {\n\n}\n\n    \n\n    \n        interactive-bbox works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'interactive-bbox works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlockableDiv', 'selector': 'blockable-div'},{'name': 'BlockableP', 'selector': 'blockable-p'},{'name': 'ClassificationConfigurationComponent', 'selector': 'app-classification-configuration'},{'name': 'DrawableCanvasComponent', 'selector': 'app-drawable-canvas'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'GalleryComponent', 'selector': 'app-gallery'},{'name': 'GalleryElementComponent', 'selector': 'app-gallery-element'},{'name': 'InstanceLabelComponent', 'selector': 'app-instance-label'},{'name': 'InteractiveBboxComponent', 'selector': 'app-interactive-bbox'},{'name': 'LabelledSwitchComponent', 'selector': 'app-labelled-switch'},{'name': 'LabelsComponent', 'selector': 'app-labels'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'ProjectConfigurationComponent', 'selector': 'app-project-configuration'},{'name': 'SVGElementsComponent', 'selector': 'app-svgelements'},{'name': 'TestingComponent', 'selector': 'app-testing'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'ToolSettingComponent', 'selector': 'app-tool-setting'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InteractiveBboxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LabelFormat.html":{"url":"interfaces/LabelFormat.html","title":"interface - LabelFormat","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LabelFormat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Core/io/formats.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            colors\n                                        \n                                \n                                \n                                        \n                                            labels\n                                        \n                                \n                                \n                                        \n                                            masks\n                                        \n                                \n                                \n                                        \n                                            masksName\n                                        \n                                \n                                \n                                        \n                                            multiclass\n                                        \n                                \n                                \n                                        \n                                            multilabel\n                                        \n                                \n                                \n                                        \n                                            shades\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        colors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        colors:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        labels\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        labels:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        masks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        masks:     (Blob | string)[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     (Blob | string)[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        masksName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        masksName:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        multiclass\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        multiclass:     string[] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[] | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        multilabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        multilabel:     string[] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[] | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shades\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        shades:     string[][] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[][] | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { invoke } from \"@tauri-apps/api/core\";\nimport { XMLBuilder } from \"fast-xml-parser\";\n\nexport interface LabelFormat {\n    masksName: string[];\n    masks: (Blob | string)[]; // Saved as Blob, loaded as string\n    labels: string[];\n    colors: string[];\n    shades: string[][] | null;\n    multiclass: string[] | null;\n    multilabel: string[] | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LabelledSwitchComponent.html":{"url":"components/LabelledSwitchComponent.html","title":"component - LabelledSwitchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LabelledSwitchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/Components/Core/labelled-switch/labelled-switch.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                BlockableUI\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-labelled-switch\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            InputSwitchModule\n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./labelled-switch.component.html\n            \n\n\n\n            \n                styleUrl\n                ./labelled-switch.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getBlockableElement\n                            \n                            \n                                updateCheck\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                checked\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                checkedChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/Components/Core/labelled-switch/labelled-switch.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        checked\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/Components/Core/labelled-switch/labelled-switch.component.ts:16\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        checkedChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/Components/Core/labelled-switch/labelled-switch.component.ts:17\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getBlockableElement\n                        \n                    \n                \n            \n            \n                \ngetBlockableElement()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/labelled-switch/labelled-switch.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     HTMLElement\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateCheck\n                        \n                    \n                \n            \n            \n                \nupdateCheck()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/labelled-switch/labelled-switch.component.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, Input, Output, ViewChild } from '@angular/core';\nimport { InputSwitchModule } from 'primeng/inputswitch';\nimport { FormsModule } from '@angular/forms';\nimport { EventEmitter } from '@angular/core';\nimport { BlockableUI } from 'primeng/api';\n\n@Component({\n  selector: 'app-labelled-switch',\n  standalone: true,\n  imports: [InputSwitchModule, FormsModule],\n  templateUrl: './labelled-switch.component.html',\n  styleUrl: './labelled-switch.component.scss'\n})\nexport class LabelledSwitchComponent implements BlockableUI {\n\n  @Input() checked: boolean;\n  @Output() checkedChange = new EventEmitter();\n\n  updateCheck(){\n    this.checkedChange.emit(this.checked);\n  }\n  constructor(private el: ElementRef) {\n  }\n\n  getBlockableElement(): HTMLElement {\n    return this.el.nativeElement.children[0];\n  }\n}\n\n    \n\n    \n        \n\n\n    \n    \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlockableDiv', 'selector': 'blockable-div'},{'name': 'BlockableP', 'selector': 'blockable-p'},{'name': 'ClassificationConfigurationComponent', 'selector': 'app-classification-configuration'},{'name': 'DrawableCanvasComponent', 'selector': 'app-drawable-canvas'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'GalleryComponent', 'selector': 'app-gallery'},{'name': 'GalleryElementComponent', 'selector': 'app-gallery-element'},{'name': 'InstanceLabelComponent', 'selector': 'app-instance-label'},{'name': 'InteractiveBboxComponent', 'selector': 'app-interactive-bbox'},{'name': 'LabelledSwitchComponent', 'selector': 'app-labelled-switch'},{'name': 'LabelsComponent', 'selector': 'app-labels'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'ProjectConfigurationComponent', 'selector': 'app-project-configuration'},{'name': 'SVGElementsComponent', 'selector': 'app-svgelements'},{'name': 'TestingComponent', 'selector': 'app-testing'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'ToolSettingComponent', 'selector': 'app-tool-setting'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LabelledSwitchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LabelsComponent.html":{"url":"components/LabelsComponent.html","title":"component - LabelsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LabelsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/Components/Interface/editor/labels/labels.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-labels\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            TreeModule\n                            ColorPickerModule\n                            CommonModule\n                            FormsModule\n                            Button\n                            SelectButtonModule\n                            SliderModule\n                            PanelModule\n                            FieldsetModule\n                            DividerModule\n                                InstanceLabelComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./labels.component.html\n            \n\n\n\n            \n                styleUrl\n                ./labels.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                drawService\n                            \n                            \n                                    Public\n                                labelsService\n                            \n                            \n                                    Public\n                                projectService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeActiveLabel\n                            \n                            \n                                changeAllVisibility\n                            \n                            \n                                changeColor\n                            \n                            \n                                changeVisibility\n                            \n                            \n                                clearCanvas\n                            \n                            \n                                hasChild\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateOpacity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(labelsService: LabelsService, drawService: EditorService, projectService: ProjectService)\n                    \n                \n                        \n                            \n                                Defined in src/app/Components/Interface/editor/labels/labels.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        labelsService\n                                                  \n                                                        \n                                                                        LabelsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        drawService\n                                                  \n                                                        \n                                                                        EditorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeActiveLabel\n                        \n                    \n                \n            \n            \n                \nchangeActiveLabel(event: TreeNode[] | TreeNode | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Interface/editor/labels/labels.component.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        TreeNode[] | TreeNode | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeAllVisibility\n                        \n                    \n                \n            \n            \n                \nchangeAllVisibility()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Interface/editor/labels/labels.component.ts:90\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeColor\n                        \n                    \n                \n            \n            \n                \nchangeColor()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Interface/editor/labels/labels.component.ts:86\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeVisibility\n                        \n                    \n                \n            \n            \n                \nchangeVisibility(node: TreeNode)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Interface/editor/labels/labels.component.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                node\n                                            \n                                                        TreeNode\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearCanvas\n                        \n                    \n                \n            \n            \n                \nclearCanvas(node: TreeNode)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Interface/editor/labels/labels.component.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                node\n                                            \n                                                        TreeNode\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasChild\n                        \n                    \n                \n            \n            \n                \nhasChild(node: TreeNode)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Interface/editor/labels/labels.component.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                node\n                                            \n                                                        TreeNode\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Interface/editor/labels/labels.component.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateOpacity\n                        \n                    \n                \n            \n            \n                \nupdateOpacity()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Interface/editor/labels/labels.component.ts:95\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        drawService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EditorService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Interface/editor/labels/labels.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        labelsService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LabelsService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Interface/editor/labels/labels.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProjectService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Interface/editor/labels/labels.component.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { LabelsService } from '../../../../Services/Project/labels.service';\nimport { TreeModule } from 'primeng/tree';\nimport { ColorPickerModule } from 'primeng/colorpicker';\nimport { CommonModule } from '@angular/common';\nimport { SliderModule } from 'primeng/slider';\nimport { FormsModule } from '@angular/forms';\nimport { TreeNode } from 'primeng/api';\nimport { Button } from 'primeng/button';\nimport { SegLabel } from '../../../../Core/interface';\nimport { EditorService } from '../../../../Services/UI/editor.service';\nimport { PanelModule } from 'primeng/panel';\nimport { FieldsetModule } from 'primeng/fieldset';\nimport { InstanceLabelComponent } from './instance-label/instance-label.component';\nimport { ProjectService } from '../../../../Services/Project/project.service';\nimport { SelectButtonModule } from 'primeng/selectbutton';\nimport { DividerModule } from 'primeng/divider';\n\n@Component({\n  selector: 'app-labels',\n  standalone: true,\n  imports: [\n    TreeModule,\n    ColorPickerModule,\n    CommonModule,\n    FormsModule,\n    Button,\n    SelectButtonModule,\n    SliderModule,\n    PanelModule,\n    FieldsetModule,\n    DividerModule,\n    InstanceLabelComponent,\n  ],\n  templateUrl: './labels.component.html',\n  styleUrl: './labels.component.scss',\n})\nexport class LabelsComponent implements OnInit {\n  constructor(\n    public labelsService: LabelsService,\n    public drawService: EditorService,\n    public projectService: ProjectService\n  ) {}\n\n  ngOnInit(): void {\n    this.labelsService.activeLabel =\n      this.labelsService.listSegmentationLabels[0];\n  }\n\n  hasChild(node: TreeNode): boolean {\n    if (node.children) {\n      return node.children.length > 0;\n    } else {\n      return false;\n    }\n  }\n  changeActiveLabel(event: TreeNode[] | TreeNode | null) {\n    if (event instanceof Array) {\n      return;\n    }\n    if (!event) {\n      return;\n    }\n    this.labelsService.activeLabel = event.data as SegLabel;\n    this.labelsService.activeSegInstance = {\n      label: this.labelsService.activeLabel,\n      instance: -1,\n      shade: this.labelsService.activeLabel.color,\n    };\n    // this.labelsService.activeLabel = event.node.data as SegLabel;\n  }\n\n  clearCanvas(node: TreeNode) {\n    let index = this.labelsService.listSegmentationLabels.indexOf(\n      node.data as SegLabel\n    );\n    this.drawService.requestCanvasClear(index);\n  }\n\n  changeVisibility(node: TreeNode) {\n    let label = node.data as SegLabel;\n    label.isVisible = !label.isVisible;\n    this.drawService.requestCanvasRedraw();\n  }\n\n  changeColor() {\n    this.drawService.requestCanvasRedraw();\n  }\n\n  changeAllVisibility() {\n    this.labelsService.switchVisibilityAllSegLabels();\n    this.drawService.requestCanvasRedraw();\n  }\n\n  updateOpacity() {\n    this.drawService.requestCanvasRedraw();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          {{ task.taskName }}\n        \n        \n      \n\n      \n        \n          Multiple label\n        \n        \n      \n    \n\n    \n      \n        \n        \n          \n        \n        \n          \n          \n          Opacity\n        \n      \n      \n        Labels\n      \n      \n        \n            \n              \n              \n                \n              \n\n              \n              \n                {{ node.label }}\n              \n              \n            \n            \n              {{ node.label }}\n            \n          \n            \n          \n        \n      \n    \n  \n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ task.taskName }}                                              Multiple label                                                                                                            Opacity                            Labels                                                                                                                                      {{ node.label }}                                                                  {{ node.label }}                                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlockableDiv', 'selector': 'blockable-div'},{'name': 'BlockableP', 'selector': 'blockable-p'},{'name': 'ClassificationConfigurationComponent', 'selector': 'app-classification-configuration'},{'name': 'DrawableCanvasComponent', 'selector': 'app-drawable-canvas'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'GalleryComponent', 'selector': 'app-gallery'},{'name': 'GalleryElementComponent', 'selector': 'app-gallery-element'},{'name': 'InstanceLabelComponent', 'selector': 'app-instance-label'},{'name': 'InteractiveBboxComponent', 'selector': 'app-interactive-bbox'},{'name': 'LabelledSwitchComponent', 'selector': 'app-labelled-switch'},{'name': 'LabelsComponent', 'selector': 'app-labels'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'ProjectConfigurationComponent', 'selector': 'app-project-configuration'},{'name': 'SVGElementsComponent', 'selector': 'app-svgelements'},{'name': 'TestingComponent', 'selector': 'app-testing'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'ToolSettingComponent', 'selector': 'app-tool-setting'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LabelsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LabelsService.html":{"url":"injectables/LabelsService.html","title":"injectable - LabelsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LabelsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Services/Project/labels.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _treeNode\n                            \n                            \n                                activeLabel\n                            \n                            \n                                activeSegInstance\n                            \n                            \n                                listClassificationTasks\n                            \n                            \n                                listSegmentationLabels\n                            \n                            \n                                multiLabelTask\n                            \n                            \n                                showAllLabels\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addClassificationTask\n                            \n                            \n                                addMultilabelTask\n                            \n                            \n                                addNewClassificationTask\n                            \n                            \n                                addSegLabel\n                            \n                            \n                                getActiveIndex\n                            \n                            \n                                getTreeNode\n                            \n                            \n                                incrementActiveInstance\n                            \n                            \n                                rebuildTreeNodes\n                            \n                            \n                                removeClassificationTask\n                            \n                            \n                                removeSegLabel\n                            \n                            \n                                setActiveIndex\n                            \n                            \n                                switchVisibilityAllSegLabels\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/Services/Project/labels.service.ts:20\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addClassificationTask\n                        \n                    \n                \n            \n            \n                \naddClassificationTask(task: MulticlassTask)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/Project/labels.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                task\n                                            \n                                                            MulticlassTask\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addMultilabelTask\n                        \n                    \n                \n            \n            \n                \naddMultilabelTask(task: MultilabelTask)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/Project/labels.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                task\n                                            \n                                                            MultilabelTask\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addNewClassificationTask\n                        \n                    \n                \n            \n            \n                \naddNewClassificationTask()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/Project/labels.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addSegLabel\n                        \n                    \n                \n            \n            \n                \naddSegLabel(label: SegLabel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/Project/labels.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                label\n                                            \n                                                            SegLabel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getActiveIndex\n                        \n                    \n                \n            \n            \n                \ngetActiveIndex()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/Project/labels.service.ts:95\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTreeNode\n                        \n                    \n                \n            \n            \n                \ngetTreeNode()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/Project/labels.service.ts:104\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     TreeNode[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        incrementActiveInstance\n                        \n                    \n                \n            \n            \n                \nincrementActiveInstance()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/Project/labels.service.ts:123\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rebuildTreeNodes\n                        \n                    \n                \n            \n            \n                \nrebuildTreeNodes()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/Project/labels.service.ts:112\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeClassificationTask\n                        \n                    \n                \n            \n            \n                \nremoveClassificationTask(task: MulticlassTask)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/Project/labels.service.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                task\n                                            \n                                                            MulticlassTask\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeSegLabel\n                        \n                    \n                \n            \n            \n                \nremoveSegLabel(SegLabel: SegLabel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/Project/labels.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                SegLabel\n                                            \n                                                            SegLabel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setActiveIndex\n                        \n                    \n                \n            \n            \n                \nsetActiveIndex(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/Project/labels.service.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        switchVisibilityAllSegLabels\n                        \n                    \n                \n            \n            \n                \nswitchVisibilityAllSegLabels()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/Project/labels.service.ts:116\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _treeNode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TreeNode[] | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/Project/labels.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        activeLabel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SegLabel | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/Project/labels.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        activeSegInstance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SegInstance | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/Project/labels.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listClassificationTasks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MulticlassTask[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/Project/labels.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listSegmentationLabels\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SegLabel[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/Project/labels.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        multiLabelTask\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MultilabelTask | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/Project/labels.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showAllLabels\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/Project/labels.service.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { SegInstance, SegLabel } from '../../Core/interface';\nimport { constructLabelTreeNode } from './labelTreeNode';\nimport { TreeNode } from 'primeng/api';\nimport { MulticlassTask, MultilabelTask } from '../../Core/task';\n@Injectable({\n  providedIn: 'root',\n})\nexport class LabelsService {\n  listSegmentationLabels: SegLabel[] = [];\n\n  listClassificationTasks: MulticlassTask[] = [];\n\n  multiLabelTask: MultilabelTask | null = null;\n\n  private _treeNode: TreeNode[] | null = null;\n  activeLabel: SegLabel | null = null;\n\n  activeSegInstance: SegInstance | null = null;\n  showAllLabels: boolean = true;\n\n  constructor() {}\n\n  addClassificationTask(task: MulticlassTask) {\n    // Check if task already exists\n\n    if (\n      this.listClassificationTasks.find((t) => t.taskName === task.taskName)\n    ) {\n      return;\n    }\n\n    this.listClassificationTasks.push(task);\n  }\n\n  addMultilabelTask(task: MultilabelTask) {\n    // Check if task already exists\n\n    if (this.multiLabelTask) {\n      // Merge the labels\n      task.taskLabels.forEach((label) => {\n        if (!this.multiLabelTask!.taskLabels.find((l) => l === label)) {\n          this.multiLabelTask!.taskLabels.push(label);\n        }\n      });\n\n      return;\n    }\n\n    this.multiLabelTask = task;\n  }\n\n  addNewClassificationTask() {\n    const classTask = new MulticlassTask(\n      'Task ' + (this.listClassificationTasks.length + 1),\n      []\n    );\n    this.listClassificationTasks.push(classTask);\n  }\n\n  removeClassificationTask(task: MulticlassTask) {\n    this.listClassificationTasks = this.listClassificationTasks.filter(\n      (t) => t.taskName !== task.taskName\n    );\n  }\n\n  addSegLabel(label: SegLabel) {\n    // Only add label if it does not already exist in the list\n\n    if (this.listSegmentationLabels.find((l) => l.label === label.label)) {\n      return;\n    }\n\n    this.listSegmentationLabels.push(label);\n    if (!this.activeLabel) {\n      this.activeLabel = label;\n    }\n  }\n  setActiveIndex(index: number) {\n    if (index >= 0 && index  label.label !== SegLabel.label\n    );\n    this._treeNode = constructLabelTreeNode(this.listSegmentationLabels);\n  }\n\n  getActiveIndex(): number {\n    if (this.activeLabel) {\n      return this.listSegmentationLabels.findIndex(\n        (label) => label.label === this.activeLabel!.label\n      );\n    }\n    return -1;\n  }\n\n  getTreeNode(): TreeNode[] {\n    if (!this._treeNode) {\n      this._treeNode = constructLabelTreeNode(this.listSegmentationLabels);\n    }\n\n    return this._treeNode;\n  }\n\n  rebuildTreeNodes() {\n    this._treeNode = constructLabelTreeNode(this.listSegmentationLabels);\n  }\n\n  switchVisibilityAllSegLabels() {\n    this.showAllLabels = !this.showAllLabels;\n    this.listSegmentationLabels.forEach((label) => {\n      label.isVisible = this.showAllLabels;\n    });\n  }\n\n  incrementActiveInstance() {\n    if (!this.activeLabel) {\n      return;\n    }\n    if (!this.activeSegInstance) {\n      this.activeSegInstance = {\n        label: this.activeLabel,\n        instance: 1,\n        shade: '',\n      };\n    } else {\n      let current_instance = this.activeSegInstance.instance;\n      if (current_instance >= this.activeLabel.shades!.length - 1) {\n        current_instance = -1;\n      }\n      current_instance++;\n      let new_shade = this.activeLabel.shades![current_instance];\n\n      this.activeSegInstance = {\n        label: this.activeLabel,\n        instance: current_instance,\n        shade: new_shade,\n      };\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoadingComponent.html":{"url":"components/LoadingComponent.html","title":"component - LoadingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoadingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/Components/Interface/loading/loading.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-loading\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ProgressBarModule\n                            NgIf\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./loading.component.html\n            \n\n\n\n            \n                styleUrl\n                ./loading.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                viewService\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(viewService: ViewService)\n                    \n                \n                        \n                            \n                                Defined in src/app/Components/Interface/loading/loading.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        viewService\n                                                  \n                                                        \n                                                                        ViewService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        viewService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ViewService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Interface/loading/loading.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ProgressBarModule } from 'primeng/progressbar';\nimport { ViewService } from '../../../Services/UI/view.service';\nimport { NgIf } from '@angular/common';\n\n@Component({\n  selector: 'app-loading',\n  standalone: true,\n  imports: [ProgressBarModule, NgIf],\n  templateUrl: './loading.component.html',\n  styleUrl: './loading.component.scss'\n})\nexport class LoadingComponent {\n\n  constructor(public viewService: ViewService) { }\n\n}\n\n    \n\n    \n        \n    \n        \n        \n            {{viewService.loadingStatus}}\n\n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                {{viewService.loadingStatus}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlockableDiv', 'selector': 'blockable-div'},{'name': 'BlockableP', 'selector': 'blockable-p'},{'name': 'ClassificationConfigurationComponent', 'selector': 'app-classification-configuration'},{'name': 'DrawableCanvasComponent', 'selector': 'app-drawable-canvas'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'GalleryComponent', 'selector': 'app-gallery'},{'name': 'GalleryElementComponent', 'selector': 'app-gallery-element'},{'name': 'InstanceLabelComponent', 'selector': 'app-instance-label'},{'name': 'InteractiveBboxComponent', 'selector': 'app-interactive-bbox'},{'name': 'LabelledSwitchComponent', 'selector': 'app-labelled-switch'},{'name': 'LabelsComponent', 'selector': 'app-labels'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'ProjectConfigurationComponent', 'selector': 'app-project-configuration'},{'name': 'SVGElementsComponent', 'selector': 'app-svgelements'},{'name': 'TestingComponent', 'selector': 'app-testing'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'ToolSettingComponent', 'selector': 'app-tool-setting'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoadingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MulticlassInterface.html":{"url":"interfaces/MulticlassInterface.html","title":"interface - MulticlassInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MulticlassInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Core/interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            classes\n                                        \n                                \n                                \n                                        \n                                            default\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        classes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        classes:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        default\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        default:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SegLabel {\n  label: string;\n  color: string;\n  isVisible: boolean;\n  shades: string[] | null;\n}\n\nexport interface SegInstance {\n  label: SegLabel;\n  instance: number;\n  shade: string;\n}\n\nexport interface BboxLabel {\n  label: SegLabel;\n  bbox: Rect;\n  instance: number;\n}\n\nexport interface Thumbnail {\n  name: Promise;\n  thumbnailPath: Promise;\n}\n\nexport interface Point2D {\n  x: number;\n  y: number;\n}\n\nexport interface Rect {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\n\nexport interface Viewbox {\n  xmin: number;\n  ymin: number;\n  xmax: number;\n  ymax: number;\n}\n\nexport interface UndoRedoCanvasElement {\n  data: Blob | Blob[];\n  index: number;\n}\n\nexport interface MulticlassInterface {\n  name: string;\n  classes: string[];\n  default: string | null;\n}\n\nexport interface MultilabelInterface {\n  name: string;\n  classes: string[];\n  default: string[] | null;\n}\n\nexport interface ProjectConfig {\n  project_name: string;\n  input_dir: string;\n  output_dir: string;\n  is_segmentation: boolean;\n  is_classification: boolean;\n  is_instance_segmentation: boolean;\n  is_bbox_detection: boolean;\n  segmentation_classes: null | string[];\n  classification_classes: null | MulticlassInterface[];\n  classification_multilabel: null | MultilabelInterface;\n}\n\nexport interface ImageFromCLI {\n  image_path: string;\n  mask_data: string[] | null;\n  segmentation_classes: string[] | null;\n  classification_classes: string[] | null;\n  classification_multilabel: string[] | null;\n}\n\n\nexport interface ProjectFile{\n  root: string;\n  project_name: string;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MulticlassTask.html":{"url":"classes/MulticlassTask.html","title":"class - MulticlassTask","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MulticlassTask\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Core/task.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                choice\n                            \n                            \n                                    Public\n                                classLabels\n                            \n                            \n                                    Public\n                                taskName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(taskName: string, classLabels: string[], choice: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/Core/task.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        classLabels\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        choice\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        choice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/Core/task.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        classLabels\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Core/task.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        taskName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Core/task.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class MulticlassTask{\n\n    constructor(public taskName: string, public classLabels: string[], public choice: string = ''){\n    }\n}\n\nexport class MultilabelTask{\n    constructor(public taskName: string, public taskLabels: string[], public choices: string[] = []){\n    }\n\n    addLabel(label: string){\n        this.taskLabels.push(label);\n    }\n\n    removeLabel(label: string){\n        this.taskLabels = this.taskLabels.filter((l) => l !== label);\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MultilabelInterface.html":{"url":"interfaces/MultilabelInterface.html","title":"interface - MultilabelInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MultilabelInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Core/interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            classes\n                                        \n                                \n                                \n                                        \n                                            default\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        classes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        classes:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        default\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        default:     string[] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[] | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SegLabel {\n  label: string;\n  color: string;\n  isVisible: boolean;\n  shades: string[] | null;\n}\n\nexport interface SegInstance {\n  label: SegLabel;\n  instance: number;\n  shade: string;\n}\n\nexport interface BboxLabel {\n  label: SegLabel;\n  bbox: Rect;\n  instance: number;\n}\n\nexport interface Thumbnail {\n  name: Promise;\n  thumbnailPath: Promise;\n}\n\nexport interface Point2D {\n  x: number;\n  y: number;\n}\n\nexport interface Rect {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\n\nexport interface Viewbox {\n  xmin: number;\n  ymin: number;\n  xmax: number;\n  ymax: number;\n}\n\nexport interface UndoRedoCanvasElement {\n  data: Blob | Blob[];\n  index: number;\n}\n\nexport interface MulticlassInterface {\n  name: string;\n  classes: string[];\n  default: string | null;\n}\n\nexport interface MultilabelInterface {\n  name: string;\n  classes: string[];\n  default: string[] | null;\n}\n\nexport interface ProjectConfig {\n  project_name: string;\n  input_dir: string;\n  output_dir: string;\n  is_segmentation: boolean;\n  is_classification: boolean;\n  is_instance_segmentation: boolean;\n  is_bbox_detection: boolean;\n  segmentation_classes: null | string[];\n  classification_classes: null | MulticlassInterface[];\n  classification_multilabel: null | MultilabelInterface;\n}\n\nexport interface ImageFromCLI {\n  image_path: string;\n  mask_data: string[] | null;\n  segmentation_classes: string[] | null;\n  classification_classes: string[] | null;\n  classification_multilabel: string[] | null;\n}\n\n\nexport interface ProjectFile{\n  root: string;\n  project_name: string;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MultilabelTask.html":{"url":"classes/MultilabelTask.html","title":"class - MultilabelTask","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MultilabelTask\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Core/task.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                choices\n                            \n                            \n                                    Public\n                                taskLabels\n                            \n                            \n                                    Public\n                                taskName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addLabel\n                            \n                            \n                                removeLabel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(taskName: string, taskLabels: string[], choices: string[])\n                    \n                \n                        \n                            \n                                Defined in src/app/Core/task.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskLabels\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        choices\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        choices\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/Core/task.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        taskLabels\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Core/task.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        taskName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Core/task.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addLabel\n                        \n                    \n                \n            \n            \n                \naddLabel(label: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Core/task.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                label\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeLabel\n                        \n                    \n                \n            \n            \n                \nremoveLabel(label: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Core/task.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                label\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class MulticlassTask{\n\n    constructor(public taskName: string, public classLabels: string[], public choice: string = ''){\n    }\n}\n\nexport class MultilabelTask{\n    constructor(public taskName: string, public taskLabels: string[], public choices: string[] = []){\n    }\n\n    addLabel(label: string){\n        this.taskLabels.push(label);\n    }\n\n    removeLabel(label: string){\n        this.taskLabels = this.taskLabels.filter((l) => l !== label);\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OpenCVService.html":{"url":"injectables/OpenCVService.html","title":"injectable - OpenCVService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OpenCVService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Services/open-cv.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cv_ready\n                            \n                            \n                                gradient\n                            \n                            \n                                M\n                            \n                            \n                                outputCanvas\n                            \n                            \n                                outputCtx\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                binarizeCanvas\n                            \n                            \n                                binarizeMultiColorCanvas\n                            \n                            \n                                brightness_contrast\n                            \n                            \n                                edgeDetection\n                            \n                            \n                                edgeDetection_v2\n                            \n                            \n                                edgeDetectionCanvas\n                            \n                            \n                                gammaCorrection\n                            \n                            \n                                median_blur\n                            \n                            \n                                reinforceEdges\n                            \n                            \n                                stretchHist\n                            \n                            \n                                to_grayscale\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ngxOpenCv: NgxOpenCVService)\n                    \n                \n                        \n                            \n                                Defined in src/app/Services/open-cv.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngxOpenCv\n                                                  \n                                                        \n                                                                        NgxOpenCVService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        binarizeCanvas\n                        \n                    \n                \n            \n            \n                \nbinarizeCanvas(ctx: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D, color: string, bbox: Rect | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/open-cv.service.ts:302\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                        CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                color\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                bbox\n                                            \n                                                        Rect | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        binarizeMultiColorCanvas\n                        \n                    \n                \n            \n            \n                \nbinarizeMultiColorCanvas(ctx: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D, labelColors: string[], bbox: Rect | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/open-cv.service.ts:342\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                        CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                labelColors\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                bbox\n                                            \n                                                        Rect | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        brightness_contrast\n                        \n                    \n                \n            \n            \n                \nbrightness_contrast(input: HTMLCanvasElement, output: HTMLCanvasElement, contrast: number, brightness: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/open-cv.service.ts:131\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        HTMLCanvasElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                output\n                                            \n                                                        HTMLCanvasElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                contrast\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                brightness\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     HTMLCanvasElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        edgeDetection\n                        \n                    \n                \n            \n            \n                \nedgeDetection(ctx: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/open-cv.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                        CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     OffscreenCanvas | HTMLCanvasElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        edgeDetection_v2\n                        \n                    \n                \n            \n            \n                \nedgeDetection_v2(ctx: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/open-cv.service.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                        CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     OffscreenCanvas | HTMLCanvasElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        edgeDetectionCanvas\n                        \n                    \n                \n            \n            \n                \nedgeDetectionCanvas(canvas: HTMLCanvasElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/open-cv.service.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                canvas\n                                            \n                                                        HTMLCanvasElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gammaCorrection\n                        \n                    \n                \n            \n            \n                \ngammaCorrection(input: HTMLCanvasElement, output: HTMLCanvasElement, gamma: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/open-cv.service.ts:267\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        HTMLCanvasElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                output\n                                            \n                                                        HTMLCanvasElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                gamma\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     HTMLCanvasElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        median_blur\n                        \n                    \n                \n            \n            \n                \nmedian_blur(input: HTMLCanvasElement, output: HTMLCanvasElement, kernel_size: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/open-cv.service.ts:139\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        HTMLCanvasElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                output\n                                            \n                                                        HTMLCanvasElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                kernel_size\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     HTMLCanvasElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reinforceEdges\n                        \n                    \n                \n            \n            \n                \nreinforceEdges(input: HTMLCanvasElement, output: HTMLCanvasElement, strengh: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/open-cv.service.ts:241\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        HTMLCanvasElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                output\n                                            \n                                                        HTMLCanvasElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                strengh\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     HTMLCanvasElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stretchHist\n                        \n                    \n                \n            \n            \n                \nstretchHist(input: HTMLCanvasElement, output: HTMLCanvasElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/open-cv.service.ts:147\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        HTMLCanvasElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                output\n                                            \n                                                        HTMLCanvasElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     HTMLCanvasElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        to_grayscale\n                        \n                    \n                \n            \n            \n                \nto_grayscale(input: HTMLCanvasElement, output: HTMLCanvasElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/open-cv.service.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        HTMLCanvasElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                output\n                                            \n                                                        HTMLCanvasElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     HTMLCanvasElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cv_ready\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/open-cv.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gradient\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/open-cv.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        M\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/open-cv.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        outputCanvas\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new OffscreenCanvas(0, 0)\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/open-cv.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        outputCtx\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.outputCanvas.getContext('2d', { alpha: true})\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/open-cv.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, output } from '@angular/core';\nimport { NgxOpenCVService, OpenCVState } from 'ngx-opencv';\nimport { from_hex_to_rgb } from '../Core/misc/colors';\nimport { Rect } from '../Core/interface';\ndeclare var cv: any;\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OpenCVService {\n  gradient: any;\n  outputCanvas = new OffscreenCanvas(0, 0);\n  outputCtx = this.outputCanvas.getContext('2d', { alpha: true});\n  M: any;\n  cv_ready: boolean = false;\n  constructor(private ngxOpenCv: NgxOpenCVService) {\n    this.ngxOpenCv.cvState.subscribe((cvState: OpenCVState) => {\n      // do something with the state string\n      if (cvState.error) {\n        console.error('Error loading OpenCV:', cvState.error);\n      }\n      else if (cvState.loading) {\n        this.cv_ready = false;\n      } else if (cvState.ready) {\n        this.cv_ready = true;\n\n        this.gradient = new cv.Mat();\n\n        // Apply morphological gradient\n    \n        this.M = cv.Mat.ones(3, 3, cv.CV_8U);\n    \n      }\n    });\n  }\n\n  edgeDetection(ctx: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D): OffscreenCanvas | HTMLCanvasElement {\n\n    // Given a canvas with multiple colors, detect the edges of the different colors\n\n    this.outputCanvas.width = ctx.canvas.width;\n    this.outputCanvas.height = ctx.canvas.height;\n\n    // Get the canvas context and image data\n\n    const imgData = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height);\n\n    const src = cv.matFromImageData(imgData);\n\n    // Convert the image to grayscale\n\n    cv.morphologyEx(src, this.gradient, cv.MORPH_GRADIENT, this.M);\n\n\n    // Convert the output to an image data format\n    const processedImageData = new ImageData(new Uint8ClampedArray(this.gradient.data), ctx.canvas.width, ctx.canvas.height);\n    this.outputCtx!.putImageData(processedImageData, 0, 0);\n    src.delete();\n\n    return this.outputCanvas;\n  }\n\n  edgeDetectionCanvas(canvas: HTMLCanvasElement){\n    let src = cv.imread(canvas);\n\n    cv.morphologyEx(src, this.gradient, cv.MORPH_GRADIENT, this.M);\n\n    cv.imshow(canvas, this.gradient);\n    src.delete();\n    \n\n  }\n\n  edgeDetection_v2(ctx: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D): OffscreenCanvas | HTMLCanvasElement {\n    const width = ctx.canvas.width;\n    const height = ctx.canvas.height;\n    const imageData = ctx.getImageData(0, 0, width, height);\n    const data = imageData.data;\n    \n    // Create output canvas\n    const outCanvas = new OffscreenCanvas(width, height);\n    const outCtx = outCanvas.getContext('2d');\n    if (!outCtx) return outCanvas;\n    \n    // Create output image data\n    const outImageData = outCtx.createImageData(width, height);\n    const outData = outImageData.data;\n\n    // Scan only pixels that could be edges (have different neighbors)\n    for (let y = 1; y  0)\n        if (data[idx + 3] > 0) {\n          // Check 4-connected neighbors\n          const hasEmptyNeighbor = \n            data[((y-1) * width + x) * 4 + 3] === 0 ||  // top\n            data[((y+1) * width + x) * 4 + 3] === 0 ||  // bottom\n            data[(y * width + x-1) * 4 + 3] === 0 ||    // left\n            data[(y * width + x+1) * 4 + 3] === 0;      // right\n\n          // If pixel has at least one empty neighbor, it's an edge\n          if (hasEmptyNeighbor) {\n            outData[idx] = data[idx];       // R\n            outData[idx + 1] = data[idx+1]; // G\n            outData[idx + 2] = data[idx+2]; // B\n            outData[idx + 3] = data[idx+3]; // A\n          }\n        }\n      }\n    }\n\n    outCtx.putImageData(outImageData, 0, 0);\n    return outCanvas;\n\n}\n\n  to_grayscale(input: HTMLCanvasElement, output: HTMLCanvasElement): HTMLCanvasElement {\n    let src = cv.imread(input);\n\n    cv.cvtColor(src, src, cv.COLOR_RGBA2GRAY, 0);\n    cv.cvtColor(src, src, cv.COLOR_GRAY2RGBA, 0);\n    cv.imshow(output, src);\n    src.delete();\n    return output;\n  }\n\n  brightness_contrast(input: HTMLCanvasElement, output: HTMLCanvasElement, contrast: number, brightness: number): HTMLCanvasElement {\n    let src = cv.imread(input);\n    cv.convertScaleAbs(src, src, contrast, brightness);\n    cv.imshow(output, src);\n    src.delete();\n    return output;\n  }\n\n  median_blur(input: HTMLCanvasElement, output: HTMLCanvasElement, kernel_size: number): HTMLCanvasElement {\n    let src = cv.imread(input);\n    cv.medianBlur(src, src, kernel_size);\n    cv.imshow(output, src);\n    src.delete();\n    return output;\n  }\n\n  stretchHist(input: HTMLCanvasElement, output: HTMLCanvasElement): HTMLCanvasElement {\n\n    let image = cv.imread(input);\n    cv.cvtColor(image, image, cv.COLOR_RGBA2RGB, 0);\n\n    let srcVec = new cv.MatVector();\n    srcVec.push_back(image);\n\n    let accumulate = false;\n    let histSize = [256];\n    let ranges = [0, 255];\n    let rhist = new cv.Mat();\n    let ghist = new cv.Mat();\n    let bhist = new cv.Mat();\n    let mask = new cv.Mat();\n    cv.calcHist(srcVec, [0], mask, rhist, histSize, ranges, accumulate);\n    cv.calcHist(srcVec, [1], mask, ghist, histSize, ranges, accumulate);\n    cv.calcHist(srcVec, [2], mask, bhist, histSize, ranges, accumulate);\n    let total = new cv.Mat(rhist.rows, rhist.cols, cv.CV_32F, new cv.Scalar(image.rows * image.cols));\n    let rnorm_hist = new cv.Mat(rhist.rows, rhist.cols, cv.CV_32F);\n    let bnorm_hist = new cv.Mat(rhist.rows, rhist.cols, cv.CV_32F);\n    let gnorm_hist = new cv.Mat(rhist.rows, rhist.cols, cv.CV_32F);\n\n    cv.divide(rhist, total, rnorm_hist);\n    cv.divide(bhist, total, bnorm_hist);\n    cv.divide(ghist, total, gnorm_hist);\n\n    rhist.delete();\n    bhist.delete();\n    ghist.delete();\n    total.delete();\n    srcVec.delete();\n\n    let r_cdf = new Array(256).fill(0)\n    let g_cdf = new Array(256).fill(0)\n    let b_cdf = new Array(256).fill(0)\n    for (let i = 0; i  percent && rmin == -1) {\n        rmin = i;\n      }\n      if (g_cdf[i] > percent && gmin == -1) {\n        gmin = i;\n      }\n      if (b_cdf[i] > percent && bmin == -1) {\n        bmin = i;\n      }\n      if (r_cdf[i] > 1 - percent && rmax == -1) {\n        rmax = i;\n      }\n      if (g_cdf[i] > 1 - percent && gmax == -1) {\n        gmax = i;\n      }\n      if (b_cdf[i] > 1 - percent && bmax == -1) {\n        bmax = i;\n      }\n    }\n\n    let vec = new cv.MatVector();\n    image.convertTo(image, cv.CV_32F, 1, 0);\n    cv.split(image, vec);\n\n    vec.get(0).convertTo(vec.get(0), cv.CV_32F, 1 / (rmax - rmin), -rmin / (rmax - rmin));\n    vec.get(1).convertTo(vec.get(1), cv.CV_32F, 1 / (gmax - gmin), -gmin / (gmax - gmin));\n    vec.get(2).convertTo(vec.get(2), cv.CV_32F, 1 / (bmax - bmin), -bmin / (bmax - bmin));\n\n    cv.merge(vec, image);\n    vec.delete();\n    rnorm_hist.delete();\n    gnorm_hist.delete();\n    bnorm_hist.delete();\n    cv.convertScaleAbs(image, image, 255)\n\n    cv.imshow(output, image);\n    image.delete();\n    return output;\n\n  }\n\n\n  reinforceEdges(input: HTMLCanvasElement, output: HTMLCanvasElement, strengh: number): HTMLCanvasElement {\n\n    // Compute the gaussian blur of the image\n    // Compute the difference between the original image and the gaussian blur\n\n\n    let src = cv.imread(input);\n    let dst = new cv.Mat();\n\n    cv.GaussianBlur(src, dst, new cv.Size(0, 0), 10);\n\n    cv.addWeighted(src, 1 + strengh, dst, -strengh, 0, src);\n\n    cv.convertScaleAbs(src, src, 1, 0);\n\n    cv.imshow(output, src);\n    src.delete();\n    dst.delete();\n\n\n\n\n    return output;\n\n  }\n\n  gammaCorrection(input: HTMLCanvasElement, output: HTMLCanvasElement, gamma: number): HTMLCanvasElement {\n    // Create matrices from input and output canvases\n    let src = cv.imread(input);\n    let dst = new cv.Mat();\n\n    // Convert source image to floating point for precise calculations\n    src.convertTo(dst, cv.CV_32F);\n\n    // Normalize the image to 0-1 range\n    cv.normalize(dst, dst, 0, 1, cv.NORM_MINMAX);\n\n    // Apply gamma correction\n    // Formula: output = input^(1/gamma)\n    let gamma_inv = 1.0 / gamma;\n\n    // Create a temporary matrix to store results\n    let corrected = new cv.Mat();\n\n    // Perform gamma correction\n    cv.pow(dst, gamma_inv, corrected);\n\n    // Scale back to 0-255 range\n    corrected.convertTo(corrected, cv.CV_8U, 255.0);\n\n    // Write the result to the output canvas\n    cv.imshow(output, corrected);\n\n    // Free memory\n    src.delete();\n    dst.delete();\n    corrected.delete();\n\n    return output;\n  }\n\n  binarizeCanvas(ctx: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D, color: string, bbox: Rect | null) {\n    // Get the canvas context and image data\n    const rgb = from_hex_to_rgb(color); // Convert hex color to RGB\n    if (!bbox) {\n      bbox = { x: 0, y: 0, width: ctx.canvas.width, height: ctx.canvas.height }\n    }\n    const imgData = ctx.getImageData(bbox.x, bbox.y, bbox.width, bbox.height);\n\n    // Convert the image data to OpenCV format\n    const src = cv.matFromImageData(imgData);\n    const gray = new cv.Mat();\n    const binary = new cv.Mat();\n\n    // Convert to grayscale\n    cv.cvtColor(src, gray, cv.COLOR_RGBA2GRAY);\n\n    // Apply binary thresholding to remove anti-aliasing\n    cv.threshold(gray, binary, 1, 255, cv.THRESH_BINARY);\n\n    // Create an RGBA matrix for the foreground color\n    const foreground = new cv.Mat(src.size(), src.type());\n    foreground.setTo(new cv.Scalar(rgb[0], rgb[1], rgb[2], 255)); // Opaque foreground color\n\n    // Create an output matrix\n    const output = new cv.Mat();\n\n    // Copy the foreground color to the output where the binary mask is 255\n    foreground.copyTo(output, binary);\n\n    // Convert the output to an image data format\n    const processedImageData = new ImageData(new Uint8ClampedArray(output.data), bbox.width, bbox.height);\n    ctx.putImageData(processedImageData, bbox.x, bbox.y, 0, 0, bbox.width, bbox.height);\n\n    // Clean up\n    src.delete();\n    gray.delete();\n    binary.delete();\n    foreground.delete();\n    output.delete();\n  }\n  binarizeMultiColorCanvas(ctx: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D, labelColors: string[], bbox: Rect | null) {\n    if (!bbox) {\n      bbox = { x: 0, y: 0, width: ctx.canvas.width, height: ctx.canvas.height }\n    }\n\n    // Get the canvas context and image data\n    const imgData = ctx.getImageData(bbox.x, bbox.y, bbox.width, bbox.height);\n\n    // Convert the image data to OpenCV format\n    const src = cv.matFromImageData(imgData);\n    const rgba = new cv.Mat();\n    const output = new cv.Mat.zeros(src.size(), src.type()); // Initialize output with transparent background\n\n    // Loop through each label color\n    for (const labelColor of labelColors) {\n\n      const [r, g, b] = from_hex_to_rgb(labelColor)\n\n      // Create a mask for the current label color\n      const mask = new cv.Mat();\n      const lowerBound = new cv.Mat(src.size(), src.type()); // Slight tolerance\n      const upperBound = new cv.Mat(src.size(), src.type());\n\n      lowerBound.setTo(new cv.Scalar(r - 5, g - 5, b - 5, 255))\n      upperBound.setTo(new cv.Scalar(r + 5, g + 5, b + 5, 255))\n\n      cv.inRange(src, lowerBound, upperBound, mask);\n\n      // Remove anti-aliasing artifacts by thresholding the mask\n      cv.threshold(mask, mask, 1, 255, cv.THRESH_BINARY);\n\n      // Create a label matrix for the current color\n      const label = new cv.Mat(src.size(), src.type());\n      label.setTo(new cv.Scalar(r, g, b, 255))\n      label.copyTo(output, mask); // Copy the label color where the mask is 255\n\n      // Clean up temporary matrices\n      mask.delete();\n      lowerBound.delete();\n      upperBound.delete();\n      label.delete();\n    }\n\n    // Convert the output to an ImageData object\n    const processedImageData = new ImageData(new Uint8ClampedArray(output.data), bbox.width, bbox.height);\n    ctx.putImageData(processedImageData, bbox.x, bbox.y, 0, 0, bbox.width, bbox.height);\n\n    // Clean up\n    src.delete();\n    rgba.delete();\n    output.delete();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Point2D.html":{"url":"interfaces/Point2D.html","title":"interface - Point2D","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Point2D\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Core/interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            y\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SegLabel {\n  label: string;\n  color: string;\n  isVisible: boolean;\n  shades: string[] | null;\n}\n\nexport interface SegInstance {\n  label: SegLabel;\n  instance: number;\n  shade: string;\n}\n\nexport interface BboxLabel {\n  label: SegLabel;\n  bbox: Rect;\n  instance: number;\n}\n\nexport interface Thumbnail {\n  name: Promise;\n  thumbnailPath: Promise;\n}\n\nexport interface Point2D {\n  x: number;\n  y: number;\n}\n\nexport interface Rect {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\n\nexport interface Viewbox {\n  xmin: number;\n  ymin: number;\n  xmax: number;\n  ymax: number;\n}\n\nexport interface UndoRedoCanvasElement {\n  data: Blob | Blob[];\n  index: number;\n}\n\nexport interface MulticlassInterface {\n  name: string;\n  classes: string[];\n  default: string | null;\n}\n\nexport interface MultilabelInterface {\n  name: string;\n  classes: string[];\n  default: string[] | null;\n}\n\nexport interface ProjectConfig {\n  project_name: string;\n  input_dir: string;\n  output_dir: string;\n  is_segmentation: boolean;\n  is_classification: boolean;\n  is_instance_segmentation: boolean;\n  is_bbox_detection: boolean;\n  segmentation_classes: null | string[];\n  classification_classes: null | MulticlassInterface[];\n  classification_multilabel: null | MultilabelInterface;\n}\n\nexport interface ImageFromCLI {\n  image_path: string;\n  mask_data: string[] | null;\n  segmentation_classes: string[] | null;\n  classification_classes: string[] | null;\n  classification_multilabel: string[] | null;\n}\n\n\nexport interface ProjectFile{\n  root: string;\n  project_name: string;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Point2D-1.html":{"url":"interfaces/Point2D-1.html","title":"interface - Point2D-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Point2D\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Components/Core/drawable-canvas/models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            y\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Point2D {\n    x: number;\n    y: number;\n}\n\nexport interface Rect {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n}\n\n\nexport interface Viewbox{\n    xmin: number;\n    ymin: number;\n    xmax: number;\n    ymax: number;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PostProcessService.html":{"url":"injectables/PostProcessService.html","title":"injectable - PostProcessService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PostProcessService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Components/Core/drawable-canvas/service/post-process.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                featuresExtracted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                crf_post_process\n                            \n                            \n                                    Async\n                                drawQuadTreeBbox\n                            \n                            \n                                    Async\n                                eraseAll_post_process\n                            \n                            \n                                    Async\n                                otsu_post_process\n                            \n                            \n                                postProcess\n                            \n                            \n                                    Async\n                                sam_post_process\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(editorService: EditorService, imageProcessingService: ImageProcessingService, canvasManagerService: CanvasManagerService, bboxManager: BboxManagerService, stateService: StateManagerService, svgUIService: SVGUIService)\n                    \n                \n                        \n                            \n                                Defined in src/app/Components/Core/drawable-canvas/service/post-process.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        editorService\n                                                  \n                                                        \n                                                                        EditorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        imageProcessingService\n                                                  \n                                                        \n                                                                        ImageProcessingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        canvasManagerService\n                                                  \n                                                        \n                                                                        CanvasManagerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bboxManager\n                                                  \n                                                        \n                                                                        BboxManagerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stateService\n                                                  \n                                                        \n                                                                        StateManagerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        svgUIService\n                                                  \n                                                        \n                                                                        SVGUIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        crf_post_process\n                        \n                    \n                \n            \n            \n                \n                        \n                    crf_post_process()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/post-process.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        drawQuadTreeBbox\n                        \n                    \n                \n            \n            \n                \n                        \n                    drawQuadTreeBbox(maskData: Uint8ClampedArray, minSize: number, maxDepth: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/post-process.service.ts:221\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                maskData\n                                            \n                                                        Uint8ClampedArray\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                minSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                maxDepth\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        eraseAll_post_process\n                        \n                    \n                \n            \n            \n                \n                        \n                    eraseAll_post_process()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/post-process.service.ts:171\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        otsu_post_process\n                        \n                    \n                \n            \n            \n                \n                        \n                    otsu_post_process()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/post-process.service.ts:124\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        postProcess\n                        \n                    \n                \n            \n            \n                \npostProcess()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/post-process.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sam_post_process\n                        \n                    \n                \n            \n            \n                \n                        \n                    sam_post_process()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/post-process.service.ts:72\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        featuresExtracted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/post-process.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, input } from '@angular/core';\nimport { EditorService } from '../../../../Services/UI/editor.service';\nimport { CanvasManagerService } from './canvas-manager.service';\nimport { StateManagerService } from './state-manager.service';\nimport { ImageProcessingService } from './image-processing.service';\nimport { invoke } from '@tauri-apps/api/core';\nimport { BboxManagerService } from './bbox-manager.service';\nimport { SVGUIService } from './svgui.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PostProcessService {\n  public featuresExtracted: boolean = false;\n  constructor(\n    private editorService: EditorService,\n    private imageProcessingService: ImageProcessingService,\n    private canvasManagerService: CanvasManagerService,\n    private bboxManager: BboxManagerService,\n    private stateService: StateManagerService,\n    private svgUIService: SVGUIService\n  ) {}\n\n  postProcess() {}\n\n  async crf_post_process() {\n    let bufferCtx = this.canvasManagerService.getBufferCtx();\n    let rect = this.stateService.getBoundingBox();\n    const maskData = bufferCtx.getImageData(\n      rect.x,\n      rect.y,\n      rect.width,\n      rect.height\n    ).data;\n    \n    const imgData = this.imageProcessingService\n      .getCurrentCanvas()\n      .getContext('2d', { alpha: false })!\n      .getImageData(\n        rect.x,\n        rect.y,\n        rect.width,\n        rect.height\n\n      ).data;\n    let timer = performance.now();\n    return invoke('crf_refine', {\n      mask: maskData.buffer,\n      image: imgData.buffer,\n      width: rect.width,\n      height: rect.height,\n      spatialWeight: 0.25,\n      bilateralWeight: 2.0,\n      numIterations: 50,\n    }).then((imageBitmap: ArrayBufferLike) => {\n      console.log('CRF took', performance.now() - timer);\n      let activeCtx = this.canvasManagerService.getActiveCtx();\n      let bufferCanvas = this.canvasManagerService.getBufferCanvas();\n      bufferCtx.putImageData(\n        new ImageData(\n          new Uint8ClampedArray(imageBitmap),\n          rect.width,\n          rect.height\n        ),\n        rect.x,\n        rect.y\n      );\n      activeCtx.drawImage(bufferCanvas, 0, 0);\n    });\n  }\n\n  async sam_post_process() {\n    let bufferCtx = this.canvasManagerService.getBufferCtx();\n    let rect = {\n      x: 0,\n      y: 0,\n      width: this.stateService.width,\n      height: this.stateService.height,\n    };\n    const maskData = bufferCtx.getImageData(\n      rect.x,\n      rect.y,\n      rect.width,\n      rect.height\n    ).data;\n    const maxDepth = 4;\n    const minSize = 16;\n    const imgData = this.imageProcessingService\n      .getCurrentCanvas()\n      .getContext('2d', { alpha: false })!\n      .getImageData(\n        0,\n        0,\n        this.stateService.width,\n        this.stateService.height\n      ).data;\n    await this.drawQuadTreeBbox(maskData, minSize, maxDepth);\n    return invoke('sam_segment', {\n      coarseMask: maskData.buffer,\n      image: imgData.buffer,\n      threshold: this.editorService.samThreshold,\n      width: this.stateService.width,\n      height: this.stateService.height,\n      extractFeatures: !this.featuresExtracted,\n      maxDepth: maxDepth,\n      minSize: minSize,\n    }).then((imageBitmap: ArrayBufferLike) => {\n      this.featuresExtracted = true;\n      let activeCtx = this.canvasManagerService.getActiveCtx();\n      let bufferCanvas = this.canvasManagerService.getBufferCanvas();\n      bufferCtx.putImageData(\n        new ImageData(\n          new Uint8ClampedArray(imageBitmap),\n          rect.width,\n          rect.height\n        ),\n        rect.x,\n        rect.y\n      );\n      activeCtx.drawImage(bufferCanvas, 0, 0);\n    });\n  }\n\n  async otsu_post_process() {\n    const rect = this.stateService.getBoundingBox();\n    let bufferCtx = this.canvasManagerService.getBufferCtx();\n\n    const imageData = this.imageProcessingService\n      .getCurrentCanvas()\n      .getContext('2d', { alpha: false })!\n      .getImageData(rect.x, rect.y, rect.width, rect.height).data;\n\n    const maskData = bufferCtx.getImageData(\n      rect.x,\n      rect.y,\n      rect.width,\n      rect.height\n    ).data;\n\n    return invoke('otsu_segmentation', {\n      mask: maskData.buffer,\n      image: imageData.buffer,\n      opening: this.editorService.autoPostProcessOpening,\n      inverse: this.editorService.useInverse,\n      kernelSize: this.editorService.morphoSize,\n      connectedness: this.editorService.enforceConnectivity,\n      width: rect.width,\n      height: rect.height,\n    }).then((mask: ArrayBufferLike) => {\n      const newMAsk = new ImageData(\n        new Uint8ClampedArray(mask),\n        rect.width,\n        rect.height\n      );\n      const activeCtx = this.canvasManagerService.getActiveCtx();\n      bufferCtx.putImageData(newMAsk, rect.x, rect.y);\n      activeCtx.drawImage(\n        bufferCtx.canvas,\n        rect.x,\n        rect.y,\n        rect.width,\n        rect.height,\n        rect.x,\n        rect.y,\n        rect.width,\n        rect.height\n      );\n    });\n  }\n\n  async eraseAll_post_process() {\n    let bufferCtx = this.canvasManagerService.getBufferCtx();\n\n    const inputCtx = this.editorService.eraseAll\n      ? this.canvasManagerService.getCombinedCtx()\n      : this.canvasManagerService.getActiveCtx();\n\n    const maskData = bufferCtx.getImageData(\n      0,\n      0,\n      this.stateService.width,\n      this.stateService.height\n    ).data;\n    const labelData = inputCtx.getImageData(\n      0,\n      0,\n      this.stateService.width,\n      this.stateService.height\n    ).data;\n\n    const activeIndex = this.canvasManagerService.getActiveIndex();\n    let start = performance.now();\n    return invoke('get_overlapping_region_with_mask', {\n      label: labelData.buffer,\n      mask: maskData.buffer,\n      width: this.stateService.width,\n      height: this.stateService.height\n    }).then((mask: ArrayBufferLike) => {\n      this.svgUIService.resetPath();\n      const newMAsk = new ImageData(\n        new Uint8ClampedArray(mask),\n        this.stateService.width,\n        this.stateService.height\n      );\n      bufferCtx.putImageData(newMAsk, 0, 0);\n      this.canvasManagerService.getAllCanvasCtx().forEach((ctx, index) => {\n        if (index !== activeIndex && !this.editorService.eraseAll) return;\n        ctx.globalCompositeOperation = 'destination-out';\n        ctx.drawImage(\n          bufferCtx.canvas,\n          0,\n          0,\n          this.stateService.width,\n          this.stateService.height\n        );\n        ctx.globalCompositeOperation = 'source-over';\n      });\n    });\n  }\n\n  async drawQuadTreeBbox(\n    maskData: Uint8ClampedArray,\n    minSize: number,\n    maxDepth: number\n  ) {\n    const w = this.stateService.width;\n    const h = this.stateService.height;\n    return invoke('get_quad_tree_bbox', {\n      mask: maskData.buffer,\n      width: this.stateService.width,\n      height: this.stateService.height,\n      newWidth: 256,\n      newHeight: 256,\n      maxDepth: maxDepth,\n      minSize: minSize,\n    })\n      .then((bboxes: any) => {\n        let N = bboxes.length;\n        this.bboxManager.listBbox = [];\n        for (let i = 0; i  {\n        setTimeout(() => {\n          this.bboxManager.listBbox = [];\n        }, 2000);\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProjectConfig.html":{"url":"interfaces/ProjectConfig.html","title":"interface - ProjectConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProjectConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Core/interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            classification_classes\n                                        \n                                \n                                \n                                        \n                                            classification_multilabel\n                                        \n                                \n                                \n                                        \n                                            input_dir\n                                        \n                                \n                                \n                                        \n                                            is_bbox_detection\n                                        \n                                \n                                \n                                        \n                                            is_classification\n                                        \n                                \n                                \n                                        \n                                            is_instance_segmentation\n                                        \n                                \n                                \n                                        \n                                            is_segmentation\n                                        \n                                \n                                \n                                        \n                                            output_dir\n                                        \n                                \n                                \n                                        \n                                            project_name\n                                        \n                                \n                                \n                                        \n                                            segmentation_classes\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        classification_classes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        classification_classes:         null | MulticlassInterface[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         null | MulticlassInterface[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        classification_multilabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        classification_multilabel:         null | MultilabelInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         null | MultilabelInterface\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        input_dir\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        input_dir:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_bbox_detection\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        is_bbox_detection:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_classification\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        is_classification:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_instance_segmentation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        is_instance_segmentation:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_segmentation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        is_segmentation:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        output_dir\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        output_dir:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        project_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        project_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        segmentation_classes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        segmentation_classes:     null | string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     null | string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SegLabel {\n  label: string;\n  color: string;\n  isVisible: boolean;\n  shades: string[] | null;\n}\n\nexport interface SegInstance {\n  label: SegLabel;\n  instance: number;\n  shade: string;\n}\n\nexport interface BboxLabel {\n  label: SegLabel;\n  bbox: Rect;\n  instance: number;\n}\n\nexport interface Thumbnail {\n  name: Promise;\n  thumbnailPath: Promise;\n}\n\nexport interface Point2D {\n  x: number;\n  y: number;\n}\n\nexport interface Rect {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\n\nexport interface Viewbox {\n  xmin: number;\n  ymin: number;\n  xmax: number;\n  ymax: number;\n}\n\nexport interface UndoRedoCanvasElement {\n  data: Blob | Blob[];\n  index: number;\n}\n\nexport interface MulticlassInterface {\n  name: string;\n  classes: string[];\n  default: string | null;\n}\n\nexport interface MultilabelInterface {\n  name: string;\n  classes: string[];\n  default: string[] | null;\n}\n\nexport interface ProjectConfig {\n  project_name: string;\n  input_dir: string;\n  output_dir: string;\n  is_segmentation: boolean;\n  is_classification: boolean;\n  is_instance_segmentation: boolean;\n  is_bbox_detection: boolean;\n  segmentation_classes: null | string[];\n  classification_classes: null | MulticlassInterface[];\n  classification_multilabel: null | MultilabelInterface;\n}\n\nexport interface ImageFromCLI {\n  image_path: string;\n  mask_data: string[] | null;\n  segmentation_classes: string[] | null;\n  classification_classes: string[] | null;\n  classification_multilabel: string[] | null;\n}\n\n\nexport interface ProjectFile{\n  root: string;\n  project_name: string;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectConfigurationComponent.html":{"url":"components/ProjectConfigurationComponent.html","title":"component - ProjectConfigurationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProjectConfigurationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/Components/Interface/project-configuration/project-configuration.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-project-configuration\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CardModule\n                            TableModule\n                            CommonModule\n                                ClassificationConfigurationComponent\n                            NgClass\n                            NgIf\n                            NgFor\n                            DividerModule\n                            ColorPickerModule\n                            CheckboxModule\n                            ButtonModule\n                            FloatLabelModule\n                            FormsModule\n                            PanelModule\n                            InputSwitchModule\n                            InputTextModule\n                            FieldsetModule\n                                LabelledSwitchComponent\n                                ClassificationConfigurationComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./project-configuration.component.html\n            \n\n\n\n            \n                styleUrl\n                ./project-configuration.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                generateThumbnails\n                            \n                            \n                                isInputValid\n                            \n                            \n                                isNameValid\n                            \n                            \n                                isOutputValid\n                            \n                            \n                                    Public\n                                labelService\n                            \n                            \n                                    Public\n                                projectService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addSegmentationClass\n                            \n                            \n                                deleteSegmentationClass\n                            \n                            \n                                findAndLoadProjectFile\n                            \n                            \n                                    Async\n                                loadProjectFromFilepath\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openInputFolder\n                            \n                            \n                                openOutputFolder\n                            \n                            \n                                removeProjectFromFilepath\n                            \n                            \n                                startProject\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(projectService: ProjectService, labelService: LabelsService, cli: CLIService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/Components/Interface/project-configuration/project-configuration.component.ts:59\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        labelService\n                                                  \n                                                        \n                                                                        LabelsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cli\n                                                  \n                                                        \n                                                                        CLIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addSegmentationClass\n                        \n                    \n                \n            \n            \n                \naddSegmentationClass()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Interface/project-configuration/project-configuration.component.ts:104\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteSegmentationClass\n                        \n                    \n                \n            \n            \n                \ndeleteSegmentationClass(segLabel: SegLabel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Interface/project-configuration/project-configuration.component.ts:115\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                segLabel\n                                            \n                                                            SegLabel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAndLoadProjectFile\n                        \n                    \n                \n            \n            \n                \nfindAndLoadProjectFile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Interface/project-configuration/project-configuration.component.ts:124\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loadProjectFromFilepath\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadProjectFromFilepath(filepath: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Interface/project-configuration/project-configuration.component.ts:119\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filepath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Interface/project-configuration/project-configuration.component.ts:67\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openInputFolder\n                        \n                    \n                \n            \n            \n                \nopenInputFolder()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Interface/project-configuration/project-configuration.component.ts:76\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openOutputFolder\n                        \n                    \n                \n            \n            \n                \nopenOutputFolder()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Interface/project-configuration/project-configuration.component.ts:87\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeProjectFromFilepath\n                        \n                    \n                \n            \n            \n                \nremoveProjectFromFilepath(filepath: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Interface/project-configuration/project-configuration.component.ts:133\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filepath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startProject\n                        \n                    \n                \n            \n            \n                \nstartProject()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Interface/project-configuration/project-configuration.component.ts:94\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        generateThumbnails\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Interface/project-configuration/project-configuration.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isInputValid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Interface/project-configuration/project-configuration.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNameValid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Interface/project-configuration/project-configuration.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOutputValid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Interface/project-configuration/project-configuration.component.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        labelService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LabelsService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Interface/project-configuration/project-configuration.component.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProjectService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Interface/project-configuration/project-configuration.component.ts:61\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectorRef, Component, OnInit, output } from '@angular/core';\nimport { DividerModule } from 'primeng/divider';\nimport { PanelModule } from 'primeng/panel';\nimport { FloatLabelModule } from 'primeng/floatlabel';\nimport { FormsModule } from '@angular/forms';\nimport { CardModule } from 'primeng/card';\nimport { NgClass, NgIf, NgFor } from '@angular/common';\nimport { InputSwitchModule } from 'primeng/inputswitch';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { open } from '@tauri-apps/plugin-dialog';\nimport { FieldsetModule } from 'primeng/fieldset';\nimport { ButtonModule } from 'primeng/button';\nimport { environment } from '../../../../environments/environment';\nimport { ProjectService } from '../../../Services/Project/project.service';\nimport { LabelsService } from '../../../Services/Project/labels.service';\nimport { LabelledSwitchComponent } from '../../Core/labelled-switch/labelled-switch.component';\nimport { getDefaultColor } from '../../../Core/misc/colors';\nimport { ColorPickerModule } from 'primeng/colorpicker';\nimport { CheckboxModule } from 'primeng/checkbox';\nimport { SegLabel } from '../../../Core/interface';\nimport { CLIService } from '../../../Services/cli.service';\nimport { ClassificationConfigurationComponent } from './classification-configuration/classification-configuration.component';\nimport { TableModule } from 'primeng/table';\nimport { CommonModule } from '@angular/common';\nimport { path } from '@tauri-apps/api';\n\n@Component({\n  selector: 'app-project-configuration',\n  standalone: true,\n  imports: [\n    CardModule,\n    TableModule,\n    CommonModule,\n    ClassificationConfigurationComponent,\n    NgClass,\n    NgIf,\n    NgFor,\n    DividerModule,\n    ColorPickerModule,\n    CheckboxModule,\n    ButtonModule,\n    FloatLabelModule,\n    FormsModule,\n    PanelModule,\n    InputSwitchModule,\n    InputTextModule,\n    FieldsetModule,\n    LabelledSwitchComponent,\n    ClassificationConfigurationComponent,\n  ],\n  templateUrl: './project-configuration.component.html',\n  styleUrl: './project-configuration.component.scss',\n})\nexport class ProjectConfigurationComponent implements OnInit {\n  generateThumbnails: boolean = true;\n\n  isInputValid: boolean = true;\n  isOutputValid: boolean = true;\n  isNameValid: boolean = true;\n  constructor(\n    public projectService: ProjectService,\n    public labelService: LabelsService,\n    private cli: CLIService,\n    private cdr: ChangeDetectorRef\n  ) {}\n\n  ngOnInit(): void {\n    this.cli.commandProcessed.subscribe((value) => {\n      if (value) {\n        console.log('Command processed from Project Configuration');\n        this.cdr.detectChanges();\n      }\n    });\n  }\n\n  openInputFolder() {\n    const file = open({ directory: true });\n    file.then((value) => {\n      if (value) {\n        if (value != this.projectService.inputFolder) {\n          this.projectService.resetProject();\n        }\n        this.projectService.inputFolder = value;\n      }\n    });\n  }\n  openOutputFolder() {\n    const file = open({ directory: true });\n    file.then((value) => {\n      if (value) this.projectService.outputFolder = value;\n    });\n  }\n\n  startProject() {\n    // Validate input\n    this.isInputValid = this.projectService.inputFolder !== '';\n    this.isOutputValid = this.projectService.outputFolder !== '';\n    this.isNameValid = this.projectService.projectName !== '';\n    if (this.isInputValid && this.isOutputValid) {\n      this.projectService.startProject();\n    }\n  }\n\n  addSegmentationClass() {\n    let color = getDefaultColor(\n      this.labelService.listSegmentationLabels.length + 1\n    );\n    this.labelService.addSegLabel({\n      label: 'Class ' + this.labelService.listSegmentationLabels.length,\n      color: color,\n      isVisible: true,\n      shades: null,\n    });\n  }\n  deleteSegmentationClass(segLabel: SegLabel) {\n    this.labelService.removeSegLabel(segLabel);\n  }\n\n  async loadProjectFromFilepath(filepath: string) {\n    filepath = await path.join(filepath, 'project_config.json')\n    this.projectService.loadProjectFile(filepath);\n  }\n\n  findAndLoadProjectFile() {\n    const file = open({ directory: false });\n    file.then((value) => {\n      if (value) {\n        this.projectService.loadProjectFile(value);\n      }\n    });\n  }\n\n  removeProjectFromFilepath(filepath: string) {\n    this.projectService.removeProjectFile(filepath);\n  }\n\n}\n\n    \n\n    \n        \n  \n     0\"\n    >\n      \n        \n          \n            Project Name\n            Filepath\n            Remove from history\n          \n        \n        \n          \n            {{ rows.project_name }}\n            {{ rows.root }}\n            \n              \n            \n          \n        \n      \n    \n\n    \n      \n        Load from disk\n        Configure project\n        \n          \n            \n            Project name\n          \n          \n            Classification\n            Segmentation\n            Instance segmentation\n            Bounding box\n          \n        \n        \n          \n            \n          \n        \n\n        \n          \n            \n              \n                Class {{ i }}:\n                \n\n                \n                \n                \n              \n              \n            \n          \n        \n      \n    \n  \n\n  \n    \n      \n        \n          \n            \n              \n              Input path\n            \n\n            Choose folder\n            \n              Enter the path manually or open the explorer.\n            \n          \n          \n            \n              \n              \n                Recursive loading\n              \n            \n            \n              \n              regex\n            \n          \n        \n      \n\n      \n        \n          \n            \n            Output path\n          \n\n          Choose folder\n          \n            Enter the path manually or open the explorer.\n          \n        \n      \n    \n  \n\n  \n    \n      \n        \n          \n          \n            Create thumbnails\n          \n        \n      \n    \n  \n\n\n\n  Start\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       0\"    >                                    Project Name            Filepath            Remove from history                                                {{ rows.project_name }}            {{ rows.root }}                                                                                    Load from disk        Configure project                                          Project name                                Classification            Segmentation            Instance segmentation            Bounding box                                                                                                                              Class {{ i }}:                                                                                                                                                                                                            Input path                        Choose folder                          Enter the path manually or open the explorer.                                                                                        Recursive loading                                                                  regex                                                                                    Output path                    Choose folder                      Enter the path manually or open the explorer.                                                                                  Create thumbnails                                Start'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlockableDiv', 'selector': 'blockable-div'},{'name': 'BlockableP', 'selector': 'blockable-p'},{'name': 'ClassificationConfigurationComponent', 'selector': 'app-classification-configuration'},{'name': 'DrawableCanvasComponent', 'selector': 'app-drawable-canvas'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'GalleryComponent', 'selector': 'app-gallery'},{'name': 'GalleryElementComponent', 'selector': 'app-gallery-element'},{'name': 'InstanceLabelComponent', 'selector': 'app-instance-label'},{'name': 'InteractiveBboxComponent', 'selector': 'app-interactive-bbox'},{'name': 'LabelledSwitchComponent', 'selector': 'app-labelled-switch'},{'name': 'LabelsComponent', 'selector': 'app-labels'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'ProjectConfigurationComponent', 'selector': 'app-project-configuration'},{'name': 'SVGElementsComponent', 'selector': 'app-svgelements'},{'name': 'TestingComponent', 'selector': 'app-testing'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'ToolSettingComponent', 'selector': 'app-tool-setting'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProjectConfigurationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProjectFile.html":{"url":"interfaces/ProjectFile.html","title":"interface - ProjectFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProjectFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Core/interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            project_name\n                                        \n                                \n                                \n                                        \n                                            root\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        project_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        project_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        root\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        root:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SegLabel {\n  label: string;\n  color: string;\n  isVisible: boolean;\n  shades: string[] | null;\n}\n\nexport interface SegInstance {\n  label: SegLabel;\n  instance: number;\n  shade: string;\n}\n\nexport interface BboxLabel {\n  label: SegLabel;\n  bbox: Rect;\n  instance: number;\n}\n\nexport interface Thumbnail {\n  name: Promise;\n  thumbnailPath: Promise;\n}\n\nexport interface Point2D {\n  x: number;\n  y: number;\n}\n\nexport interface Rect {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\n\nexport interface Viewbox {\n  xmin: number;\n  ymin: number;\n  xmax: number;\n  ymax: number;\n}\n\nexport interface UndoRedoCanvasElement {\n  data: Blob | Blob[];\n  index: number;\n}\n\nexport interface MulticlassInterface {\n  name: string;\n  classes: string[];\n  default: string | null;\n}\n\nexport interface MultilabelInterface {\n  name: string;\n  classes: string[];\n  default: string[] | null;\n}\n\nexport interface ProjectConfig {\n  project_name: string;\n  input_dir: string;\n  output_dir: string;\n  is_segmentation: boolean;\n  is_classification: boolean;\n  is_instance_segmentation: boolean;\n  is_bbox_detection: boolean;\n  segmentation_classes: null | string[];\n  classification_classes: null | MulticlassInterface[];\n  classification_multilabel: null | MultilabelInterface;\n}\n\nexport interface ImageFromCLI {\n  image_path: string;\n  mask_data: string[] | null;\n  segmentation_classes: string[] | null;\n  classification_classes: string[] | null;\n  classification_multilabel: string[] | null;\n}\n\n\nexport interface ProjectFile{\n  root: string;\n  project_name: string;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProjectService.html":{"url":"injectables/ProjectService.html","title":"injectable - ProjectService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProjectService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Services/Project/project.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeImage\n                            \n                            \n                                activeIndex\n                            \n                            \n                                imagesName\n                            \n                            \n                                inputFolder\n                            \n                            \n                                inputRegex\n                            \n                            \n                                isBoundingBoxDetection\n                            \n                            \n                                isClassification\n                            \n                            \n                                isInstanceSegmentation\n                            \n                            \n                                isProjectStarted\n                            \n                            \n                                isSegmentation\n                            \n                            \n                                localStoragesProjectsFilepaths\n                            \n                            \n                                maxInstances\n                            \n                            \n                                outputFolder\n                            \n                            \n                                projectFolder\n                            \n                            \n                                projectName\n                            \n                            \n                                recursive\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create_project\n                            \n                            \n                                extractImagesName\n                            \n                            \n                                    Async\n                                goNext\n                            \n                            \n                                    Async\n                                goPrevious\n                            \n                            \n                                    Async\n                                listFiles\n                            \n                            \n                                    Async\n                                loadProjectFile\n                            \n                            \n                                    Async\n                                openEditor\n                            \n                            \n                                    Async\n                                removeProjectFile\n                            \n                            \n                                resetProject\n                            \n                            \n                                    Async\n                                startProject\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(viewService: ViewService, labelService: LabelsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/Services/Project/project.service.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        viewService\n                                                  \n                                                        \n                                                                        ViewService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        labelService\n                                                  \n                                                        \n                                                                        LabelsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create_project\n                        \n                    \n                \n            \n            \n                \n                        \n                    create_project(config: ProjectConfig)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/Project/project.service.ts:195\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                config\n                                            \n                                                            ProjectConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        extractImagesName\n                        \n                    \n                \n            \n            \n                \nextractImagesName(files: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/Project/project.service.ts:147\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                files\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        goNext\n                        \n                    \n                \n            \n            \n                \n                        \n                    goNext()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/Project/project.service.ts:172\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        goPrevious\n                        \n                    \n                \n            \n            \n                \n                        \n                    goPrevious()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/Project/project.service.ts:182\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        listFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    listFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/Project/project.service.ts:136\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loadProjectFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadProjectFile(filepath: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/Project/project.service.ts:113\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filepath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        openEditor\n                        \n                    \n                \n            \n            \n                \n                        \n                    openEditor(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/Project/project.service.ts:154\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeProjectFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeProjectFile(filepath: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/Project/project.service.ts:126\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filepath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetProject\n                        \n                    \n                \n            \n            \n                \nresetProject()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/Project/project.service.ts:188\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        startProject\n                        \n                    \n                \n            \n            \n                \n                        \n                    startProject()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/Project/project.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activeImage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Promise | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/Project/project.service.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        activeIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/Project/project.service.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imagesName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/Project/project.service.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inputFolder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.defaultInputFolder\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/Project/project.service.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inputRegex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.defaultRegex\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/Project/project.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isBoundingBoxDetection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/Project/project.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isClassification\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/Project/project.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isInstanceSegmentation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/Project/project.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isProjectStarted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/Project/project.service.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSegmentation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/Project/project.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        localStoragesProjectsFilepaths\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProjectFile[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/Project/project.service.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        maxInstances\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 100\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/Project/project.service.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        outputFolder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.defaultOutputFolder\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/Project/project.service.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        projectFolder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/Project/project.service.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        projectName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.defaultProjectName\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/Project/project.service.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recursive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/Project/project.service.ts:28\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { invoke } from '@tauri-apps/api/core';\nimport { environment } from '../../../environments/environment';\nimport { ViewService } from '../UI/view.service';\n\nimport { path } from '@tauri-apps/api';\nimport { ProjectConfig, ProjectFile, SegLabel, Thumbnail } from '../../Core/interface';\n\nimport { loadImageFile } from '../../Core/io/images';\nimport { LabelsService } from './labels.service';\nimport { getDefaultColor } from '../../Core/misc/colors';\nimport { MulticlassTask, MultilabelTask } from '../../Core/task';\nimport {\n  invokeLoadJsonFile,\n  saveProjectConfigFile,\n} from '../../Core/io/save_load';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProjectService {\n  isClassification: boolean = false;\n  isSegmentation: boolean = false;\n  isInstanceSegmentation: boolean = false;\n  isBoundingBoxDetection: boolean = false;\n\n  inputRegex: string = environment.defaultRegex;\n  recursive: boolean = true;\n  isProjectStarted: boolean = false;\n  projectName: string = environment.defaultProjectName;\n  outputFolder: string = environment.defaultOutputFolder;\n  inputFolder: string = environment.defaultInputFolder;\n\n  projectFolder: string = '';\n  imagesName: string[] = [];\n\n  localStoragesProjectsFilepaths: ProjectFile[] = [];\n\n  activeIndex: number | null = null;\n  activeImage: Promise | null = null;\n\n  maxInstances: number = 100;\n\n  constructor(\n    private viewService: ViewService,\n    private labelService: LabelsService\n  ) {\n\n    this.localStoragesProjectsFilepaths = JSON.parse(\n      localStorage.getItem('projects') || '[]'\n    );\n\n  }\n  async startProject(): Promise {\n    this.inputFolder = await path.resolve(this.inputFolder);\n    let sep = path.sep();\n    if (!this.inputFolder.endsWith(sep)) {\n      this.inputFolder = this.inputFolder + sep;\n    }\n\n    this.outputFolder = await path.resolve(this.outputFolder);\n    this.projectFolder = await path.join(this.outputFolder, this.projectName);\n\n    let projectConfig: ProjectConfig = {\n      project_name: this.projectName,\n      input_dir: this.inputFolder,\n      output_dir: this.outputFolder,\n      is_classification: this.isClassification,\n      is_segmentation: this.isSegmentation,\n      is_instance_segmentation: this.isInstanceSegmentation,\n      is_bbox_detection: this.isBoundingBoxDetection,\n      segmentation_classes: this.labelService.listSegmentationLabels.map(\n        (label) => label.label\n      ),\n      classification_classes: this.labelService.listClassificationTasks.map(\n        (task) => {\n          return {\n            name: task.taskName,\n            classes: task.classLabels,\n            default: task.choice,\n          };\n        }\n      ),\n      classification_multilabel: this.labelService.multiLabelTask\n        ? {\n          name: this.labelService.multiLabelTask.taskName,\n          classes: this.labelService.multiLabelTask.taskLabels,\n          default: this.labelService.multiLabelTask.choices,\n        }\n        : null,\n    };\n\n    saveProjectConfigFile(this.projectFolder, projectConfig);\n\n    // Save ProjectName/config file path to localStorage\n    // Check if the projectFolder is already in the list, if so remove it\n    const projectFile = { 'project_name': this.projectName, 'root': await path.join(this.outputFolder, this.projectName) };\n    const existingRoots = this.localStoragesProjectsFilepaths.map((projectFile) => projectFile.root);\n\n    if (!existingRoots.includes(projectFile.root)) {\n      this.localStoragesProjectsFilepaths.push(projectFile);\n      localStorage.setItem(\n        'projects',\n        JSON.stringify(this.localStoragesProjectsFilepaths)\n      );\n    }\n\n    await this.listFiles();\n    this.viewService.navigateToGallery();\n\n  }\n\n  async loadProjectFile(filepath: string) {\n    return invokeLoadJsonFile(filepath).then((projectConfig: any) => {\n\n      if (projectConfig) {\n        // Convert JSON string to ProjectConfig\n\n        projectConfig = JSON.parse(projectConfig);\n\n        this.create_project(projectConfig as ProjectConfig);\n      }\n    });\n  }\n\n  async removeProjectFile(filepath: string) {\n    this.localStoragesProjectsFilepaths = this.localStoragesProjectsFilepaths.filter(\n      (projectFile) => projectFile.root !== filepath\n    );\n    localStorage.setItem(\n      'projects',\n      JSON.stringify(this.localStoragesProjectsFilepaths)\n    );\n  }\n\n  async listFiles() {\n    let fileList = await invoke('list_files_in_folder', {\n      folder: this.inputFolder,\n      regexfilter: this.inputRegex,\n      recursive: this.recursive,\n    });\n    this.extractImagesName(fileList);\n    this.isProjectStarted = true;\n\n  }\n\n  extractImagesName(files: string[]) {\n    this.imagesName = files.map((file) => {\n      let filename = file.split(this.inputFolder)[1];\n      return filename;\n    });\n  }\n\n  async openEditor(index: number) {\n    this.viewService.setLoading(true, 'Loading editor');\n    this.activeIndex = index;\n    const openPromise$ = path\n      .join(this.inputFolder, this.imagesName[index])\n      .then((filepath) => {\n        this.activeImage = loadImageFile(filepath);\n\n        return this.activeImage.then((image) => {\n          return this.viewService.navigateToEditor()?.then(() => {\n            this.viewService.endLoading();\n          });\n        });\n      });\n\n    return openPromise$;\n  }\n\n  async goNext() {\n    if (\n      this.activeIndex != null &&\n      this.activeIndex  0) {\n      return this.openEditor(this.activeIndex - 1);\n    }\n    return Promise.resolve('No more images');\n  }\n  resetProject() {\n    this.isProjectStarted = false;\n    this.imagesName = [];\n    this.activeIndex = null;\n    this.activeImage = null;\n  }\n\n  async create_project(config: ProjectConfig) {\n    this.isClassification = config.is_classification;\n    this.isSegmentation = config.is_segmentation;\n    this.isInstanceSegmentation = config.is_instance_segmentation;\n    this.isBoundingBoxDetection = config.is_bbox_detection;\n    this.projectName = config.project_name;\n    this.inputFolder = config.input_dir;\n    this.outputFolder = config.output_dir;\n    this.projectFolder = await path.join(this.outputFolder, this.projectName);\n\n    if (config.segmentation_classes) {\n      this.labelService.listSegmentationLabels =\n        config.segmentation_classes.map((label, index) => {\n          return {\n            label,\n            color: getDefaultColor(index + 1),\n            isVisible: true,\n            shades: null,\n          } as SegLabel;\n        });\n    }\n    if (config.classification_classes) {\n      config.classification_classes.forEach((task) => {\n        this.labelService.addClassificationTask(\n          new MulticlassTask(\n            task.name,\n            task.classes,\n            task.default ? task.default : undefined\n          )\n        );\n      });\n    }\n    if (config.classification_multilabel) {\n      this.labelService.addMultilabelTask(\n        new MultilabelTask(\n          config.classification_multilabel.name,\n          config.classification_multilabel.classes,\n          config.classification_multilabel.default\n            ? config.classification_multilabel.default\n            : undefined\n        )\n      );\n    }\n\n    this.labelService.rebuildTreeNodes();\n    this.startProject();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Rect.html":{"url":"interfaces/Rect.html","title":"interface - Rect","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Rect\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Core/interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            y\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SegLabel {\n  label: string;\n  color: string;\n  isVisible: boolean;\n  shades: string[] | null;\n}\n\nexport interface SegInstance {\n  label: SegLabel;\n  instance: number;\n  shade: string;\n}\n\nexport interface BboxLabel {\n  label: SegLabel;\n  bbox: Rect;\n  instance: number;\n}\n\nexport interface Thumbnail {\n  name: Promise;\n  thumbnailPath: Promise;\n}\n\nexport interface Point2D {\n  x: number;\n  y: number;\n}\n\nexport interface Rect {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\n\nexport interface Viewbox {\n  xmin: number;\n  ymin: number;\n  xmax: number;\n  ymax: number;\n}\n\nexport interface UndoRedoCanvasElement {\n  data: Blob | Blob[];\n  index: number;\n}\n\nexport interface MulticlassInterface {\n  name: string;\n  classes: string[];\n  default: string | null;\n}\n\nexport interface MultilabelInterface {\n  name: string;\n  classes: string[];\n  default: string[] | null;\n}\n\nexport interface ProjectConfig {\n  project_name: string;\n  input_dir: string;\n  output_dir: string;\n  is_segmentation: boolean;\n  is_classification: boolean;\n  is_instance_segmentation: boolean;\n  is_bbox_detection: boolean;\n  segmentation_classes: null | string[];\n  classification_classes: null | MulticlassInterface[];\n  classification_multilabel: null | MultilabelInterface;\n}\n\nexport interface ImageFromCLI {\n  image_path: string;\n  mask_data: string[] | null;\n  segmentation_classes: string[] | null;\n  classification_classes: string[] | null;\n  classification_multilabel: string[] | null;\n}\n\n\nexport interface ProjectFile{\n  root: string;\n  project_name: string;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Rect-1.html":{"url":"interfaces/Rect-1.html","title":"interface - Rect-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Rect\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Components/Core/drawable-canvas/models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            y\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Point2D {\n    x: number;\n    y: number;\n}\n\nexport interface Rect {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n}\n\n\nexport interface Viewbox{\n    xmin: number;\n    ymin: number;\n    xmax: number;\n    ymax: number;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SVGElementsComponent.html":{"url":"components/SVGElementsComponent.html","title":"component - SVGElementsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SVGElementsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/Components/Core/drawable-canvas/component/svgelements/svgelements.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-svgelements\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            NgFor\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./svgelements.component.html\n            \n\n\n\n            \n                styleUrl\n                ./svgelements.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                bboxManager\n                            \n                            \n                                    Public\n                                editorService\n                            \n                            \n                                    Public\n                                labelService\n                            \n                            \n                                    \n                                svg\n                            \n                            \n                                    Public\n                                svgUIService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setViewBox\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                UIPoints\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(labelService: LabelsService, editorService: EditorService, bboxManager: BboxManagerService, svgUIService: SVGUIService)\n                    \n                \n                        \n                            \n                                Defined in src/app/Components/Core/drawable-canvas/component/svgelements/svgelements.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        labelService\n                                                  \n                                                        \n                                                                        LabelsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        editorService\n                                                  \n                                                        \n                                                                        EditorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bboxManager\n                                                  \n                                                        \n                                                                        BboxManagerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        svgUIService\n                                                  \n                                                        \n                                                                        SVGUIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        UIPoints\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/Components/Core/drawable-canvas/component/svgelements/svgelements.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setViewBox\n                        \n                    \n                \n            \n            \n                \nsetViewBox(viewbox: Rect)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/component/svgelements/svgelements.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                viewbox\n                                            \n                                                            Rect\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        bboxManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BboxManagerService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/component/svgelements/svgelements.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        editorService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EditorService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/component/svgelements/svgelements.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        labelService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LabelsService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/component/svgelements/svgelements.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        svg\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('svg')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/component/svgelements/svgelements.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        svgUIService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SVGUIService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/component/svgelements/svgelements.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, Input, ViewChild } from '@angular/core';\nimport { LabelsService } from '../../../../../Services/Project/labels.service';\nimport { Point2D, Rect } from '../../../../../Core/interface';\nimport { BboxManagerService } from '../../service/bbox-manager.service';\nimport { NgFor } from '@angular/common';\nimport { SVGUIService } from '../../service/svgui.service';\nimport { EditorService } from '../../../../../Services/UI/editor.service';\n\n\n@Component({\n  selector: 'app-svgelements',\n  standalone: true,\n  imports: [NgFor],\n  templateUrl: './svgelements.component.html',\n  styleUrl: './svgelements.component.scss',\n})\nexport class SVGElementsComponent {\n  @Input() UIPoints: string = '';\n\n  @ViewChild('svg') svg: ElementRef;\n\n  constructor(public labelService: LabelsService, \n    public editorService: EditorService,\n    public bboxManager: BboxManagerService, \n    public svgUIService: SVGUIService) {}\n\n  setViewBox(viewbox: Rect) {\n    this.svg.nativeElement.setAttribute(\n      'viewBox',\n      `${viewbox.x} ${viewbox.y} ${viewbox.width} ${viewbox.height}`\n    );\n  }\n}\n\n    \n\n    \n        \n    \n    \n\n    \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlockableDiv', 'selector': 'blockable-div'},{'name': 'BlockableP', 'selector': 'blockable-p'},{'name': 'ClassificationConfigurationComponent', 'selector': 'app-classification-configuration'},{'name': 'DrawableCanvasComponent', 'selector': 'app-drawable-canvas'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'GalleryComponent', 'selector': 'app-gallery'},{'name': 'GalleryElementComponent', 'selector': 'app-gallery-element'},{'name': 'InstanceLabelComponent', 'selector': 'app-instance-label'},{'name': 'InteractiveBboxComponent', 'selector': 'app-interactive-bbox'},{'name': 'LabelledSwitchComponent', 'selector': 'app-labelled-switch'},{'name': 'LabelsComponent', 'selector': 'app-labels'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'ProjectConfigurationComponent', 'selector': 'app-project-configuration'},{'name': 'SVGElementsComponent', 'selector': 'app-svgelements'},{'name': 'TestingComponent', 'selector': 'app-testing'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'ToolSettingComponent', 'selector': 'app-tool-setting'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SVGElementsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SVGUIService.html":{"url":"injectables/SVGUIService.html","title":"injectable - SVGUIService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SVGUIService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Components/Core/drawable-canvas/service/svgui.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                eraserPath\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addPoint\n                            \n                            \n                                getEraserPathasSVG\n                            \n                            \n                                resetPath\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/Components/Core/drawable-canvas/service/svgui.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addPoint\n                        \n                    \n                \n            \n            \n                \naddPoint(point: Point2D)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/svgui.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                point\n                                            \n                                                            Point2D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEraserPathasSVG\n                        \n                    \n                \n            \n            \n                \ngetEraserPathasSVG()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/svgui.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPath\n                        \n                    \n                \n            \n            \n                \nresetPath()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/svgui.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        eraserPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Point2D[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/svgui.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Point2D } from '../models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SVGUIService {\n\n  eraserPath: Point2D[] = [];\n\n  constructor() { \n\n  }\n  getEraserPathasSVG(): string {\n    let path = '';\n\n    if (this.eraserPath.length \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SegInstance.html":{"url":"interfaces/SegInstance.html","title":"interface - SegInstance","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SegInstance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Core/interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            instance\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            shade\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        instance\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        instance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         SegLabel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SegLabel\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shade\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        shade:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SegLabel {\n  label: string;\n  color: string;\n  isVisible: boolean;\n  shades: string[] | null;\n}\n\nexport interface SegInstance {\n  label: SegLabel;\n  instance: number;\n  shade: string;\n}\n\nexport interface BboxLabel {\n  label: SegLabel;\n  bbox: Rect;\n  instance: number;\n}\n\nexport interface Thumbnail {\n  name: Promise;\n  thumbnailPath: Promise;\n}\n\nexport interface Point2D {\n  x: number;\n  y: number;\n}\n\nexport interface Rect {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\n\nexport interface Viewbox {\n  xmin: number;\n  ymin: number;\n  xmax: number;\n  ymax: number;\n}\n\nexport interface UndoRedoCanvasElement {\n  data: Blob | Blob[];\n  index: number;\n}\n\nexport interface MulticlassInterface {\n  name: string;\n  classes: string[];\n  default: string | null;\n}\n\nexport interface MultilabelInterface {\n  name: string;\n  classes: string[];\n  default: string[] | null;\n}\n\nexport interface ProjectConfig {\n  project_name: string;\n  input_dir: string;\n  output_dir: string;\n  is_segmentation: boolean;\n  is_classification: boolean;\n  is_instance_segmentation: boolean;\n  is_bbox_detection: boolean;\n  segmentation_classes: null | string[];\n  classification_classes: null | MulticlassInterface[];\n  classification_multilabel: null | MultilabelInterface;\n}\n\nexport interface ImageFromCLI {\n  image_path: string;\n  mask_data: string[] | null;\n  segmentation_classes: string[] | null;\n  classification_classes: string[] | null;\n  classification_multilabel: string[] | null;\n}\n\n\nexport interface ProjectFile{\n  root: string;\n  project_name: string;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SegLabel.html":{"url":"interfaces/SegLabel.html","title":"interface - SegLabel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SegLabel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Core/interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            isVisible\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            shades\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isVisible\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isVisible:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shades\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        shades:     string[] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[] | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SegLabel {\n  label: string;\n  color: string;\n  isVisible: boolean;\n  shades: string[] | null;\n}\n\nexport interface SegInstance {\n  label: SegLabel;\n  instance: number;\n  shade: string;\n}\n\nexport interface BboxLabel {\n  label: SegLabel;\n  bbox: Rect;\n  instance: number;\n}\n\nexport interface Thumbnail {\n  name: Promise;\n  thumbnailPath: Promise;\n}\n\nexport interface Point2D {\n  x: number;\n  y: number;\n}\n\nexport interface Rect {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\n\nexport interface Viewbox {\n  xmin: number;\n  ymin: number;\n  xmax: number;\n  ymax: number;\n}\n\nexport interface UndoRedoCanvasElement {\n  data: Blob | Blob[];\n  index: number;\n}\n\nexport interface MulticlassInterface {\n  name: string;\n  classes: string[];\n  default: string | null;\n}\n\nexport interface MultilabelInterface {\n  name: string;\n  classes: string[];\n  default: string[] | null;\n}\n\nexport interface ProjectConfig {\n  project_name: string;\n  input_dir: string;\n  output_dir: string;\n  is_segmentation: boolean;\n  is_classification: boolean;\n  is_instance_segmentation: boolean;\n  is_bbox_detection: boolean;\n  segmentation_classes: null | string[];\n  classification_classes: null | MulticlassInterface[];\n  classification_multilabel: null | MultilabelInterface;\n}\n\nexport interface ImageFromCLI {\n  image_path: string;\n  mask_data: string[] | null;\n  segmentation_classes: string[] | null;\n  classification_classes: string[] | null;\n  classification_multilabel: string[] | null;\n}\n\n\nexport interface ProjectFile{\n  root: string;\n  project_name: string;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StateManagerService.html":{"url":"injectables/StateManagerService.html","title":"injectable - StateManagerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StateManagerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Components/Core/drawable-canvas/service/state-manager.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentPoint\n                            \n                            \n                                    Public\n                                height\n                            \n                            \n                                    Public\n                                isDrawing\n                            \n                            \n                                    Public\n                                maxPoint\n                            \n                            \n                                    Public\n                                minPoint\n                            \n                            \n                                    Public\n                                previousPoint\n                            \n                            \n                                    Public\n                                recomputeCanvasSum\n                            \n                            \n                                    Public\n                                width\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getBoundingBox\n                            \n                            \n                                getBrushSizeOffset\n                            \n                            \n                                isFirstStroke\n                            \n                            \n                                reset\n                            \n                            \n                                resetCurrentPoint\n                            \n                            \n                                resetMinMaxPoints\n                            \n                            \n                                resetPreviousPoint\n                            \n                            \n                                setWidthAndHeight\n                            \n                            \n                                updateCurrentPoint\n                            \n                            \n                                updateMinMaxPoints\n                            \n                            \n                                updatePreviousPoint\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(editorService: EditorService)\n                    \n                \n                        \n                            \n                                Defined in src/app/Components/Core/drawable-canvas/service/state-manager.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        editorService\n                                                  \n                                                        \n                                                                        EditorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getBoundingBox\n                        \n                    \n                \n            \n            \n                \ngetBoundingBox()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/state-manager.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { x: any; y: any; width: number; height: number; }\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBrushSizeOffset\n                        \n                    \n                \n            \n            \n                \ngetBrushSizeOffset()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/state-manager.service.ts:86\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFirstStroke\n                        \n                    \n                \n            \n            \n                \nisFirstStroke()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/state-manager.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reset\n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/state-manager.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetCurrentPoint\n                        \n                    \n                \n            \n            \n                \nresetCurrentPoint()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/state-manager.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetMinMaxPoints\n                        \n                    \n                \n            \n            \n                \nresetMinMaxPoints()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/state-manager.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPreviousPoint\n                        \n                    \n                \n            \n            \n                \nresetPreviousPoint()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/state-manager.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setWidthAndHeight\n                        \n                    \n                \n            \n            \n                \nsetWidthAndHeight(width: number, height: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/state-manager.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                width\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                height\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateCurrentPoint\n                        \n                    \n                \n            \n            \n                \nupdateCurrentPoint(point: Point2D)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/state-manager.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                point\n                                            \n                                                            Point2D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateMinMaxPoints\n                        \n                    \n                \n            \n            \n                \nupdateMinMaxPoints(point: Point2D)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/state-manager.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                point\n                                            \n                                                            Point2D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatePreviousPoint\n                        \n                    \n                \n            \n            \n                \nupdatePreviousPoint(point: Point2D)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/state-manager.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                point\n                                            \n                                                            Point2D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currentPoint\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Point2D\n\n                    \n                \n                \n                    \n                        Default value : { x: -1, y: -1 }\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/state-manager.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 512\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/state-manager.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isDrawing\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/state-manager.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        maxPoint\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Point2D\n\n                    \n                \n                \n                    \n                        Default value : { x: 0, y: 0 }\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/state-manager.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        minPoint\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Point2D\n\n                    \n                \n                \n                    \n                        Default value : { x: Number.MAX_VALUE, y: Number.MAX_VALUE }\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/state-manager.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        previousPoint\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Point2D\n\n                    \n                \n                \n                    \n                        Default value : { x: -1, y: -1 }\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/state-manager.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        recomputeCanvasSum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/state-manager.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 512\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/state-manager.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Point2D } from '../models';\nimport { EditorService } from '../../../../Services/UI/editor.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StateManagerService {\n\n  public width: number = 512;\n  public height: number = 512;\n\n  public isDrawing: boolean = false;\n\n  public currentPoint: Point2D = { x: -1, y: -1 };\n  public previousPoint: Point2D = { x: -1, y: -1 };\n\n  public minPoint: Point2D = { x: Number.MAX_VALUE, y: Number.MAX_VALUE };\n  public maxPoint: Point2D = { x: 0, y: 0 };\n\n  public recomputeCanvasSum: boolean = false;\n\n\n  constructor(private editorService: EditorService) { }\n\n  updatePreviousPoint(point: Point2D) {\n    this.previousPoint = point;\n  }\n\n  updateCurrentPoint(point: Point2D) {\n    this.currentPoint = point;\n  }\n\n  setWidthAndHeight(width: number, height: number) {\n    this.width = width;\n    this.height = height;\n  }\n\n  resetMinMaxPoints() {\n    this.minPoint = { x: Number.MAX_VALUE, y: Number.MAX_VALUE };\n    this.maxPoint = { x: 0, y: 0 };\n  }\n\n  resetCurrentPoint() {\n    this.currentPoint = { x: -1, y: -1 };\n  }\n\n  resetPreviousPoint() {\n    this.previousPoint = { x: -1, y: -1 };\n  }\n\n  reset(){\n    this.isDrawing = false;\n    this.resetMinMaxPoints();\n    this.resetPreviousPoint();\n    this.resetCurrentPoint();\n  }\n\n  isFirstStroke() {\n    return this.previousPoint.x === -1 && this.previousPoint.y === -1;\n  }\n\n  updateMinMaxPoints(point: Point2D) {\n    const offset = this.getBrushSizeOffset();\n    this.minPoint = {\n      x: Math.max(0, Math.min(this.minPoint.x, point.x - offset)),\n      y: Math.max(0, Math.min(this.minPoint.y, point.y - offset))\n    };\n    this.maxPoint = {\n      x: Math.max(this.maxPoint.x, point.x + offset),\n      y: Math.max(this.maxPoint.y, point.y + offset)\n    };\n  }\n\n  getBoundingBox() {\n    return {\n      x: this.minPoint.x,\n      y: this.minPoint.y,\n      width: this.maxPoint.x - this.minPoint.x,\n      height: this.maxPoint.y - this.minPoint.y,\n    };\n  }\n\n\n\n  getBrushSizeOffset() {\n\n    return this.editorService.isToolWithBrushSize()\n    ? this.editorService.lineWidth / 2 + 2\n    : 0;\n\n  }\n    \n\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TestingComponent.html":{"url":"components/TestingComponent.html","title":"component - TestingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TestingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/Components/Core/testing/testing.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-testing\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./testing.component.html\n            \n\n\n\n            \n                styleUrl\n                ./testing.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-testing',\n  standalone: true,\n  imports: [],\n  templateUrl: './testing.component.html',\n  styleUrl: './testing.component.scss'\n})\nexport class TestingComponent {\n\n}\n\n    \n\n    \n        \n\n\n    test\n\ntesting works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    testtesting works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlockableDiv', 'selector': 'blockable-div'},{'name': 'BlockableP', 'selector': 'blockable-p'},{'name': 'ClassificationConfigurationComponent', 'selector': 'app-classification-configuration'},{'name': 'DrawableCanvasComponent', 'selector': 'app-drawable-canvas'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'GalleryComponent', 'selector': 'app-gallery'},{'name': 'GalleryElementComponent', 'selector': 'app-gallery-element'},{'name': 'InstanceLabelComponent', 'selector': 'app-instance-label'},{'name': 'InteractiveBboxComponent', 'selector': 'app-interactive-bbox'},{'name': 'LabelledSwitchComponent', 'selector': 'app-labelled-switch'},{'name': 'LabelsComponent', 'selector': 'app-labels'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'ProjectConfigurationComponent', 'selector': 'app-project-configuration'},{'name': 'SVGElementsComponent', 'selector': 'app-svgelements'},{'name': 'TestingComponent', 'selector': 'app-testing'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'ToolSettingComponent', 'selector': 'app-tool-setting'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TestingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Thumbnail.html":{"url":"interfaces/Thumbnail.html","title":"interface - Thumbnail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Thumbnail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Core/interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            thumbnailPath\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:     Promise\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Promise\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thumbnailPath\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thumbnailPath:     Promise\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Promise\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SegLabel {\n  label: string;\n  color: string;\n  isVisible: boolean;\n  shades: string[] | null;\n}\n\nexport interface SegInstance {\n  label: SegLabel;\n  instance: number;\n  shade: string;\n}\n\nexport interface BboxLabel {\n  label: SegLabel;\n  bbox: Rect;\n  instance: number;\n}\n\nexport interface Thumbnail {\n  name: Promise;\n  thumbnailPath: Promise;\n}\n\nexport interface Point2D {\n  x: number;\n  y: number;\n}\n\nexport interface Rect {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\n\nexport interface Viewbox {\n  xmin: number;\n  ymin: number;\n  xmax: number;\n  ymax: number;\n}\n\nexport interface UndoRedoCanvasElement {\n  data: Blob | Blob[];\n  index: number;\n}\n\nexport interface MulticlassInterface {\n  name: string;\n  classes: string[];\n  default: string | null;\n}\n\nexport interface MultilabelInterface {\n  name: string;\n  classes: string[];\n  default: string[] | null;\n}\n\nexport interface ProjectConfig {\n  project_name: string;\n  input_dir: string;\n  output_dir: string;\n  is_segmentation: boolean;\n  is_classification: boolean;\n  is_instance_segmentation: boolean;\n  is_bbox_detection: boolean;\n  segmentation_classes: null | string[];\n  classification_classes: null | MulticlassInterface[];\n  classification_multilabel: null | MultilabelInterface;\n}\n\nexport interface ImageFromCLI {\n  image_path: string;\n  mask_data: string[] | null;\n  segmentation_classes: string[] | null;\n  classification_classes: string[] | null;\n  classification_multilabel: string[] | null;\n}\n\n\nexport interface ProjectFile{\n  root: string;\n  project_name: string;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Tool.html":{"url":"classes/Tool.html","title":"class - Tool","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Tool\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Core/tools.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                icon\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, name: string, icon: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/Core/tools.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        icon\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Core/tools.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Core/tools.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Core/tools.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Tool{\n    public id: number;\n    public name: string;\n    public icon: string;\n    constructor(id: number, name: string, icon: string){\n        this.id = id;\n        this.name = name;\n        this.icon = icon;\n    }\n}\n\n\nexport class Tools {\n    public static PAN = new Tool(0, \"Pan\", \"pi pi-arrows-alt\");\n    public static PEN = new Tool(1, \"Pen\", \"pi pi-pencil\");\n    public static ERASER = new Tool(8, \"Eraser\", \"pi pi-eraser\");\n    public static LASSO = new Tool(2, \"Lasso\", \"pi pi-cloud\");\n    public static LASSO_ERASER = new Tool(3, \"Lasso Eraser\", \"pi pi-cloud-slash\");\n    public static ALL_TOOLS = [Tools.PAN, Tools.PEN, Tools.ERASER, Tools.LASSO, Tools.LASSO_ERASER];\n}\n\nexport enum PostProcessOption{\n    MEDSAM = 'MedSAM',\n    OTSU = 'Otsu',\n    CRF = 'CRF',\n  }\n\nexport const postProcessingOptions = [PostProcessOption.OTSU, PostProcessOption.MEDSAM, PostProcessOption.CRF];\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToolSettingComponent.html":{"url":"components/ToolSettingComponent.html","title":"component - ToolSettingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ToolSettingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/Components/Interface/editor/tool-setting/tool-setting.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tool-setting\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            PanelModule\n                            SliderModule\n                            NgIf\n                            InputSwitchModule\n                            NgSwitch\n                            SelectButtonModule\n                            FormsModule\n                            CardModule\n                                LabelledSwitchComponent\n                            FieldsetModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./tool-setting.component.html\n            \n\n\n\n            \n                styleUrl\n                ./tool-setting.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                drawService\n                            \n                            \n                                    Public\n                                imageProcess\n                            \n                            \n                                postProcessingOptions\n                            \n                            \n                                ppOption\n                            \n                            \n                                    Public\n                                projectService\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(drawService: EditorService, projectService: ProjectService, imageProcess: ImageProcessingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/Components/Interface/editor/tool-setting/tool-setting.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        drawService\n                                                  \n                                                        \n                                                                        EditorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        imageProcess\n                                                  \n                                                        \n                                                                        ImageProcessingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        drawService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EditorService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Interface/editor/tool-setting/tool-setting.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        imageProcess\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ImageProcessingService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Interface/editor/tool-setting/tool-setting.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        postProcessingOptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : postProcessingOptions\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Interface/editor/tool-setting/tool-setting.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ppOption\n                        \n                    \n                \n            \n                \n                    \n                        Default value : PostProcessOption\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Interface/editor/tool-setting/tool-setting.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProjectService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Interface/editor/tool-setting/tool-setting.component.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { PanelModule } from 'primeng/panel';\nimport { NgIf, NgSwitch, CommonModule } from '@angular/common';\nimport { InputSwitchModule } from 'primeng/inputswitch';\nimport { EditorService } from '../../../../Services/UI/editor.service';\nimport { FormsModule } from '@angular/forms';\nimport { CardModule } from 'primeng/card';\nimport { LabelledSwitchComponent } from '../../../Core/labelled-switch/labelled-switch.component';\nimport { FieldsetModule } from 'primeng/fieldset';\nimport { SliderModule } from 'primeng/slider';\nimport { ProjectService } from '../../../../Services/Project/project.service';\nimport { ImageProcessingService } from '../../../Core/drawable-canvas/service/image-processing.service';\nimport { SelectButtonModule } from 'primeng/selectbutton';\nimport { PostProcessOption } from '../../../../Core/tools';\nimport { postProcessingOptions } from '../../../../Core/tools';\n@Component({\n  selector: 'app-tool-setting',\n  standalone: true,\n  imports: [\n    CommonModule,\n    PanelModule,\n    SliderModule,\n    NgIf,\n    InputSwitchModule,\n    NgSwitch,\n    SelectButtonModule,\n    FormsModule,\n    CardModule,\n    LabelledSwitchComponent,\n    FieldsetModule,\n  ],\n  templateUrl: './tool-setting.component.html',\n  styleUrl: './tool-setting.component.scss',\n})\nexport class ToolSettingComponent {\n  postProcessingOptions = postProcessingOptions;\n  ppOption = PostProcessOption;\n  constructor(\n    public drawService: EditorService,\n    public projectService: ProjectService,\n    public imageProcess: ImageProcessingService\n  ) {}\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n\n        \n        \n      \n      \n        Increment after stroke\n      \n    \n\n    \n      \n        Convert to grayscale\n        Histogram stretching\n\n        \n          \n            \n            \n            Brightness\n          \n\n          \n            \n            \n            Contrast\n          \n\n          \n            \n            \n            Gamma\n          \n        \n\n        Smooth\n\n        Edge reinforcement\n\n        \n          \n          \n          Kernel size\n        \n\n        \n          \n          \n          Edge strength\n        \n      \n    \n\n    \n      \n        \n          \n          \n            \n              Automatically snap to the extrema by thresholding the area\n                covered by the brush stroke\n              \n              Use inverse image\n              Smooth\n              \n                \n\n                \n              \n              Force connectivity\n            \n            \n              \n                Use MED-Sam has a post-processing step to auto-segment based on\n                the current stroke indication.\n              \n              \n                \n                \n              \n            \n            \n              Use Conditional Random Field to refine the segmentation\n              \n            \n          \n        \n        \n          \n            Automatically remove all connected pixels that were covered by the\n            brush stroke\n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        Increment after stroke                            Convert to grayscale        Histogram stretching                                                      Brightness                                                        Contrast                                                        Gamma                          Smooth        Edge reinforcement                                      Kernel size                                              Edge strength                                                                                  Automatically snap to the extrema by thresholding the area                covered by the brush stroke                            Use inverse image              Smooth                                                                          Force connectivity                                                      Use MED-Sam has a post-processing step to auto-segment based on                the current stroke indication.                                                                                                                Use Conditional Random Field to refine the segmentation                                                                          Automatically remove all connected pixels that were covered by the            brush stroke                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlockableDiv', 'selector': 'blockable-div'},{'name': 'BlockableP', 'selector': 'blockable-p'},{'name': 'ClassificationConfigurationComponent', 'selector': 'app-classification-configuration'},{'name': 'DrawableCanvasComponent', 'selector': 'app-drawable-canvas'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'GalleryComponent', 'selector': 'app-gallery'},{'name': 'GalleryElementComponent', 'selector': 'app-gallery-element'},{'name': 'InstanceLabelComponent', 'selector': 'app-instance-label'},{'name': 'InteractiveBboxComponent', 'selector': 'app-interactive-bbox'},{'name': 'LabelledSwitchComponent', 'selector': 'app-labelled-switch'},{'name': 'LabelsComponent', 'selector': 'app-labels'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'ProjectConfigurationComponent', 'selector': 'app-project-configuration'},{'name': 'SVGElementsComponent', 'selector': 'app-svgelements'},{'name': 'TestingComponent', 'selector': 'app-testing'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'ToolSettingComponent', 'selector': 'app-tool-setting'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToolSettingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToolbarComponent.html":{"url":"components/ToolbarComponent.html","title":"component - ToolbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ToolbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/Components/Interface/editor/toolbar/toolbar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-toolbar\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                ToolbarModule\n                            ButtonModule\n                            PanelModule\n                            SelectButtonModule\n                            BlockUIModule\n                            CommonModule\n                            FormsModule\n                            SliderModule\n                            InputSwitchModule\n                                BlockableP\n                                LabelledSwitchComponent\n                                BlockableDiv\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./toolbar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./toolbar.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                editorService\n                            \n                            \n                                tools\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(editorService: EditorService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/Components/Interface/editor/toolbar/toolbar.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        editorService\n                                                  \n                                                        \n                                                                        EditorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Interface/editor/toolbar/toolbar.component.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        editorService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EditorService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Interface/editor/toolbar/toolbar.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tools\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Tools.ALL_TOOLS\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Interface/editor/toolbar/toolbar.component.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, ChangeDetectorRef, Component } from '@angular/core';\nimport { ToolbarModule } from 'primeng/toolbar';\nimport { ButtonModule } from 'primeng/button';\nimport { SelectButtonModule } from 'primeng/selectbutton';\nimport { Tools } from '../../../../Core/tools';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { EditorService } from '../../../../Services/UI/editor.service';\nimport { SliderModule } from 'primeng/slider';\nimport { InputSwitchModule } from 'primeng/inputswitch';\nimport { LabelledSwitchComponent } from '../../../Core/labelled-switch/labelled-switch.component';\nimport { BlockUIModule } from 'primeng/blockui';\nimport { PanelModule } from 'primeng/panel';\nimport { BlockableP } from '../../../Core/Blockable/p/p.component';\nimport { BlockableDiv } from \"../../../Core/Blockable/div/div.component\";\n\n@Component({\n  selector: 'app-toolbar',\n  standalone: true,\n  imports: [\n    ToolbarModule,\n    ButtonModule,\n    PanelModule,\n    SelectButtonModule,\n    BlockUIModule,\n    CommonModule,\n    FormsModule,\n    SliderModule,\n    InputSwitchModule,\n    BlockableP,\n    LabelledSwitchComponent,\n    BlockableDiv\n],\n  templateUrl: './toolbar.component.html',\n  styleUrl: './toolbar.component.scss',\n})\nexport class ToolbarComponent implements AfterViewInit {\n  tools = Tools.ALL_TOOLS;\n\n  constructor(\n    public editorService: EditorService,\n    private cdr: ChangeDetectorRef\n  ) {}\n\n  ngAfterViewInit(): void {\n    this.cdr.detectChanges();\n  }\n}\n\n    \n\n    \n        \n   \n  \n    \n      \n        \n          \n        \n      \n\n      \n      \n          \n          \n      \n    \n      \n      \n        Swap existing markers\n    \n      \n      \n        Erase all labels\n\n      \n        Show only edges\n\n      \n      \n      \n      \n        Image processing\n      \n        Post-process drawing\n    \n  \n   \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                             Swap existing markers                        Erase all labels              Show only edges                                Image processing              Post-process drawing         '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlockableDiv', 'selector': 'blockable-div'},{'name': 'BlockableP', 'selector': 'blockable-p'},{'name': 'ClassificationConfigurationComponent', 'selector': 'app-classification-configuration'},{'name': 'DrawableCanvasComponent', 'selector': 'app-drawable-canvas'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'GalleryComponent', 'selector': 'app-gallery'},{'name': 'GalleryElementComponent', 'selector': 'app-gallery-element'},{'name': 'InstanceLabelComponent', 'selector': 'app-instance-label'},{'name': 'InteractiveBboxComponent', 'selector': 'app-interactive-bbox'},{'name': 'LabelledSwitchComponent', 'selector': 'app-labelled-switch'},{'name': 'LabelsComponent', 'selector': 'app-labels'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'ProjectConfigurationComponent', 'selector': 'app-project-configuration'},{'name': 'SVGElementsComponent', 'selector': 'app-svgelements'},{'name': 'TestingComponent', 'selector': 'app-testing'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'ToolSettingComponent', 'selector': 'app-tool-setting'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToolbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Tools.html":{"url":"classes/Tools.html","title":"class - Tools","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Tools\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Core/tools.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                ALL_TOOLS\n                            \n                            \n                                    Static\n                                ERASER\n                            \n                            \n                                    Static\n                                LASSO\n                            \n                            \n                                    Static\n                                LASSO_ERASER\n                            \n                            \n                                    Static\n                                PAN\n                            \n                            \n                                    Static\n                                PEN\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        ALL_TOOLS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [Tools.PAN, Tools.PEN, Tools.ERASER, Tools.LASSO, Tools.LASSO_ERASER]\n                    \n                \n                    \n                        \n                                Defined in src/app/Core/tools.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        ERASER\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Tool(8, \"Eraser\", \"pi pi-eraser\")\n                    \n                \n                    \n                        \n                                Defined in src/app/Core/tools.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        LASSO\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Tool(2, \"Lasso\", \"pi pi-cloud\")\n                    \n                \n                    \n                        \n                                Defined in src/app/Core/tools.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        LASSO_ERASER\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Tool(3, \"Lasso Eraser\", \"pi pi-cloud-slash\")\n                    \n                \n                    \n                        \n                                Defined in src/app/Core/tools.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        PAN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Tool(0, \"Pan\", \"pi pi-arrows-alt\")\n                    \n                \n                    \n                        \n                                Defined in src/app/Core/tools.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        PEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Tool(1, \"Pen\", \"pi pi-pencil\")\n                    \n                \n                    \n                        \n                                Defined in src/app/Core/tools.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Tool{\n    public id: number;\n    public name: string;\n    public icon: string;\n    constructor(id: number, name: string, icon: string){\n        this.id = id;\n        this.name = name;\n        this.icon = icon;\n    }\n}\n\n\nexport class Tools {\n    public static PAN = new Tool(0, \"Pan\", \"pi pi-arrows-alt\");\n    public static PEN = new Tool(1, \"Pen\", \"pi pi-pencil\");\n    public static ERASER = new Tool(8, \"Eraser\", \"pi pi-eraser\");\n    public static LASSO = new Tool(2, \"Lasso\", \"pi pi-cloud\");\n    public static LASSO_ERASER = new Tool(3, \"Lasso Eraser\", \"pi pi-cloud-slash\");\n    public static ALL_TOOLS = [Tools.PAN, Tools.PEN, Tools.ERASER, Tools.LASSO, Tools.LASSO_ERASER];\n}\n\nexport enum PostProcessOption{\n    MEDSAM = 'MedSAM',\n    OTSU = 'Otsu',\n    CRF = 'CRF',\n  }\n\nexport const postProcessingOptions = [PostProcessOption.OTSU, PostProcessOption.MEDSAM, PostProcessOption.CRF];\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UndoRedoCanvasElement.html":{"url":"interfaces/UndoRedoCanvasElement.html","title":"interface - UndoRedoCanvasElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UndoRedoCanvasElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Core/interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            index\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     Blob | Blob[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Blob | Blob[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SegLabel {\n  label: string;\n  color: string;\n  isVisible: boolean;\n  shades: string[] | null;\n}\n\nexport interface SegInstance {\n  label: SegLabel;\n  instance: number;\n  shade: string;\n}\n\nexport interface BboxLabel {\n  label: SegLabel;\n  bbox: Rect;\n  instance: number;\n}\n\nexport interface Thumbnail {\n  name: Promise;\n  thumbnailPath: Promise;\n}\n\nexport interface Point2D {\n  x: number;\n  y: number;\n}\n\nexport interface Rect {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\n\nexport interface Viewbox {\n  xmin: number;\n  ymin: number;\n  xmax: number;\n  ymax: number;\n}\n\nexport interface UndoRedoCanvasElement {\n  data: Blob | Blob[];\n  index: number;\n}\n\nexport interface MulticlassInterface {\n  name: string;\n  classes: string[];\n  default: string | null;\n}\n\nexport interface MultilabelInterface {\n  name: string;\n  classes: string[];\n  default: string[] | null;\n}\n\nexport interface ProjectConfig {\n  project_name: string;\n  input_dir: string;\n  output_dir: string;\n  is_segmentation: boolean;\n  is_classification: boolean;\n  is_instance_segmentation: boolean;\n  is_bbox_detection: boolean;\n  segmentation_classes: null | string[];\n  classification_classes: null | MulticlassInterface[];\n  classification_multilabel: null | MultilabelInterface;\n}\n\nexport interface ImageFromCLI {\n  image_path: string;\n  mask_data: string[] | null;\n  segmentation_classes: string[] | null;\n  classification_classes: string[] | null;\n  classification_multilabel: string[] | null;\n}\n\n\nexport interface ProjectFile{\n  root: string;\n  project_name: string;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UndoRedoService.html":{"url":"injectables/UndoRedoService.html","title":"injectable - UndoRedoService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UndoRedoService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Components/Core/drawable-canvas/service/undo-redo.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                redrawRequest\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                empty\n                            \n                            \n                                redo\n                            \n                            \n                                undo\n                            \n                            \n                                    Public\n                                update_undo_redo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(canvasManagerService: CanvasManagerService, stateService: StateManagerService, editorService: EditorService, labelService: LabelsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/Components/Core/drawable-canvas/service/undo-redo.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        canvasManagerService\n                                                  \n                                                        \n                                                                        CanvasManagerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stateService\n                                                  \n                                                        \n                                                                        StateManagerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        editorService\n                                                  \n                                                        \n                                                                        EditorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        labelService\n                                                  \n                                                        \n                                                                        LabelsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        empty\n                        \n                    \n                \n            \n            \n                \nempty()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/undo-redo.service.ts:96\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        redo\n                        \n                    \n                \n            \n            \n                \nredo()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/undo-redo.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        undo\n                        \n                    \n                \n            \n            \n                \nundo()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/undo-redo.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        update_undo_redo\n                        \n                    \n                \n            \n            \n                \n                        \n                    update_undo_redo()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/undo-redo.service.ts:100\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        redrawRequest\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/undo-redo.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { UndoRedo } from '../../../../Core/misc/undoRedo';\nimport { CanvasManagerService } from './canvas-manager.service';\nimport { StateManagerService } from './state-manager.service';\nimport { EditorService } from '../../../../Services/UI/editor.service';\nimport { LabelsService } from '../../../../Services/Project/labels.service';\nimport { BehaviorSubject } from 'rxjs';\n@Injectable({\n  providedIn: 'root',\n})\nexport class UndoRedoService {\n\n  public redrawRequest: BehaviorSubject = new BehaviorSubject(false);\n  constructor(\n    private canvasManagerService: CanvasManagerService,\n    private stateService: StateManagerService,\n    private editorService: EditorService,\n    private labelService: LabelsService\n  ) {\n    this.editorService.undo.subscribe((value) => {\n      if (value) {\n        this.stateService.recomputeCanvasSum = true;\n        this.undo();\n      }\n    });\n    this.editorService.redo.subscribe((value) => {\n      if (value) {\n        this.stateService.recomputeCanvasSum = true;\n        this.redo();\n      }\n    });\n  }  \n\n  undo() {\n    const element = UndoRedo.undo();\n    if (element) {\n      this.canvasManagerService.getAllCanvas().forEach(async (classCanvas, index) => {\n        let data: Blob;\n        if (Array.isArray(element.data)) {\n          data = element.data[index];\n        } else if (element.index != index) {\n          return;\n        } else {\n          data = element.data as Blob;\n        }\n        const imageBitmap = createImageBitmap(data);\n        await imageBitmap.then((img) => {\n          const ctx = classCanvas.getContext('2d', { alpha: true })!;\n          ctx?.clearRect(0, 0, this.stateService.width, this.stateService.height);\n          ctx?.drawImage(img, 0, 0, this.stateService.width, this.stateService.height);\n          if (ctx) {\n            this.redrawRequest.next(true);\n          }\n        });\n      });\n    }\n  }\n  redo() {\n    const element = UndoRedo.redo();\n    if (element) {\n      this.canvasManagerService.getAllCanvas().forEach((classCanvas, index) => {\n        let data: Blob;\n        if (Array.isArray(element.data)) {\n          data = element.data[index];\n        } else if (element.index != index) {\n          return;\n        } else {\n          data = element.data as Blob;\n        }\n\n        const imageBitmap = createImageBitmap(data);\n        imageBitmap.then((img) => {\n          const ctx = classCanvas.getContext('2d', { alpha: true })!;\n          ctx?.clearRect(\n            0,\n            0,\n            this.stateService.width,\n            this.stateService.height\n          );\n          ctx?.drawImage(\n            img,\n            0,\n            0,\n            this.stateService.width,\n            this.stateService.height\n          );\n\n          if (ctx) {\n            this.redrawRequest.next(true);\n          }\n        });\n      });\n    }\n  }\n\n  empty() {\n    UndoRedo.empty();\n  }\n\n  public update_undo_redo(): Promise {\n    if (this.editorService.affectsMultipleLabels()) {\n      let allPromises: Promise[] = [];\n      this.canvasManagerService.getAllCanvas().forEach((classCanvas) => {\n        const blob$ = classCanvas.convertToBlob({ type: 'image/png' });\n        allPromises.push(blob$);\n      });\n      return Promise.all(allPromises).then((blobs) => {\n        UndoRedo.push({ data: blobs, index: -1 });\n      });\n    } else {\n      const blob$ = this.canvasManagerService.getActiveCanvas().convertToBlob({ type: 'image/png' });\n      return blob$.then((blob) => {\n        UndoRedo.push({\n          data: blob,\n          index: this.labelService.getActiveIndex(),\n        });\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UndoRedoStack.html":{"url":"classes/UndoRedoStack.html","title":"class - UndoRedoStack","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UndoRedoStack\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Core/misc/undoRedo.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                redoStack\n                            \n                            \n                                undoStack\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                empty\n                            \n                            \n                                push\n                            \n                            \n                                redo\n                            \n                            \n                                undo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        redoStack\n                        \n                    \n                \n            \n                \n                    \n                        Type :         _RedoStack\n\n                    \n                \n                \n                    \n                        Default value : new _RedoStack()\n                    \n                \n                    \n                        \n                                Defined in src/app/Core/misc/undoRedo.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        undoStack\n                        \n                    \n                \n            \n                \n                    \n                        Type :         _UndoStack\n\n                    \n                \n                \n                    \n                        Default value : new _UndoStack()\n                    \n                \n                    \n                        \n                                Defined in src/app/Core/misc/undoRedo.ts:47\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        empty\n                        \n                    \n                \n            \n            \n                \nempty()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Core/misc/undoRedo.ts:74\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        push\n                        \n                    \n                \n            \n            \n                \npush(element: UndoRedoCanvasElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Core/misc/undoRedo.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                element\n                                            \n                                                            UndoRedoCanvasElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        redo\n                        \n                    \n                \n            \n            \n                \nredo()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Core/misc/undoRedo.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        undo\n                        \n                    \n                \n            \n            \n                \nundo()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Core/misc/undoRedo.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { UndoRedoCanvasElement } from \"../interface\";\n\n\nexport class _UndoStack{\n\n    stack: UndoRedoCanvasElement[] =  []\n\n    isEmpty():boolean{\n        return this.stack.length === 0 \n    }\n\n    push(element: UndoRedoCanvasElement){\n        this.stack.push(element)\n    }\n\n    pop(): UndoRedoCanvasElement | undefined{\n        return this.stack.pop()\n    }\n\n    empty(){\n        this.stack = []\n    }\n}\n\nexport class _RedoStack{\n\n    stack: UndoRedoCanvasElement[] =  []\n\n    isEmpty():boolean{\n        return this.stack.length === 0 \n    }\n\n    push(element: UndoRedoCanvasElement){\n        this.stack.push(element)\n    }\n\n    pop(): UndoRedoCanvasElement | undefined{\n        return this.stack.pop()\n    }\n\n    empty(){\n        this.stack = []\n    }\n}\n\nclass UndoRedoStack{\n    undoStack: _UndoStack = new _UndoStack()\n    redoStack: _RedoStack = new _RedoStack()\n\n    undo(){\n        console.log(\"Undoing\")\n        const element = this.undoStack.pop()\n        if(element){\n            this.redoStack.push(element)\n        }\n        return element\n    }\n\n    redo(){\n        console.log(\"Redoing\")\n        const element = this.redoStack.pop()\n        if(element){\n            this.undoStack.push(element)\n        }\n        return element\n    }\n\n    push(element: UndoRedoCanvasElement){\n        console.log(\"Pushing element\")\n        this.undoStack.push(element)\n        this.redoStack.empty()\n    }\n\n    empty(){\n        this.undoStack.empty()\n        this.redoStack.empty()\n    }\n\n}\n\nexport const UndoRedo = new UndoRedoStack()\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ViewService.html":{"url":"injectables/ViewService.html","title":"injectable - ViewService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ViewService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Services/UI/view.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isLoading\n                            \n                            \n                                loadingStatus\n                            \n                            \n                                thumbnailsSize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                endLoading\n                            \n                            \n                                navigateToEditor\n                            \n                            \n                                navigateToGallery\n                            \n                            \n                                setLoading\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/Services/UI/view.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        endLoading\n                        \n                    \n                \n            \n            \n                \nendLoading()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/UI/view.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigateToEditor\n                        \n                    \n                \n            \n            \n                \nnavigateToEditor()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/UI/view.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigateToGallery\n                        \n                    \n                \n            \n            \n                \nnavigateToGallery()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/UI/view.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLoading\n                        \n                    \n                \n            \n            \n                \nsetLoading(status: boolean, message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/UI/view.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                status\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/UI/view.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadingStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/UI/view.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        thumbnailsSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 128\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/UI/view.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ViewService {\n \n\n  isLoading: boolean = false;\n  loadingStatus: string = '';\n  thumbnailsSize: number = 128;\n\n  constructor(private router: Router) {}\n\n  setLoading(status: boolean, message: string) {\n    this.isLoading = status;\n    this.loadingStatus = message;\n\n  }\n\n  endLoading() {\n    this.isLoading = false;\n    this.loadingStatus = '';\n  }\n\n  navigateToGallery() {\n    this.router.navigate(['/gallery']);\n  }\n\n  navigateToEditor() {\n    if (this.router.url === '/editor') {\n      return;\n    }\n      return this.router.navigate(['/editor']);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Viewbox.html":{"url":"interfaces/Viewbox.html","title":"interface - Viewbox","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Viewbox\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Core/interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            xmax\n                                        \n                                \n                                \n                                        \n                                            xmin\n                                        \n                                \n                                \n                                        \n                                            ymax\n                                        \n                                \n                                \n                                        \n                                            ymin\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        xmax\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        xmax:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        xmin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        xmin:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ymax\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ymax:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ymin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ymin:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SegLabel {\n  label: string;\n  color: string;\n  isVisible: boolean;\n  shades: string[] | null;\n}\n\nexport interface SegInstance {\n  label: SegLabel;\n  instance: number;\n  shade: string;\n}\n\nexport interface BboxLabel {\n  label: SegLabel;\n  bbox: Rect;\n  instance: number;\n}\n\nexport interface Thumbnail {\n  name: Promise;\n  thumbnailPath: Promise;\n}\n\nexport interface Point2D {\n  x: number;\n  y: number;\n}\n\nexport interface Rect {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\n\nexport interface Viewbox {\n  xmin: number;\n  ymin: number;\n  xmax: number;\n  ymax: number;\n}\n\nexport interface UndoRedoCanvasElement {\n  data: Blob | Blob[];\n  index: number;\n}\n\nexport interface MulticlassInterface {\n  name: string;\n  classes: string[];\n  default: string | null;\n}\n\nexport interface MultilabelInterface {\n  name: string;\n  classes: string[];\n  default: string[] | null;\n}\n\nexport interface ProjectConfig {\n  project_name: string;\n  input_dir: string;\n  output_dir: string;\n  is_segmentation: boolean;\n  is_classification: boolean;\n  is_instance_segmentation: boolean;\n  is_bbox_detection: boolean;\n  segmentation_classes: null | string[];\n  classification_classes: null | MulticlassInterface[];\n  classification_multilabel: null | MultilabelInterface;\n}\n\nexport interface ImageFromCLI {\n  image_path: string;\n  mask_data: string[] | null;\n  segmentation_classes: string[] | null;\n  classification_classes: string[] | null;\n  classification_multilabel: string[] | null;\n}\n\n\nexport interface ProjectFile{\n  root: string;\n  project_name: string;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Viewbox-1.html":{"url":"interfaces/Viewbox-1.html","title":"interface - Viewbox-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Viewbox\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Components/Core/drawable-canvas/models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            xmax\n                                        \n                                \n                                \n                                        \n                                            xmin\n                                        \n                                \n                                \n                                        \n                                            ymax\n                                        \n                                \n                                \n                                        \n                                            ymin\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        xmax\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        xmax:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        xmin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        xmin:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ymax\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ymax:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ymin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ymin:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Point2D {\n    x: number;\n    y: number;\n}\n\nexport interface Rect {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n}\n\n\nexport interface Viewbox{\n    xmin: number;\n    ymin: number;\n    xmax: number;\n    ymax: number;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ZoomPanService.html":{"url":"injectables/ZoomPanService.html","title":"injectable - ZoomPanService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ZoomPanService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Components/Core/drawable-canvas/service/zoom-pan.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                canPan\n                            \n                            \n                                    Private\n                                canvasRef\n                            \n                            \n                                    Private\n                                canZoom\n                            \n                            \n                                    Public\n                                isDragging\n                            \n                            \n                                    Public\n                                maxScale\n                            \n                            \n                                    Public\n                                minScale\n                            \n                            \n                                    Public\n                                offset\n                            \n                            \n                                    Public\n                                redrawRequest\n                            \n                            \n                                    Public\n                                scale\n                            \n                            \n                                    Private\n                                targetOffset\n                            \n                            \n                                    Private\n                                targetScale\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                disableDrag\n                            \n                            \n                                    Public\n                                drag\n                            \n                            \n                                enableDrag\n                            \n                            \n                                    Public\n                                endDrag\n                            \n                            \n                                    Public\n                                fromCanvasToImageCoordinates\n                            \n                            \n                                    Public\n                                getCanvasCoordinates\n                            \n                            \n                                    Public\n                                getImageCoordinates\n                            \n                            \n                                getOffset\n                            \n                            \n                                getScale\n                            \n                            \n                                getSVGViewBox\n                            \n                            \n                                    Public\n                                getTransform\n                            \n                            \n                                getViewBox\n                            \n                            \n                                    Public\n                                resetZoomAndPan\n                            \n                            \n                                    Public\n                                setContext\n                            \n                            \n                                    Public\n                                setTransform\n                            \n                            \n                                    Public\n                                smoothUpdateTransform\n                            \n                            \n                                    Public\n                                startDrag\n                            \n                            \n                                    Public\n                                wheel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(stateService: StateManagerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/Components/Core/drawable-canvas/service/zoom-pan.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stateService\n                                                  \n                                                        \n                                                                        StateManagerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        disableDrag\n                        \n                    \n                \n            \n            \n                \ndisableDrag()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/zoom-pan.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        drag\n                        \n                    \n                \n            \n            \n                \n                        \n                    drag(event: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/zoom-pan.service.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        enableDrag\n                        \n                    \n                \n            \n            \n                \nenableDrag()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/zoom-pan.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        endDrag\n                        \n                    \n                \n            \n            \n                \n                        \n                    endDrag()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/zoom-pan.service.ts:89\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fromCanvasToImageCoordinates\n                        \n                    \n                \n            \n            \n                \n                        \n                    fromCanvasToImageCoordinates(point: Point2D)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/zoom-pan.service.ts:93\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                point\n                                            \n                                                            Point2D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Point2D\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getCanvasCoordinates\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCanvasCoordinates(event: MouseEvent | WheelEvent | Point2D)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/zoom-pan.service.ts:99\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent | WheelEvent | Point2D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Point2D\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getImageCoordinates\n                        \n                    \n                \n            \n            \n                \n                        \n                    getImageCoordinates(event: MouseEvent | WheelEvent | Point2D)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/zoom-pan.service.ts:119\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent | WheelEvent | Point2D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Point2D\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOffset\n                        \n                    \n                \n            \n            \n                \ngetOffset()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/zoom-pan.service.ts:237\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Point2D\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getScale\n                        \n                    \n                \n            \n            \n                \ngetScale()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/zoom-pan.service.ts:233\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSVGViewBox\n                        \n                    \n                \n            \n            \n                \ngetSVGViewBox()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/zoom-pan.service.ts:60\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Rect\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getTransform\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTransform()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/zoom-pan.service.ts:144\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { scale: number; offsetX: any; offsetY: any; }\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getViewBox\n                        \n                    \n                \n            \n            \n                \ngetViewBox()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/zoom-pan.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Viewbox\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        resetZoomAndPan\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetZoomAndPan(smooth: boolean, redraw: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/zoom-pan.service.ts:168\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                smooth\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    true\n                                            \n\n                                        \n                                        \n                                                redraw\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    true\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        setContext\n                        \n                    \n                \n            \n            \n                \n                        \n                    setContext(canvasRef: HTMLCanvasElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/zoom-pan.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                canvasRef\n                                            \n                                                        HTMLCanvasElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        setTransform\n                        \n                    \n                \n            \n            \n                \n                        \n                    setTransform(scale: number, offsetX: number, offsetY: number, smooth: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/zoom-pan.service.ts:152\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                scale\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                offsetX\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                offsetY\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                smooth\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    true\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        smoothUpdateTransform\n                        \n                    \n                \n            \n            \n                \n                        \n                    smoothUpdateTransform()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/zoom-pan.service.ts:185\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        startDrag\n                        \n                    \n                \n            \n            \n                \n                        \n                    startDrag()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/zoom-pan.service.ts:209\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        wheel\n                        \n                    \n                \n            \n            \n                \n                        \n                    wheel(event: WheelEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/zoom-pan.service.ts:213\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        WheelEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        canPan\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/zoom-pan.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        canvasRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLCanvasElement\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/zoom-pan.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        canZoom\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/zoom-pan.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isDragging\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/zoom-pan.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        maxScale\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/zoom-pan.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        minScale\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0.01\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/zoom-pan.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        offset\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Point2D\n\n                    \n                \n                \n                    \n                        Default value : { x: 0, y: 0 }\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/zoom-pan.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        redrawRequest\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/zoom-pan.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        scale\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/zoom-pan.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        targetOffset\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Point2D\n\n                    \n                \n                \n                    \n                        Default value : { x: 0, y: 0 }\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/zoom-pan.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        targetScale\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/zoom-pan.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Point2D, Rect, Viewbox } from '../models';\nimport { Subject } from 'rxjs';\nimport { StateManagerService } from './state-manager.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ZoomPanService {\n  public isDragging = false;\n  public scale = 1;\n  public offset: Point2D = { x: 0, y: 0 };\n  public maxScale = 10;\n  public minScale = 0.01;\n  private targetScale = 1;\n  private targetOffset: Point2D = { x: 0, y: 0 };\n  private canZoom = true;\n  private canPan = true;\n  private canvasRef: HTMLCanvasElement;\n\n  public redrawRequest = new Subject();\n\n  constructor(private stateService: StateManagerService) {}\n\n  public setContext(canvasRef: HTMLCanvasElement) {\n    this.canvasRef = canvasRef;\n  }\n\n  enableDrag() {\n    this.isDragging = true;\n  }\n\n  disableDrag() {\n    this.isDragging = false;\n  }\n\n  getViewBox(): Viewbox {\n    if (!this.canvasRef) {\n      return {\n        xmin: 0,\n        ymin: 0,\n        xmax: 0,\n        ymax: 0,\n      };\n    }\n    // Return computed viewBox\n\n    let rect = this.canvasRef.getBoundingClientRect();\n\n    let canvasScale = rect.width / this.stateService.width;\n    let xmin = Math.round(this.offset.x * canvasScale);\n    let xmax = xmin + this.stateService.width * this.scale * canvasScale;\n    let ymin = Math.round(this.offset.y * canvasScale);\n    let ymax = ymin + this.stateService.height * this.scale * canvasScale;\n\n    return { xmin: xmin, ymin: ymin, xmax: xmax, ymax: ymax };\n\n  }\n\n  getSVGViewBox(): Rect {\n    const viewBoxX = -this.offset.x / this.scale;\n    const viewBoxY = -this.offset.y / this.scale;\n    const viewBoxWidth = this.stateService.width / this.scale;\n    const viewBoxHeight = this.stateService.width / this.scale;\n    return {x: viewBoxX, y: viewBoxY, width: viewBoxWidth, height: viewBoxHeight};\n  }\n\n  public drag(event: MouseEvent) {\n    if (!this.canPan) {\n      return;\n    }\n    if (this.isDragging) {\n      const canvas = this.canvasRef;\n      const rect = canvas.getBoundingClientRect();\n      const scaleX = canvas.width / rect.width;\n      const scaleY = canvas.height / rect.height;\n\n      const dx = event.movementX * scaleX;\n      const dy = event.movementY * scaleY;\n\n      this.targetOffset.x += dx;\n      this.targetOffset.y += dy;\n      this.offset.x += dx;\n      this.offset.y += dy;\n      this.redrawRequest.next(true);\n    }\n  }\n\n  public endDrag() {\n    this.isDragging = false;\n  }\n\n  public fromCanvasToImageCoordinates(point: Point2D): Point2D {\n    const imageX = (point.x - this.offset.x) / this.scale;\n    const imageY = (point.y - this.offset.y) / this.scale;\n    return { x: Math.round(imageX), y: Math.round(imageY) };\n  }\n\n  public getCanvasCoordinates(\n    event: MouseEvent | WheelEvent | Point2D\n  ): Point2D {\n    const clientX = (event as MouseEvent).clientX\n      ? (event as MouseEvent).clientX\n      : (event as Point2D).x;\n    const clientY = (event as MouseEvent).clientY\n      ? (event as MouseEvent).clientY\n      : (event as Point2D).y;\n\n    const rect = this.canvasRef.getBoundingClientRect();\n    const scaleX = this.canvasRef.width / rect.width;\n    const scaleY = this.canvasRef.height / rect.height;\n\n    const x = Math.round((clientX - rect.left) * scaleX);\n    const y = Math.round((clientY - rect.top) * scaleY);\n\n    return { x, y };\n  }\n\n  public getImageCoordinates(\n    event: MouseEvent | WheelEvent | Point2D\n  ): Point2D {\n    const clientX = (event as MouseEvent).clientX\n      ? (event as MouseEvent).clientX\n      : (event as Point2D).x;\n    const clientY = (event as MouseEvent).clientY\n      ? (event as MouseEvent).clientY\n      : (event as Point2D).y;\n\n    const rect = this.canvasRef.getBoundingClientRect();\n    const scaleX = this.canvasRef.width / rect.width;\n    const scaleY = this.canvasRef.height / rect.height;\n\n    const x = (clientX - rect.left) * scaleX;\n    const y = (clientY - rect.top) * scaleY;\n\n    let imageX = (x - this.offset.x) / this.scale;\n    let imageY = (y - this.offset.y) / this.scale;\n    imageX = Math.min(this.stateService.width - 1, Math.max(0, imageX));\n    imageY = Math.min(this.stateService.height - 1, Math.max(0, imageY));\n\n    return { x: Math.round(imageX), y: Math.round(imageY) };\n  }\n\n  public getTransform() {\n    return {\n      scale: this.targetScale,\n      offsetX: this.targetOffset.x,\n      offsetY: this.targetOffset.y,\n    };\n  }\n\n  public setTransform(\n    scale: number,\n    offsetX: number,\n    offsetY: number,\n    smooth: boolean = true\n  ) {\n    this.targetScale = scale;\n    this.targetOffset.x = offsetX;\n    this.targetOffset.y = offsetY;\n    if (smooth) {\n      this.smoothUpdateTransform();\n    } else {\n      this.redrawRequest.next(true);\n    }\n  }\n\n  public resetZoomAndPan(smooth: boolean = true, redraw: boolean = true) {\n    this.stateService.recomputeCanvasSum = false;\n    this.targetScale = 1;\n    this.targetOffset = { x: 0, y: 0 };\n    if (!redraw) {\n      return;\n    }\n\n    if (smooth) {\n      this.smoothUpdateTransform();\n    } else {\n      this.scale = this.targetScale;\n      this.offset = this.targetOffset;\n      this.redrawRequest.next(true);\n    }\n  }\n\n  public smoothUpdateTransform() {\n    const easeFactor = 0.1;\n    const newScale = this.scale + (this.targetScale - this.scale) * easeFactor;\n    const newOffsetX =\n      this.offset.x + (this.targetOffset.x - this.offset.x) * easeFactor;\n    const newOffsetY =\n      this.offset.y + (this.targetOffset.y - this.offset.y) * easeFactor;\n\n    if (\n      Math.abs(this.targetScale - newScale) > 0.05 ||\n      Math.abs(this.targetOffset.x - newOffsetX) > 1 ||\n      Math.abs(this.targetOffset.y - newOffsetY) > 1\n    ) {\n      this.scale = newScale;\n      this.offset.x = newOffsetX;\n      this.offset.y = newOffsetY;\n      requestAnimationFrame(() => {\n        this.stateService.recomputeCanvasSum = false;\n        this.smoothUpdateTransform();\n        this.redrawRequest.next(true);\n      });\n    }\n  }\n\n  public startDrag() {\n    this.isDragging = true;\n  }\n\n  public wheel(event: WheelEvent) {\n    if (!this.canZoom) {\n      return;\n    }\n    event.preventDefault();\n    const zoomIntensity = 0.25;\n    const wheel = event.deltaY \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/_RedoStack.html":{"url":"classes/_RedoStack.html","title":"class - _RedoStack","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  _RedoStack\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Core/misc/undoRedo.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                stack\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                empty\n                            \n                            \n                                isEmpty\n                            \n                            \n                                pop\n                            \n                            \n                                push\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        stack\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UndoRedoCanvasElement[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/Core/misc/undoRedo.ts:27\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        empty\n                        \n                    \n                \n            \n            \n                \nempty()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Core/misc/undoRedo.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEmpty\n                        \n                    \n                \n            \n            \n                \nisEmpty()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Core/misc/undoRedo.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pop\n                        \n                    \n                \n            \n            \n                \npop()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Core/misc/undoRedo.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         UndoRedoCanvasElement | undefined\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        push\n                        \n                    \n                \n            \n            \n                \npush(element: UndoRedoCanvasElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Core/misc/undoRedo.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                element\n                                            \n                                                            UndoRedoCanvasElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { UndoRedoCanvasElement } from \"../interface\";\n\n\nexport class _UndoStack{\n\n    stack: UndoRedoCanvasElement[] =  []\n\n    isEmpty():boolean{\n        return this.stack.length === 0 \n    }\n\n    push(element: UndoRedoCanvasElement){\n        this.stack.push(element)\n    }\n\n    pop(): UndoRedoCanvasElement | undefined{\n        return this.stack.pop()\n    }\n\n    empty(){\n        this.stack = []\n    }\n}\n\nexport class _RedoStack{\n\n    stack: UndoRedoCanvasElement[] =  []\n\n    isEmpty():boolean{\n        return this.stack.length === 0 \n    }\n\n    push(element: UndoRedoCanvasElement){\n        this.stack.push(element)\n    }\n\n    pop(): UndoRedoCanvasElement | undefined{\n        return this.stack.pop()\n    }\n\n    empty(){\n        this.stack = []\n    }\n}\n\nclass UndoRedoStack{\n    undoStack: _UndoStack = new _UndoStack()\n    redoStack: _RedoStack = new _RedoStack()\n\n    undo(){\n        console.log(\"Undoing\")\n        const element = this.undoStack.pop()\n        if(element){\n            this.redoStack.push(element)\n        }\n        return element\n    }\n\n    redo(){\n        console.log(\"Redoing\")\n        const element = this.redoStack.pop()\n        if(element){\n            this.undoStack.push(element)\n        }\n        return element\n    }\n\n    push(element: UndoRedoCanvasElement){\n        console.log(\"Pushing element\")\n        this.undoStack.push(element)\n        this.redoStack.empty()\n    }\n\n    empty(){\n        this.undoStack.empty()\n        this.redoStack.empty()\n    }\n\n}\n\nexport const UndoRedo = new UndoRedoStack()\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/_UndoStack.html":{"url":"classes/_UndoStack.html","title":"class - _UndoStack","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  _UndoStack\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Core/misc/undoRedo.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                stack\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                empty\n                            \n                            \n                                isEmpty\n                            \n                            \n                                pop\n                            \n                            \n                                push\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        stack\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UndoRedoCanvasElement[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/Core/misc/undoRedo.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        empty\n                        \n                    \n                \n            \n            \n                \nempty()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Core/misc/undoRedo.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEmpty\n                        \n                    \n                \n            \n            \n                \nisEmpty()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Core/misc/undoRedo.ts:8\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pop\n                        \n                    \n                \n            \n            \n                \npop()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Core/misc/undoRedo.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         UndoRedoCanvasElement | undefined\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        push\n                        \n                    \n                \n            \n            \n                \npush(element: UndoRedoCanvasElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Core/misc/undoRedo.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                element\n                                            \n                                                            UndoRedoCanvasElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { UndoRedoCanvasElement } from \"../interface\";\n\n\nexport class _UndoStack{\n\n    stack: UndoRedoCanvasElement[] =  []\n\n    isEmpty():boolean{\n        return this.stack.length === 0 \n    }\n\n    push(element: UndoRedoCanvasElement){\n        this.stack.push(element)\n    }\n\n    pop(): UndoRedoCanvasElement | undefined{\n        return this.stack.pop()\n    }\n\n    empty(){\n        this.stack = []\n    }\n}\n\nexport class _RedoStack{\n\n    stack: UndoRedoCanvasElement[] =  []\n\n    isEmpty():boolean{\n        return this.stack.length === 0 \n    }\n\n    push(element: UndoRedoCanvasElement){\n        this.stack.push(element)\n    }\n\n    pop(): UndoRedoCanvasElement | undefined{\n        return this.stack.pop()\n    }\n\n    empty(){\n        this.stack = []\n    }\n}\n\nclass UndoRedoStack{\n    undoStack: _UndoStack = new _UndoStack()\n    redoStack: _RedoStack = new _RedoStack()\n\n    undo(){\n        console.log(\"Undoing\")\n        const element = this.undoStack.pop()\n        if(element){\n            this.redoStack.push(element)\n        }\n        return element\n    }\n\n    redo(){\n        console.log(\"Redoing\")\n        const element = this.redoStack.pop()\n        if(element){\n            this.undoStack.push(element)\n        }\n        return element\n    }\n\n    push(element: UndoRedoCanvasElement){\n        console.log(\"Pushing element\")\n        this.undoStack.push(element)\n        this.redoStack.empty()\n    }\n\n    empty(){\n        this.undoStack.empty()\n        this.redoStack.empty()\n    }\n\n}\n\nexport const UndoRedo = new UndoRedoStack()\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/Components/Core/Blockable/div/div.component.ts\n            \n            component\n            BlockableDiv\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/Components/Core/Blockable/p/p.component.ts\n            \n            component\n            BlockableP\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/Components/Core/drawable-canvas/component/drawable-canvas.component.ts\n            \n            component\n            DrawableCanvasComponent\n            \n                2 %\n                (1/35)\n            \n        \n        \n            \n                \n                src/app/Components/Core/drawable-canvas/component/interactive-bbox/interactive-bbox.component.ts\n            \n            component\n            InteractiveBboxComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/Components/Core/drawable-canvas/component/svgelements/svgelements.component.ts\n            \n            component\n            SVGElementsComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/Components/Core/drawable-canvas/models.ts\n            \n            interface\n            Point2D\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/Components/Core/drawable-canvas/models.ts\n            \n            interface\n            Rect\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/Components/Core/drawable-canvas/models.ts\n            \n            interface\n            Viewbox\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/Components/Core/drawable-canvas/service/bbox-manager.service.ts\n            \n            injectable\n            BboxManagerService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/Components/Core/drawable-canvas/service/canvas-manager.service.ts\n            \n            injectable\n            CanvasManagerService\n            \n                0 %\n                (0/25)\n            \n        \n        \n            \n                \n                src/app/Components/Core/drawable-canvas/service/draw.service.ts\n            \n            injectable\n            DrawService\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/app/Components/Core/drawable-canvas/service/image-processing.service.ts\n            \n            injectable\n            ImageProcessingService\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/Components/Core/drawable-canvas/service/post-process.service.ts\n            \n            injectable\n            PostProcessService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/Components/Core/drawable-canvas/service/state-manager.service.ts\n            \n            injectable\n            StateManagerService\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/app/Components/Core/drawable-canvas/service/svgui.service.ts\n            \n            injectable\n            SVGUIService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/Components/Core/drawable-canvas/service/undo-redo.service.ts\n            \n            injectable\n            UndoRedoService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/Components/Core/drawable-canvas/service/zoom-pan.service.ts\n            \n            injectable\n            ZoomPanService\n            \n                0 %\n                (0/31)\n            \n        \n        \n            \n                \n                src/app/Components/Core/labelled-switch/labelled-switch.component.ts\n            \n            component\n            LabelledSwitchComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/Components/Core/testing/testing.component.ts\n            \n            component\n            TestingComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/Components/Interface/editor/editor.component.ts\n            \n            component\n            EditorComponent\n            \n                0 %\n                (0/43)\n            \n        \n        \n            \n                \n                src/app/Components/Interface/editor/labels/instance-label/instance-label.component.ts\n            \n            component\n            InstanceLabelComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/Components/Interface/editor/labels/labels.component.ts\n            \n            component\n            LabelsComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/Components/Interface/editor/tool-setting/tool-setting.component.ts\n            \n            component\n            ToolSettingComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/Components/Interface/editor/toolbar/toolbar.component.ts\n            \n            component\n            ToolbarComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/Components/Interface/gallery/gallery-element/gallery-element.component.ts\n            \n            component\n            GalleryElementComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/Components/Interface/gallery/gallery.component.ts\n            \n            component\n            GalleryComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/Components/Interface/loading/loading.component.ts\n            \n            component\n            LoadingComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/Components/Interface/project-configuration/classification-configuration/classification-configuration.component.ts\n            \n            component\n            ClassificationConfigurationComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/Components/Interface/project-configuration/project-configuration.component.ts\n            \n            component\n            ProjectConfigurationComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/Core/interface.ts\n            \n            interface\n            BboxLabel\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/Core/interface.ts\n            \n            interface\n            ImageFromCLI\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/Core/interface.ts\n            \n            interface\n            MulticlassInterface\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/Core/interface.ts\n            \n            interface\n            MultilabelInterface\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/Core/interface.ts\n            \n            interface\n            Point2D\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/Core/interface.ts\n            \n            interface\n            ProjectConfig\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/Core/interface.ts\n            \n            interface\n            ProjectFile\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/Core/interface.ts\n            \n            interface\n            Rect\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/Core/interface.ts\n            \n            interface\n            SegInstance\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/Core/interface.ts\n            \n            interface\n            SegLabel\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/Core/interface.ts\n            \n            interface\n            Thumbnail\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/Core/interface.ts\n            \n            interface\n            UndoRedoCanvasElement\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/Core/interface.ts\n            \n            interface\n            Viewbox\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/Core/io/formats.ts\n            \n            interface\n            LabelFormat\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        src/app/Core/io/images.ts\n            \n            function\n            loadImageFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/Core/io/save_load.ts\n            \n            function\n            blobToDataURL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/Core/io/save_load.ts\n            \n            function\n            invokeLoadJsonFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/Core/io/save_load.ts\n            \n            function\n            invokeSaveJsonFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/Core/io/save_load.ts\n            \n            function\n            invokeSaveXmlFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/Core/io/save_load.ts\n            \n            function\n            saveProjectConfigFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/Core/misc/colors.ts\n            \n            function\n            componentToHex\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/Core/misc/colors.ts\n            \n            function\n            from_hex_to_rgb\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/Core/misc/colors.ts\n            \n            function\n            from_rgb_to_hex\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/Core/misc/colors.ts\n            \n            function\n            generate_shades\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/Core/misc/colors.ts\n            \n            function\n            getDefaultColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/Core/misc/undoRedo.ts\n            \n            class\n            _RedoStack\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/Core/misc/undoRedo.ts\n            \n            class\n            _UndoStack\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/Core/misc/undoRedo.ts\n            \n            class\n            UndoRedoStack\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        src/app/Core/misc/undoRedo.ts\n            \n            variable\n            UndoRedo\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/Core/task.ts\n            \n            class\n            MulticlassTask\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/Core/task.ts\n            \n            class\n            MultilabelTask\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/Core/tools.ts\n            \n            class\n            Tool\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/Core/tools.ts\n            \n            class\n            Tools\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        src/app/Core/tools.ts\n            \n            variable\n            postProcessingOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/Guards/project-started.guard.ts\n            \n            variable\n            projectStartedGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/Services/Project/labelTreeNode.ts\n            \n            function\n            constructLabelTreeNode\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/Services/Project/labels.service.ts\n            \n            injectable\n            LabelsService\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/app/Services/Project/project.service.ts\n            \n            injectable\n            ProjectService\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                src/app/Services/UI/editor.service.ts\n            \n            injectable\n            EditorService\n            \n                0 %\n                (0/34)\n            \n        \n        \n            \n                \n                src/app/Services/UI/view.service.ts\n            \n            injectable\n            ViewService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/Services/cli.service.ts\n            \n            injectable\n            CLIService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/Services/cli.service.ts\n            \n            interface\n            EventPayload\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/Services/io.service.ts\n            \n            injectable\n            IOService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/Services/open-cv.service.ts\n            \n            injectable\n            OpenCVService\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                        src/app/Services/open-cv.service.ts\n            \n            variable\n            cv\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            openCVConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/environments/environment.development.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            variable\n            openCVConfig\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^18.2.13\n        \n            @angular/cdk : ^17.3.10\n        \n            @angular/common : ^18.2.13\n        \n            @angular/compiler : ^18.2.13\n        \n            @angular/core : ^18.2.13\n        \n            @angular/forms : ^18.2.13\n        \n            @angular/platform-browser : ^18.2.13\n        \n            @angular/platform-browser-dynamic : ^18.2.13\n        \n            @angular/router : ^18.2.13\n        \n            @catppuccin/palette : ^1.7.1\n        \n            @primeng/themes : ^19.0.2\n        \n            @tauri-apps/api : ^2.1.1\n        \n            @tauri-apps/plugin-dialog : ^2.0.1\n        \n            @tauri-apps/plugin-fs : ^2.0.2\n        \n            buffer : ^6.0.3\n        \n            fast-xml-parser : ^4.5.0\n        \n            ngx-opencv : ^2.0.1\n        \n            path : ^0.12.7\n        \n            path-browserify : ^1.0.1\n        \n            primeflex : ^3.3.1\n        \n            primeicons : ^7.0.0\n        \n            primeng : ^18.0.2\n        \n            rxjs : ~7.8.0\n        \n            tailwindcss-primeui : ^0.3.4\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            PostProcessOption   (src/.../tools.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/Core/tools.ts\n    \n        \n            \n                \n                    \n                        \n                        PostProcessOption\n                    \n                \n                        \n                            \n                                 MEDSAM\n                            \n                        \n                        \n                            \n                                Value : MedSAM\n                            \n                        \n                        \n                            \n                                 OTSU\n                            \n                        \n                        \n                            \n                                Value : Otsu\n                            \n                        \n                        \n                            \n                                 CRF\n                            \n                        \n                        \n                            \n                                Value : CRF\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            blobToDataURL   (src/.../save_load.ts)\n                        \n                        \n                            componentToHex   (src/.../colors.ts)\n                        \n                        \n                            constructLabelTreeNode   (src/.../labelTreeNode.ts)\n                        \n                        \n                            from_hex_to_rgb   (src/.../colors.ts)\n                        \n                        \n                            from_rgb_to_hex   (src/.../colors.ts)\n                        \n                        \n                            generate_shades   (src/.../colors.ts)\n                        \n                        \n                            getDefaultColor   (src/.../colors.ts)\n                        \n                        \n                            invokeLoadJsonFile   (src/.../save_load.ts)\n                        \n                        \n                            invokeSaveJsonFile   (src/.../save_load.ts)\n                        \n                        \n                            invokeSaveXmlFile   (src/.../save_load.ts)\n                        \n                        \n                            loadImageFile   (src/.../images.ts)\n                        \n                        \n                            saveProjectConfigFile   (src/.../save_load.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/Core/io/save_load.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        blobToDataURL\n                        \n                    \n                \n            \n            \n                \nblobToDataURL(blob: Blob)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                blob\n                                            \n                                                        Blob\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        invokeLoadJsonFile\n                        \n                    \n                \n            \n            \n                \ninvokeLoadJsonFile(filepath: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filepath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        invokeSaveJsonFile\n                        \n                    \n                \n            \n            \n                \ninvokeSaveJsonFile(filepath: string, jsonContent: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filepath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                jsonContent\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        invokeSaveXmlFile\n                        \n                    \n                \n            \n            \n                \ninvokeSaveXmlFile(filepath: string, xmlContent: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filepath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                xmlContent\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveProjectConfigFile\n                        \n                    \n                \n            \n            \n                \nsaveProjectConfigFile(root: string, projectConfig: ProjectConfig)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                root\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projectConfig\n                                            \n                                                            ProjectConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/app/Core/misc/colors.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        componentToHex\n                        \n                    \n                \n            \n            \n                \ncomponentToHex(c: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                c\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        from_hex_to_rgb\n                        \n                    \n                \n            \n            \n                \nfrom_hex_to_rgb(hex: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                hex\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        from_rgb_to_hex\n                        \n                    \n                \n            \n            \n                \nfrom_rgb_to_hex(r: number, g: number, b: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                r\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                g\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                b\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generate_shades\n                        \n                    \n                \n            \n            \n                \ngenerate_shades(hex: string, n: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                hex\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                n\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDefaultColor\n                        \n                    \n                \n            \n            \n                \ngetDefaultColor(n: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                n\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/app/Services/Project/labelTreeNode.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        constructLabelTreeNode\n                        \n                    \n                \n            \n            \n                \nconstructLabelTreeNode(labels)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                labels\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TreeNode[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/Core/io/images.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        loadImageFile\n                        \n                    \n                \n            \n            \n                \nloadImageFile(filepath: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filepath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nLabelMed Client\nA powerful medical image labeling application built with Angular CLI version 18.2.12 and Tauri V2. LabelMed prioritizes privacy, speed, and ease of use for medical image annotation tasks.\nKey Features\n\nLocal Processing: All operations run locally, ensuring data privacy and security\nMulti-task Classification: Support for multiple classification types\nMulticlass classification\nMultilabel classification\n\n\nFlexible Configuration: Easy setup for input/output folders\nAdvanced Image Processing: Integrated OpenCV WASM for real-time image preprocessing\n\nPrerequisites\n\nNode.js and NPM\nAngular CLI\nRust (for Tauri)\n\nDevelopment\n\nInstall dependencies:\n\nExample :npm install\nStart development server:\n\nExample :npm run tauri devBuilding\nCreate production binaries:\nExample :npm run tauri buildExecutables will be generated in src-tauri/target/release/\nArchitecture\nLabelMed combines multiple technologies for optimal performance:\n\nFrontend: Angular framework for responsive UI\nImage Processing: OpenCV WASM for client-side image operations\nBackend Services: \nTauri/Rust for application serving and native features\nMedSAM integration via ONNX Runtime\nZeroMQ for Python library communication\n\n\n\nTechnical Stack\n\nAngular (Frontend Framework)\nTauri V2 (Desktop Application Framework)\nRust (Backend Processing)\nOpenCV WASM (Image Processing)\nZeroMQ (Inter-process Communication)\nONNX Runtime (ML Model Integration)\n\nCommunication with Python\nLabelMed enables seamless integration with Python scripts through ZeroMQ:\n\nReal-time Communication: Bidirectional data exchange between LabelMed and Python processes\n\nCustom Model Integration: \n\nRun your own ML models in Python\n\nSend results directly to LabelMed for validation\n\nReceive corrected annotations back in Python\n\nSystem Overview:\n  \n\n\n\nExample Usage:\n\n\nExample :from pathlib import Path\nfrom pynotate import Project\nimport numpy as np\nfrom fundus_lesions_toolkit.models.segmentation import segment as segment_lesions, Dataset\nfrom fundus_data_toolkit.functional import open_image\n\nfrom fundus_lesions_toolkit.constants import LESIONS\nfrom fundus_odmac_toolkit.models.segmentation import segment as segment_odmac\nfrom tqdm.notebook import tqdm\n\nsegmentation_classes = ['Lesions/' + l for l in LESIONS[1:]] + ['OD', 'MAC']\n\nclassifications_classes = [{'name': 'Diabetic Retinopathy', 'classes': ['No DR', 'Mild', 'Moderate', 'Severe', 'Proliferative']}]\nclassification_multilabel = {'name': 'Others diseases', 'classes': ['Hypertension', 'Glaucoma', 'Myopia', 'Other']}\n\ndef run_model(filepath):\n    img = open_image(filepath)\n    lesions = segment_lesions(img, train_datasets=Dataset.IDRID).argmax(0).cpu().numpy()\n    od_mask = segment_odmac(img).argmax(0).cpu().numpy()\n    # Lesions\n    masks = [255*(lesions == i).astype(np.uint8) for i in range(1, 5)]\n    # OD and MAC\n    masks += [255*(od_mask==i) for i in range(1, 3)] \n\n    # Random classification\n    multilabel = np.random.choice(classification_multilabel['classes'], size=np.random.randint(0, len(classification_multilabel['classes']))).tolist()\n    multiclass = np.random.choice(classifications_classes[0]['classes'], size=1).tolist()\n    multilabel = None if len(multilabel) == 0 else multilabel\n    \n    return masks, multiclass, multilabel\n\nALL_FILES = list(Path(ROOT_FOLDER).glob('*.jpeg'))\nINPUT_DIR = \"inputFundus/\" # Folder where the images are stored. Can be the same as the root folder\nOUTPUT_DIR = \"output/\" # Folder where the annotations will be stored.\n\nwith Project(project_name=\"FundusLesions\", \n             input_dir=str(Path(INPUT_DIR).resolve()),\n             output_dir=str(Path(OUTPUT_DIR).resolve()),\n             classification_classes=classifications_classes,\n             classification_multilabel=classification_multilabel,\n             segmentation_classes=segmentation_classes) as cli:\n    for filepath in tqdm(ALL_FILES):\n        masks, multiclass, multilabel = run_model(filepath)\n        cli.load_image(filepath, segmentation_masks=masks, multiclass_choices=multiclass, multilabel_choices=multilabel)\n\nFor detailed Python integration examples, see our Python SDK Documentation (under construction).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    18 Components\n                \n            \n        \n        \n            \n                \n                    \n                    16 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    18 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            cv   (src/.../open-cv.service.ts)\n                        \n                        \n                            environment   (src/.../environment.development.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            openCVConfig   (src/.../main.ts)\n                        \n                        \n                            openCVConfig   (src/.../app.config.ts)\n                        \n                        \n                            postProcessingOptions   (src/.../tools.ts)\n                        \n                        \n                            projectStartedGuard   (src/.../project-started.guard.ts)\n                        \n                        \n                            UndoRedo   (src/.../undoRedo.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideRouter(routes),\n    provideAnimationsAsync(),\n    importProvidersFrom(NgxOpenCVModule.forRoot(openCVConfig)),\n  ],\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openCVConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OpenCVConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  openCVDirPath: 'assets/opencv',\n}\n                    \n                \n\n\n        \n    \n\n    src/app/Services/open-cv.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        cv\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.development.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    defaultProjectName: 'Demo',\n    defaultInputFolder: \"/home/clement/Documents/data/HMRFormationRD/\",\n    defaultOutputFolder: \"/home/clement/Documents/tmp/\",\n    defaultRegex: '.(gif|jpe?g|tiff?|png|webp|bmp)$',\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    defaultInputFolder: '',\n    defaultProjectName: 'New Project',\n    defaultOutputFolder: '',\n    defaultRegex: '.(gif|jpe?g|tiff?|png|webp|bmp)$',\t\n}\n                    \n                \n\n\n        \n    \n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        openCVConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OpenCVConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  openCVDirPath: 'assets/opencv/',\n}\n                    \n                \n\n\n        \n    \n\n    src/app/Core/tools.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        postProcessingOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [PostProcessOption.OTSU, PostProcessOption.MEDSAM, PostProcessOption.CRF]\n                    \n                \n\n\n        \n    \n\n    src/app/Guards/project-started.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        projectStartedGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : (route, state) => {\n\n  const projectService = inject(ProjectService);\n  const router = inject(Router);\n  console.log('Is project started?', projectService.isProjectStarted);\n  if (!projectService.isProjectStarted) {\n    router.navigate(['/project-configuration']);\n  }\n  \n  return projectService.isProjectStarted;\n}\n                    \n                \n\n\n        \n    \n\n    src/app/Core/misc/undoRedo.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UndoRedo\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new UndoRedoStack()\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
