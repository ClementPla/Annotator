var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.741,1,1.351]],["body/components/AppComponent.html",[0,0.941,1,1.909,2,1.484,3,0.106,4,0.106,5,1.026,6,1.026,7,1.026,8,0.094,9,2.378,10,2.144,11,3.882,12,1.026,13,2.853,14,2.823,15,0.781,16,1.547,17,1.637,18,1.547,19,4.32,20,1.909,21,3.293,22,4.985,23,4.32,24,4.985,25,4.32,26,1.687,27,4.14,28,1.687,29,4.14,30,0.082,31,0.216,32,1.927,33,2.844,34,2.974,35,4.985,36,3.97,37,0.814,38,5.552,39,2.931,40,5.552,41,4.811,42,4.14,43,4.811,44,0.719,45,2.137,46,2.451,47,2.262,48,3.882,49,3.425,50,3.882,51,4.323,52,4.636,53,5.935,54,1.064,55,4.14,56,0.659,57,0.016,58,0.401,59,0.215,60,0.659,61,2.745,62,1.124,63,0.883,64,2.745,65,2.745,66,4.14,67,1.832,68,2.745,69,4.14,70,2.745,71,2.745,72,2.745,73,0.437,74,0.283,75,0.814,76,3.588,77,2.745,78,1.182,79,0.497,80,2.378,81,2.378,82,2.745,83,3.224,84,1.118,85,1.501,86,1.693,87,1.813,88,2.137,89,1.421,90,1.284,91,2.727,92,1.284,93,1.693,94,2.378,95,2.745,96,1.225,97,1.591,98,1.813,99,2.745,100,2.745,101,2.745,102,2.745,103,2.745,104,2.745,105,2.745,106,4.14,107,2.745,108,1.591,109,1.501,110,1.957,111,2.378,112,0.106,113,0.21,114,2.427,115,2.745,116,2.745,117,2.745,118,2.745,119,2.745,120,2.745,121,2.745,122,4.14,123,2.745,124,2.745,125,2.745,126,2.745,127,2.378,128,2.745,129,2.745,130,2.745,131,2.378,132,2.137,133,2.745,134,1.957,135,2.745,136,4.14,137,2.745,138,2.745,139,2.745,140,4.14,141,4.811,142,1.443,143,2.378,144,1.501,145,2.745,146,1.989,147,1.832,148,1.443,149,4.14,150,0.944,151,2.745,152,1.693,153,2.745,154,2.745,155,1.591,156,2.745,157,4.14,158,2.745,159,2.745,160,4.14,161,2.378,162,2.378,163,2.378,164,2.378,165,2.745,166,2.745,167,2.745,168,2.745,169,2.745,170,2.745,171,2.745,172,2.378,173,2.745,174,2.378,175,2.745,176,2.378,177,2.378,178,1.813,179,2.137,180,2.745,181,2.745,182,2.378,183,2.745,184,2.745,185,2.031,186,1.938,187,2.745,188,1.501,189,1.957,190,4.14,191,2.745,192,1.58,193,2.745,194,5.552,195,2.745,196,2.378,197,2.745,198,1.35,199,1.957,200,2.745,201,2.745,202,2.745,203,2.745,204,2.745,205,0.609,206,4.14,207,1.026,208,1.547,209,1.026,210,1.989,211,1.026,212,1.026,213,0.944,214,1.547,215,1.026,216,0.944,217,1.026,218,0.944,219,0.983,220,1.547,221,0.983,222,1.026,223,1.026,224,0.983,225,1.026,226,0.944,227,1.026,228,0.944,229,1.026,230,1.026,231,0.944,232,0.562,233,1.026,234,0.944,235,1.026,236,1.026,237,0.944,238,1.026,239,1.026,240,0.944,241,1.026,242,1.026,243,0.944,244,0.944,245,0.944,246,1.026,247,0.944,248,1.026,249,0.944,250,1.026,251,0.944,252,0.836,253,1.026,254,1.026,255,1.026,256,0.008,257,0.008]],["title/interfaces/BboxLabel.html",[258,0.45,259,1.468]],["body/interfaces/BboxLabel.html",[3,0.173,4,0.173,8,0.154,15,0.845,30,0.176,31,0.305,57,0.016,58,0.401,59,0.224,67,1.478,73,1.287,74,0.603,112,0.305,142,1.909,144,1.211,146,1.604,147,1.478,148,2.013,185,1.824,232,1.467,256,0.011,257,0.011,258,0.904,259,2.185,260,1.419,261,1.824,262,2.473,263,1.867,264,1.323,265,2.181,266,1.72,267,1.673,268,1.673,269,1.673,270,1.93,271,1.824,272,1.164,273,1.711,274,1.711,275,1.31,276,1.31,277,1.363,278,1.604,279,1.604,280,1.604,281,1.604,282,1.539,283,1.363,284,2.095,285,2.28,286,1.581,287,2.28,288,1.478,289,2.382,290,1.746,291,1.746,292,1.824,293,1.824,294,1.824,295,1.824,296,2.28,297,2.382,298,2.28,299,1.908,300,1.673]],["title/injectables/BboxManagerService.html",[301,0.711,302,2.595]],["body/injectables/BboxManagerService.html",[3,0.222,4,0.222,8,0.197,15,1.084,30,0.173,31,0.356,44,1.265,54,1.041,57,0.016,59,0.197,74,0.592,75,1.129,78,1.041,79,1.04,96,2.562,112,0.222,113,0.439,256,0.013,257,0.013,259,2.724,301,1.236,302,4.511,303,2.057,304,2.843,305,6.316,306,4.094,307,7.289,308,6.829,309,2.057]],["title/components/BlockableDiv.html",[0,0.741,213,1.351]],["body/components/BlockableDiv.html",[0,1.225,1,1.53,2,2.087,3,0.172,4,0.172,5,2.177,6,1.663,7,1.663,8,0.153,10,3.016,12,1.663,13,3.013,14,2.981,16,2.177,17,1.345,18,2.177,20,1.53,30,0.134,37,1.145,44,0.773,54,1.049,56,0.709,57,0.015,58,0.4,59,0.223,60,0.709,62,0.84,78,0.989,79,0.806,84,1.814,112,0.172,113,0.526,192,1.846,198,3.192,205,0.988,207,1.663,208,2.177,209,1.663,210,2.468,211,1.663,212,1.663,213,2.368,214,2.574,215,1.663,216,1.53,217,1.663,218,1.53,219,1.595,220,2.177,221,1.595,222,1.663,223,1.663,224,1.595,225,1.663,226,1.53,227,1.663,228,1.53,229,1.663,230,1.663,231,1.53,232,0.912,233,1.663,234,1.53,235,1.663,236,1.663,237,1.53,238,1.663,239,1.663,240,1.53,241,1.663,242,1.663,243,1.53,244,1.53,245,1.53,246,1.663,247,1.53,248,1.663,249,1.53,250,1.663,251,1.53,252,1.356,253,1.663,254,1.663,255,1.663,256,0.011,257,0.011,310,3.857,311,5.055,312,5.824,313,5.055,314,4.629,315,5.363,316,3.594,317,5.626,318,3.466,319,4.911,320,5.824,321,4.535,322,4.451,323,4.451,324,4.535,325,2.941,326,1.897,327,3.857]],["title/components/BlockableP.html",[0,0.741,216,1.351]],["body/components/BlockableP.html",[0,1.225,1,1.53,2,2.087,3,0.172,4,0.172,5,2.177,6,1.663,7,1.663,8,0.153,10,3.016,12,1.663,13,3.013,14,2.981,16,2.177,17,1.345,18,2.177,20,1.53,30,0.134,37,1.145,44,0.773,54,1.049,56,0.709,57,0.015,58,0.4,59,0.223,60,0.709,62,0.84,78,0.989,79,0.806,84,1.814,112,0.172,113,0.526,192,1.846,198,3.192,205,0.988,207,1.663,208,2.177,209,1.663,210,2.468,211,1.663,212,1.663,213,1.53,214,2.574,215,1.663,216,2.368,217,1.663,218,1.53,219,1.595,220,2.177,221,1.595,222,1.663,223,1.663,224,1.595,225,1.663,226,1.53,227,1.663,228,1.53,229,1.663,230,1.663,231,1.53,232,0.912,233,1.663,234,1.53,235,1.663,236,1.663,237,1.53,238,1.663,239,1.663,240,1.53,241,1.663,242,1.663,243,1.53,244,1.53,245,1.53,246,1.663,247,1.53,248,1.663,249,1.53,250,1.663,251,1.53,252,1.356,253,1.663,254,1.663,255,1.663,256,0.011,257,0.011,311,5.055,313,5.055,314,4.629,315,5.363,316,3.594,317,5.626,318,3.466,319,4.911,321,4.535,324,4.535,325,2.941,326,1.897,327,3.857,328,3.857,329,5.824,330,5.824,331,4.451,332,4.451]],["title/injectables/CLIService.html",[49,2.424,301,0.711]],["body/injectables/CLIService.html",[3,0.164,4,0.164,8,0.146,15,0.801,17,1.304,30,0.128,31,0.295,32,2.136,37,1.11,39,2.642,44,0.737,49,3.483,54,1.073,56,0.676,57,0.016,58,0.262,59,0.194,60,0.676,62,0.801,63,0.905,67,1.401,73,0.676,74,0.654,75,1.247,78,1.073,79,0.769,92,2.642,96,1.895,112,0.164,113,0.324,114,2.584,134,4.026,186,3.387,256,0.011,257,0.011,258,0.486,283,1.293,288,1.401,301,1.022,303,1.521,309,1.521,326,1.809,333,3.306,334,5.497,335,5.497,336,5.497,337,5.858,338,4.246,339,6.271,340,5.646,341,4.246,342,4.401,343,2.036,344,4.246,345,4.246,346,2.199,347,3.679,348,3.679,349,2.461,350,2.461,351,3.027,352,3.679,353,3.306,354,3.679,355,3.679,356,3.483,357,4.396,358,4.892,359,1.979,360,4.892,361,3.679,362,3.679,363,5.858,364,4.466,365,5.858,366,5.858,367,4.396,368,6.645,369,5.858,370,4.396,371,4.892,372,3.73,373,4.892,374,2.3,375,3.679,376,3.679]],["title/injectables/CanvasManagerService.html",[301,0.711,377,2.277]],["body/injectables/CanvasManagerService.html",[3,0.121,4,0.121,8,0.108,15,0.592,17,1.245,30,0.189,31,0.239,33,2.766,37,0.899,39,2.523,44,0.544,46,2.651,47,2.414,54,1.199,56,1.003,57,0.016,58,0.388,59,0.254,60,1.003,62,1.438,63,1.343,73,1.047,74,0.556,75,1.06,78,1.002,79,0.568,89,1.624,90,1.467,112,0.121,113,0.24,114,2.197,188,1.715,205,1.014,256,0.009,257,0.009,264,1.048,270,1.035,283,1.642,301,0.827,303,1.123,304,3.078,306,2.236,309,1.123,326,1.336,342,3.651,343,1.91,346,1.624,359,1.337,377,2.649,378,6.144,379,4.199,380,4.672,381,5.392,382,5.392,383,5.392,384,5.392,385,5.392,386,3.558,387,4.57,388,5.925,389,5.392,390,5.392,391,4.672,392,5.392,393,5.392,394,5.392,395,5.392,396,5.392,397,5.392,398,5.925,399,4.57,400,4.57,401,5.925,402,2.717,403,3.068,404,4.188,405,4.57,406,2.819,407,3.96,408,5.687,409,3.135,410,2.071,411,4.57,412,2.717,413,3.135,414,3.135,415,3.135,416,3.135,417,3.135,418,3.135,419,3.135,420,4.596,421,3.135,422,3.135,423,3.135,424,3.135,425,4.57,426,3.135,427,4.57,428,3.135,429,3.135,430,2.717,431,3.135,432,3.135,433,2.717,434,3.135,435,2.717,436,1.817,437,1.817,438,2.441,439,2.441,440,3.135,441,3.135,442,2.717,443,1.624,444,5.392,445,4.057,446,3.135,447,3.135,448,3.914,449,3.135,450,3.135,451,3.135,452,3.135,453,3.135,454,3.135,455,3.135,456,3.135,457,4.57,458,2.11,459,3.327,460,3.135,461,3.135,462,3.135,463,3.135,464,2.441,465,3.135,466,3.135,467,4.57,468,3.135,469,2.236,470,3.135,471,2.717,472,3.135,473,3.135,474,3.135,475,3.135,476,3.135,477,3.135,478,3.135]],["title/components/ClassificationConfigurationComponent.html",[0,0.741,218,1.351]],["body/components/ClassificationConfigurationComponent.html",[0,1.019,1,1.08,2,1.64,3,0.122,4,0.122,5,1.174,6,1.174,7,1.174,8,0.108,12,1.174,13,2.904,14,2.879,16,1.71,17,1.057,18,1.71,20,1.08,21,3.566,26,1.865,28,1.865,30,0.162,31,0.239,32,1.287,37,0.9,44,0.545,46,2.916,47,2.568,54,1.099,56,1.082,57,0.016,58,0.444,59,0.239,60,1.082,62,1.314,63,1.448,73,0.86,78,1.113,79,0.569,84,1.28,86,1.938,89,1.627,109,1.718,110,2.24,112,0.122,113,0.412,142,1.19,150,2.262,192,1.451,205,1.399,207,1.174,208,1.71,209,1.174,210,2.125,211,1.174,212,1.174,213,1.08,214,1.71,215,1.174,216,1.08,217,1.174,218,2.039,219,2.434,220,1.71,221,1.126,222,1.174,223,1.174,224,1.126,225,1.174,226,1.08,227,1.174,228,1.08,229,1.174,230,1.174,231,1.08,232,0.643,233,1.174,234,1.08,235,1.174,236,1.174,237,1.08,238,1.174,239,1.174,240,1.08,241,1.174,242,1.174,243,1.08,244,1.08,245,1.08,246,1.174,247,1.08,248,1.174,249,1.08,250,1.174,251,1.08,252,0.957,253,1.174,254,1.174,255,1.174,256,0.009,257,0.009,264,1.292,313,2.446,343,0.884,356,4.06,359,0.919,479,5.689,480,6.093,481,2.446,482,3.263,483,3.129,484,3.849,485,4.678,486,3.849,487,5.398,488,5.398,489,4.678,490,4.203,491,3.966,492,3.966,493,4.576,494,5.93,495,4.576,496,5.139,497,4.576,498,4.576,499,4.576,500,4.576,501,2.446,502,3.142,503,4.576,504,3.142,505,5.398,506,3.142,507,4.576,508,3.142,509,3.142,510,4.576,511,3.142,512,5.93,513,4.576,514,3.142,515,4.576,516,3.142,517,4.576,518,3.142,519,3.142,520,1.718,521,2.722,522,2.24,523,2.446,524,2.722,525,3.142,526,1.938,527,3.142,528,2.446,529,3.142,530,3.564,531,3.142,532,3.142,533,3.142,534,3.142,535,4.576,536,3.142,537,3.142,538,3.142,539,3.142,540,3.142,541,3.142,542,4.576,543,3.263,544,4.576]],["title/interfaces/Color.html",[144,1.062,258,0.45]],["body/interfaces/Color.html",[3,0.156,4,0.156,8,0.139,30,0.122,31,0.285,44,0.702,57,0.016,59,0.212,73,0.986,74,0.417,112,0.156,113,0.309,144,2.006,148,1.051,150,1.39,152,3.818,155,2.343,189,2.883,205,1.583,256,0.01,257,0.01,258,0.463,260,1.282,264,1.275,273,1.94,274,1.183,343,1.137,359,2.261,420,2.671,443,2.094,458,1.599,545,2.883,546,5.468,547,5.468,548,5.468,549,2.883,550,4.819,551,4.819,552,4.254,553,3.148,554,2.883,555,3.148,556,4.254,557,3.148,558,2.671,559,2.883,560,3.148,561,5.419,562,3.503,563,3.503,564,2.343,565,5.362,566,3.503,567,5.362,568,3.503,569,4.819,570,3.503,571,3.503,572,3.503,573,3.503,574,3.503,575,3.503,576,4.412,577,3.503,578,2.883,579,3.503,580,3.503,581,3.503,582,3.503,583,3.503,584,5.556,585,3.503,586,3.503,587,4.734,588,3.503,589,3.503,590,3.503,591,4.734,592,4.734,593,3.503,594,3.148,595,3.148,596,2.883,597,3.503,598,2.883,599,3.503,600,4.734,601,3.148]],["title/injectables/DrawService.html",[301,0.711,602,2.595]],["body/injectables/DrawService.html",[3,0.078,4,0.241,8,0.07,15,0.382,17,1.192,30,0.166,31,0.171,32,2.245,33,2.365,34,2.474,37,0.642,39,2.416,44,0.567,46,1.606,47,1.918,54,1.123,56,1.042,57,0.016,58,0.403,59,0.229,60,1.042,62,1.352,63,1.445,73,0.822,74,0.485,75,1.142,78,1.06,79,0.367,85,1.108,89,1.049,90,0.948,97,1.175,98,2.158,112,0.078,113,0.36,114,2.609,144,1.731,148,1.702,150,1.123,152,2.016,176,2.831,177,1.756,178,1.339,179,1.578,186,1.529,205,1.421,232,0.415,256,0.006,257,0.006,262,0.726,263,0.548,272,1.067,301,0.591,303,0.726,304,2.889,309,0.726,342,2.993,343,1.633,346,1.049,356,2.532,359,1.511,374,1.331,377,3.365,379,2.544,386,2.544,403,2.438,404,3.582,406,2.532,407,1.756,408,5.58,410,4.597,436,1.175,437,1.894,438,1.578,439,1.578,443,3.006,445,1.25,458,1.201,459,1.25,471,2.831,501,1.578,559,1.445,602,2.158,603,1.756,604,4.104,605,3.196,606,4.104,607,4.708,608,3.267,609,2.831,610,4.708,611,3.267,612,4.104,613,3.267,614,3.267,615,4.708,616,4.708,617,4.708,618,4.708,619,4.104,620,4.708,621,4.08,622,3.267,623,2.831,624,4.139,625,4.139,626,3.835,627,3.582,628,2.026,629,2.026,630,2.026,631,5.031,632,2.026,633,1.756,634,2.026,635,2.026,636,2.026,637,4.474,638,2.026,639,2.026,640,2.026,641,2.026,642,3.267,643,2.026,644,3.267,645,2.026,646,2.026,647,2.026,648,2.026,649,2.026,650,2.026,651,5.163,652,2.026,653,4.08,654,2.026,655,2.026,656,3.267,657,2.026,658,2.831,659,3.557,660,2.026,661,2.026,662,2.026,663,2.026,664,1.339,665,2.026,666,2.026,667,1.175,668,1.25,669,2.026,670,2.329,671,1.756,672,1.756,673,2.026,674,3.267,675,4.298,676,2.026,677,4.021,678,3.267,679,2.026,680,2.026,681,2.026,682,2.026,683,2.026,684,3.267,685,2.026,686,3.267,687,4.104,688,3.267,689,2.026,690,2.026,691,2.026,692,2.026,693,2.026,694,4.104,695,2.026,696,2.026,697,1.756,698,1.445,699,3.267,700,4.708,701,3.557,702,2.026,703,2.026,704,4.104,705,2.026,706,1.756,707,4.474,708,4.783,709,2.026,710,2.026,711,2.026,712,2.026,713,2.026,714,2.026,715,2.026,716,2.026,717,2.026,718,3.267,719,2.831,720,2.026,721,2.831,722,1.756,723,3.267,724,2.831,725,2.831,726,2.026,727,2.026,728,2.831,729,2.831,730,2.831,731,2.831,732,2.026,733,2.026,734,1.756,735,2.026,736,2.026,737,2.026,738,3.267,739,4.104,740,1.756,741,1.445,742,2.026,743,1.445,744,2.026,745,2.026,746,2.026,747,1.756,748,2.026,749,2.026,750,1.756,751,1.756,752,1.756,753,3.267,754,2.026,755,2.026,756,2.026,757,1.756,758,2.026,759,2.026,760,2.026,761,2.026,762,2.544,763,1.756,764,1.756,765,2.026,766,3.267,767,2.026,768,1.578,769,2.831,770,4.104,771,1.756,772,2.026,773,4.08,774,4.474,775,4.021,776,4.021,777,2.026,778,2.026,779,1.339,780,2.026,781,2.026,782,4.104,783,2.026,784,2.026,785,2.026,786,2.026,787,2.026,788,1.756,789,2.026]],["title/injectables/EditorService.html",[33,1.601,301,0.711]],["body/injectables/EditorService.html",[3,0.107,4,0.107,8,0.095,15,0.522,30,0.125,31,0.217,32,2.32,33,1.696,37,0.818,44,0.869,54,1.209,56,0.44,57,0.016,58,0.17,59,0.265,60,0.44,62,1.34,63,1.339,73,0.663,74,0.791,75,1.509,78,0.763,79,0.5,97,2.902,98,1.826,112,0.107,113,0.211,150,1.916,155,2.413,205,1.326,252,1.82,256,0.008,257,0.008,264,1.181,266,1.886,301,0.754,303,0.99,309,0.99,342,4.449,343,1.967,346,1.431,374,3.081,621,4.338,667,1.602,668,3.089,706,4.338,769,4.338,790,2.395,791,5.006,792,5.006,793,5.006,794,5.006,795,5.006,796,5.006,797,5.006,798,5.006,799,5.006,800,5.006,801,5.006,802,3.307,803,5.006,804,5.006,805,5.006,806,5.006,807,5.571,808,5.571,809,4.828,810,5.571,811,5.571,812,5.571,813,4.162,814,5.571,815,5.571,816,5.571,817,5.571,818,4.162,819,2.764,820,2.764,821,2.764,822,2.764,823,2.764,824,2.764,825,4.162,826,2.764,827,2.764,828,2.764,829,2.764,830,2.764,831,2.764,832,2.764,833,2.764,834,2.764,835,2.764,836,2.764,837,2.764,838,2.764,839,2.764,840,2.764,841,3.241,842,2.764,843,2.764,844,2.968,845,2.764,846,2.764,847,4.162,848,2.764,849,4.338,850,2.764,851,2.764,852,2.764,853,2.764,854,2.764,855,4.162,856,6.992,857,3.241,858,2.764,859,2.764,860,2.152,861,3.241,862,2.152,863,2.764,864,2.764,865,2.764,866,2.764]],["title/interfaces/EventPayload.html",[258,0.45,351,2.801]],["body/interfaces/EventPayload.html",[3,0.175,4,0.175,8,0.155,15,0.855,17,1.36,30,0.136,31,0.307,32,1.842,39,2.757,49,2.794,57,0.016,59,0.202,67,1.495,73,1.043,78,1.095,79,0.82,92,2.757,96,2.021,112,0.175,113,0.346,114,1.845,134,4.2,186,3.448,256,0.011,257,0.011,258,0.519,260,1.436,283,2.111,288,1.495,301,1.066,309,1.623,326,1.93,333,3.526,334,3.924,335,3.924,336,3.924,337,3.924,339,5.673,342,4.166,343,1.842,346,2.345,347,3.924,348,3.924,349,2.625,350,2.625,351,4.2,352,6.008,353,5.098,354,3.924,355,3.924,356,3.634,357,4.587,358,5.104,359,2.029,360,5.104,361,3.924,362,3.924,363,6.008,364,4.58,365,6.008,366,6.008,367,4.587,368,6.721,369,6.008,370,4.587,371,5.104,372,3.891,373,5.104,374,2.4,375,3.924,376,3.924]],["title/components/GalleryComponent.html",[0,0.741,226,1.351]],["body/components/GalleryComponent.html",[0,1.114,1,1.269,2,1.839,3,0.143,4,0.143,5,1.379,6,1.379,7,1.379,8,0.127,10,2.658,12,1.379,13,2.958,14,2.938,16,1.918,17,1.185,18,1.918,20,1.269,26,2.091,28,2.091,30,0.111,31,0.268,32,1.444,34,3.141,37,1.009,39,2.761,44,0.64,54,1.106,56,0.588,57,0.016,58,0.364,59,0.23,60,0.588,62,1.114,63,1.094,74,0.529,75,1.009,78,1.123,79,0.668,84,1.503,85,2.018,86,2.277,112,0.143,113,0.282,186,1.727,192,1.627,205,0.819,207,1.379,208,1.918,209,1.379,210,2.285,211,1.379,212,1.379,213,1.269,214,1.918,215,1.379,216,1.269,217,1.379,218,1.269,219,1.322,220,1.918,221,1.322,222,1.379,223,1.379,224,1.322,225,1.379,226,2.193,227,1.379,228,2.193,229,2.383,230,1.379,231,1.269,232,0.756,233,1.379,234,1.269,235,1.379,236,1.379,237,1.269,238,1.379,239,1.379,240,1.269,241,1.379,242,1.379,243,1.269,244,1.269,245,1.269,246,1.379,247,1.269,248,1.379,249,1.269,250,1.379,251,1.269,252,1.124,253,1.379,254,1.379,255,1.379,256,0.01,257,0.01,264,1.061,458,1.867,483,3.42,484,4.207,520,2.018,526,2.277,564,2.975,867,3.198,868,4.207,869,3.64,870,3.64,871,5.9,872,5.9,873,5.132,874,5.132,875,5.9,876,5.9,877,5.9,878,6.378,879,4.213,880,5.527,881,2.438,882,5.132,883,3.69,884,3.69,885,3.69,886,5.132,887,3.69,888,3.69,889,5.132,890,3.69,891,2.873,892,3.69,893,2.277,894,3.69,895,3.69,896,5.9,897,5.132,898,6.378,899,3.69,900,3.69,901,5.9,902,3.198,903,3.69,904,4.447,905,3.69,906,3.69,907,3.69]],["title/components/GalleryElementComponent.html",[0,0.741,228,1.351]],["body/components/GalleryElementComponent.html",[0,1.116,1,1.273,2,1.843,3,0.143,4,0.143,5,1.384,6,1.384,7,1.384,8,0.127,10,2.664,11,2.884,12,1.384,13,2.959,14,2.939,16,1.922,17,1.188,18,1.922,20,1.273,26,2.096,28,2.096,30,0.111,31,0.269,34,2.96,37,1.012,39,2.766,44,0.643,54,1.086,56,0.59,57,0.016,58,0.364,59,0.219,60,0.59,62,1.116,63,1.26,73,1.017,74,0.382,75,0.728,78,1.107,79,0.67,84,1.509,85,2.025,91,2.814,92,2.408,93,2.285,112,0.143,113,0.283,186,2.766,192,2.025,198,2.907,205,0.822,207,1.384,208,1.922,209,1.384,210,2.289,211,1.384,212,1.384,213,1.273,214,1.922,215,1.384,216,1.273,217,1.384,218,1.273,219,1.327,220,1.922,221,1.327,222,1.384,223,1.384,224,1.327,225,1.384,226,1.273,227,1.384,228,2.196,229,2.663,230,1.384,231,1.273,232,0.758,233,1.384,234,1.273,235,1.384,236,1.384,237,1.273,238,1.384,239,1.384,240,1.273,241,1.384,242,1.384,243,1.273,244,1.273,245,1.273,246,1.384,247,1.273,248,1.384,249,1.273,250,1.384,251,1.273,252,1.128,253,1.384,254,1.384,255,1.384,256,0.01,257,0.01,264,0.856,270,1.698,271,2.409,275,1.084,276,1.084,316,3.174,326,1.578,349,2.146,350,2.146,364,4.59,868,4.215,869,3.647,870,3.647,879,4.22,881,2.446,891,5.658,893,2.285,908,6.296,909,3.209,910,4.603,911,5.144,912,5.144,913,6.388,914,6.388,915,5.535,916,5.816,917,5.144,918,3.703,919,3.703,920,3.703,921,3.703,922,3.703,923,2.884,924,2.64,925,3.209,926,3.703,927,3.703,928,3.703,929,3.703,930,5.144,931,5.144,932,5.144,933,3.209,934,3.703,935,4.458,936,3.703]],["title/injectables/IOService.html",[52,2.801,301,0.711]],["body/injectables/IOService.html",[3,0.1,4,0.1,8,0.136,15,0.488,17,1.11,30,0.174,31,0.207,32,1.352,34,2.608,36,3.692,37,0.778,39,3.271,44,0.687,46,2.364,47,2.194,52,2.822,54,1.08,56,0.858,57,0.016,58,0.332,59,0.21,60,0.858,62,1.297,63,1.025,67,1.777,73,1.094,74,0.555,75,1.059,78,1.08,79,0.468,91,1.414,92,1.852,93,1.595,96,1.154,112,0.1,113,0.198,114,2.364,142,1.029,144,0.699,146,0.927,147,1.777,148,1.986,186,2.716,188,1.414,189,2.822,205,1.525,256,0.008,257,0.008,264,1.018,265,0.788,270,1.915,275,1.576,276,1.576,283,1.464,284,0.927,301,0.716,303,0.927,309,0.927,342,3.364,343,1.352,346,1.339,349,1.499,350,1.499,359,1.864,372,3.175,374,1.612,377,3.692,378,2.014,403,2.789,406,2.966,437,2.294,442,3.429,443,2.049,445,1.595,458,1.698,459,1.595,528,3.081,750,2.241,881,1.708,916,5.693,937,2.241,938,4.806,939,5.384,940,3.957,941,5.029,942,5.384,943,5.384,944,5.384,945,5.384,946,4.666,947,3.957,948,3.957,949,3.957,950,2.586,951,2.586,952,2.586,953,2.586,954,2.586,955,2.586,956,2.586,957,2.586,958,2.586,959,3.957,960,2.586,961,3.957,962,4.684,963,2.586,964,2.586,965,2.586,966,2.586,967,2.241,968,3.957,969,2.014,970,2.014,971,2.014,972,2.241,973,2.586,974,2.586,975,2.586,976,3.175,977,2.586,978,3.957,979,2.586,980,2.586,981,2.586,982,2.586,983,2.014,984,3.429,985,2.014,986,2.586,987,2.586,988,2.586,989,2.586,990,3.581,991,4.165,992,3.743,993,3.743,994,3.743,995,4.193,996,3.957,997,2.586,998,2.586,999,2.586,1000,2.586,1001,3.957,1002,2.586,1003,2.586,1004,2.586,1005,2.586,1006,2.586,1007,3.429,1008,2.586,1009,2.586,1010,2.586,1011,2.586,1012,2.586,1013,2.586,1014,2.586,1015,2.241,1016,3.957,1017,4.165,1018,3.957,1019,3.957,1020,2.586,1021,2.586,1022,2.586,1023,2.014,1024,3.957,1025,3.429,1026,2.586,1027,2.586,1028,2.586,1029,2.241,1030,2.586,1031,4.806,1032,2.241,1033,3.957,1034,5.384,1035,3.957,1036,3.957,1037,3.957,1038,2.586,1039,2.586,1040,2.241,1041,3.957,1042,2.241,1043,2.586,1044,2.586,1045,3.957,1046,3.957,1047,2.586,1048,3.957,1049,2.586,1050,2.586,1051,2.241,1052,2.586,1053,2.586,1054,3.957,1055,3.957,1056,2.586,1057,2.586,1058,3.429,1059,3.429,1060,2.586,1061,2.586,1062,2.586,1063,2.586,1064,2.586,1065,2.586,1066,2.586]],["title/interfaces/ImageFromCLI.html",[67,1.297,258,0.45]],["body/interfaces/ImageFromCLI.html",[3,0.166,4,0.166,8,0.147,15,0.81,30,0.171,31,0.297,57,0.016,58,0.393,59,0.243,67,1.877,73,1.301,74,0.586,112,0.303,142,1.658,144,1.161,146,1.538,147,1.417,148,2.079,185,2.766,232,1.165,256,0.011,257,0.011,258,0.898,259,1.604,260,1.361,261,1.749,262,1.538,263,1.538,264,1.304,265,1.942,266,1.697,267,1.604,268,1.604,269,1.604,270,1.877,271,1.749,272,1.116,273,1.664,274,1.664,275,1.256,276,1.256,277,1.307,278,1.538,279,1.538,280,1.538,281,1.538,282,1.476,283,1.307,284,2.038,285,2.218,286,1.538,287,2.218,288,1.417,289,2.317,290,1.674,291,1.674,292,1.749,293,1.749,294,1.749,295,1.749,296,2.755,297,2.878,298,2.755,299,2.893,300,1.604]],["title/injectables/ImageProcessingService.html",[301,0.711,1067,2.595]],["body/injectables/ImageProcessingService.html",[3,0.119,4,0.119,8,0.105,15,0.58,17,0.709,30,0.092,31,0.235,33,2.659,37,0.885,44,0.533,54,1.176,56,0.717,57,0.016,58,0.277,59,0.259,60,0.717,62,1.179,63,1.251,74,0.758,75,1.446,78,0.894,79,0.556,90,1.437,112,0.119,113,0.235,114,2.39,148,1.89,150,2.378,155,2.609,205,1.302,256,0.009,257,0.009,264,1.193,266,1.723,301,0.815,303,1.1,304,3.022,309,1.1,326,1.308,357,2.391,367,2.391,374,3.075,404,4.161,410,2.029,420,2.029,438,2.391,439,2.391,448,2.973,458,2.024,469,3.209,626,2.029,670,2.19,671,2.661,880,5.084,1067,2.973,1068,6.033,1069,2.661,1070,4.149,1071,4.149,1072,5.328,1073,4.149,1074,5.328,1075,4.617,1076,5.328,1077,5.328,1078,5.328,1079,4.617,1080,4.617,1081,5.328,1082,5.328,1083,5.867,1084,5.084,1085,5.867,1086,4.501,1087,2.19,1088,4.501,1089,3.071,1090,3.071,1091,5.082,1092,3.071,1093,3.071,1094,4.501,1095,6.246,1096,3.071,1097,3.071,1098,3.071,1099,3.071,1100,3.071,1101,3.071,1102,3.071,1103,3.071,1104,3.071,1105,3.071,1106,3.071,1107,3.071,1108,3.071,1109,3.071,1110,2.391,1111,2.661,1112,3.071,1113,3.071,1114,4.501,1115,4.501,1116,3.071,1117,5.328,1118,5.328,1119,7.173,1120,3.071,1121,4.501,1122,3.071,1123,3.071,1124,3.071,1125,3.071,1126,3.071,1127,3.071,1128,3.071,1129,3.071,1130,3.071,1131,5.328,1132,5.867,1133,5.328,1134,5.867,1135,3.071,1136,3.071,1137,3.071,1138,3.071,1139,3.071,1140,3.071,1141,3.071,1142,3.071,1143,3.071,1144,3.071,1145,3.071,1146,3.071,1147,3.071,1148,3.071,1149,3.071,1150,3.071,1151,2.19,1152,3.071,1153,3.071,1154,3.071,1155,3.071,1156,3.071,1157,3.071,1158,3.071,1159,3.071]],["title/components/InstanceLabelComponent.html",[0,0.741,231,1.351]],["body/components/InstanceLabelComponent.html",[0,1.135,1,1.315,2,1.885,3,0.148,4,0.148,5,1.429,6,1.429,7,1.429,8,0.131,12,1.429,13,2.969,14,2.951,16,1.966,17,1.215,18,1.966,20,1.315,26,2.144,28,2.144,30,0.181,31,0.275,32,1.692,34,2.76,37,1.035,44,0.664,46,3.339,47,2.767,54,1.095,56,0.838,57,0.016,58,0.399,59,0.233,60,0.838,62,1.135,63,1.282,73,0.838,74,0.394,75,0.752,78,1.069,79,0.693,84,1.559,85,2.092,89,1.981,96,1.707,112,0.148,113,0.292,142,1.824,147,1.985,192,1.668,198,2.587,205,0.849,207,1.429,208,1.966,209,1.429,210,2.321,211,1.429,212,1.429,213,1.315,214,1.966,215,1.429,216,1.315,217,1.429,218,1.315,219,1.371,220,1.966,221,1.371,222,1.429,223,1.429,224,1.371,225,1.429,226,1.315,227,1.429,228,1.315,229,1.429,230,1.429,231,2.227,232,1.5,233,1.429,234,1.315,235,1.429,236,1.429,237,1.315,238,1.429,239,1.429,240,1.315,241,1.429,242,1.429,243,1.315,244,1.315,245,1.315,246,1.429,247,1.315,248,1.429,249,1.315,250,1.429,251,1.315,252,1.165,253,1.429,254,1.429,255,1.429,256,0.01,257,0.01,264,1,265,1.832,268,1.429,314,4.288,316,3.246,326,1.63,486,4.288,734,3.315,879,4.279,881,2.527,1160,6.346,1161,5.702,1162,3.315,1163,5.261,1164,5.261,1165,5.261,1166,6.477,1167,5.261,1168,3.825,1169,5.261,1170,3.825,1171,3.825,1172,3.825,1173,3.825,1174,2.979,1175,2.728,1176,3.825,1177,6.477,1178,3.825,1179,3.825,1180,5.261,1181,3.825,1182,3.825,1183,3.825,1184,3.825]],["title/components/InteractiveBboxComponent.html",[0,0.741,234,1.351]],["body/components/InteractiveBboxComponent.html",[0,1.273,1,1.658,2,2.198,3,0.187,4,0.187,5,1.802,6,1.802,7,1.802,8,0.166,12,1.802,13,3.034,14,3.022,16,2.292,17,1.416,18,1.802,20,1.658,26,2.499,28,2.499,57,0.015,58,0.378,78,0.735,79,0.873,112,0.187,113,0.368,192,1.944,207,1.802,208,2.292,209,1.802,210,2.543,211,1.802,212,1.802,213,1.658,214,2.292,215,1.802,216,1.658,217,1.802,218,1.658,219,1.728,220,2.292,221,1.728,222,1.802,223,1.802,224,1.728,225,1.802,226,1.658,227,1.802,228,1.658,229,1.802,230,1.802,231,1.658,232,0.987,233,1.802,234,2.44,235,2.906,236,1.802,237,1.658,238,1.802,239,1.802,240,1.658,241,1.802,242,1.802,243,1.658,244,1.658,245,1.658,246,1.802,247,1.658,248,1.802,249,1.658,250,1.802,251,1.658,252,1.468,253,1.802,254,1.802,255,1.802,256,0.012,257,0.012,262,2.543,304,1.881,1185,4.178,1186,4.178,1187,4.178,1188,6.133,1189,6.133,1190,5.314]],["title/interfaces/LabelFormat.html",[258,0.45,962,2.801]],["body/interfaces/LabelFormat.html",[3,0.199,4,0.199,8,0.177,30,0.155,31,0.334,57,0.016,59,0.265,73,1.304,78,0.974,92,2.409,112,0.199,147,2.398,148,2.045,256,0.012,257,0.012,258,0.59,260,1.632,284,2.604,349,2.983,350,2.983,962,4.556,983,4.008,985,4.008,990,4.484,991,6.297,992,5.658,993,5.658,994,5.658,995,5.658,1191,4.46,1192,5.147,1193,4.46,1194,5.147,1195,5.147]],["title/components/LabelledSwitchComponent.html",[0,0.741,237,1.351]],["body/components/LabelledSwitchComponent.html",[0,1.181,1,1.421,2,1.987,3,0.16,4,0.16,5,1.545,6,1.545,7,1.545,8,0.142,10,2.872,12,1.545,13,2.992,14,2.976,16,2.072,17,1.281,18,2.072,20,1.421,26,2.26,28,2.26,30,0.124,37,1.09,44,0.718,54,1.063,56,0.658,57,0.016,58,0.386,59,0.215,60,0.658,62,1.047,63,0.881,78,1.063,79,1.004,112,0.16,113,0.316,192,1.758,198,2.727,205,0.917,207,1.545,208,2.072,209,1.545,210,2.396,211,1.545,212,1.545,213,1.421,214,2.072,215,1.545,216,1.421,217,1.545,218,1.421,219,1.481,220,2.072,221,1.481,222,1.545,223,1.545,224,1.481,225,1.545,226,1.421,227,1.545,228,1.421,229,1.545,230,1.545,231,1.421,232,0.847,233,1.545,234,1.421,235,1.545,236,1.545,237,2.299,238,2.741,239,1.545,240,1.421,241,1.545,242,1.545,243,1.421,244,1.421,245,1.421,246,1.545,247,1.421,248,1.545,249,1.421,250,1.545,251,1.421,252,1.259,253,1.545,254,1.545,255,1.545,256,0.011,257,0.011,266,1.332,311,4.873,315,5.208,316,3.422,318,3.219,319,4.769,321,4.318,324,4.318,325,2.731,326,1.761,343,1.163,483,3.627,520,2.261,740,4.806,1196,6.223,1197,4.744,1198,3.582,1199,4.462,1200,5.546,1201,5.546,1202,6.688,1203,6.258,1204,5.546,1205,6.258,1206,4.134,1207,4.134,1208,6.258,1209,4.134,1210,4.134,1211,4.134,1212,3.954,1213,3.582,1214,2.947,1215,4.134,1216,4.134]],["title/components/LabelsComponent.html",[0,0.741,240,1.351]],["body/components/LabelsComponent.html",[0,0.995,1,1.037,2,1.592,3,0.117,4,0.117,5,1.128,6,1.128,7,1.128,8,0.104,10,2.301,12,1.128,13,2.889,14,2.863,16,1.66,17,1.026,18,1.66,20,1.037,23,4.57,26,1.81,28,1.81,30,0.134,31,0.232,32,1.976,33,2.527,34,3.044,37,0.874,44,0.771,47,2.862,54,1.117,56,0.988,57,0.016,58,0.413,59,0.236,60,0.988,62,1.299,63,1.467,78,1.161,79,0.546,84,1.229,85,1.65,86,1.862,89,1.563,90,1.412,96,1.346,112,0.117,113,0.231,142,1.513,148,1.371,150,1.037,192,1.408,205,1.291,207,1.128,208,1.66,209,1.128,210,2.085,211,1.128,212,1.128,213,1.037,214,1.66,215,1.128,216,1.037,217,1.128,218,1.037,219,1.081,220,1.66,221,1.081,222,1.128,223,1.128,224,1.081,225,1.128,226,1.037,227,1.128,228,1.037,229,1.128,230,1.128,231,2,232,1.08,233,1.128,234,1.037,235,1.128,236,1.128,237,1.037,238,1.128,239,1.128,240,2,241,1.128,242,1.128,243,1.037,244,1.037,245,1.037,246,1.128,247,1.037,248,1.128,249,1.037,250,1.128,251,1.037,252,0.919,253,1.128,254,1.128,255,1.128,256,0.008,257,0.008,265,1.889,266,1.068,268,1.128,325,1.993,356,3.254,370,2.35,374,1.229,386,3.46,458,0.883,483,3.057,490,4.107,520,1.65,522,2.152,523,2.35,602,4.097,868,3.76,869,3.254,870,3.254,879,3.843,893,1.862,990,3.589,1161,2.35,1217,2.615,1218,5.274,1219,4.57,1220,4.107,1221,4.107,1222,4.107,1223,4.443,1224,4.443,1225,4.443,1226,5.817,1227,5.817,1228,4.443,1229,4.443,1230,5.817,1231,3.017,1232,3.017,1233,4.443,1234,5.898,1235,3.017,1236,3.017,1237,3.017,1238,4.443,1239,3.017,1240,5.274,1241,4.443,1242,3.017,1243,4.443,1244,3.017,1245,3.017,1246,3.017,1247,3.017,1248,3.017,1249,3.017,1250,3.017,1251,2.615,1252,2.35,1253,3.017,1254,2.35,1255,5.817,1256,3.017,1257,3.017,1258,3.017,1259,3.017,1260,3.017,1261,3.017,1262,3.017,1263,3.017,1264,3.017,1265,4.443,1266,3.017,1267,3.85,1268,5.817,1269,3.017,1270,3.46,1271,3.46,1272,4.443,1273,5.817]],["title/injectables/LabelsService.html",[47,1.601,301,0.711]],["body/injectables/LabelsService.html",[3,0.118,4,0.118,8,0.105,15,0.574,17,1.033,30,0.176,31,0.233,37,0.879,44,0.92,47,1.822,54,1.179,56,1.036,57,0.016,58,0.401,59,0.255,60,1.036,62,1.386,63,1.526,74,0.693,75,1.322,78,0.948,79,0.551,96,1.358,108,4.149,109,3.851,110,2.17,112,0.118,113,0.233,114,2.16,142,1.748,148,1.972,150,2.14,205,1.493,232,0.916,256,0.008,257,0.008,264,1.035,265,2.21,266,1.074,267,1.981,268,1.671,301,0.81,303,1.091,309,1.091,325,2.011,343,0.856,353,2.37,359,0.891,391,5.062,458,0.891,496,3.875,543,4.795,990,1.878,1007,3.875,1234,4.846,1267,2.638,1270,3.482,1274,2.638,1275,5.3,1276,5.3,1277,5.3,1278,5.3,1279,5.3,1280,5.3,1281,4.472,1282,5.842,1283,4.472,1284,5.842,1285,5.842,1286,5.842,1287,4.472,1288,4.472,1289,4.472,1290,5.842,1291,4.472,1292,4.472,1293,3.044,1294,4.472,1295,3.044,1296,3.044,1297,4.472,1298,3.044,1299,3.044,1300,3.044,1301,3.044,1302,3.044,1303,4.472,1304,3.044,1305,3.044,1306,3.044,1307,4.472,1308,3.044,1309,3.044,1310,3.044,1311,3.044,1312,3.044,1313,3.044,1314,3.044,1315,3.044,1316,2.37,1317,3.044,1318,3.482,1319,4.593,1320,3.044,1321,4.472,1322,3.044,1323,4.472,1324,3.044,1325,3.044,1326,3.044,1327,2.17,1328,3.044,1329,3.044,1330,3.044,1331,3.044,1332,3.044,1333,3.044,1334,3.044,1335,3.044,1336,2.638,1337,3.044,1338,3.044,1339,4.593,1340,3.044,1341,6.506,1342,3.044,1343,6.223,1344,5.3,1345,3.044,1346,3.044,1347,5.3,1348,3.044,1349,5.3,1350,6.223,1351,3.044,1352,3.044,1353,4.472,1354,3.044]],["title/components/LoadingComponent.html",[0,0.741,20,1.351]],["body/components/LoadingComponent.html",[0,1.24,1,1.568,2,2.121,3,0.176,4,0.176,5,1.705,6,1.705,7,1.705,8,0.157,12,1.705,13,3.02,14,3.006,16,2.212,17,1.367,18,2.212,20,2.39,21,4.34,26,2.411,28,2.411,30,0.137,31,0.309,32,1.665,36,4.463,44,0.792,45,3.552,54,0.902,56,0.726,57,0.015,58,0.405,59,0.203,60,0.726,78,1.059,79,0.826,81,3.953,84,1.859,112,0.176,113,0.349,192,1.876,207,1.705,208,2.212,209,1.705,210,2.491,211,1.705,212,1.705,213,1.568,214,2.212,215,1.705,216,1.568,217,1.705,218,1.568,219,1.635,220,2.212,221,1.635,222,1.705,223,1.705,224,1.635,225,1.705,226,1.568,227,1.705,228,1.568,229,1.705,230,1.705,231,1.568,232,0.934,233,1.705,234,1.568,235,1.705,236,1.705,237,1.568,238,1.705,239,1.705,240,1.568,241,1.705,242,1.705,243,1.568,244,1.568,245,1.568,246,1.705,247,1.568,248,1.705,249,1.568,250,1.705,251,1.568,252,1.389,253,1.705,254,1.705,255,1.705,256,0.011,257,0.011,526,2.814,1355,3.953,1356,4.22,1357,6.569,1358,5.918,1359,5.918,1360,4.561,1361,4.561,1362,4.561,1363,5.918]],["title/interfaces/MulticlassInterface.html",[258,0.45,285,1.532]],["body/interfaces/MulticlassInterface.html",[3,0.172,4,0.172,8,0.153,15,0.84,30,0.175,31,0.304,57,0.016,58,0.452,59,0.223,67,1.469,73,1.299,74,0.737,112,0.305,142,1.688,144,1.204,146,1.595,147,1.469,148,2.038,185,1.814,232,1.193,256,0.011,257,0.011,258,0.903,259,1.663,260,1.411,261,1.814,262,1.595,263,1.575,264,1.311,265,1.977,266,1.717,267,1.663,268,1.663,269,1.663,270,1.922,271,1.814,272,1.157,273,1.705,274,1.705,275,1.303,276,1.303,277,1.356,278,1.595,279,1.595,280,1.595,281,1.595,282,1.53,283,1.356,284,2.087,285,2.532,286,1.933,287,2.272,288,1.469,289,2.373,290,1.736,291,1.736,292,1.814,293,1.814,294,1.814,295,1.814,296,2.272,297,2.373,298,2.272,299,1.897,300,1.663]],["title/classes/MulticlassTask.html",[108,2.277,113,0.3]],["body/classes/MulticlassTask.html",[3,0.203,4,0.203,8,0.181,30,0.158,31,0.338,32,2.235,44,0.913,54,1.116,56,0.838,57,0.016,58,0.324,59,0.251,60,0.838,73,1.296,74,0.542,75,1.034,108,3.753,109,2.877,112,0.251,113,0.495,142,1.367,256,0.012,257,0.012,286,1.422,526,3.995,1023,5.855,1327,3.75,1364,4.095,1365,6.515,1366,6.515,1367,4.558,1368,5.259,1369,7.016,1370,4.558,1371,4.558,1372,4.558,1373,4.558,1374,4.558,1375,4.558,1376,4.558]],["title/interfaces/MultilabelInterface.html",[258,0.45,287,1.532]],["body/interfaces/MultilabelInterface.html",[3,0.172,4,0.172,8,0.153,15,0.84,30,0.175,31,0.304,57,0.016,58,0.452,59,0.223,67,1.469,73,1.299,74,0.737,112,0.305,142,1.688,144,1.204,146,1.595,147,1.469,148,2.038,185,1.814,232,1.193,256,0.011,257,0.011,258,0.903,259,1.663,260,1.411,261,1.814,262,1.595,263,1.575,264,1.311,265,1.977,266,1.717,267,1.663,268,1.663,269,1.663,270,1.922,271,1.814,272,1.157,273,1.705,274,1.705,275,1.303,276,1.303,277,1.356,278,1.595,279,1.595,280,1.595,281,1.595,282,1.53,283,1.356,284,2.087,285,2.272,286,1.933,287,2.532,288,1.469,289,2.373,290,1.736,291,1.736,292,1.814,293,1.814,294,1.814,295,1.814,296,2.272,297,2.373,298,2.272,299,1.897,300,1.663]],["title/classes/MultilabelTask.html",[109,2.149,113,0.3]],["body/classes/MultilabelTask.html",[3,0.192,4,0.192,8,0.171,30,0.15,31,0.327,32,2.216,37,1.23,44,0.864,54,1.151,56,1.09,57,0.016,58,0.422,59,0.259,60,1.09,62,1.181,63,1.334,73,1.299,74,0.513,75,0.978,108,2.884,109,3.421,112,0.242,113,0.478,142,1.779,256,0.012,257,0.012,286,1.345,526,3.86,1023,3.874,1327,3.547,1364,3.874,1365,4.311,1366,6.411,1367,4.311,1370,6.411,1371,6.411,1372,5.421,1373,4.311,1374,5.421,1375,4.311,1376,4.311,1377,6.255,1378,6.255,1379,4.975,1380,6.842,1381,4.975,1382,4.975]],["title/injectables/OpenCVService.html",[301,0.711,404,2.424]],["body/injectables/OpenCVService.html",[3,0.06,4,0.101,8,0.053,15,0.292,17,0.785,30,0.047,31,0.137,37,0.515,44,0.269,54,1.018,56,0.979,57,0.016,58,0.379,59,0.223,60,0.979,62,1.133,63,0.724,73,0.821,74,0.35,75,0.668,78,0.608,79,0.28,96,0.691,112,0.06,113,0.118,127,1.342,142,1.16,143,3.46,144,1.623,148,1.259,150,2.444,152,1.614,155,2.988,188,3.696,198,2.535,205,1.252,210,0.555,256,0.006,257,0.005,262,2.09,263,1.394,264,1.081,266,0.629,273,1.306,274,1.169,275,1.586,276,1.417,283,1.718,301,0.474,303,0.555,309,0.555,326,0.66,343,2.103,359,2.157,374,1.627,404,1.614,408,4.788,410,2.638,420,2.638,436,0.898,443,2.67,448,1.729,458,2.188,464,1.206,546,3.182,547,3.182,548,1.866,559,1.104,578,3.182,584,4.673,596,2.422,598,1.866,609,2.267,631,5.328,633,2.267,728,2.267,729,3.46,730,4.196,731,4.196,768,2.038,779,1.729,841,1.206,993,2.038,1070,3.109,1071,3.109,1073,3.77,1075,3.46,1079,2.267,1080,2.267,1091,6.069,1111,1.342,1151,4.022,1175,1.104,1212,5.378,1271,1.206,1318,1.206,1356,1.104,1383,5.262,1384,1.206,1385,3.397,1386,3.993,1387,3.397,1388,3.397,1389,3.397,1390,2.617,1391,2.617,1392,2.617,1393,2.617,1394,2.617,1395,2.617,1396,2.617,1397,2.617,1398,1.549,1399,3.993,1400,2.617,1401,2.617,1402,1.549,1403,2.617,1404,3.993,1405,1.549,1406,2.617,1407,1.549,1408,2.617,1409,1.549,1410,2.617,1411,1.549,1412,2.617,1413,1.549,1414,2.617,1415,1.549,1416,2.617,1417,1.549,1418,2.617,1419,4.462,1420,1.549,1421,2.617,1422,1.549,1423,2.617,1424,1.549,1425,1.549,1426,1.549,1427,2.617,1428,1.549,1429,2.617,1430,1.549,1431,2.617,1432,1.342,1433,3.109,1434,1.206,1435,1.549,1436,1.206,1437,1.549,1438,1.549,1439,2.617,1440,1.549,1441,1.549,1442,2.617,1443,1.549,1444,3.993,1445,6.279,1446,3.397,1447,1.549,1448,3.397,1449,1.549,1450,2.617,1451,1.549,1452,1.549,1453,2.267,1454,2.617,1455,1.549,1456,4.842,1457,1.549,1458,4.842,1459,2.944,1460,2.617,1461,5.917,1462,3.397,1463,2.267,1464,2.617,1465,2.617,1466,3.993,1467,3.397,1468,3.397,1469,1.549,1470,1.549,1471,5.641,1472,1.549,1473,1.549,1474,1.549,1475,1.549,1476,4.219,1477,3.397,1478,1.549,1479,2.617,1480,1.549,1481,1.549,1482,1.549,1483,1.549,1484,1.549,1485,1.549,1486,1.342,1487,2.617,1488,2.617,1489,1.342,1490,2.617,1491,1.549,1492,1.549,1493,1.549,1494,1.549,1495,2.617,1496,1.549,1497,1.549,1498,1.549,1499,1.549,1500,1.023,1501,1.549,1502,3.993,1503,1.549,1504,1.549,1505,1.549,1506,1.549,1507,4.842,1508,3.397,1509,2.617,1510,1.549,1511,4.842,1512,2.617,1513,1.549,1514,1.549,1515,1.549,1516,1.549,1517,2.617,1518,1.549,1519,3.993,1520,3.993,1521,1.342,1522,3.993,1523,2.617,1524,2.617,1525,2.617,1526,5.328,1527,3.397,1528,3.993,1529,3.993,1530,3.993,1531,5.641,1532,1.549,1533,1.549,1534,2.617,1535,2.617,1536,2.617,1537,1.549,1538,1.549,1539,1.549,1540,1.549,1541,1.549,1542,1.549,1543,1.549,1544,1.549,1545,1.549,1546,3.397,1547,1.549,1548,1.549,1549,4.842,1550,4.462,1551,2.617,1552,4.462,1553,2.617,1554,4.462,1555,1.549,1556,3.993,1557,3.993,1558,3.993,1559,2.617,1560,1.549,1561,1.549,1562,1.549,1563,1.549,1564,1.549,1565,1.549,1566,1.549,1567,1.549,1568,1.549,1569,1.549,1570,1.549,1571,1.549,1572,2.617,1573,2.617,1574,2.617,1575,1.549,1576,1.342,1577,1.549,1578,4.462,1579,1.549,1580,1.549,1581,1.549,1582,2.617,1583,2.617,1584,1.549,1585,1.104,1586,1.549,1587,1.549,1588,1.549,1589,1.549,1590,2.617,1591,1.549,1592,1.549,1593,2.617,1594,1.549,1595,1.549,1596,2.617,1597,1.549,1598,2.617,1599,3.993,1600,1.549,1601,2.944,1602,1.549,1603,1.549,1604,1.342,1605,1.342,1606,1.549,1607,1.549,1608,1.549,1609,1.549,1610,1.549,1611,1.549,1612,1.549,1613,2.617,1614,1.549,1615,1.342,1616,2.617,1617,2.617,1618,4.462,1619,2.267,1620,2.617,1621,2.617,1622,1.549,1623,2.617,1624,2.617,1625,3.993,1626,4.462,1627,1.549,1628,1.549,1629,1.549,1630,1.549,1631,1.549,1632,2.617,1633,1.549,1634,2.617,1635,2.617,1636,3.397,1637,3.397,1638,1.549,1639,1.549,1640,1.549,1641,2.617,1642,1.549,1643,1.549,1644,1.549,1645,1.549,1646,1.549,1647,1.342,1648,1.549,1649,1.549,1650,1.549,1651,2.617,1652,1.549,1653,1.549,1654,2.617,1655,1.549,1656,3.397,1657,4.196,1658,1.549,1659,1.549,1660,1.549,1661,1.549,1662,1.549,1663,1.549,1664,1.549,1665,1.549,1666,1.549,1667,1.549,1668,1.342,1669,1.549]],["title/interfaces/Point2D.html",[258,0.45,272,1.021]],["body/interfaces/Point2D.html",[3,0.175,4,0.175,8,0.155,15,0.853,30,0.177,31,0.307,57,0.016,58,0.403,59,0.202,67,1.493,73,1.289,74,0.607,112,0.306,142,1.701,144,1.223,146,1.62,147,1.493,148,2.016,185,1.842,232,1.205,256,0.011,257,0.011,258,0.905,259,1.69,260,1.433,261,1.842,262,1.62,263,1.591,264,1.333,265,1.992,266,1.726,267,1.69,268,1.69,269,1.69,270,1.942,271,1.842,272,1.53,273,2.103,274,2.103,275,1.324,276,1.324,277,1.377,278,1.62,279,1.62,280,1.62,281,1.62,282,1.555,283,1.377,284,2.109,285,2.295,286,1.591,287,2.295,288,1.493,289,2.398,290,1.764,291,1.764,292,1.842,293,1.842,294,1.842,295,1.842,296,2.295,297,2.398,298,2.295,299,1.927,300,1.69]],["title/interfaces/Point2D-1.html",[150,1.128,258,0.376,272,0.853]],["body/interfaces/Point2D-1.html",[3,0.221,4,0.221,8,0.196,30,0.172,31,0.356,57,0.015,59,0.234,112,0.282,256,0.013,257,0.013,258,0.834,260,1.814,263,1.547,264,1.355,272,1.772,273,2.253,274,2.253,275,1.674,276,1.674,277,1.742,278,2.05,279,2.05,280,2.05,281,2.05,304,2.231,1670,4.079]],["title/injectables/PostProcessService.html",[301,0.711,626,2.595]],["body/injectables/PostProcessService.html",[3,0.106,4,0.159,8,0.094,15,0.515,17,0.63,30,0.149,31,0.215,32,1.397,33,2.546,37,0.81,39,3.46,44,0.715,54,1.018,56,0.656,57,0.016,58,0.254,59,0.171,60,0.656,62,1.179,63,0.582,74,0.281,75,0.536,78,1.018,79,0.494,90,1.277,92,1.277,112,0.106,113,0.208,114,2.546,142,0.709,186,1.277,188,3.027,198,1.341,205,1.387,256,0.008,257,0.008,262,0.977,263,1.343,264,1.039,266,0.99,273,0.798,274,0.798,275,1.829,276,1.829,283,1.976,301,0.746,302,3.656,303,0.977,304,2.667,309,0.977,343,1.879,349,1.581,350,1.581,359,2.209,372,3.926,374,2.421,377,3.761,379,3.209,380,4.796,403,2.866,406,3.064,436,1.581,437,2.879,443,1.413,445,4.299,448,3.281,458,2.196,459,4.299,530,2.124,576,1.945,578,1.945,598,4.237,626,2.723,627,4.003,653,2.364,672,2.364,707,3.571,708,2.364,719,3.571,722,3.571,724,2.364,725,2.364,747,4.796,757,2.364,762,3.209,763,4.796,764,3.571,771,2.364,773,5.925,774,6.039,775,5.587,776,5.513,902,2.364,1067,4.286,1084,4.304,1087,1.945,1459,3.571,1521,3.571,1526,4.796,1671,5.925,1672,2.364,1673,4.967,1674,5.534,1675,4.967,1676,5.534,1677,5.534,1678,5.534,1679,5.534,1680,4.304,1681,4.121,1682,2.728,1683,2.728,1684,4.967,1685,6.837,1686,6.837,1687,2.728,1688,6.249,1689,2.728,1690,2.728,1691,2.728,1692,2.728,1693,2.364,1694,5.534,1695,4.967,1696,4.967,1697,4.121,1698,4.121,1699,4.967,1700,2.728,1701,5.942,1702,4.121,1703,2.728,1704,2.364,1705,2.728,1706,2.728,1707,2.728,1708,4.121,1709,5.534,1710,2.728,1711,2.728,1712,4.967,1713,4.121,1714,4.121,1715,4.121,1716,2.728,1717,2.728,1718,2.728,1719,2.728,1720,2.728,1721,2.728,1722,4.121,1723,2.728,1724,2.728,1725,2.728,1726,2.728,1727,2.728,1728,2.728,1729,2.364,1730,2.728,1731,2.728,1732,2.728,1733,2.728,1734,2.728,1735,4.121,1736,4.121,1737,4.121,1738,4.121,1739,2.728,1740,4.121,1741,2.728,1742,2.728,1743,2.728,1744,2.728,1745,2.124,1746,2.728,1747,2.728,1748,2.728,1749,2.728,1750,2.728,1751,2.728,1752,2.728,1753,2.728,1754,2.728,1755,2.728,1756,4.121,1757,2.728,1758,2.728]],["title/interfaces/ProjectConfig.html",[258,0.45,288,1.297]],["body/interfaces/ProjectConfig.html",[3,0.159,4,0.159,8,0.141,15,0.777,30,0.166,31,0.289,57,0.016,58,0.385,59,0.262,67,1.359,73,1.295,74,0.57,112,0.302,142,1.624,144,1.113,146,1.475,147,1.359,148,2.056,185,1.678,232,1.133,256,0.011,257,0.011,258,0.893,259,1.539,260,1.305,261,1.678,262,1.475,263,1.496,264,1.297,265,1.902,266,1.873,267,1.539,268,1.539,269,1.539,270,1.826,271,1.678,272,1.07,273,1.619,274,1.619,275,1.205,276,1.205,277,1.254,278,1.475,279,1.475,280,1.475,281,1.475,282,1.416,283,1.254,284,1.982,285,2.604,286,1.496,287,2.604,288,1.826,289,2.838,290,2.604,291,2.604,292,2.721,293,2.721,294,2.721,295,2.721,296,2.717,297,2.838,298,2.717,299,1.754,300,1.539]],["title/components/ProjectConfigurationComponent.html",[0,0.741,243,1.351]],["body/components/ProjectConfigurationComponent.html",[0,0.857,1,0.813,2,1.323,3,0.092,4,0.092,5,0.884,6,0.884,7,0.884,8,0.176,10,1.913,12,0.884,13,2.79,14,2.756,16,1.38,17,1.625,18,1.38,20,0.813,21,3.002,26,1.505,28,1.505,30,0.071,31,0.193,32,1.661,34,2.794,37,0.726,39,2.126,44,0.641,46,2.739,47,2.269,48,3.538,49,3.168,50,3.538,51,3.998,54,1.106,56,0.818,57,0.016,58,0.413,59,0.23,60,0.818,62,1.237,63,1.398,73,0.94,74,0.529,75,1.343,78,1.164,79,0.428,84,1.505,85,1.293,86,1.459,87,1.562,88,1.842,89,1.225,91,3.586,92,1.728,93,1.459,94,2.049,96,1.055,112,0.092,113,0.392,114,1.505,131,2.049,132,1.842,141,2.049,142,0.615,144,1.229,146,0.847,147,0.781,148,0.615,150,0.813,182,2.049,186,1.107,192,1.171,198,2.234,199,3.661,207,0.884,208,1.38,209,0.884,210,1.84,211,0.884,212,0.884,213,0.813,214,1.38,215,0.884,216,0.813,217,0.884,218,2.029,219,1.84,220,1.38,221,0.847,222,0.884,223,0.884,224,0.847,225,0.884,226,0.813,227,0.884,228,0.813,229,0.884,230,0.884,231,0.813,232,0.931,233,0.884,234,0.813,235,0.884,236,0.884,237,1.765,238,0.884,239,0.884,240,0.813,241,0.884,242,0.884,243,1.765,244,2.448,245,0.813,246,0.884,247,0.813,248,0.884,249,0.813,250,0.884,251,0.813,252,0.72,253,0.884,254,0.884,255,0.884,256,0.007,257,0.007,265,1.696,266,1.533,314,3.24,359,1.33,374,0.964,458,1.081,479,5.7,480,1.842,481,1.842,482,3.24,483,2.634,484,3.24,485,3.937,486,3.24,489,3.937,490,3.538,491,3.2,492,3.2,520,1.293,521,2.049,522,1.686,523,1.842,524,2.049,752,3.2,779,2.44,868,3.24,869,2.803,870,2.803,879,3.392,881,1.562,893,1.459,910,3.538,923,1.842,933,3.2,941,3.2,976,3.68,1175,1.686,1197,1.562,1199,3.24,1212,3.24,1214,1.686,1219,3.937,1222,3.538,1251,2.049,1356,2.633,1476,2.876,1745,2.876,1759,6.343,1760,4.543,1761,4.543,1762,4.543,1763,4.543,1764,4.543,1765,4.543,1766,5.135,1767,3.693,1768,5.135,1769,3.693,1770,5.135,1771,5.135,1772,3.693,1773,4.45,1774,3.693,1775,2.365,1776,3.693,1777,2.365,1778,2.365,1779,3.693,1780,2.365,1781,2.365,1782,2.365,1783,2.365,1784,3.693,1785,2.365,1786,2.365,1787,2.365,1788,2.365,1789,2.365,1790,2.365,1791,2.365,1792,2.365,1793,6.38,1794,2.049,1795,2.049,1796,1.842,1797,1.842,1798,2.633,1799,2.365,1800,2.365,1801,2.365,1802,2.365,1803,4.543,1804,4.543,1805,4.543,1806,2.365,1807,3.693,1808,2.365,1809,3.693,1810,3.693,1811,2.365,1812,2.365,1813,2.365,1814,2.365,1815,2.365,1816,2.365,1817,2.365,1818,2.365,1819,3.693,1820,3.693,1821,3.693,1822,3.693,1823,3.693,1824,4.45,1825,3.693,1826,3.693,1827,5.135,1828,5.135,1829,5.135,1830,5.135,1831,3.2,1832,3.693]],["title/interfaces/ProjectFile.html",[258,0.45,300,1.468]],["body/interfaces/ProjectFile.html",[3,0.175,4,0.175,8,0.155,15,1.308,30,0.177,31,0.307,57,0.016,58,0.403,59,0.202,67,1.493,73,1.297,74,0.607,112,0.306,142,1.701,144,1.223,146,1.62,147,1.493,148,2.016,185,1.842,232,1.205,256,0.011,257,0.011,258,0.905,259,1.69,260,1.433,261,1.842,262,1.62,263,1.591,264,1.314,265,1.992,266,1.726,267,1.69,268,1.69,269,1.69,270,1.942,271,1.842,272,1.176,273,1.722,274,1.722,275,1.324,276,1.324,277,1.377,278,1.62,279,1.62,280,1.62,281,1.62,282,1.555,283,1.377,284,2.109,285,2.295,286,1.591,287,2.295,288,1.493,289,2.927,290,1.764,291,1.764,292,1.842,293,1.842,294,1.842,295,1.842,296,2.295,297,2.398,298,2.295,299,1.927,300,2.199]],["title/injectables/ProjectService.html",[34,1.674,301,0.711]],["body/injectables/ProjectService.html",[3,0.09,4,0.09,8,0.125,15,0.687,17,1.174,30,0.153,31,0.19,34,1.551,36,3.395,37,0.716,39,3.538,41,3.89,44,0.632,45,1.807,46,2.208,47,2.071,54,1.17,56,0.933,57,0.016,58,0.391,59,0.258,60,0.933,62,1.259,63,0.776,73,1.198,74,0.758,75,1.423,78,1.036,79,0.42,87,1.533,88,1.807,91,2.455,92,1.703,93,1.432,96,1.036,108,2.109,109,1.99,110,1.655,112,0.09,113,0.177,114,1.483,134,1.655,142,0.946,144,0.628,146,0.832,147,0.766,148,1.822,150,1.251,186,2.866,196,3.154,199,1.655,205,1.447,256,0.007,257,0.007,264,1.018,265,1.108,266,1.66,269,0.867,270,1.678,286,0.984,288,2.244,289,1.483,290,0.905,291,0.905,292,0.946,293,0.946,294,0.946,295,0.946,296,0.905,297,0.946,298,0.905,300,2.063,301,0.659,303,0.832,309,0.832,343,1.024,349,1.345,350,1.345,359,1.314,372,3.358,374,2.77,458,0.679,528,1.807,543,1.655,564,2.109,751,2.011,762,3.496,779,1.533,904,3.154,915,3.154,924,1.655,925,2.011,946,2.011,967,2.011,972,2.011,976,2.966,1015,2.011,1017,2.011,1025,2.011,1029,2.011,1051,2.011,1151,1.655,1175,1.655,1270,1.807,1318,1.807,1319,2.011,1336,2.011,1339,2.011,1356,1.655,1773,4.404,1798,1.655,1831,4.404,1833,2.011,1834,4.489,1835,4.489,1836,4.489,1837,4.489,1838,4.489,1839,4.489,1840,4.489,1841,4.489,1842,4.489,1843,4.489,1844,4.489,1845,5.083,1846,4.489,1847,3.639,1848,3.639,1849,5.083,1850,4.489,1851,5.083,1852,3.639,1853,3.639,1854,5.083,1855,3.639,1856,3.639,1857,2.321,1858,3.639,1859,2.321,1860,2.321,1861,2.321,1862,2.321,1863,2.321,1864,3.639,1865,2.321,1866,3.639,1867,2.321,1868,3.639,1869,2.321,1870,2.321,1871,2.321,1872,2.321,1873,2.321,1874,2.321,1875,3.639,1876,2.321,1877,3.639,1878,2.321,1879,2.321,1880,2.321,1881,2.321,1882,2.321,1883,2.321,1884,2.321,1885,3.639,1886,2.321,1887,2.321,1888,3.639,1889,2.321,1890,2.321,1891,2.321,1892,1.807,1893,1.807,1894,3.639,1895,2.321,1896,2.321,1897,5.857,1898,2.321,1899,3.639,1900,2.321,1901,2.321,1902,4.489,1903,2.321,1904,3.639,1905,4.489,1906,5.857,1907,3.639,1908,3.639,1909,3.639,1910,3.639,1911,2.321,1912,2.321,1913,2.321,1914,2.321,1915,2.321,1916,2.321,1917,2.321,1918,2.321,1919,2.321,1920,2.321,1921,3.639,1922,2.321,1923,2.321,1924,3.639,1925,3.639,1926,3.639,1927,2.321,1928,2.321,1929,2.321,1930,2.321,1931,2.321,1932,2.321,1933,2.321,1934,2.321,1935,2.321,1936,2.321,1937,2.321,1938,2.321,1939,2.321,1940,3.639,1941,3.639,1942,2.321,1943,2.321,1944,2.011,1945,5.083,1946,3.639,1947,2.321,1948,2.321,1949,2.321,1950,3.639,1951,2.011,1952,2.321,1953,2.321,1954,2.321,1955,2.321,1956,2.321,1957,2.011,1958,2.321,1959,2.321,1960,2.321,1961,2.321,1962,2.321,1963,2.321,1964,2.321,1965,2.321,1966,2.321,1967,2.321,1968,2.321,1969,2.321,1970,2.321,1971,2.321,1972,2.321,1973,3.639,1974,2.321,1975,2.321,1976,2.321,1977,2.321,1978,3.639,1979,2.321]],["title/interfaces/Rect.html",[258,0.45,263,1.062]],["body/interfaces/Rect.html",[3,0.171,4,0.171,8,0.152,15,0.836,30,0.175,31,0.303,57,0.016,58,0.399,59,0.236,67,1.463,73,1.286,74,0.599,112,0.305,142,1.684,144,1.199,146,1.588,147,1.463,148,2.009,185,1.806,232,1.19,256,0.011,257,0.011,258,0.902,259,1.656,260,1.405,261,1.806,262,1.588,263,1.752,264,1.343,265,1.973,266,1.715,267,1.656,268,1.656,269,1.656,270,1.917,271,1.806,272,1.152,273,2.089,274,2.089,275,2.012,276,2.012,277,1.35,278,1.588,279,1.588,280,1.588,281,1.588,282,1.524,283,1.35,284,2.081,285,2.265,286,1.571,287,2.265,288,1.463,289,2.367,290,1.729,291,1.729,292,1.806,293,1.806,294,1.806,295,1.806,296,2.265,297,2.367,298,2.265,299,1.889,300,1.656]],["title/interfaces/Rect-1.html",[150,1.128,258,0.376,263,0.888]],["body/interfaces/Rect-1.html",[3,0.216,4,0.216,8,0.192,30,0.168,31,0.35,57,0.015,59,0.257,112,0.279,256,0.013,257,0.013,258,0.825,260,1.768,263,1.815,264,1.362,272,1.45,273,2.237,274,2.237,275,2.187,276,2.187,277,1.699,278,1.999,279,1.999,280,1.999,281,1.999,304,2.176,1670,3.978]],["title/components/SVGElementsComponent.html",[0,0.741,245,1.351]],["body/components/SVGElementsComponent.html",[0,1.135,1,1.315,2,1.885,3,0.148,4,0.148,5,1.429,6,1.429,7,1.429,8,0.131,12,1.429,13,2.969,14,2.951,16,1.966,17,1.215,18,1.966,20,1.315,26,2.144,28,2.144,30,0.115,31,0.275,32,2.136,33,3.064,37,1.035,44,0.664,46,3.185,47,2.767,54,1.116,56,0.838,57,0.016,58,0.399,59,0.251,60,0.838,62,0.722,63,0.816,73,0.838,74,0.394,75,0.752,78,1.095,79,0.693,84,1.559,89,1.981,90,1.79,96,1.707,112,0.148,113,0.292,192,1.668,198,2.587,207,1.429,208,1.966,209,1.429,210,2.321,211,1.429,212,1.429,213,1.315,214,1.966,215,1.429,216,1.315,217,1.429,218,1.315,219,1.371,220,1.966,221,1.371,222,1.429,223,1.429,224,1.371,225,1.429,226,1.315,227,1.429,228,1.315,229,1.429,230,1.429,231,1.315,232,0.783,233,1.429,234,1.315,235,1.429,236,1.429,237,1.315,238,1.429,239,1.429,240,1.315,241,1.429,242,1.429,243,1.315,244,1.315,245,2.227,246,1.429,247,1.315,248,1.429,249,1.315,250,1.429,251,1.315,252,1.165,253,1.429,254,1.429,255,1.429,256,0.01,257,0.01,263,1.752,272,0.995,277,1.602,302,4.486,304,2.898,316,3.246,319,4.288,437,2.217,486,4.288,501,2.979,526,2.36,627,4.639,1059,5.211,1213,3.315,1680,5.885,1980,3.315,1981,5.261,1982,5.261,1983,5.261,1984,5.261,1985,6.014,1986,5.261,1987,3.825,1988,5.261,1989,3.825,1990,3.825,1991,3.825,1992,3.825,1993,3.825,1994,5.261,1995,3.825,1996,3.825,1997,3.825,1998,3.825,1999,3.825,2000,3.825,2001,3.825,2002,3.825]],["title/injectables/SVGUIService.html",[301,0.711,627,2.424]],["body/injectables/SVGUIService.html",[3,0.207,4,0.207,8,0.184,15,1.01,30,0.161,31,0.342,37,1.287,44,1.227,54,1.151,56,0.852,57,0.016,58,0.33,59,0.225,60,0.852,62,1.334,63,1.395,73,1.042,74,0.551,75,1.052,78,0.997,79,0.968,91,2.926,112,0.207,113,0.409,256,0.012,257,0.012,272,1.964,301,1.185,303,1.917,304,2.998,309,1.917,627,4.037,664,3.534,1585,3.814,2003,4.636,2004,7.069,2005,6.543,2006,7.365,2007,7.069,2008,6.543,2009,5.349,2010,5.349,2011,5.349,2012,5.349,2013,5.349]],["title/interfaces/SegInstance.html",[258,0.45,267,1.468]],["body/interfaces/SegInstance.html",[3,0.173,4,0.173,8,0.154,15,0.845,30,0.176,31,0.305,57,0.016,58,0.401,59,0.224,67,1.478,73,1.292,74,0.603,112,0.305,142,1.909,144,1.211,146,1.604,147,1.478,148,2.013,185,1.824,232,1.467,256,0.011,257,0.011,258,0.904,259,1.673,260,1.419,261,1.824,262,1.604,263,1.581,264,1.323,265,2.181,266,1.72,267,2.185,268,2.579,269,1.673,270,1.93,271,1.824,272,1.164,273,1.711,274,1.711,275,1.31,276,1.31,277,1.363,278,1.604,279,1.604,280,1.604,281,1.604,282,1.539,283,1.363,284,2.095,285,2.28,286,1.581,287,2.28,288,1.478,289,2.382,290,1.746,291,1.746,292,1.824,293,1.824,294,1.824,295,1.824,296,2.28,297,2.382,298,2.28,299,1.908,300,1.673]],["title/interfaces/SegLabel.html",[258,0.45,265,1.196]],["body/interfaces/SegLabel.html",[3,0.171,4,0.171,8,0.151,15,0.832,30,0.174,31,0.302,57,0.016,58,0.398,59,0.236,67,1.455,73,1.298,74,0.596,112,0.305,142,1.901,144,1.855,146,2.458,147,2.264,148,2.035,185,1.796,232,1.185,256,0.011,257,0.011,258,0.902,259,1.647,260,1.397,261,1.796,262,1.579,263,1.565,264,1.309,265,2.089,266,1.791,267,1.647,268,1.647,269,1.647,270,1.91,271,1.796,272,1.146,273,1.694,274,1.694,275,1.29,276,1.29,277,1.342,278,1.579,279,1.579,280,1.579,281,1.579,282,1.515,283,1.342,284,2.074,285,2.257,286,1.565,287,2.257,288,1.455,289,2.358,290,1.719,291,1.719,292,1.796,293,1.796,294,1.796,295,1.796,296,2.257,297,2.358,298,2.257,299,1.878,300,1.647]],["title/classes/StampMaker.html",[113,0.3,558,2.595]],["body/classes/StampMaker.html",[3,0.141,4,0.141,8,0.125,30,0.109,31,0.265,37,0.999,44,1.016,54,1.053,56,1.01,57,0.016,58,0.391,59,0.237,60,1.01,62,1.196,63,1.084,73,1.129,74,0.375,112,0.141,113,0.278,144,2.13,148,0.946,150,1.251,152,3.613,155,2.109,189,2.594,205,1.533,256,0.01,257,0.01,258,0.417,264,1.288,273,1.855,274,1.065,286,0.984,343,1.024,359,2.222,420,2.404,443,1.884,458,1.487,545,2.594,546,5.158,547,5.158,548,5.308,549,2.594,550,4.56,551,4.56,552,3.957,553,2.833,554,2.594,555,2.833,556,3.957,557,2.833,558,3.357,559,4.176,560,2.833,561,5.454,562,3.153,563,4.404,564,2.946,565,5.075,566,3.153,567,5.075,568,3.153,569,4.56,570,3.153,571,3.153,572,3.153,573,3.153,574,3.153,575,3.153,576,4.176,577,3.153,578,2.594,579,3.153,580,3.153,581,3.153,582,3.153,583,3.153,584,5.38,585,4.404,586,3.153,587,4.404,588,3.153,589,3.153,590,3.153,591,4.404,592,4.404,593,3.153,594,2.833,595,2.833,596,2.594,597,3.153,598,5.158,599,3.153,600,4.404,601,2.833,2014,5.082,2015,5.082,2016,5.082,2017,5.082,2018,5.082,2019,3.638,2020,3.638,2021,3.638,2022,3.638,2023,3.638,2024,3.638,2025,5.082,2026,3.638,2027,3.638]],["title/injectables/StateManagerService.html",[301,0.711,403,2.034]],["body/injectables/StateManagerService.html",[3,0.115,4,0.115,8,0.102,15,0.563,30,0.09,31,0.23,32,2.202,33,2.632,37,0.866,44,0.518,54,1.176,56,0.983,57,0.016,58,0.38,59,0.254,60,0.983,62,1.364,63,1.463,74,0.707,75,1.349,78,0.798,79,0.54,90,1.396,112,0.115,113,0.228,150,2.562,152,2.718,179,2.323,205,1.163,256,0.008,257,0.008,264,1.229,266,1.483,272,1.988,273,2.213,274,2.213,275,1.956,276,2.05,301,0.798,303,1.069,304,3.023,306,2.127,309,1.069,326,1.271,359,0.873,374,2.515,403,2.282,412,2.585,430,2.585,433,2.585,435,2.585,458,1.956,664,1.971,969,6.035,1058,5.013,1087,2.127,1585,4.401,2028,5.238,2029,5.238,2030,5.238,2031,5.238,2032,5.238,2033,5.238,2034,5.785,2035,5.785,2036,5.785,2037,5.785,2038,5.785,2039,5.785,2040,5.785,2041,4.405,2042,4.405,2043,4.405,2044,4.405,2045,4.405,2046,2.983,2047,2.983,2048,2.983,2049,2.983,2050,2.983,2051,2.983,2052,2.983,2053,4.405,2054,2.983,2055,4.405,2056,2.983,2057,4.405,2058,4.405,2059,2.983,2060,2.983,2061,2.983,2062,6.459,2063,2.983,2064,2.983,2065,4.405,2066,4.405,2067,2.983,2068,2.983,2069,4.405,2070,4.405,2071,2.983,2072,2.983,2073,2.983,2074,2.983,2075,2.983,2076,2.983,2077,5.348,2078,2.983,2079,3.818,2080,2.983,2081,3.818,2082,2.983,2083,3.818,2084,2.983,2085,2.983,2086,4.405,2087,4.405,2088,2.983,2089,2.983,2090,2.983]],["title/components/TestingComponent.html",[0,0.741,247,1.351]],["body/components/TestingComponent.html",[0,1.281,1,1.681,2,2.217,3,0.189,4,0.189,5,1.827,6,1.827,7,1.827,8,0.168,12,1.827,13,3.038,14,3.026,16,2.312,17,1.429,18,1.827,20,1.681,26,2.521,28,2.521,57,0.015,58,0.381,78,0.745,79,0.885,112,0.189,113,0.374,192,1.961,207,1.827,208,2.312,209,1.827,210,2.556,211,1.827,212,1.827,213,1.681,214,2.312,215,1.827,216,1.681,217,1.827,218,1.681,219,1.752,220,2.312,221,1.752,222,1.827,223,1.827,224,1.752,225,1.827,226,1.681,227,1.827,228,1.681,229,1.827,230,1.827,231,1.681,232,1.001,233,1.827,234,1.681,235,1.827,236,1.827,237,1.681,238,1.827,239,1.827,240,1.681,241,1.827,242,1.827,243,1.681,244,1.681,245,1.681,246,1.827,247,2.453,248,1.827,249,1.681,250,1.827,251,1.681,252,1.489,253,1.827,254,1.827,255,1.827,256,0.012,257,0.012,1190,5.362,2091,4.237,2092,6.788,2093,6.187,2094,6.187,2095,4.889,2096,4.889]],["title/interfaces/Thumbnail.html",[258,0.45,269,1.468]],["body/interfaces/Thumbnail.html",[3,0.175,4,0.175,8,0.155,15,0.853,30,0.177,31,0.307,57,0.016,58,0.454,59,0.202,67,1.493,73,1.289,74,0.607,112,0.306,142,1.701,144,1.223,146,1.62,147,1.493,148,2.016,185,1.842,232,1.205,256,0.011,257,0.011,258,0.905,259,1.69,260,1.433,261,1.842,262,1.62,263,1.591,264,1.314,265,1.992,266,1.726,267,1.69,268,1.69,269,2.199,270,2.431,271,2.823,272,1.176,273,1.722,274,1.722,275,1.324,276,1.324,277,1.377,278,1.62,279,1.62,280,1.62,281,1.62,282,1.555,283,1.377,284,2.109,285,2.295,286,1.591,287,2.295,288,1.493,289,2.398,290,1.764,291,1.764,292,1.842,293,1.842,294,1.842,295,1.842,296,2.295,297,2.398,298,2.295,299,1.927,300,1.69]],["title/classes/Tool.html",[113,0.3,252,1.196]],["body/classes/Tool.html",[3,0.183,4,0.183,8,0.163,30,0.142,31,0.316,32,2.253,44,0.822,54,1.074,56,0.754,57,0.015,58,0.473,59,0.242,60,0.754,73,1.245,97,2.744,112,0.273,113,0.463,178,3.128,252,1.846,256,0.012,257,0.012,264,1.212,286,1.28,343,2.05,359,1.386,364,4.814,667,2.744,741,3.376,743,3.376,844,4.322,849,3.686,857,3.686,860,3.686,861,3.686,862,3.686,2097,3.128,2098,6.568,2099,5.253,2100,6.061,2101,4.734,2102,4.734,2103,4.102,2104,4.102,2105,4.102,2106,6.46,2107,5.253,2108,4.102,2109,6.772,2110,4.102,2111,4.102,2112,5.253,2113,4.102,2114,4.102,2115,6.109,2116,4.102,2117,5.794,2118,4.102,2119,5.253,2120,4.102,2121,4.102,2122,4.102,2123,4.102,2124,4.102,2125,4.322,2126,4.72,2127,3.128]],["title/components/ToolSettingComponent.html",[0,0.741,251,1.351]],["body/components/ToolSettingComponent.html",[0,1.046,1,1.132,2,1.697,3,0.127,4,0.127,5,1.231,6,1.231,7,1.231,8,0.113,12,1.231,13,2.92,14,2.897,16,1.77,17,1.094,18,1.77,20,1.132,21,3.663,26,1.929,28,1.929,30,0.099,31,0.247,32,2.02,33,2.617,34,3.105,44,0.822,54,1.019,56,0.525,57,0.016,58,0.342,59,0.208,60,0.525,74,0.488,75,0.931,78,1.163,79,0.596,84,1.342,85,1.801,90,1.541,97,3.214,98,3.129,112,0.127,113,0.252,188,2.59,192,1.501,207,1.231,208,1.77,209,1.231,210,2.172,211,1.231,212,1.231,213,1.132,214,1.77,215,1.231,216,1.132,217,1.231,218,1.132,219,1.18,220,1.77,221,1.18,222,1.231,223,1.231,224,1.18,225,1.231,226,1.132,227,1.231,228,1.132,229,1.231,230,1.231,231,1.132,232,0.675,233,1.231,234,1.132,235,1.231,236,1.231,237,2.084,238,1.231,239,1.231,240,1.132,241,1.231,242,1.231,243,1.132,244,1.132,245,1.132,246,1.231,247,1.132,248,1.231,249,1.132,250,1.231,251,2.084,252,2.098,253,2.072,254,1.231,255,1.231,256,0.009,257,0.009,464,4.721,483,3.214,520,1.801,522,2.349,561,3.377,601,3.688,602,4.005,670,3.377,697,4.104,698,3.377,768,3.688,779,3.129,869,3.421,870,3.421,893,2.032,910,4.318,923,2.565,1067,4.243,1068,2.565,1070,3.688,1071,3.688,1073,3.688,1110,5.207,1151,3.377,1197,2.176,1199,3.954,1214,2.349,1220,4.318,1221,4.318,1222,4.318,1252,2.565,1254,2.565,1463,4.104,1486,4.104,1489,4.104,1619,4.104,1693,2.854,1729,4.104,1796,2.565,1797,2.565,1824,4.104,2127,4.418,2128,5.971,2129,5.971,2130,2.854,2131,5.545,2132,4.736,2133,4.736,2134,6.423,2135,5.545,2136,3.294,2137,4.736,2138,3.294,2139,3.294,2140,3.294,2141,3.294,2142,3.294,2143,4.736,2144,7.051,2145,4.736,2146,4.736,2147,5.254,2148,4.736,2149,4.736,2150,4.736,2151,6.063,2152,4.736,2153,4.736,2154,4.736,2155,6.063,2156,6.063,2157,4.736,2158,4.736,2159,4.736,2160,4.736,2161,4.104,2162,4.736,2163,4.736,2164,4.736,2165,4.104,2166,4.736,2167,4.736]],["title/components/ToolbarComponent.html",[0,0.741,249,1.351]],["body/components/ToolbarComponent.html",[0,1.128,1,1.301,2,1.871,3,0.146,4,0.146,5,1.414,6,1.414,7,1.414,8,0.13,10,2.704,11,4.656,12,1.414,13,2.966,14,2.947,16,1.951,17,1.206,18,1.951,19,5.181,20,1.301,25,5.181,26,2.128,28,2.128,30,0.114,31,0.273,32,1.682,33,3.02,37,1.027,43,5.587,44,0.906,50,4.656,51,5.02,54,0.982,56,0.603,57,0.016,58,0.368,59,0.179,60,0.603,62,0.714,63,1.113,74,0.39,75,0.744,78,1.187,79,0.685,80,3.279,84,1.542,86,2.335,90,1.771,98,2.5,111,3.279,112,0.146,113,0.289,114,1.542,132,2.946,188,2.856,192,1.655,207,1.414,208,1.951,209,1.414,210,2.31,211,1.414,212,1.414,213,2.216,214,1.951,215,1.414,216,2.216,217,1.414,218,1.301,219,1.356,220,1.951,221,1.356,222,1.414,223,1.414,224,1.356,225,1.414,226,1.301,227,1.414,228,1.301,229,1.414,230,1.414,231,1.301,232,0.775,233,1.414,234,1.301,235,1.414,236,1.414,237,2.216,238,1.414,239,1.414,240,1.301,241,1.414,242,1.414,243,1.301,244,1.301,245,1.301,246,1.414,247,1.301,248,1.414,249,2.216,250,1.414,251,1.301,252,1.152,253,1.414,254,1.414,255,1.414,256,0.01,257,0.01,483,3.466,484,4.263,520,2.069,667,3.737,670,3.723,698,3.723,869,3.689,870,3.689,893,2.335,990,3.222,1087,2.698,1197,2.5,1199,4.263,1214,2.698,1220,4.656,1221,4.656,1252,2.946,1254,2.946,1453,4.525,1796,2.946,1797,2.946,2168,3.279,2169,5.222,2170,5.222,2171,5.222,2172,5.222,2173,3.784,2174,3.784,2175,5.222,2176,3.784,2177,3.784,2178,5.222,2179,5.222,2180,5.222,2181,5.222,2182,5.222,2183,4.525,2184,5.222]],["title/classes/Tools.html",[113,0.3,667,2.277]],["body/classes/Tools.html",[3,0.171,4,0.171,8,0.152,30,0.133,31,0.302,32,2.152,54,1.115,57,0.015,58,0.398,59,0.152,73,1.093,74,0.754,75,1.438,97,2.558,112,0.266,113,0.443,178,2.916,252,1.344,256,0.011,257,0.011,264,0.963,286,1.194,343,2.172,359,1.292,364,3.826,667,3.357,741,3.147,743,3.147,844,4.13,849,4.51,857,4.51,860,4.51,861,4.51,862,4.51,2097,2.916,2098,5.603,2099,3.825,2103,3.825,2104,3.825,2105,3.825,2106,6.948,2107,6.177,2108,5.019,2109,6.982,2110,5.019,2111,5.019,2112,6.177,2113,5.019,2114,5.019,2115,6.63,2116,5.019,2117,6.461,2118,5.019,2119,5.948,2120,5.603,2121,5.019,2122,5.019,2123,5.603,2124,3.825,2125,4.13,2126,4.51,2127,2.916,2185,4.413,2186,4.413,2187,4.413,2188,4.413,2189,4.413,2190,4.413]],["title/interfaces/UndoRedoCanvasElement.html",[258,0.45,282,1.351]],["body/interfaces/UndoRedoCanvasElement.html",[3,0.174,4,0.174,8,0.154,15,0.848,30,0.216,31,0.306,57,0.016,58,0.402,59,0.201,67,1.484,73,1.288,74,0.604,112,0.305,142,1.696,144,1.216,146,1.611,147,1.484,148,2.014,185,1.832,232,1.201,256,0.011,257,0.011,258,0.904,259,1.68,260,1.425,261,1.832,262,1.611,263,1.586,264,1.324,265,1.987,266,1.723,267,1.68,268,1.68,269,1.68,270,1.935,271,1.832,272,1.169,273,1.716,274,1.716,275,1.316,276,1.316,277,1.369,278,1.611,279,1.611,280,1.611,281,1.611,282,2.016,283,2.106,284,2.635,285,2.287,286,1.586,287,2.287,288,1.484,289,2.389,290,1.754,291,1.754,292,1.832,293,1.832,294,1.832,295,1.832,296,2.287,297,2.389,298,2.287,299,1.916,300,1.68]],["title/injectables/UndoRedoService.html",[301,0.711,625,2.801]],["body/injectables/UndoRedoService.html",[3,0.139,4,0.139,8,0.124,15,0.68,17,1.457,30,0.212,31,0.263,32,1.937,33,2.881,37,0.992,44,0.876,46,2.864,47,2.571,54,1.049,56,0.573,57,0.016,58,0.222,59,0.217,60,0.573,62,1.191,63,1.242,74,0.371,75,1.145,78,1.077,79,0.652,89,1.865,90,1.685,112,0.139,113,0.275,114,2.571,150,1.238,186,1.685,192,2,205,1.4,256,0.01,257,0.01,270,1.922,283,2.197,284,2.533,301,0.913,303,1.29,304,2.758,309,1.29,343,1.419,346,1.865,359,2.112,377,3.991,403,3.268,406,3.593,410,4.169,436,2.087,437,2.924,443,1.865,445,3.893,448,3.333,458,2.069,459,3.893,469,2.568,605,4.535,625,3.597,668,3.893,675,3.928,677,3.928,721,3.12,802,4.169,1032,3.12,1040,4.372,1500,4.169,2191,6.127,2192,3.12,2193,6.31,2194,3.601,2195,5.045,2196,3.601,2197,3.601,2198,3.601,2199,3.601,2200,5.823,2201,5.045,2202,2.222,2203,3.601,2204,3.601,2205,3.601,2206,3.601,2207,3.601,2208,3.601,2209,3.601,2210,3.601,2211,5.045,2212,5.045,2213,5.045,2214,5.045,2215,5.045,2216,5.045,2217,5.045,2218,5.045,2219,3.601,2220,3.601,2221,3.601,2222,5.045,2223,3.601,2224,3.601,2225,3.601,2226,3.601,2227,3.601,2228,3.601,2229,3.601,2230,5.045,2231,3.601,2232,3.601,2233,3.601]],["title/classes/UndoRedoStack.html",[113,0.3,2234,2.424]],["body/classes/UndoRedoStack.html",[3,0.178,4,0.178,8,0.158,30,0.138,31,0.31,37,1.169,54,1.127,56,0.732,57,0.016,58,0.283,59,0.226,60,0.732,62,1.316,63,1.268,74,0.613,75,1.169,78,0.7,112,0.255,113,0.504,192,2.345,205,1.641,256,0.011,257,0.011,258,0.526,282,2.673,286,1.243,343,2.031,359,1.929,458,1.74,564,3.447,668,4.301,802,4.605,1500,4.886,2202,2.835,2234,4.068,2235,3.036,2236,5.133,2237,5.133,2238,4.63,2239,4.77,2240,4.595,2241,4.77,2242,4.595,2243,4.595,2244,5.428,2245,4.595,2246,4.595,2247,4.595,2248,4.24,2249,4.63,2250,4.63,2251,4.63,2252,4.63,2253,4.63,2254,4.63,2255,3.578,2256,3.578,2257,4.63,2258,3.578,2259,3.578,2260,3.578,2261,4.63,2262,3.578,2263,4.63,2264,3.578]],["title/injectables/ViewService.html",[36,2.277,301,0.711]],["body/injectables/ViewService.html",[3,0.184,4,0.184,8,0.163,15,0.896,30,0.143,31,0.317,36,3.52,37,1.194,44,0.824,54,1.17,56,0.967,57,0.016,58,0.374,59,0.25,60,0.967,62,1.332,63,1.428,73,1.162,74,0.69,75,1.317,78,0.925,79,0.86,83,3.698,112,0.184,113,0.363,205,1.348,256,0.012,257,0.012,264,1.01,266,1.753,301,1.099,303,1.701,309,1.701,326,2.023,374,2.728,935,5.263,1944,4.115,2265,4.115,2266,6.696,2267,6.696,2268,6.696,2269,7.058,2270,7.058,2271,7.058,2272,6.073,2273,4.748,2274,6.465,2275,6.073,2276,4.748,2277,4.748,2278,4.748,2279,6.073,2280,7.058,2281,4.748,2282,6.073,2283,4.748,2284,4.748,2285,6.073,2286,6.073,2287,4.748,2288,4.748,2289,4.748]],["title/interfaces/Viewbox.html",[258,0.45,277,1.196]],["body/interfaces/Viewbox.html",[3,0.171,4,0.171,8,0.152,15,0.836,30,0.175,31,0.303,57,0.016,58,0.399,59,0.236,67,1.463,73,1.286,74,0.599,112,0.305,142,1.684,144,1.199,146,1.588,147,1.463,148,2.009,185,1.806,232,1.19,256,0.011,257,0.011,258,0.902,259,1.656,260,1.405,261,1.806,262,1.588,263,1.571,264,1.343,265,1.973,266,1.715,267,1.656,268,1.656,269,1.656,270,1.917,271,1.806,272,1.152,273,1.7,274,1.7,275,1.297,276,1.297,277,1.769,278,2.464,279,2.464,280,2.464,281,2.464,282,1.524,283,1.35,284,2.081,285,2.265,286,1.571,287,2.265,288,1.463,289,2.367,290,1.729,291,1.729,292,1.806,293,1.806,294,1.806,295,1.806,296,2.265,297,2.367,298,2.265,299,1.889,300,1.656]],["title/interfaces/Viewbox-1.html",[150,1.128,258,0.376,277,1]],["body/interfaces/Viewbox-1.html",[3,0.216,4,0.216,8,0.192,30,0.168,31,0.35,57,0.015,59,0.257,112,0.279,256,0.013,257,0.013,258,0.825,260,1.768,263,1.509,264,1.362,272,1.45,273,1.964,274,1.964,275,1.633,276,1.633,277,2.044,278,2.677,279,2.677,280,2.677,281,2.677,304,2.176,1670,3.978]],["title/injectables/ZoomPanService.html",[301,0.711,624,2.801]],["body/injectables/ZoomPanService.html",[3,0.074,4,0.074,8,0.065,15,0.36,17,1.514,30,0.057,31,0.162,32,2.229,37,0.611,44,0.331,54,1.152,56,0.972,57,0.016,58,0.376,59,0.238,60,0.972,62,1.336,63,1.339,74,0.676,75,1.289,78,0.692,79,0.345,112,0.074,113,0.146,114,2.795,150,2.099,205,1.426,256,0.006,257,0.006,263,1.531,264,1.141,266,1.467,272,1.883,273,1.919,274,1.919,275,0.558,276,0.558,277,1.383,278,1.793,279,1.793,280,1.628,281,1.628,301,0.563,303,0.683,304,2.959,309,0.683,326,0.812,342,2.282,343,0.875,346,0.987,356,4.368,359,2.227,374,2.186,402,1.652,403,2.352,406,1.919,436,1.105,437,1.105,443,0.987,445,1.176,458,1.982,459,2.803,594,1.485,595,1.485,605,3.066,623,3.412,624,2.217,637,5.29,658,2.695,659,5.29,664,1.26,675,3.537,677,2.421,775,3.537,776,3.066,788,1.652,809,3.412,841,2.421,1091,3.896,1585,1.36,1604,5.114,1704,1.652,2077,3.412,2079,2.695,2081,1.652,2083,1.652,2147,4.65,2290,6.574,2291,1.652,2292,5.003,2293,3.937,2294,3.937,2295,3.937,2296,3.937,2297,3.937,2298,3.937,2299,4.542,2300,3.109,2301,4.542,2302,4.542,2303,3.109,2304,3.937,2305,3.937,2306,3.937,2307,3.937,2308,4.542,2309,4.542,2310,4.542,2311,3.109,2312,3.109,2313,3.937,2314,4.542,2315,4.542,2316,3.109,2317,1.907,2318,3.109,2319,1.907,2320,1.907,2321,1.907,2322,3.109,2323,1.907,2324,1.907,2325,1.907,2326,1.907,2327,1.907,2328,1.907,2329,1.907,2330,1.907,2331,1.907,2332,5.366,2333,5.366,2334,1.907,2335,3.109,2336,4.542,2337,1.907,2338,3.109,2339,1.907,2340,1.907,2341,1.907,2342,1.907,2343,1.907,2344,1.907,2345,1.907,2346,1.907,2347,1.907,2348,1.907,2349,1.907,2350,3.109,2351,1.907,2352,1.907,2353,1.907,2354,1.907,2355,1.907,2356,3.937,2357,5.003,2358,1.907,2359,3.937,2360,5.003,2361,1.907,2362,6.77,2363,1.907,2364,3.109,2365,5.66,2366,3.109,2367,5.66,2368,3.109,2369,3.109,2370,1.907,2371,1.907,2372,5.366,2373,5.366,2374,3.937,2375,1.907,2376,3.937,2377,1.907,2378,4.542,2379,4.542,2380,4.542,2381,4.542,2382,3.109,2383,3.109,2384,3.937,2385,4.542,2386,3.109,2387,3.937,2388,4.542,2389,3.109,2390,3.109,2391,3.109,2392,1.907,2393,3.109,2394,1.907,2395,3.109,2396,1.907,2397,1.907,2398,5.003,2399,3.937,2400,3.109,2401,1.907,2402,4.542,2403,1.907,2404,3.937,2405,3.937,2406,3.937,2407,1.907,2408,1.907,2409,1.907,2410,1.907,2411,1.907,2412,1.907,2413,1.907,2414,1.907]],["title/classes/_RedoStack.html",[113,0.3,2239,2.595]],["body/classes/_RedoStack.html",[3,0.18,4,0.18,8,0.16,30,0.14,31,0.313,37,1.179,54,1.105,56,0.742,57,0.016,58,0.287,59,0.206,60,0.742,62,1.322,63,1.279,74,0.48,75,0.916,78,0.71,112,0.257,113,0.507,192,2.353,205,1.647,256,0.011,257,0.011,258,0.533,266,1.119,282,2.713,286,1.259,343,1.866,359,1.942,458,1.755,564,3.845,668,2.873,802,3.076,1500,4.904,2202,2.873,2234,3.7,2235,3.076,2236,3.626,2237,3.626,2238,4.67,2239,4.629,2241,4.383,2244,5.456,2248,4.996,2249,4.67,2250,4.67,2251,4.67,2252,5.646,2253,4.67,2254,4.67,2255,3.626,2256,3.626,2257,4.67,2258,3.626,2259,3.626,2260,3.626,2261,4.67,2262,3.626,2263,4.67,2264,3.626,2415,5.749,2416,4.657,2417,4.657,2418,4.657,2419,4.657,2420,4.657]],["title/classes/_UndoStack.html",[113,0.3,2241,2.595]],["body/classes/_UndoStack.html",[3,0.18,4,0.18,8,0.16,30,0.14,31,0.313,37,1.179,54,1.105,56,0.742,57,0.016,58,0.287,59,0.206,60,0.742,62,1.322,63,1.279,74,0.48,75,0.916,78,0.71,112,0.257,113,0.507,192,2.353,205,1.647,256,0.011,257,0.011,258,0.533,266,1.119,282,2.713,286,1.259,343,1.866,359,1.942,458,1.755,564,3.845,668,2.873,802,3.076,1500,4.904,2202,2.873,2234,3.7,2235,3.076,2236,3.626,2237,3.626,2238,4.67,2239,4.383,2241,4.629,2244,5.456,2248,4.996,2249,4.67,2250,4.67,2251,4.67,2252,5.646,2253,4.67,2254,4.67,2255,3.626,2256,3.626,2257,4.67,2258,3.626,2259,3.626,2260,3.626,2261,4.67,2262,3.626,2263,4.67,2264,3.626,2415,5.749,2421,4.657,2422,4.657,2423,4.657,2424,4.657,2425,4.657]],["title/coverage.html",[2426,4.643]],["body/coverage.html",[0,1.44,1,1.008,8,0.101,9,2.541,20,1.008,33,1.195,34,1.25,36,1.7,47,1.195,49,1.809,52,2.091,57,0.016,59,0.101,67,0.968,87,2.874,108,1.7,109,1.604,113,0.522,144,0.793,213,1.008,216,1.008,218,1.008,221,1.051,224,1.051,226,1.008,228,1.008,231,1.008,234,1.008,237,1.008,240,1.008,243,1.008,245,1.008,247,1.008,249,1.008,251,1.008,252,0.893,256,0.008,257,0.008,258,0.878,259,1.096,261,3,263,1.177,265,0.893,267,1.096,269,1.096,272,1.131,277,1.325,282,1.008,285,1.144,287,1.144,288,0.968,300,1.096,301,1.365,302,1.937,304,2.921,305,2.541,306,3.698,310,2.541,328,2.541,333,3.388,343,0.825,351,2.091,377,1.7,378,2.283,403,1.519,404,1.809,458,2.414,479,3.388,480,3.388,481,3.388,545,4.091,549,2.091,554,2.091,558,2.874,602,1.937,603,2.541,624,2.091,625,2.091,626,1.937,627,1.809,667,1.7,790,2.541,867,2.541,891,2.283,908,2.541,909,2.541,924,2.091,937,2.541,962,2.091,969,2.283,970,2.283,971,2.283,1067,1.937,1068,2.283,1069,2.541,1160,2.541,1161,2.283,1162,2.541,1174,2.283,1185,2.541,1186,2.541,1187,2.541,1191,2.541,1196,2.541,1197,1.937,1198,2.541,1217,2.541,1274,2.541,1316,2.283,1355,2.541,1364,3.388,1383,3.388,1384,3.388,1434,2.283,1436,2.283,1670,3.698,1671,2.541,1672,2.541,1759,2.541,1798,2.091,1833,2.541,1892,2.283,1893,2.283,1980,2.541,2003,2.541,2091,2.541,2097,3.426,2127,1.937,2128,2.541,2129,2.541,2130,2.541,2168,2.541,2191,2.541,2192,2.541,2202,1.809,2234,1.809,2235,3.79,2239,1.937,2241,1.937,2265,2.541,2290,2.541,2291,2.541,2426,2.541,2427,2.541,2428,2.932,2429,2.932,2430,7.095,2431,2.932,2432,2.932,2433,2.932,2434,7.912,2435,5.737,2436,6.826,2437,2.932,2438,2.932,2439,2.932,2440,4.35,2441,6.42,2442,6.42,2443,2.932,2444,2.932,2445,2.932,2446,5.186,2447,4.35,2448,5.186,2449,2.932,2450,4.468,2451,7.488,2452,2.541,2453,2.541,2454,2.541,2455,7.286,2456,6.128,2457,2.541,2458,5.311,2459,2.541,2460,5.311,2461,2.541,2462,2.541,2463,2.541,2464,2.541,2465,2.541,2466,2.541,2467,2.932,2468,2.932,2469,2.932,2470,3.77,2471,2.541,2472,3.77,2473,2.541,2474,2.541,2475,2.541,2476,2.932,2477,2.932]],["title/dependencies.html",[2478,2.844,2479,3.678]],["body/dependencies.html",[53,4.667,57,0.016,79,0.975,83,4.194,84,2.195,91,3.594,92,3.318,93,3.323,256,0.012,257,0.012,346,2.789,520,2.946,701,4.667,983,4.194,985,4.194,1193,4.667,1432,4.667,1433,4.194,1794,5.694,1795,4.667,2479,4.194,2480,5.386,2481,7.868,2482,5.386,2483,5.386,2484,5.386,2485,6.571,2486,6.571,2487,5.386,2488,5.386,2489,5.386,2490,5.386,2491,5.386,2492,5.386,2493,6.571,2494,5.386,2495,5.386,2496,5.386,2497,5.386,2498,5.386,2499,5.386,2500,5.386,2501,5.386,2502,5.386,2503,5.386,2504,5.386,2505,5.386,2506,5.386,2507,5.386,2508,5.386,2509,5.386,2510,5.386,2511,5.386,2512,5.386,2513,5.386]],["title/miscellaneous/enumerations.html",[2514,2.025,2515,4.094]],["body/miscellaneous/enumerations.html",[30,0.185,57,0.015,75,1.476,97,4.125,256,0.014,257,0.014,844,5.074,2097,4.07,2125,5.074,2126,5.541,2514,3.801,2515,5.338,2516,5.338]],["title/miscellaneous/functions.html",[2514,2.025,2517,4.094]],["body/miscellaneous/functions.html",[15,0.801,30,0.128,56,1.259,57,0.015,58,0.487,59,0.27,60,1.259,62,1.394,73,1.284,144,1.527,256,0.011,257,0.011,264,1.32,270,1.863,272,2.024,284,2.273,288,2.231,530,4.939,546,4.026,547,4.026,548,3.027,561,4.026,569,3.306,596,3.027,924,4.026,970,4.396,971,4.396,976,4.466,990,2.62,1042,3.679,1174,4.396,1234,3.306,1316,4.396,1434,4.396,1615,4.892,1798,4.026,1892,4.396,1893,4.396,1951,3.679,2450,3.306,2452,4.892,2453,4.892,2454,4.892,2457,3.679,2458,3.679,2459,4.892,2460,3.679,2461,4.892,2462,4.892,2466,3.679,2514,2.62,2517,3.679,2518,5.497,2519,7.038,2520,7.038,2521,4.246,2522,4.246,2523,4.246,2524,6.76,2525,5.646,2526,4.246,2527,4.246,2528,4.246,2529,4.246,2530,5.646,2531,4.246,2532,5.646,2533,4.246,2534,4.246,2535,4.246,2536,4.246,2537,4.246,2538,4.246,2539,4.246]],["title/index.html",[30,0.099,2540,3.282,2541,2.844]],["body/index.html",[15,0.7,48,4.606,57,0.015,58,0.317,76,4.462,78,1.108,91,2.028,92,3.142,155,2.149,161,3.213,162,3.213,163,3.213,164,3.213,172,3.213,174,3.213,188,3.899,199,4.218,205,0.823,219,2.406,244,1.275,256,0.011,257,0.01,283,1.568,286,1.392,290,1.446,291,1.446,296,1.446,298,1.446,458,1.085,469,2.644,482,2.644,543,2.644,560,2.887,664,2.449,698,4.788,976,2.449,984,4.462,992,4.977,994,4.977,995,5.412,1110,2.887,1212,2.644,1271,4.009,1327,3.671,1433,4.606,1461,3.213,1476,2.887,1576,3.213,1601,3.213,1605,3.213,1647,3.213,1657,3.213,1745,2.887,1957,3.213,2125,2.644,2161,4.462,2165,3.213,2183,3.213,2248,2.644,2427,3.213,2479,2.887,2542,6.95,2543,3.707,2544,5.149,2545,3.707,2546,5.915,2547,3.707,2548,6.391,2549,3.213,2550,3.707,2551,5.149,2552,3.707,2553,5.149,2554,3.707,2555,3.707,2556,3.707,2557,3.707,2558,5.149,2559,3.707,2560,5.149,2561,6.391,2562,3.707,2563,3.707,2564,3.707,2565,3.707,2566,3.707,2567,3.707,2568,3.707,2569,3.707,2570,3.707,2571,3.707,2572,3.707,2573,3.707,2574,3.707,2575,5.915,2576,5.149,2577,5.149,2578,3.707,2579,3.707,2580,3.707,2581,6.391,2582,5.149,2583,5.149,2584,5.149,2585,6.715,2586,3.707,2587,3.707,2588,3.707,2589,3.707,2590,3.707,2591,3.707,2592,3.707,2593,3.707,2594,3.707,2595,3.707,2596,3.707,2597,3.707,2598,5.149,2599,5.915,2600,3.707,2601,3.707,2602,3.707,2603,5.149,2604,3.707,2605,3.707,2606,3.707,2607,3.707,2608,6.715,2609,3.707,2610,5.149,2611,5.149,2612,5.915,2613,7.268,2614,3.707,2615,6.391,2616,3.707,2617,3.707,2618,3.707,2619,5.149,2620,5.149,2621,3.707,2622,3.707,2623,3.707,2624,3.707,2625,3.707,2626,3.707,2627,3.707,2628,3.707,2629,3.707,2630,3.707,2631,3.707,2632,3.707,2633,2.887,2634,3.707,2635,3.707,2636,3.707,2637,3.707,2638,3.707,2639,3.707,2640,3.707,2641,3.707,2642,3.707,2643,3.707,2644,3.707,2645,6.391,2646,3.707,2647,3.707,2648,3.707,2649,3.707,2650,3.707,2651,5.149,2652,5.149,2653,3.707,2654,3.707,2655,3.707,2656,3.707,2657,3.707,2658,3.707,2659,3.707,2660,3.707,2661,5.149,2662,3.707,2663,3.707,2664,3.707,2665,3.707,2666,3.707,2667,3.707,2668,3.707,2669,5.149,2670,3.707,2671,3.707,2672,3.707,2673,3.707,2674,3.707,2675,3.707,2676,3.707,2677,3.707,2678,3.707,2679,3.707,2680,3.707,2681,5.149,2682,3.707,2683,3.707,2684,3.707,2685,3.707,2686,3.707,2687,3.707,2688,3.707,2689,3.707,2690,3.707,2691,3.707,2692,3.707,2693,3.707,2694,3.707,2695,3.707,2696,3.707,2697,3.707,2698,3.707,2699,3.707]],["title/modules.html",[2700,4.643]],["body/modules.html",[57,0.014,256,0.014,257,0.014,2700,5.535]],["title/overview.html",[2633,4.172]],["body/overview.html",[2,2.252,57,0.014,256,0.014,257,0.014,260,1.992,286,1.699,303,2.252,576,4.481,2633,4.893,2701,6.284,2702,6.284,2703,6.284]],["title/properties.html",[31,0.247,2478,2.844]],["body/properties.html",[31,0.331,57,0.014,256,0.014,257,0.014,2549,5.501,2704,6.348]],["title/miscellaneous/variables.html",[2514,2.025,2705,4.094]],["body/miscellaneous/variables.html",[30,0.139,34,1.967,57,0.016,59,0.262,74,0.808,75,1.541,87,4.613,178,3.049,205,1.024,244,2.05,256,0.011,257,0.011,343,1.859,359,1.745,436,2.675,458,1.351,482,3.291,545,3.291,549,4.252,550,5.144,551,5.144,552,4.643,553,3.594,554,4.252,555,3.594,556,4.643,557,3.594,558,4.364,741,3.291,743,3.291,1383,3.594,1384,4.643,1436,4.643,1668,5.168,2097,3.049,2127,3.94,2202,3.679,2234,2.848,2235,3.049,2274,4,2450,3.594,2463,4,2464,5.168,2465,5.168,2470,4,2471,5.168,2472,6.417,2473,4,2474,4,2475,4,2514,2.848,2516,4,2518,4,2541,4,2705,4,2706,5.963,2707,4.615,2708,4.615,2709,4.615,2710,5.963,2711,4.615,2712,4.615,2713,4.615,2714,4.615,2715,4.615,2716,4.615,2717,4.615,2718,4.615,2719,5.963,2720,5.963,2721,5.963,2722,4.615,2723,5.963,2724,4.615,2725,5.963,2726,4.615,2727,5.963,2728,5.963,2729,4.615,2730,4.615,2731,4.615,2732,4.615,2733,4.615,2734,6.606,2735,4.615]]],"invertedIndex":[["",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"interfaces/BboxLabel.html":{},"injectables/BboxManagerService.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"components/ClassificationConfigurationComponent.html":{},"interfaces/Color.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"interfaces/EventPayload.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"interfaces/ImageFromCLI.html":{},"injectables/ImageProcessingService.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"interfaces/LabelFormat.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"components/LoadingComponent.html":{},"interfaces/MulticlassInterface.html":{},"classes/MulticlassTask.html":{},"interfaces/MultilabelInterface.html":{},"classes/MultilabelTask.html":{},"injectables/OpenCVService.html":{},"interfaces/Point2D.html":{},"interfaces/Point2D-1.html":{},"injectables/PostProcessService.html":{},"interfaces/ProjectConfig.html":{},"components/ProjectConfigurationComponent.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"interfaces/Rect-1.html":{},"components/SVGElementsComponent.html":{},"injectables/SVGUIService.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"classes/StampMaker.html":{},"injectables/StateManagerService.html":{},"components/TestingComponent.html":{},"interfaces/Thumbnail.html":{},"classes/Tool.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"classes/Tools.html":{},"interfaces/UndoRedoCanvasElement.html":{},"injectables/UndoRedoService.html":{},"classes/UndoRedoStack.html":{},"injectables/ViewService.html":{},"interfaces/Viewbox.html":{},"interfaces/Viewbox-1.html":{},"injectables/ZoomPanService.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":458,"title":{},"body":{"injectables/CanvasManagerService.html":{},"interfaces/Color.html":{},"injectables/DrawService.html":{},"components/GalleryComponent.html":{},"injectables/IOService.html":{},"injectables/ImageProcessingService.html":{},"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"injectables/OpenCVService.html":{},"injectables/PostProcessService.html":{},"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{},"classes/StampMaker.html":{},"injectables/StateManagerService.html":{},"injectables/UndoRedoService.html":{},"classes/UndoRedoStack.html":{},"injectables/ZoomPanService.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["0.0.1",{"_index":2704,"title":{},"body":{"properties.html":{}}}],["0.01",{"_index":2350,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["0.05",{"_index":2408,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["0.1",{"_index":2403,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["0.12.7",{"_index":2498,"title":{},"body":{"dependencies.html":{}}}],["0.14.3",{"_index":2513,"title":{},"body":{"dependencies.html":{}}}],["0.25",{"_index":1704,"title":{},"body":{"injectables/PostProcessService.html":{},"injectables/ZoomPanService.html":{}}}],["0.3.4",{"_index":2509,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":847,"title":{},"body":{"injectables/EditorService.html":{}}}],["0/1",{"_index":2434,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2448,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2447,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":2449,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":2469,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":2439,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":2440,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":2438,"title":{},"body":{"coverage.html":{}}}],["0/25",{"_index":2437,"title":{},"body":{"coverage.html":{}}}],["0/28",{"_index":2467,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2436,"title":{},"body":{"coverage.html":{}}}],["0/31",{"_index":2443,"title":{},"body":{"coverage.html":{}}}],["0/34",{"_index":2468,"title":{},"body":{"coverage.html":{}}}],["0/35",{"_index":2433,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2456,"title":{},"body":{"coverage.html":{}}}],["0/43",{"_index":2445,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2430,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2441,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2442,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2446,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2435,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":150,"title":{"interfaces/Point2D-1.html":{},"interfaces/Rect-1.html":{},"interfaces/Viewbox-1.html":{}},"body":{"components/AppComponent.html":{},"components/ClassificationConfigurationComponent.html":{},"interfaces/Color.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"injectables/ImageProcessingService.html":{},"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"injectables/OpenCVService.html":{},"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{},"classes/StampMaker.html":{},"injectables/StateManagerService.html":{},"injectables/UndoRedoService.html":{},"injectables/ZoomPanService.html":{}}}],["1.0",{"_index":1597,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["1.0.1",{"_index":2500,"title":{},"body":{"dependencies.html":{}}}],["1.7.1",{"_index":2489,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":841,"title":{},"body":{"injectables/EditorService.html":{},"injectables/OpenCVService.html":{},"injectables/ZoomPanService.html":{}}}],["100",{"_index":904,"title":{},"body":{"components/GalleryComponent.html":{},"injectables/ProjectService.html":{}}}],["128",{"_index":935,"title":{},"body":{"components/GalleryElementComponent.html":{},"injectables/ViewService.html":{}}}],["16",{"_index":576,"title":{},"body":{"interfaces/Color.html":{},"injectables/PostProcessService.html":{},"classes/StampMaker.html":{},"overview.html":{}}}],["17.3.10",{"_index":2483,"title":{},"body":{"dependencies.html":{}}}],["18",{"_index":2701,"title":{},"body":{"overview.html":{}}}],["18.0.2",{"_index":2505,"title":{},"body":{"dependencies.html":{}}}],["18.2.12",{"_index":2550,"title":{},"body":{"index.html":{}}}],["18.2.13",{"_index":2481,"title":{},"body":{"dependencies.html":{}}}],["19",{"_index":2703,"title":{},"body":{"overview.html":{}}}],["19.0.2",{"_index":2491,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Color.html":{},"injectables/DrawService.html":{},"injectables/OpenCVService.html":{},"classes/StampMaker.html":{},"injectables/StateManagerService.html":{}}}],["2.0",{"_index":1706,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["2.0.1",{"_index":2493,"title":{},"body":{"dependencies.html":{}}}],["2.0.2",{"_index":2495,"title":{},"body":{"dependencies.html":{}}}],["2.1.1",{"_index":2492,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":2511,"title":{},"body":{"dependencies.html":{}}}],["2000",{"_index":1758,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["209fb5",{"_index":145,"title":{},"body":{"components/AppComponent.html":{}}}],["255",{"_index":584,"title":{},"body":{"interfaces/Color.html":{},"injectables/OpenCVService.html":{},"classes/StampMaker.html":{}}}],["255*(lesions",{"_index":2667,"title":{},"body":{"index.html":{}}}],["255*(od_mask==i",{"_index":2670,"title":{},"body":{"index.html":{}}}],["255.0",{"_index":1607,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["256",{"_index":1521,"title":{},"body":{"injectables/OpenCVService.html":{},"injectables/PostProcessService.html":{}}}],["3",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Color.html":{},"injectables/EditorService.html":{},"injectables/ImageProcessingService.html":{},"injectables/OpenCVService.html":{},"classes/StampMaker.html":{},"index.html":{}}}],["3.3.1",{"_index":2502,"title":{},"body":{"dependencies.html":{}}}],["3000",{"_index":889,"title":{},"body":{"components/GalleryComponent.html":{}}}],["4",{"_index":578,"title":{},"body":{"interfaces/Color.html":{},"injectables/OpenCVService.html":{},"injectables/PostProcessService.html":{},"classes/StampMaker.html":{}}}],["4.5.0",{"_index":2497,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":180,"title":{},"body":{"components/AppComponent.html":{}}}],["5",{"_index":1657,"title":{},"body":{"injectables/OpenCVService.html":{},"index.html":{}}}],["50",{"_index":902,"title":{},"body":{"components/GalleryComponent.html":{},"injectables/PostProcessService.html":{}}}],["512",{"_index":1058,"title":{},"body":{"injectables/IOService.html":{},"injectables/StateManagerService.html":{}}}],["6",{"_index":580,"title":{},"body":{"interfaces/Color.html":{},"classes/StampMaker.html":{}}}],["6.0.3",{"_index":2496,"title":{},"body":{"dependencies.html":{}}}],["7.0.0",{"_index":2504,"title":{},"body":{"dependencies.html":{}}}],["7.8.0",{"_index":2506,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":2702,"title":{},"body":{"overview.html":{}}}],["8839ef",{"_index":153,"title":{},"body":{"components/AppComponent.html":{}}}],["9]{1,3}(\\s",{"_index":557,"title":{},"body":{"interfaces/Color.html":{},"classes/StampMaker.html":{},"miscellaneous/variables.html":{}}}],["9]{1,3},(\\s+)?[0",{"_index":556,"title":{},"body":{"interfaces/Color.html":{},"classes/StampMaker.html":{},"miscellaneous/variables.html":{}}}],["9a",{"_index":550,"title":{},"body":{"interfaces/Color.html":{},"classes/StampMaker.html":{},"miscellaneous/variables.html":{}}}],["_color",{"_index":587,"title":{},"body":{"interfaces/Color.html":{},"classes/StampMaker.html":{}}}],["_lasttool",{"_index":791,"title":{},"body":{"injectables/EditorService.html":{}}}],["_redostack",{"_index":2239,"title":{"classes/_RedoStack.html":{}},"body":{"classes/UndoRedoStack.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{},"coverage.html":{}}}],["_strcolor",{"_index":589,"title":{},"body":{"interfaces/Color.html":{},"classes/StampMaker.html":{}}}],["_treenode",{"_index":1275,"title":{},"body":{"injectables/LabelsService.html":{}}}],["_undostack",{"_index":2241,"title":{"classes/_UndoStack.html":{}},"body":{"classes/UndoRedoStack.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{},"coverage.html":{}}}],["absent",{"_index":160,"title":{},"body":{"components/AppComponent.html":{}}}],["acc",{"_index":574,"title":{},"body":{"interfaces/Color.html":{},"classes/StampMaker.html":{}}}],["accumulate",{"_index":1519,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["activatepanmode",{"_index":807,"title":{},"body":{"injectables/EditorService.html":{}}}],["active",{"_index":704,"title":{},"body":{"injectables/DrawService.html":{}}}],["activectx",{"_index":1712,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["activectx.drawimage",{"_index":1739,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["activectx.drawimage(buffercanvas",{"_index":1715,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["activeimage",{"_index":1834,"title":{},"body":{"injectables/ProjectService.html":{}}}],["activeindex",{"_index":762,"title":{},"body":{"injectables/DrawService.html":{},"injectables/PostProcessService.html":{},"injectables/ProjectService.html":{}}}],["activelabel",{"_index":1276,"title":{},"body":{"injectables/LabelsService.html":{}}}],["activeseginstance",{"_index":1277,"title":{},"body":{"injectables/LabelsService.html":{}}}],["actual_component",{"_index":255,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["add",{"_index":1334,"title":{},"body":{"injectables/LabelsService.html":{}}}],["addclassificationtask",{"_index":1281,"title":{},"body":{"injectables/LabelsService.html":{}}}],["addclassificationtask(task",{"_index":1292,"title":{},"body":{"injectables/LabelsService.html":{}}}],["addclasstotask",{"_index":493,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["addclasstotask(taskindex",{"_index":503,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["addlabel",{"_index":1377,"title":{},"body":{"classes/MultilabelTask.html":{}}}],["addlabel(label",{"_index":1372,"title":{},"body":{"classes/MulticlassTask.html":{},"classes/MultilabelTask.html":{}}}],["addmulticlasstask",{"_index":494,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["addmultilabelclass",{"_index":495,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["addmultilabelclass(name",{"_index":507,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["addmultilabeltask",{"_index":496,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{},"injectables/LabelsService.html":{}}}],["addmultilabeltask(task",{"_index":1294,"title":{},"body":{"injectables/LabelsService.html":{}}}],["addnewclassificationtask",{"_index":1282,"title":{},"body":{"injectables/LabelsService.html":{}}}],["addpoint",{"_index":2005,"title":{},"body":{"injectables/SVGUIService.html":{}}}],["addpoint(point",{"_index":2009,"title":{},"body":{"injectables/SVGUIService.html":{}}}],["addseglabel",{"_index":1283,"title":{},"body":{"injectables/LabelsService.html":{}}}],["addseglabel(label",{"_index":1297,"title":{},"body":{"injectables/LabelsService.html":{}}}],["addsegmentationclass",{"_index":1766,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["advanced",{"_index":2573,"title":{},"body":{"index.html":{}}}],["affectsmultiplelabels",{"_index":808,"title":{},"body":{"injectables/EditorService.html":{}}}],["afterviewinit",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/GalleryElementComponent.html":{},"components/ToolbarComponent.html":{}}}],["aliasing",{"_index":1621,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["all_files",{"_index":2678,"title":{},"body":{"index.html":{}}}],["all_tools",{"_index":2123,"title":{},"body":{"classes/Tool.html":{},"classes/Tools.html":{}}}],["allpromises",{"_index":1032,"title":{},"body":{"injectables/IOService.html":{},"injectables/UndoRedoService.html":{}}}],["allpromises$.push(blob",{"_index":1044,"title":{},"body":{"injectables/IOService.html":{}}}],["allpromises.push(blob",{"_index":2228,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["alpha",{"_index":448,"title":{},"body":{"injectables/CanvasManagerService.html":{},"injectables/ImageProcessingService.html":{},"injectables/OpenCVService.html":{},"injectables/PostProcessService.html":{},"injectables/UndoRedoService.html":{}}}],["already",{"_index":1319,"title":{},"body":{"injectables/LabelsService.html":{},"injectables/ProjectService.html":{}}}],["alt",{"_index":2111,"title":{},"body":{"classes/Tool.html":{},"classes/Tools.html":{}}}],["amd",{"_index":171,"title":{},"body":{"components/AppComponent.html":{}}}],["anglebetween",{"_index":2452,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["anglebetween(point1",{"_index":2523,"title":{},"body":{"miscellaneous/functions.html":{}}}],["angular",{"_index":2548,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":2480,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2482,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":2484,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"injectables/BboxManagerService.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"components/ClassificationConfigurationComponent.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"interfaces/EventPayload.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"injectables/ImageProcessingService.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"components/LoadingComponent.html":{},"injectables/OpenCVService.html":{},"injectables/PostProcessService.html":{},"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{},"components/SVGElementsComponent.html":{},"injectables/SVGUIService.html":{},"injectables/StateManagerService.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UndoRedoService.html":{},"injectables/ViewService.html":{},"injectables/ZoomPanService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":520,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":2485,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"injectables/ViewService.html":{},"dependencies.html":{}}}],["annotation",{"_index":2556,"title":{},"body":{"index.html":{}}}],["annotations",{"_index":984,"title":{},"body":{"injectables/IOService.html":{},"index.html":{}}}],["annotator",{"_index":206,"title":{},"body":{"components/AppComponent.html":{}}}],["anti",{"_index":1620,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["app",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["app.component.html",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":2471,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":2546,"title":{},"body":{"index.html":{}}}],["applicationconfig",{"_index":2714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apply",{"_index":1446,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["applylasso",{"_index":607,"title":{},"body":{"injectables/DrawService.html":{}}}],["applylassoeraser",{"_index":608,"title":{},"body":{"injectables/DrawService.html":{}}}],["applylassoeraser(ctx",{"_index":630,"title":{},"body":{"injectables/DrawService.html":{}}}],["apps/api",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{},"dependencies.html":{}}}],["apps/api/core",{"_index":350,"title":{},"body":{"injectables/CLIService.html":{},"interfaces/EventPayload.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"interfaces/LabelFormat.html":{},"injectables/PostProcessService.html":{},"injectables/ProjectService.html":{}}}],["apps/api/event",{"_index":348,"title":{},"body":{"injectables/CLIService.html":{},"interfaces/EventPayload.html":{}}}],["apps/plugin",{"_index":1794,"title":{},"body":{"components/ProjectConfigurationComponent.html":{},"dependencies.html":{}}}],["architecture",{"_index":2593,"title":{},"body":{"index.html":{}}}],["area",{"_index":2154,"title":{},"body":{"components/ToolSettingComponent.html":{}}}],["array",{"_index":1259,"title":{},"body":{"components/LabelsComponent.html":{}}}],["array(256).fill(0",{"_index":1546,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["array.isarray(element.data",{"_index":2211,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["arraybufferlike",{"_index":1709,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["arrows",{"_index":2110,"title":{},"body":{"classes/Tool.html":{},"classes/Tools.html":{}}}],["artifacts",{"_index":1660,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["assets/opencv",{"_index":2720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["async",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"injectables/DrawService.html":{},"interfaces/EventPayload.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"injectables/PostProcessService.html":{},"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{}}}],["atop",{"_index":755,"title":{},"body":{"injectables/DrawService.html":{}}}],["aura",{"_index":100,"title":{},"body":{"components/AppComponent.html":{}}}],["auto",{"_index":697,"title":{},"body":{"injectables/DrawService.html":{},"components/ToolSettingComponent.html":{}}}],["automatically",{"_index":2151,"title":{},"body":{"components/ToolSettingComponent.html":{}}}],["autopostprocess",{"_index":792,"title":{},"body":{"injectables/EditorService.html":{}}}],["autopostprocessopening",{"_index":793,"title":{},"body":{"injectables/EditorService.html":{}}}],["await",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"injectables/CLIService.html":{},"injectables/DrawService.html":{},"interfaces/EventPayload.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"injectables/PostProcessService.html":{},"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{},"injectables/UndoRedoService.html":{}}}],["b",{"_index":546,"title":{},"body":{"interfaces/Color.html":{},"injectables/OpenCVService.html":{},"classes/StampMaker.html":{},"miscellaneous/functions.html":{}}}],["b_cdf",{"_index":1548,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["b_cdf[i",{"_index":1553,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["back",{"_index":1605,"title":{},"body":{"injectables/OpenCVService.html":{},"index.html":{}}}],["backend",{"_index":2603,"title":{},"body":{"index.html":{}}}],["background",{"_index":1645,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["base",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["based",{"_index":2162,"title":{},"body":{"components/ToolSettingComponent.html":{}}}],["bbox",{"_index":262,"title":{},"body":{"interfaces/BboxLabel.html":{},"injectables/DrawService.html":{},"interfaces/ImageFromCLI.html":{},"components/InteractiveBboxComponent.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"injectables/OpenCVService.html":{},"interfaces/Point2D.html":{},"injectables/PostProcessService.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{}}}],["bbox'},{'name",{"_index":236,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["bbox.component.html",{"_index":1188,"title":{},"body":{"components/InteractiveBboxComponent.html":{}}}],["bbox.component.scss",{"_index":1189,"title":{},"body":{"components/InteractiveBboxComponent.html":{}}}],["bbox.component.ts",{"_index":1187,"title":{},"body":{"components/InteractiveBboxComponent.html":{},"coverage.html":{}}}],["bbox.height",{"_index":731,"title":{},"body":{"injectables/DrawService.html":{},"injectables/OpenCVService.html":{}}}],["bbox.width",{"_index":730,"title":{},"body":{"injectables/DrawService.html":{},"injectables/OpenCVService.html":{}}}],["bbox.x",{"_index":728,"title":{},"body":{"injectables/DrawService.html":{},"injectables/OpenCVService.html":{}}}],["bbox.y",{"_index":729,"title":{},"body":{"injectables/DrawService.html":{},"injectables/OpenCVService.html":{}}}],["bbox/interactive",{"_index":1186,"title":{},"body":{"components/InteractiveBboxComponent.html":{},"coverage.html":{}}}],["bboxes.length",{"_index":1755,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["bboxlabel",{"_index":259,"title":{"interfaces/BboxLabel.html":{}},"body":{"interfaces/BboxLabel.html":{},"injectables/BboxManagerService.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{},"coverage.html":{}}}],["bboxmanager",{"_index":1680,"title":{},"body":{"injectables/PostProcessService.html":{},"components/SVGElementsComponent.html":{}}}],["bboxmanagerservice",{"_index":302,"title":{"injectables/BboxManagerService.html":{}},"body":{"injectables/BboxManagerService.html":{},"injectables/PostProcessService.html":{},"components/SVGElementsComponent.html":{},"coverage.html":{}}}],["behaviorsubject",{"_index":2200,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["behaviorsubject(false",{"_index":2201,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["between",{"_index":1576,"title":{},"body":{"injectables/OpenCVService.html":{},"index.html":{}}}],["bhist",{"_index":1525,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["bhist.delete",{"_index":1541,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["bidirectional",{"_index":2624,"title":{},"body":{"index.html":{}}}],["bilateralweight",{"_index":1705,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["binaries",{"_index":2589,"title":{},"body":{"index.html":{}}}],["binarizecanvas",{"_index":609,"title":{},"body":{"injectables/DrawService.html":{},"injectables/OpenCVService.html":{}}}],["binarizecanvas(ctx",{"_index":633,"title":{},"body":{"injectables/DrawService.html":{},"injectables/OpenCVService.html":{}}}],["binarizemulticolorcanvas",{"_index":1390,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["binarizemulticolorcanvas(ctx",{"_index":1403,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["binary",{"_index":1618,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["binary.delete",{"_index":1639,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["blob",{"_index":284,"title":{},"body":{"interfaces/BboxLabel.html":{},"injectables/IOService.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/LabelFormat.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"injectables/UndoRedoService.html":{},"interfaces/Viewbox.html":{},"miscellaneous/functions.html":{}}}],["blob$.then((blob",{"_index":2233,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["blobs",{"_index":2231,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["blobtodataurl",{"_index":970,"title":{},"body":{"injectables/IOService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["blobtodataurl(blob",{"_index":1042,"title":{},"body":{"injectables/IOService.html":{},"miscellaneous/functions.html":{}}}],["blockable",{"_index":214,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["blockablediv",{"_index":213,"title":{"components/BlockableDiv.html":{}},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["blockablep",{"_index":216,"title":{"components/BlockableP.html":{}},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["blockableui",{"_index":311,"title":{},"body":{"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/LabelledSwitchComponent.html":{}}}],["blockuimodule",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/ToolbarComponent.html":{}}}],["blur",{"_index":1574,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["bmax",{"_index":1558,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["bmin",{"_index":1554,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["bnorm_hist",{"_index":1535,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["bnorm_hist.delete",{"_index":1569,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["boolean",{"_index":266,"title":{},"body":{"interfaces/BboxLabel.html":{},"injectables/EditorService.html":{},"interfaces/ImageFromCLI.html":{},"injectables/ImageProcessingService.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"injectables/OpenCVService.html":{},"interfaces/Point2D.html":{},"injectables/PostProcessService.html":{},"interfaces/ProjectConfig.html":{},"components/ProjectConfigurationComponent.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"injectables/StateManagerService.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"injectables/ViewService.html":{},"interfaces/Viewbox.html":{},"injectables/ZoomPanService.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{}}}],["bottom",{"_index":1494,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["bounding",{"_index":1825,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["box",{"_index":1826,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["break",{"_index":685,"title":{},"body":{"injectables/DrawService.html":{}}}],["brightness",{"_index":1070,"title":{},"body":{"injectables/ImageProcessingService.html":{},"injectables/OpenCVService.html":{},"components/ToolSettingComponent.html":{}}}],["brightness_contrast",{"_index":1391,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["brightness_contrast(input",{"_index":1406,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["browser",{"_index":2486,"title":{},"body":{"dependencies.html":{}}}],["browserify",{"_index":2499,"title":{},"body":{"dependencies.html":{}}}],["brush",{"_index":2156,"title":{},"body":{"components/ToolSettingComponent.html":{}}}],["buffer",{"_index":701,"title":{},"body":{"injectables/DrawService.html":{},"dependencies.html":{}}}],["buffercanvas",{"_index":379,"title":{},"body":{"injectables/CanvasManagerService.html":{},"injectables/DrawService.html":{},"injectables/PostProcessService.html":{}}}],["bufferctx",{"_index":380,"title":{},"body":{"injectables/CanvasManagerService.html":{},"injectables/PostProcessService.html":{}}}],["bufferctx.canvas",{"_index":1740,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["bufferctx.getimagedata",{"_index":1694,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["bufferctx.putimagedata",{"_index":1713,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["bufferctx.putimagedata(newmask",{"_index":1738,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["buildexecutables",{"_index":2590,"title":{},"body":{"index.html":{}}}],["built",{"_index":2547,"title":{},"body":{"index.html":{}}}],["button",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/LabelsComponent.html":{}}}],["buttonmodule",{"_index":484,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/ToolbarComponent.html":{}}}],["c",{"_index":569,"title":{},"body":{"interfaces/Color.html":{},"classes/StampMaker.html":{},"miscellaneous/functions.html":{}}}],["c.length",{"_index":572,"title":{},"body":{"interfaces/Color.html":{},"classes/StampMaker.html":{}}}],["c.split('').reduce((acc",{"_index":573,"title":{},"body":{"interfaces/Color.html":{},"classes/StampMaker.html":{}}}],["calculations",{"_index":1587,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["canactivatefn",{"_index":2729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canpan",{"_index":809,"title":{},"body":{"injectables/EditorService.html":{},"injectables/ZoomPanService.html":{}}}],["canvas",{"_index":443,"title":{},"body":{"injectables/CanvasManagerService.html":{},"interfaces/Color.html":{},"injectables/DrawService.html":{},"injectables/IOService.html":{},"injectables/OpenCVService.html":{},"injectables/PostProcessService.html":{},"classes/StampMaker.html":{},"injectables/UndoRedoService.html":{},"injectables/ZoomPanService.html":{}}}],["canvas'},{'name",{"_index":223,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["canvas.component.ts",{"_index":2432,"title":{},"body":{"coverage.html":{}}}],["canvas.getboundingclientrect",{"_index":2371,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["canvas.getcontext('2d",{"_index":597,"title":{},"body":{"interfaces/Color.html":{},"classes/StampMaker.html":{}}}],["canvas.height",{"_index":595,"title":{},"body":{"interfaces/Color.html":{},"classes/StampMaker.html":{},"injectables/ZoomPanService.html":{}}}],["canvas.width",{"_index":594,"title":{},"body":{"interfaces/Color.html":{},"classes/StampMaker.html":{},"injectables/ZoomPanService.html":{}}}],["canvas/component/drawable",{"_index":2431,"title":{},"body":{"coverage.html":{}}}],["canvas/component/interactive",{"_index":1185,"title":{},"body":{"components/InteractiveBboxComponent.html":{},"coverage.html":{}}}],["canvas/component/svgelements/svgelements.component.ts",{"_index":1980,"title":{},"body":{"components/SVGElementsComponent.html":{},"coverage.html":{}}}],["canvas/component/svgelements/svgelements.component.ts:18",{"_index":1987,"title":{},"body":{"components/SVGElementsComponent.html":{}}}],["canvas/component/svgelements/svgelements.component.ts:20",{"_index":1986,"title":{},"body":{"components/SVGElementsComponent.html":{}}}],["canvas/component/svgelements/svgelements.component.ts:22",{"_index":1992,"title":{},"body":{"components/SVGElementsComponent.html":{}}}],["canvas/component/svgelements/svgelements.component.ts:23",{"_index":1991,"title":{},"body":{"components/SVGElementsComponent.html":{}}}],["canvas/component/svgelements/svgelements.component.ts:24",{"_index":1990,"title":{},"body":{"components/SVGElementsComponent.html":{}}}],["canvas/component/svgelements/svgelements.component.ts:25",{"_index":1995,"title":{},"body":{"components/SVGElementsComponent.html":{}}}],["canvas/component/svgelements/svgelements.component.ts:27",{"_index":1989,"title":{},"body":{"components/SVGElementsComponent.html":{}}}],["canvas/models.ts",{"_index":1670,"title":{},"body":{"interfaces/Point2D-1.html":{},"interfaces/Rect-1.html":{},"interfaces/Viewbox-1.html":{},"coverage.html":{}}}],["canvas/service/bbox",{"_index":305,"title":{},"body":{"injectables/BboxManagerService.html":{},"coverage.html":{}}}],["canvas/service/canvas",{"_index":378,"title":{},"body":{"injectables/CanvasManagerService.html":{},"injectables/IOService.html":{},"coverage.html":{}}}],["canvas/service/draw.service.ts",{"_index":603,"title":{},"body":{"injectables/DrawService.html":{},"coverage.html":{}}}],["canvas/service/draw.service.ts:105",{"_index":632,"title":{},"body":{"injectables/DrawService.html":{}}}],["canvas/service/draw.service.ts:127",{"_index":634,"title":{},"body":{"injectables/DrawService.html":{}}}],["canvas/service/draw.service.ts:137",{"_index":635,"title":{},"body":{"injectables/DrawService.html":{}}}],["canvas/service/draw.service.ts:143",{"_index":638,"title":{},"body":{"injectables/DrawService.html":{}}}],["canvas/service/draw.service.ts:188",{"_index":640,"title":{},"body":{"injectables/DrawService.html":{}}}],["canvas/service/draw.service.ts:21",{"_index":661,"title":{},"body":{"injectables/DrawService.html":{}}}],["canvas/service/draw.service.ts:211",{"_index":641,"title":{},"body":{"injectables/DrawService.html":{}}}],["canvas/service/draw.service.ts:22",{"_index":662,"title":{},"body":{"injectables/DrawService.html":{}}}],["canvas/service/draw.service.ts:23",{"_index":663,"title":{},"body":{"injectables/DrawService.html":{}}}],["canvas/service/draw.service.ts:24",{"_index":628,"title":{},"body":{"injectables/DrawService.html":{}}}],["canvas/service/draw.service.ts:280",{"_index":643,"title":{},"body":{"injectables/DrawService.html":{}}}],["canvas/service/draw.service.ts:330",{"_index":645,"title":{},"body":{"injectables/DrawService.html":{}}}],["canvas/service/draw.service.ts:334",{"_index":646,"title":{},"body":{"injectables/DrawService.html":{}}}],["canvas/service/draw.service.ts:346",{"_index":647,"title":{},"body":{"injectables/DrawService.html":{}}}],["canvas/service/draw.service.ts:361",{"_index":648,"title":{},"body":{"injectables/DrawService.html":{}}}],["canvas/service/draw.service.ts:365",{"_index":652,"title":{},"body":{"injectables/DrawService.html":{}}}],["canvas/service/draw.service.ts:408",{"_index":649,"title":{},"body":{"injectables/DrawService.html":{}}}],["canvas/service/draw.service.ts:417",{"_index":654,"title":{},"body":{"injectables/DrawService.html":{}}}],["canvas/service/draw.service.ts:425",{"_index":655,"title":{},"body":{"injectables/DrawService.html":{}}}],["canvas/service/draw.service.ts:478",{"_index":657,"title":{},"body":{"injectables/DrawService.html":{}}}],["canvas/service/draw.service.ts:484",{"_index":660,"title":{},"body":{"injectables/DrawService.html":{}}}],["canvas/service/draw.service.ts:59",{"_index":629,"title":{},"body":{"injectables/DrawService.html":{}}}],["canvas/service/image",{"_index":1068,"title":{},"body":{"injectables/ImageProcessingService.html":{},"components/ToolSettingComponent.html":{},"coverage.html":{}}}],["canvas/service/post",{"_index":1671,"title":{},"body":{"injectables/PostProcessService.html":{},"coverage.html":{}}}],["canvas/service/state",{"_index":969,"title":{},"body":{"injectables/IOService.html":{},"injectables/StateManagerService.html":{},"coverage.html":{}}}],["canvas/service/svgui.service.ts",{"_index":2003,"title":{},"body":{"injectables/SVGUIService.html":{},"coverage.html":{}}}],["canvas/service/svgui.service.ts:14",{"_index":2011,"title":{},"body":{"injectables/SVGUIService.html":{}}}],["canvas/service/svgui.service.ts:28",{"_index":2012,"title":{},"body":{"injectables/SVGUIService.html":{}}}],["canvas/service/svgui.service.ts:32",{"_index":2010,"title":{},"body":{"injectables/SVGUIService.html":{}}}],["canvas/service/svgui.service.ts:9",{"_index":2008,"title":{},"body":{"injectables/SVGUIService.html":{}}}],["canvas/service/undo",{"_index":2191,"title":{},"body":{"injectables/UndoRedoService.html":{},"coverage.html":{}}}],["canvas/service/zoom",{"_index":2290,"title":{},"body":{"injectables/ZoomPanService.html":{},"coverage.html":{}}}],["canvasclear",{"_index":794,"title":{},"body":{"injectables/EditorService.html":{}}}],["canvascoord",{"_index":784,"title":{},"body":{"injectables/DrawService.html":{}}}],["canvasctx",{"_index":381,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["canvases",{"_index":559,"title":{},"body":{"interfaces/Color.html":{},"injectables/DrawService.html":{},"injectables/OpenCVService.html":{},"classes/StampMaker.html":{}}}],["canvasmanagerservice",{"_index":377,"title":{"injectables/CanvasManagerService.html":{}},"body":{"injectables/CanvasManagerService.html":{},"injectables/DrawService.html":{},"injectables/IOService.html":{},"injectables/PostProcessService.html":{},"injectables/UndoRedoService.html":{},"coverage.html":{}}}],["canvasredraw",{"_index":795,"title":{},"body":{"injectables/EditorService.html":{}}}],["canvasref",{"_index":2292,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["canvasrenderingcontext2d",{"_index":631,"title":{},"body":{"injectables/DrawService.html":{},"injectables/OpenCVService.html":{}}}],["canvasscale",{"_index":2360,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["canvassumrefresh",{"_index":796,"title":{},"body":{"injectables/EditorService.html":{}}}],["canzoom",{"_index":2293,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["cardmodule",{"_index":910,"title":{},"body":{"components/GalleryElementComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/ToolSettingComponent.html":{}}}],["case",{"_index":700,"title":{},"body":{"injectables/DrawService.html":{}}}],["cast",{"_index":1129,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["catch",{"_index":367,"title":{},"body":{"injectables/CLIService.html":{},"interfaces/EventPayload.html":{},"injectables/ImageProcessingService.html":{}}}],["catch((error",{"_index":979,"title":{},"body":{"injectables/IOService.html":{}}}],["catppuccin/palette",{"_index":2488,"title":{},"body":{"dependencies.html":{}}}],["catract",{"_index":173,"title":{},"body":{"components/AppComponent.html":{}}}],["cdr",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/ToolbarComponent.html":{}}}],["changeactive",{"_index":1165,"title":{},"body":{"components/InstanceLabelComponent.html":{}}}],["changeactive(index",{"_index":1169,"title":{},"body":{"components/InstanceLabelComponent.html":{}}}],["changeactivelabel",{"_index":1225,"title":{},"body":{"components/LabelsComponent.html":{}}}],["changeactivelabel(event",{"_index":1233,"title":{},"body":{"components/LabelsComponent.html":{}}}],["changeallvisibility",{"_index":1226,"title":{},"body":{"components/LabelsComponent.html":{}}}],["changecolor",{"_index":1227,"title":{},"body":{"components/LabelsComponent.html":{}}}],["changedetectorref",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/ToolbarComponent.html":{}}}],["changevisibility",{"_index":1228,"title":{},"body":{"components/LabelsComponent.html":{}}}],["changevisibility(node",{"_index":1238,"title":{},"body":{"components/LabelsComponent.html":{}}}],["check",{"_index":1318,"title":{},"body":{"injectables/LabelsService.html":{},"injectables/OpenCVService.html":{},"injectables/ProjectService.html":{}}}],["checkboxmodule",{"_index":485,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{},"components/ProjectConfigurationComponent.html":{}}}],["checked",{"_index":1203,"title":{},"body":{"components/LabelledSwitchComponent.html":{}}}],["checkedchange",{"_index":1205,"title":{},"body":{"components/LabelledSwitchComponent.html":{}}}],["checkifdataexists",{"_index":939,"title":{},"body":{"injectables/IOService.html":{}}}],["checkvalidinput",{"_index":1083,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["choice",{"_index":1023,"title":{},"body":{"injectables/IOService.html":{},"classes/MulticlassTask.html":{},"classes/MultilabelTask.html":{}}}],["choices",{"_index":1371,"title":{},"body":{"classes/MulticlassTask.html":{},"classes/MultilabelTask.html":{}}}],["choose",{"_index":1827,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["class",{"_index":113,"title":{"classes/MulticlassTask.html":{},"classes/MultilabelTask.html":{},"classes/StampMaker.html":{},"classes/Tool.html":{},"classes/Tools.html":{},"classes/UndoRedoStack.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{}},"body":{"components/AppComponent.html":{},"injectables/BboxManagerService.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"components/ClassificationConfigurationComponent.html":{},"interfaces/Color.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"interfaces/EventPayload.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"injectables/ImageProcessingService.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"components/LoadingComponent.html":{},"classes/MulticlassTask.html":{},"classes/MultilabelTask.html":{},"injectables/OpenCVService.html":{},"injectables/PostProcessService.html":{},"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{},"components/SVGElementsComponent.html":{},"injectables/SVGUIService.html":{},"classes/StampMaker.html":{},"injectables/StateManagerService.html":{},"components/TestingComponent.html":{},"classes/Tool.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"classes/Tools.html":{},"injectables/UndoRedoService.html":{},"classes/UndoRedoStack.html":{},"injectables/ViewService.html":{},"injectables/ZoomPanService.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{},"coverage.html":{}}}],["classcanvas",{"_index":2210,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["classcanvas.converttoblob",{"_index":2227,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["classcanvas.getcontext('2d",{"_index":2218,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["classctx.drawimage",{"_index":783,"title":{},"body":{"injectables/DrawService.html":{}}}],["classctx.globalcompositeoperation",{"_index":782,"title":{},"body":{"injectables/DrawService.html":{}}}],["classes",{"_index":286,"title":{},"body":{"interfaces/BboxLabel.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"classes/MulticlassTask.html":{},"interfaces/MultilabelInterface.html":{},"classes/MultilabelTask.html":{},"interfaces/Point2D.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"classes/StampMaker.html":{},"interfaces/Thumbnail.html":{},"classes/Tool.html":{},"classes/Tools.html":{},"interfaces/UndoRedoCanvasElement.html":{},"classes/UndoRedoStack.html":{},"interfaces/Viewbox.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{},"index.html":{},"overview.html":{}}}],["classification",{"_index":219,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"index.html":{}}}],["classification_classes",{"_index":297,"title":{},"body":{"interfaces/BboxLabel.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{}}}],["classification_classes=classifications_classes",{"_index":2686,"title":{},"body":{"index.html":{}}}],["classification_multilabel",{"_index":298,"title":{},"body":{"interfaces/BboxLabel.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{},"index.html":{}}}],["classification_multilabel=classification_multilabel",{"_index":2687,"title":{},"body":{"index.html":{}}}],["classificationconfigurationcomponent",{"_index":218,"title":{"components/ClassificationConfigurationComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["classifications_classes",{"_index":2653,"title":{},"body":{"index.html":{}}}],["classindex",{"_index":512,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["classlabels",{"_index":1365,"title":{},"body":{"classes/MulticlassTask.html":{},"classes/MultilabelTask.html":{}}}],["classtask",{"_index":1329,"title":{},"body":{"injectables/LabelsService.html":{}}}],["clean",{"_index":1636,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["clearcanvas",{"_index":386,"title":{},"body":{"injectables/CanvasManagerService.html":{},"injectables/DrawService.html":{},"components/LabelsComponent.html":{}}}],["clearcanvas(ctx",{"_index":407,"title":{},"body":{"injectables/CanvasManagerService.html":{},"injectables/DrawService.html":{}}}],["clearcanvas(node",{"_index":1241,"title":{},"body":{"components/LabelsComponent.html":{}}}],["clearcanvasatindex",{"_index":387,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["clearcanvasatindex(index",{"_index":411,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["clearinterval(this.intervalfunction",{"_index":899,"title":{},"body":{"components/GalleryComponent.html":{}}}],["cli",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/ProjectConfigurationComponent.html":{},"index.html":{}}}],["cli.load_image(filepath",{"_index":2690,"title":{},"body":{"index.html":{}}}],["client",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["clientx",{"_index":2384,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["clienty",{"_index":2387,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["cliservice",{"_index":49,"title":{"injectables/CLIService.html":{}},"body":{"components/AppComponent.html":{},"injectables/CLIService.html":{},"interfaces/EventPayload.html":{},"components/ProjectConfigurationComponent.html":{},"coverage.html":{}}}],["cloud",{"_index":2119,"title":{},"body":{"classes/Tool.html":{},"classes/Tools.html":{}}}],["coarsemask",{"_index":1718,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["color",{"_index":144,"title":{"interfaces/Color.html":{}},"body":{"components/AppComponent.html":{},"interfaces/BboxLabel.html":{},"interfaces/Color.html":{},"injectables/DrawService.html":{},"injectables/IOService.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"injectables/OpenCVService.html":{},"interfaces/Point2D.html":{},"interfaces/ProjectConfig.html":{},"components/ProjectConfigurationComponent.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"classes/StampMaker.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["color.slice(1",{"_index":571,"title":{},"body":{"interfaces/Color.html":{},"classes/StampMaker.html":{}}}],["color[0",{"_index":570,"title":{},"body":{"interfaces/Color.html":{},"classes/StampMaker.html":{}}}],["colorpickermodule",{"_index":1219,"title":{},"body":{"components/LabelsComponent.html":{},"components/ProjectConfigurationComponent.html":{}}}],["colors",{"_index":993,"title":{},"body":{"injectables/IOService.html":{},"interfaces/LabelFormat.html":{},"injectables/OpenCVService.html":{}}}],["combinedcanvas",{"_index":382,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["combinedctx",{"_index":383,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["combines",{"_index":2594,"title":{},"body":{"index.html":{}}}],["commandprocessed",{"_index":334,"title":{},"body":{"injectables/CLIService.html":{},"interfaces/EventPayload.html":{}}}],["commonmodule",{"_index":869,"title":{},"body":{"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/LabelsComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["communication",{"_index":2615,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"overview.html":{}}}],["components/core/drawable",{"_index":968,"title":{},"body":{"injectables/IOService.html":{}}}],["components/interface/loading/loading.component",{"_index":82,"title":{},"body":{"components/AppComponent.html":{}}}],["componenttohex",{"_index":2461,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["componenttohex(c",{"_index":2534,"title":{},"body":{"miscellaneous/functions.html":{}}}],["compute",{"_index":1572,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["computecombinedcanvas",{"_index":388,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["computed",{"_index":2358,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["conditional",{"_index":2164,"title":{},"body":{"components/ToolSettingComponent.html":{}}}],["config",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"injectables/CLIService.html":{},"interfaces/EventPayload.html":{},"injectables/ProjectService.html":{}}}],["config.classification_classes",{"_index":1968,"title":{},"body":{"injectables/ProjectService.html":{}}}],["config.classification_classes.foreach((task",{"_index":1969,"title":{},"body":{"injectables/ProjectService.html":{}}}],["config.classification_multilabel",{"_index":1974,"title":{},"body":{"injectables/ProjectService.html":{}}}],["config.classification_multilabel.classes",{"_index":1977,"title":{},"body":{"injectables/ProjectService.html":{}}}],["config.classification_multilabel.default",{"_index":1978,"title":{},"body":{"injectables/ProjectService.html":{}}}],["config.classification_multilabel.name",{"_index":1976,"title":{},"body":{"injectables/ProjectService.html":{}}}],["config.input_dir",{"_index":1963,"title":{},"body":{"injectables/ProjectService.html":{}}}],["config.is_bbox_detection",{"_index":1961,"title":{},"body":{"injectables/ProjectService.html":{}}}],["config.is_classification",{"_index":1958,"title":{},"body":{"injectables/ProjectService.html":{}}}],["config.is_instance_segmentation",{"_index":1960,"title":{},"body":{"injectables/ProjectService.html":{}}}],["config.is_segmentation",{"_index":1959,"title":{},"body":{"injectables/ProjectService.html":{}}}],["config.output_dir",{"_index":1964,"title":{},"body":{"injectables/ProjectService.html":{}}}],["config.project_name",{"_index":1962,"title":{},"body":{"injectables/ProjectService.html":{}}}],["config.segmentation_classes",{"_index":1965,"title":{},"body":{"injectables/ProjectService.html":{}}}],["config.segmentation_classes.map((label",{"_index":1966,"title":{},"body":{"injectables/ProjectService.html":{}}}],["configuration",{"_index":482,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{},"components/ProjectConfigurationComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["configuration'},{'name",{"_index":220,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["configuration.component",{"_index":1799,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["configuration.component.html",{"_index":491,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{},"components/ProjectConfigurationComponent.html":{}}}],["configuration.component.scss",{"_index":492,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{},"components/ProjectConfigurationComponent.html":{}}}],["configuration.component.ts",{"_index":481,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{},"components/ProjectConfigurationComponent.html":{},"coverage.html":{}}}],["configuration.component.ts:104",{"_index":1775,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["configuration.component.ts:115",{"_index":1777,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["configuration.component.ts:119",{"_index":1780,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["configuration.component.ts:124",{"_index":1778,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["configuration.component.ts:133",{"_index":1785,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["configuration.component.ts:21",{"_index":502,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["configuration.component.ts:23",{"_index":519,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["configuration.component.ts:25",{"_index":506,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["configuration.component.ts:29",{"_index":509,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["configuration.component.ts:34",{"_index":504,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["configuration.component.ts:39",{"_index":514,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["configuration.component.ts:45",{"_index":508,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["configuration.component.ts:55",{"_index":1787,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["configuration.component.ts:57",{"_index":1788,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["configuration.component.ts:58",{"_index":1789,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["configuration.component.ts:59",{"_index":1774,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["configuration.component.ts:60",{"_index":518,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["configuration.component.ts:61",{"_index":1791,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["configuration.component.ts:62",{"_index":1790,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["configuration.component.ts:64",{"_index":516,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["configuration.component.ts:67",{"_index":1781,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["configuration.component.ts:68",{"_index":511,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["configuration.component.ts:76",{"_index":1782,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["configuration.component.ts:87",{"_index":1783,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["configuration.component.ts:94",{"_index":1786,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["configuration/classification",{"_index":480,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{},"components/ProjectConfigurationComponent.html":{},"coverage.html":{}}}],["configuration/project",{"_index":1759,"title":{},"body":{"components/ProjectConfigurationComponent.html":{},"coverage.html":{}}}],["configure",{"_index":1823,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["connected",{"_index":1489,"title":{},"body":{"injectables/OpenCVService.html":{},"components/ToolSettingComponent.html":{}}}],["connectedness",{"_index":1733,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["connectivity",{"_index":2158,"title":{},"body":{"components/ToolSettingComponent.html":{}}}],["console.error('error",{"_index":1440,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["console.error(e",{"_index":1137,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["console.log(\"pushing",{"_index":2262,"title":{},"body":{"classes/UndoRedoStack.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{}}}],["console.log(\"redoing",{"_index":2259,"title":{},"body":{"classes/UndoRedoStack.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{}}}],["console.log(\"undoing",{"_index":2255,"title":{},"body":{"classes/UndoRedoStack.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{}}}],["console.log('command",{"_index":1801,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["console.log('crf",{"_index":1710,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["console.log('image",{"_index":201,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log('is",{"_index":2733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(event",{"_index":361,"title":{},"body":{"injectables/CLIService.html":{},"interfaces/EventPayload.html":{}}}],["console.log(this.percentagebeforerefresh",{"_index":906,"title":{},"body":{"components/GalleryComponent.html":{}}}],["const",{"_index":359,"title":{},"body":{"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"components/ClassificationConfigurationComponent.html":{},"interfaces/Color.html":{},"injectables/DrawService.html":{},"interfaces/EventPayload.html":{},"injectables/IOService.html":{},"injectables/LabelsService.html":{},"injectables/OpenCVService.html":{},"injectables/PostProcessService.html":{},"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{},"classes/StampMaker.html":{},"injectables/StateManagerService.html":{},"classes/Tool.html":{},"classes/Tools.html":{},"injectables/UndoRedoService.html":{},"classes/UndoRedoStack.html":{},"injectables/ZoomPanService.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{},"miscellaneous/variables.html":{}}}],["construction",{"_index":2699,"title":{},"body":{"index.html":{}}}],["constructlabeltreenode",{"_index":1316,"title":{},"body":{"injectables/LabelsService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["constructlabeltreenode(labels",{"_index":2539,"title":{},"body":{"miscellaneous/functions.html":{}}}],["constructlabeltreenode(this.listsegmentationlabels",{"_index":1344,"title":{},"body":{"injectables/LabelsService.html":{}}}],["constructor",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"injectables/BboxManagerService.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"components/ClassificationConfigurationComponent.html":{},"interfaces/Color.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"injectables/ImageProcessingService.html":{},"components/InstanceLabelComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"components/LoadingComponent.html":{},"classes/MulticlassTask.html":{},"classes/MultilabelTask.html":{},"injectables/OpenCVService.html":{},"injectables/PostProcessService.html":{},"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{},"components/SVGElementsComponent.html":{},"injectables/SVGUIService.html":{},"classes/StampMaker.html":{},"injectables/StateManagerService.html":{},"classes/Tool.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UndoRedoService.html":{},"injectables/ViewService.html":{},"injectables/ZoomPanService.html":{}}}],["constructor(canvasmanagerservice",{"_index":2194,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["constructor(drawservice",{"_index":2136,"title":{},"body":{"components/ToolSettingComponent.html":{}}}],["constructor(editorservice",{"_index":1087,"title":{},"body":{"injectables/ImageProcessingService.html":{},"injectables/PostProcessService.html":{},"injectables/StateManagerService.html":{},"components/ToolbarComponent.html":{}}}],["constructor(el",{"_index":318,"title":{},"body":{"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/LabelledSwitchComponent.html":{}}}],["constructor(id",{"_index":2099,"title":{},"body":{"classes/Tool.html":{},"classes/Tools.html":{}}}],["constructor(labelservice",{"_index":501,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{},"injectables/DrawService.html":{},"components/SVGElementsComponent.html":{}}}],["constructor(labelsservice",{"_index":1231,"title":{},"body":{"components/LabelsComponent.html":{}}}],["constructor(ngxopencv",{"_index":1398,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["constructor(ngzone",{"_index":338,"title":{},"body":{"injectables/CLIService.html":{}}}],["constructor(private",{"_index":326,"title":{},"body":{"components/BlockableDiv.html":{},"components/BlockableP.html":{},"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"interfaces/EventPayload.html":{},"components/GalleryElementComponent.html":{},"injectables/ImageProcessingService.html":{},"components/InstanceLabelComponent.html":{},"components/LabelledSwitchComponent.html":{},"injectables/OpenCVService.html":{},"injectables/StateManagerService.html":{},"injectables/ViewService.html":{},"injectables/ZoomPanService.html":{}}}],["constructor(projectservice",{"_index":881,"title":{},"body":{"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"components/InstanceLabelComponent.html":{},"components/ProjectConfigurationComponent.html":{}}}],["constructor(public",{"_index":526,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/LoadingComponent.html":{},"classes/MulticlassTask.html":{},"classes/MultilabelTask.html":{},"components/SVGElementsComponent.html":{}}}],["constructor(router",{"_index":2273,"title":{},"body":{"injectables/ViewService.html":{}}}],["constructor(stateservice",{"_index":402,"title":{},"body":{"injectables/CanvasManagerService.html":{},"injectables/ZoomPanService.html":{}}}],["constructor(taskname",{"_index":1367,"title":{},"body":{"classes/MulticlassTask.html":{},"classes/MultilabelTask.html":{}}}],["constructor(viewservice",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/LoadingComponent.html":{},"injectables/ProjectService.html":{}}}],["context",{"_index":596,"title":{},"body":{"interfaces/Color.html":{},"injectables/OpenCVService.html":{},"classes/StampMaker.html":{},"miscellaneous/functions.html":{}}}],["context!.createimagedata(size",{"_index":599,"title":{},"body":{"interfaces/Color.html":{},"classes/StampMaker.html":{}}}],["contrast",{"_index":1071,"title":{},"body":{"injectables/ImageProcessingService.html":{},"injectables/OpenCVService.html":{},"components/ToolSettingComponent.html":{}}}],["convert",{"_index":1151,"title":{},"body":{"injectables/ImageProcessingService.html":{},"injectables/OpenCVService.html":{},"injectables/ProjectService.html":{},"components/ToolSettingComponent.html":{}}}],["converttoblob",{"_index":1039,"title":{},"body":{"injectables/IOService.html":{}}}],["copy",{"_index":1632,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["core/blockable/div/div.component",{"_index":2177,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["core/blockable/p/p.component",{"_index":2176,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["core/canvases/tools",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["core/drawable",{"_index":2142,"title":{},"body":{"components/ToolSettingComponent.html":{}}}],["core/interface",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"injectables/BboxManagerService.html":{},"injectables/CLIService.html":{},"interfaces/EventPayload.html":{},"injectables/IOService.html":{},"components/InstanceLabelComponent.html":{},"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"injectables/OpenCVService.html":{},"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{},"components/SVGElementsComponent.html":{}}}],["core/io/formats",{"_index":964,"title":{},"body":{"injectables/IOService.html":{}}}],["core/io/images",{"_index":925,"title":{},"body":{"components/GalleryElementComponent.html":{},"injectables/ProjectService.html":{}}}],["core/io/save_load",{"_index":972,"title":{},"body":{"injectables/IOService.html":{},"injectables/ProjectService.html":{}}}],["core/labelled",{"_index":1796,"title":{},"body":{"components/ProjectConfigurationComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["core/misc/colors",{"_index":1175,"title":{},"body":{"components/InstanceLabelComponent.html":{},"injectables/OpenCVService.html":{},"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{}}}],["core/misc/undoredo",{"_index":2203,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["core/task",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"components/ClassificationConfigurationComponent.html":{},"injectables/LabelsService.html":{},"injectables/ProjectService.html":{}}}],["corrected",{"_index":1601,"title":{},"body":{"injectables/OpenCVService.html":{},"index.html":{}}}],["corrected.convertto(corrected",{"_index":1606,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["corrected.delete",{"_index":1612,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["correction",{"_index":1593,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["coverage",{"_index":2426,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["covered",{"_index":2155,"title":{},"body":{"components/ToolSettingComponent.html":{}}}],["create",{"_index":1476,"title":{},"body":{"injectables/OpenCVService.html":{},"components/ProjectConfigurationComponent.html":{},"index.html":{}}}],["create_project",{"_index":1847,"title":{},"body":{"injectables/ProjectService.html":{}}}],["create_project(config",{"_index":1856,"title":{},"body":{"injectables/ProjectService.html":{}}}],["createclisubscription",{"_index":38,"title":{},"body":{"components/AppComponent.html":{}}}],["createimagebitmap(data",{"_index":2216,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["crf",{"_index":2126,"title":{},"body":{"classes/Tool.html":{},"classes/Tools.html":{},"miscellaneous/enumerations.html":{}}}],["crf_post_process",{"_index":1674,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["csslayer",{"_index":120,"title":{},"body":{"components/AppComponent.html":{}}}],["ctx",{"_index":410,"title":{},"body":{"injectables/CanvasManagerService.html":{},"injectables/DrawService.html":{},"injectables/ImageProcessingService.html":{},"injectables/OpenCVService.html":{},"injectables/UndoRedoService.html":{}}}],["ctx.beginpath",{"_index":709,"title":{},"body":{"injectables/DrawService.html":{}}}],["ctx.canvas",{"_index":727,"title":{},"body":{"injectables/DrawService.html":{}}}],["ctx.canvas.height",{"_index":1458,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["ctx.canvas.width",{"_index":1456,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["ctx.clearrect(0",{"_index":476,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["ctx.drawimage",{"_index":771,"title":{},"body":{"injectables/DrawService.html":{},"injectables/PostProcessService.html":{}}}],["ctx.drawimage(img",{"_index":1128,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["ctx.fillrect(0",{"_index":756,"title":{},"body":{"injectables/DrawService.html":{}}}],["ctx.fillrect(rect.x",{"_index":777,"title":{},"body":{"injectables/DrawService.html":{}}}],["ctx.fillstyle",{"_index":753,"title":{},"body":{"injectables/DrawService.html":{}}}],["ctx.getimagedata(0",{"_index":1460,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["ctx.getimagedata(bbox.x",{"_index":1616,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["ctx.globalcompositeoperation",{"_index":707,"title":{},"body":{"injectables/DrawService.html":{},"injectables/PostProcessService.html":{}}}],["ctx.imagesmoothingenabled",{"_index":1127,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["ctx.lineto",{"_index":713,"title":{},"body":{"injectables/DrawService.html":{}}}],["ctx.moveto",{"_index":710,"title":{},"body":{"injectables/DrawService.html":{}}}],["ctx.putimagedata(processedimagedata",{"_index":1635,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["ctx.stroke",{"_index":716,"title":{},"body":{"injectables/DrawService.html":{}}}],["ctx.strokestyle",{"_index":754,"title":{},"body":{"injectables/DrawService.html":{}}}],["ctx?.clearrect",{"_index":2223,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["ctx?.clearrect(0",{"_index":2219,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["ctx?.drawimage",{"_index":2224,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["ctx?.drawimage(img",{"_index":2220,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["ctxclass.drawimage",{"_index":726,"title":{},"body":{"injectables/DrawService.html":{}}}],["ctxclass.globalcompositeoperation",{"_index":723,"title":{},"body":{"injectables/DrawService.html":{}}}],["current",{"_index":768,"title":{},"body":{"injectables/DrawService.html":{},"injectables/OpenCVService.html":{},"components/ToolSettingComponent.html":{}}}],["current_instance",{"_index":1350,"title":{},"body":{"injectables/LabelsService.html":{}}}],["currentpoint",{"_index":2028,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["custom",{"_index":2627,"title":{},"body":{"index.html":{}}}],["cv",{"_index":1436,"title":{},"body":{"injectables/OpenCVService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cv.addweighted(src",{"_index":1581,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.calchist(srcvec",{"_index":1527,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.color_gray2rgba",{"_index":1510,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.color_rgba2gray",{"_index":1509,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.color_rgba2rgb",{"_index":1515,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.convertscaleabs(image",{"_index":1570,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.convertscaleabs(src",{"_index":1512,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.cv_32f",{"_index":1531,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.cv_8u",{"_index":1450,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.cvtcolor(image",{"_index":1514,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.cvtcolor(src",{"_index":1508,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.divide(bhist",{"_index":1538,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.divide(ghist",{"_index":1539,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.divide(rhist",{"_index":1537,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.gaussianblur(src",{"_index":1579,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.imread(canvas",{"_index":1473,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.imread(input",{"_index":1507,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.imshow(canvas",{"_index":1474,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.imshow(output",{"_index":1511,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.inrange(src",{"_index":1659,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.mat",{"_index":1445,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.mat(rhist.rows",{"_index":1529,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.mat(src.size",{"_index":1625,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.mat.ones(3",{"_index":1449,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.mat.zeros(src.size",{"_index":1642,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.matfromimagedata(imgdata",{"_index":1462,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.matvector",{"_index":1517,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.medianblur(src",{"_index":1513,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.merge(vec",{"_index":1565,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.morph_gradient",{"_index":1465,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.morphologyex(src",{"_index":1464,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.norm_minmax",{"_index":1592,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.normalize(dst",{"_index":1591,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.pow(dst",{"_index":1603,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.scalar(image.rows",{"_index":1532,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.scalar(r",{"_index":1656,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.scalar(rgb[0",{"_index":1628,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.service",{"_index":439,"title":{},"body":{"injectables/CanvasManagerService.html":{},"injectables/DrawService.html":{},"injectables/ImageProcessingService.html":{}}}],["cv.service.ts",{"_index":1384,"title":{},"body":{"injectables/OpenCVService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cv.service.ts:121",{"_index":1424,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.service.ts:13",{"_index":1425,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.service.ts:131",{"_index":1407,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.service.ts:139",{"_index":1417,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.service.ts:14",{"_index":1428,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.service.ts:147",{"_index":1422,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.service.ts:15",{"_index":1430,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.service.ts:16",{"_index":1426,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.service.ts:17",{"_index":1400,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.service.ts:241",{"_index":1420,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.service.ts:267",{"_index":1415,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.service.ts:302",{"_index":1402,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.service.ts:342",{"_index":1405,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.service.ts:39",{"_index":1409,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.service.ts:65",{"_index":1413,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.service.ts:76",{"_index":1411,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.size(0",{"_index":1580,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.split(image",{"_index":1561,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.thresh_binary",{"_index":1623,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.threshold(gray",{"_index":1622,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv.threshold(mask",{"_index":1661,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cv_ready",{"_index":1385,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cvstate.error",{"_index":1439,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cvstate.loading",{"_index":1441,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["cvstate.ready",{"_index":1443,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["d20f39",{"_index":156,"title":{},"body":{"components/AppComponent.html":{}}}],["darkmodeselector",{"_index":118,"title":{},"body":{"components/AppComponent.html":{}}}],["darktheme",{"_index":119,"title":{},"body":{"components/AppComponent.html":{}}}],["data",{"_index":283,"title":{},"body":{"interfaces/BboxLabel.html":{},"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"interfaces/EventPayload.html":{},"injectables/IOService.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"injectables/OpenCVService.html":{},"interfaces/Point2D.html":{},"injectables/PostProcessService.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"injectables/UndoRedoService.html":{},"interfaces/Viewbox.html":{},"index.html":{}}}],["data.classification_classes",{"_index":1054,"title":{},"body":{"injectables/IOService.html":{}}}],["data.classification_multilabel",{"_index":1055,"title":{},"body":{"injectables/IOService.html":{}}}],["data.colors[index",{"_index":1011,"title":{},"body":{"injectables/IOService.html":{}}}],["data.mask_data",{"_index":1052,"title":{},"body":{"injectables/IOService.html":{}}}],["data.masksname.foreach((label",{"_index":1010,"title":{},"body":{"injectables/IOService.html":{}}}],["data.multiclass",{"_index":1019,"title":{},"body":{"injectables/IOService.html":{}}}],["data.multiclass.foreach((choice",{"_index":1021,"title":{},"body":{"injectables/IOService.html":{}}}],["data.multiclass.length",{"_index":1020,"title":{},"body":{"injectables/IOService.html":{}}}],["data.multilabel",{"_index":1016,"title":{},"body":{"injectables/IOService.html":{}}}],["data.shades",{"_index":1012,"title":{},"body":{"injectables/IOService.html":{}}}],["data.shades[index",{"_index":1013,"title":{},"body":{"injectables/IOService.html":{}}}],["data[((y",{"_index":1491,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["data[((y+1",{"_index":1493,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["data[(y",{"_index":1495,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["data[idx",{"_index":1488,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["data[idx+1",{"_index":1503,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["data[idx+2",{"_index":1504,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["data[idx+3",{"_index":1505,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["dataset",{"_index":2641,"title":{},"body":{"index.html":{}}}],["dataviewmodule",{"_index":871,"title":{},"body":{"components/GalleryComponent.html":{}}}],["debug",{"_index":40,"title":{},"body":{"components/AppComponent.html":{}}}],["declare",{"_index":1435,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["decorators",{"_index":1993,"title":{},"body":{"components/SVGElementsComponent.html":{}}}],["def",{"_index":2660,"title":{},"body":{"index.html":{}}}],["default",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"interfaces/BboxLabel.html":{},"injectables/BboxManagerService.html":{},"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"interfaces/Color.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"interfaces/ImageFromCLI.html":{},"injectables/ImageProcessingService.html":{},"components/InstanceLabelComponent.html":{},"injectables/LabelsService.html":{},"interfaces/MulticlassInterface.html":{},"classes/MulticlassTask.html":{},"interfaces/MultilabelInterface.html":{},"classes/MultilabelTask.html":{},"injectables/OpenCVService.html":{},"interfaces/Point2D.html":{},"injectables/PostProcessService.html":{},"interfaces/ProjectConfig.html":{},"components/ProjectConfigurationComponent.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"components/SVGElementsComponent.html":{},"injectables/SVGUIService.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"classes/StampMaker.html":{},"injectables/StateManagerService.html":{},"interfaces/Thumbnail.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"classes/Tools.html":{},"interfaces/UndoRedoCanvasElement.html":{},"injectables/UndoRedoService.html":{},"classes/UndoRedoStack.html":{},"injectables/ViewService.html":{},"interfaces/Viewbox.html":{},"injectables/ZoomPanService.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{},"miscellaneous/variables.html":{}}}],["defaultinputfolder",{"_index":2723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultoutputfolder",{"_index":2725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultprojectname",{"_index":2721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultregex",{"_index":2727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"injectables/BboxManagerService.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"components/ClassificationConfigurationComponent.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"injectables/ImageProcessingService.html":{},"components/InstanceLabelComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"components/LoadingComponent.html":{},"classes/MulticlassTask.html":{},"classes/MultilabelTask.html":{},"injectables/OpenCVService.html":{},"injectables/PostProcessService.html":{},"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{},"components/SVGElementsComponent.html":{},"injectables/SVGUIService.html":{},"classes/StampMaker.html":{},"injectables/StateManagerService.html":{},"classes/Tool.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"classes/Tools.html":{},"injectables/UndoRedoService.html":{},"classes/UndoRedoStack.html":{},"injectables/ViewService.html":{},"injectables/ZoomPanService.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{}}}],["deletesegmentationclass",{"_index":1767,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["deletesegmentationclass(seglabel",{"_index":1776,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["demo",{"_index":2722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dependencies",{"_index":2479,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{}}}],["desktop",{"_index":2617,"title":{},"body":{"index.html":{}}}],["destination",{"_index":724,"title":{},"body":{"injectables/DrawService.html":{},"injectables/PostProcessService.html":{}}}],["detailed",{"_index":2694,"title":{},"body":{"index.html":{}}}],["detect",{"_index":1452,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["devbuilding",{"_index":2587,"title":{},"body":{"index.html":{}}}],["development",{"_index":2583,"title":{},"body":{"index.html":{}}}],["df8e1d",{"_index":151,"title":{},"body":{"components/AppComponent.html":{}}}],["diabetic",{"_index":2654,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":1795,"title":{},"body":{"components/ProjectConfigurationComponent.html":{},"dependencies.html":{}}}],["difference",{"_index":1575,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["different",{"_index":1454,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["directive",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["directives",{"_index":254,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["directly",{"_index":2629,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1803,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["disabledrag",{"_index":2299,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["diseases",{"_index":2658,"title":{},"body":{"index.html":{}}}],["disk",{"_index":1822,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["distancebetween",{"_index":2453,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["distancebetween(point1",{"_index":2526,"title":{},"body":{"miscellaneous/functions.html":{}}}],["div",{"_index":312,"title":{},"body":{"components/BlockableDiv.html":{}}}],["div'},{'name",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["dividermodule",{"_index":490,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{},"components/LabelsComponent.html":{},"components/ProjectConfigurationComponent.html":{}}}],["doc",{"_index":987,"title":{},"body":{"injectables/IOService.html":{}}}],["doc.getelementsbytagname('image",{"_index":998,"title":{},"body":{"injectables/IOService.html":{}}}],["doc.getelementsbytagname('multilabel",{"_index":1003,"title":{},"body":{"injectables/IOService.html":{}}}],["document.createelement('canvas",{"_index":1121,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["document.createelementns('http://www.w3.org/2000/svg",{"_index":1060,"title":{},"body":{"injectables/IOService.html":{}}}],["documentation",{"_index":2427,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["domparser",{"_index":986,"title":{},"body":{"injectables/IOService.html":{}}}],["don't",{"_index":1109,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["dr",{"_index":2656,"title":{},"body":{"index.html":{}}}],["drag",{"_index":2300,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["drag(event",{"_index":2318,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["draw",{"_index":610,"title":{},"body":{"injectables/DrawService.html":{}}}],["draw(event",{"_index":636,"title":{},"body":{"injectables/DrawService.html":{}}}],["drawable",{"_index":222,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["drawablecanvascomponent",{"_index":221,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["drawimage(this.ref_canvas",{"_index":1144,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["drawing",{"_index":2184,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["drawline",{"_index":2454,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["drawline(context",{"_index":2527,"title":{},"body":{"miscellaneous/functions.html":{}}}],["drawpen",{"_index":611,"title":{},"body":{"injectables/DrawService.html":{}}}],["drawpen(ctx",{"_index":639,"title":{},"body":{"injectables/DrawService.html":{}}}],["drawquadtreebbox",{"_index":1675,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["drawquadtreebbox(maskdata",{"_index":1683,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["drawservice",{"_index":602,"title":{"injectables/DrawService.html":{}},"body":{"injectables/DrawService.html":{},"components/LabelsComponent.html":{},"components/ToolSettingComponent.html":{},"coverage.html":{}}}],["dst",{"_index":1578,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["dst.delete",{"_index":1582,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["dx",{"_index":2374,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["dy",{"_index":2376,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["dynamic",{"_index":2487,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1136,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["each",{"_index":1648,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["ease",{"_index":2555,"title":{},"body":{"index.html":{}}}],["easefactor",{"_index":2402,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["easy",{"_index":2569,"title":{},"body":{"index.html":{}}}],["edge",{"_index":464,"title":{},"body":{"injectables/CanvasManagerService.html":{},"injectables/OpenCVService.html":{},"components/ToolSettingComponent.html":{}}}],["edgedetection",{"_index":1392,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["edgedetection(ctx",{"_index":1408,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["edgedetection_v2",{"_index":1393,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["edgedetection_v2(ctx",{"_index":1410,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["edgedetectioncanvas",{"_index":1394,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["edgedetectioncanvas(canvas",{"_index":1412,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["edges",{"_index":1453,"title":{},"body":{"injectables/OpenCVService.html":{},"components/ToolbarComponent.html":{}}}],["edgesonly",{"_index":769,"title":{},"body":{"injectables/DrawService.html":{},"injectables/EditorService.html":{}}}],["edgestrength",{"_index":1072,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["editor",{"_index":1944,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/ViewService.html":{}}}],["editor'},{'name",{"_index":225,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["editorcomponent",{"_index":224,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["editorservice",{"_index":33,"title":{"injectables/EditorService.html":{}},"body":{"components/AppComponent.html":{},"injectables/CanvasManagerService.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"injectables/ImageProcessingService.html":{},"components/LabelsComponent.html":{},"injectables/PostProcessService.html":{},"components/SVGElementsComponent.html":{},"injectables/StateManagerService.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UndoRedoService.html":{},"coverage.html":{}}}],["el",{"_index":321,"title":{},"body":{"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/LabelledSwitchComponent.html":{}}}],["element",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UndoRedoService.html":{},"classes/UndoRedoStack.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{}}}],["element'},{'name",{"_index":230,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["element.component",{"_index":892,"title":{},"body":{"components/GalleryComponent.html":{}}}],["element.component.html",{"_index":911,"title":{},"body":{"components/GalleryElementComponent.html":{}}}],["element.component.scss",{"_index":912,"title":{},"body":{"components/GalleryElementComponent.html":{}}}],["element.component.ts",{"_index":909,"title":{},"body":{"components/GalleryElementComponent.html":{},"coverage.html":{}}}],["element.component.ts:21",{"_index":919,"title":{},"body":{"components/GalleryElementComponent.html":{}}}],["element.component.ts:22",{"_index":918,"title":{},"body":{"components/GalleryElementComponent.html":{}}}],["element.component.ts:23",{"_index":917,"title":{},"body":{"components/GalleryElementComponent.html":{}}}],["element.component.ts:28",{"_index":921,"title":{},"body":{"components/GalleryElementComponent.html":{}}}],["element.component.ts:36",{"_index":922,"title":{},"body":{"components/GalleryElementComponent.html":{}}}],["element.component.ts:41",{"_index":920,"title":{},"body":{"components/GalleryElementComponent.html":{}}}],["element.data",{"_index":2214,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["element.data[index",{"_index":2212,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["element.index",{"_index":2213,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["element/gallery",{"_index":891,"title":{},"body":{"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"coverage.html":{}}}],["elementref",{"_index":319,"title":{},"body":{"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/LabelledSwitchComponent.html":{},"components/SVGElementsComponent.html":{}}}],["elements",{"_index":996,"title":{},"body":{"injectables/IOService.html":{}}}],["empty",{"_index":1500,"title":{},"body":{"injectables/OpenCVService.html":{},"injectables/UndoRedoService.html":{},"classes/UndoRedoStack.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{}}}],["enabled",{"_index":699,"title":{},"body":{"injectables/DrawService.html":{}}}],["enabledrag",{"_index":2301,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["enables",{"_index":2621,"title":{},"body":{"index.html":{}}}],["enddrag",{"_index":2302,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["enddraw",{"_index":612,"title":{},"body":{"injectables/DrawService.html":{}}}],["endloading",{"_index":2269,"title":{},"body":{"injectables/ViewService.html":{}}}],["enforceconnectivity",{"_index":797,"title":{},"body":{"injectables/EditorService.html":{}}}],["ensuring",{"_index":2563,"title":{},"body":{"index.html":{}}}],["enter",{"_index":1828,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["enum",{"_index":2124,"title":{},"body":{"classes/Tool.html":{},"classes/Tools.html":{}}}],["enumerations",{"_index":2515,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.defaultinputfolder",{"_index":1875,"title":{},"body":{"injectables/ProjectService.html":{}}}],["environment.defaultoutputfolder",{"_index":1885,"title":{},"body":{"injectables/ProjectService.html":{}}}],["environment.defaultprojectname",{"_index":1888,"title":{},"body":{"injectables/ProjectService.html":{}}}],["environment.defaultregex",{"_index":1877,"title":{},"body":{"injectables/ProjectService.html":{}}}],["environments/environment",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{}}}],["erase",{"_index":2181,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["eraseall",{"_index":706,"title":{},"body":{"injectables/DrawService.html":{},"injectables/EditorService.html":{}}}],["eraseall_post_process",{"_index":1676,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["eraser",{"_index":2115,"title":{},"body":{"classes/Tool.html":{},"classes/Tools.html":{}}}],["eraserpath",{"_index":2004,"title":{},"body":{"injectables/SVGUIService.html":{}}}],["eraserpen",{"_index":613,"title":{},"body":{"injectables/DrawService.html":{}}}],["eraserpen(ctx",{"_index":642,"title":{},"body":{"injectables/DrawService.html":{}}}],["err",{"_index":600,"title":{},"body":{"interfaces/Color.html":{},"classes/StampMaker.html":{}}}],["error",{"_index":368,"title":{},"body":{"injectables/CLIService.html":{},"interfaces/EventPayload.html":{}}}],["error('no",{"_index":736,"title":{},"body":{"injectables/DrawService.html":{}}}],["error.message",{"_index":371,"title":{},"body":{"injectables/CLIService.html":{},"interfaces/EventPayload.html":{}}}],["errormessage",{"_index":369,"title":{},"body":{"injectables/CLIService.html":{},"interfaces/EventPayload.html":{}}}],["even",{"_index":129,"title":{},"body":{"components/AppComponent.html":{}}}],["event",{"_index":356,"title":{},"body":{"injectables/CLIService.html":{},"components/ClassificationConfigurationComponent.html":{},"injectables/DrawService.html":{},"interfaces/EventPayload.html":{},"components/LabelsComponent.html":{},"injectables/ZoomPanService.html":{}}}],["event.ctrlkey",{"_index":787,"title":{},"body":{"injectables/DrawService.html":{}}}],["event.data",{"_index":1260,"title":{},"body":{"components/LabelsComponent.html":{}}}],["event.deltay",{"_index":788,"title":{},"body":{"injectables/DrawService.html":{},"injectables/ZoomPanService.html":{}}}],["event.movementx",{"_index":2375,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["event.movementy",{"_index":2377,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["event.node.data",{"_index":1263,"title":{},"body":{"components/LabelsComponent.html":{}}}],["event.payload.data",{"_index":360,"title":{},"body":{"injectables/CLIService.html":{},"interfaces/EventPayload.html":{}}}],["event.payload.event_id",{"_index":365,"title":{},"body":{"injectables/CLIService.html":{},"interfaces/EventPayload.html":{}}}],["event.preventdefault",{"_index":2413,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["event.target",{"_index":538,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["event_id",{"_index":352,"title":{},"body":{"injectables/CLIService.html":{},"interfaces/EventPayload.html":{}}}],["eventemitter",{"_index":1208,"title":{},"body":{"components/LabelledSwitchComponent.html":{}}}],["eventpayload",{"_index":351,"title":{"interfaces/EventPayload.html":{}},"body":{"injectables/CLIService.html":{},"interfaces/EventPayload.html":{},"coverage.html":{}}}],["example",{"_index":2585,"title":{},"body":{"index.html":{}}}],["example1/class",{"_index":149,"title":{},"body":{"components/AppComponent.html":{}}}],["example2/class",{"_index":154,"title":{},"body":{"components/AppComponent.html":{}}}],["examples",{"_index":2695,"title":{},"body":{"index.html":{}}}],["exchange",{"_index":2625,"title":{},"body":{"index.html":{}}}],["exist",{"_index":1335,"title":{},"body":{"injectables/LabelsService.html":{}}}],["existing",{"_index":2179,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["existingroots",{"_index":1919,"title":{},"body":{"injectables/ProjectService.html":{}}}],["existingroots.includes(projectfile.root",{"_index":1922,"title":{},"body":{"injectables/ProjectService.html":{}}}],["exists",{"_index":1007,"title":{},"body":{"injectables/IOService.html":{},"injectables/LabelsService.html":{}}}],["explorer",{"_index":1830,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["export",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"interfaces/BboxLabel.html":{},"injectables/BboxManagerService.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"components/ClassificationConfigurationComponent.html":{},"interfaces/Color.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"interfaces/EventPayload.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"interfaces/ImageFromCLI.html":{},"injectables/ImageProcessingService.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"interfaces/LabelFormat.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"components/LoadingComponent.html":{},"interfaces/MulticlassInterface.html":{},"classes/MulticlassTask.html":{},"interfaces/MultilabelInterface.html":{},"classes/MultilabelTask.html":{},"injectables/OpenCVService.html":{},"interfaces/Point2D.html":{},"interfaces/Point2D-1.html":{},"injectables/PostProcessService.html":{},"interfaces/ProjectConfig.html":{},"components/ProjectConfigurationComponent.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"interfaces/Rect-1.html":{},"components/SVGElementsComponent.html":{},"injectables/SVGUIService.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"classes/StampMaker.html":{},"injectables/StateManagerService.html":{},"components/TestingComponent.html":{},"interfaces/Thumbnail.html":{},"classes/Tool.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"classes/Tools.html":{},"interfaces/UndoRedoCanvasElement.html":{},"injectables/UndoRedoService.html":{},"classes/UndoRedoStack.html":{},"injectables/ViewService.html":{},"interfaces/Viewbox.html":{},"interfaces/Viewbox-1.html":{},"injectables/ZoomPanService.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{}}}],["extractfeatures",{"_index":1721,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["extractimagesname",{"_index":1848,"title":{},"body":{"injectables/ProjectService.html":{}}}],["extractimagesname(files",{"_index":1858,"title":{},"body":{"injectables/ProjectService.html":{}}}],["extrema",{"_index":2153,"title":{},"body":{"components/ToolSettingComponent.html":{}}}],["f]{1,2",{"_index":553,"title":{},"body":{"interfaces/Color.html":{},"classes/StampMaker.html":{},"miscellaneous/variables.html":{}}}],["f]{1,2}[0",{"_index":552,"title":{},"body":{"interfaces/Color.html":{},"classes/StampMaker.html":{},"miscellaneous/variables.html":{}}}],["fa",{"_index":551,"title":{},"body":{"interfaces/Color.html":{},"classes/StampMaker.html":{},"miscellaneous/variables.html":{}}}],["false",{"_index":374,"title":{},"body":{"injectables/CLIService.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"interfaces/EventPayload.html":{},"injectables/IOService.html":{},"injectables/ImageProcessingService.html":{},"components/LabelsComponent.html":{},"injectables/OpenCVService.html":{},"injectables/PostProcessService.html":{},"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{},"injectables/StateManagerService.html":{},"injectables/ViewService.html":{},"injectables/ZoomPanService.html":{}}}],["fast",{"_index":1193,"title":{},"body":{"interfaces/LabelFormat.html":{},"dependencies.html":{}}}],["features",{"_index":2558,"title":{},"body":{"index.html":{}}}],["featuresextracted",{"_index":1673,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["ffffff",{"_index":739,"title":{},"body":{"injectables/DrawService.html":{}}}],["field",{"_index":2166,"title":{},"body":{"components/ToolSettingComponent.html":{}}}],["fieldset",{"_index":488,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["fieldsetmodule",{"_index":1222,"title":{},"body":{"components/LabelsComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/ToolSettingComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"interfaces/BboxLabel.html":{},"injectables/BboxManagerService.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"components/ClassificationConfigurationComponent.html":{},"interfaces/Color.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"interfaces/EventPayload.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"interfaces/ImageFromCLI.html":{},"injectables/ImageProcessingService.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"interfaces/LabelFormat.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"components/LoadingComponent.html":{},"interfaces/MulticlassInterface.html":{},"classes/MulticlassTask.html":{},"interfaces/MultilabelInterface.html":{},"classes/MultilabelTask.html":{},"injectables/OpenCVService.html":{},"interfaces/Point2D.html":{},"interfaces/Point2D-1.html":{},"injectables/PostProcessService.html":{},"interfaces/ProjectConfig.html":{},"components/ProjectConfigurationComponent.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"interfaces/Rect-1.html":{},"components/SVGElementsComponent.html":{},"injectables/SVGUIService.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"classes/StampMaker.html":{},"injectables/StateManagerService.html":{},"components/TestingComponent.html":{},"interfaces/Thumbnail.html":{},"classes/Tool.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"classes/Tools.html":{},"interfaces/UndoRedoCanvasElement.html":{},"injectables/UndoRedoService.html":{},"classes/UndoRedoStack.html":{},"injectables/ViewService.html":{},"interfaces/Viewbox.html":{},"interfaces/Viewbox-1.html":{},"injectables/ZoomPanService.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{},"coverage.html":{}}}],["file.split(this.inputfolder)[1",{"_index":1943,"title":{},"body":{"injectables/ProjectService.html":{}}}],["file.then((value",{"_index":1804,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["filelist",{"_index":1934,"title":{},"body":{"injectables/ProjectService.html":{}}}],["filename",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"injectables/ProjectService.html":{}}}],["filepath",{"_index":976,"title":{},"body":{"injectables/IOService.html":{},"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["files",{"_index":1860,"title":{},"body":{"injectables/ProjectService.html":{}}}],["files.map((file",{"_index":1942,"title":{},"body":{"injectables/ProjectService.html":{}}}],["fillcircle",{"_index":2014,"title":{},"body":{"classes/StampMaker.html":{}}}],["fillcircle(imagedata",{"_index":2020,"title":{},"body":{"classes/StampMaker.html":{}}}],["finalizedraw",{"_index":614,"title":{},"body":{"injectables/DrawService.html":{}}}],["finalizedraw(ctx",{"_index":644,"title":{},"body":{"injectables/DrawService.html":{}}}],["find",{"_index":765,"title":{},"body":{"injectables/DrawService.html":{}}}],["findandloadprojectfile",{"_index":1768,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["finished",{"_index":1048,"title":{},"body":{"injectables/IOService.html":{}}}],["flexible",{"_index":2568,"title":{},"body":{"index.html":{}}}],["float",{"_index":1130,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["floating",{"_index":1584,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["floatlabelmodule",{"_index":1761,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["folder",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{},"index.html":{}}}],["folders",{"_index":2572,"title":{},"body":{"index.html":{}}}],["for(let",{"_index":478,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["force",{"_index":2157,"title":{},"body":{"components/ToolSettingComponent.html":{}}}],["foreground",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"injectables/OpenCVService.html":{}}}],["foreground.copyto(output",{"_index":1633,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["foreground.delete",{"_index":1640,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["foreground.setto(new",{"_index":1627,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["format",{"_index":1466,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["formsmodule",{"_index":483,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["formula",{"_index":1594,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["framework",{"_index":2599,"title":{},"body":{"index.html":{}}}],["free",{"_index":1610,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["from_hex_to_rgb",{"_index":1434,"title":{},"body":{"injectables/OpenCVService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["from_hex_to_rgb(color",{"_index":1614,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["from_hex_to_rgb(hex",{"_index":2535,"title":{},"body":{"miscellaneous/functions.html":{}}}],["from_hex_to_rgb(labelcolor",{"_index":1650,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["from_rgb_to_hex",{"_index":2462,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["from_rgb_to_hex(r",{"_index":2536,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fromcanvastoimagecoordinates",{"_index":2303,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["fromcanvastoimagecoordinates(point",{"_index":2322,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["frontend",{"_index":2598,"title":{},"body":{"index.html":{}}}],["fs",{"_index":2494,"title":{},"body":{"dependencies.html":{}}}],["function",{"_index":2451,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":2517,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["fundus_data_toolkit.functional",{"_index":2642,"title":{},"body":{"index.html":{}}}],["fundus_lesions_toolkit.constants",{"_index":2644,"title":{},"body":{"index.html":{}}}],["fundus_lesions_toolkit.models.segmentation",{"_index":2639,"title":{},"body":{"index.html":{}}}],["fundus_odmac_toolkit.models.segmentation",{"_index":2646,"title":{},"body":{"index.html":{}}}],["g",{"_index":547,"title":{},"body":{"interfaces/Color.html":{},"injectables/OpenCVService.html":{},"classes/StampMaker.html":{},"miscellaneous/functions.html":{}}}],["g_cdf",{"_index":1547,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["g_cdf[i",{"_index":1551,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["gallery",{"_index":229,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["gallery'},{'name",{"_index":227,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["gallery.component.html",{"_index":873,"title":{},"body":{"components/GalleryComponent.html":{}}}],["gallery.component.scss",{"_index":874,"title":{},"body":{"components/GalleryComponent.html":{}}}],["gallerycomponent",{"_index":226,"title":{"components/GalleryComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["galleryelementcomponent",{"_index":228,"title":{"components/GalleryElementComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["gamma",{"_index":1073,"title":{},"body":{"injectables/ImageProcessingService.html":{},"injectables/OpenCVService.html":{},"components/ToolSettingComponent.html":{}}}],["gamma_inv",{"_index":1596,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["gammacorrection",{"_index":1395,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["gammacorrection(input",{"_index":1414,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["gaussian",{"_index":1573,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["generate_shades",{"_index":1174,"title":{},"body":{"components/InstanceLabelComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["generate_shades(hex",{"_index":2537,"title":{},"body":{"miscellaneous/functions.html":{}}}],["generate_shades(this.label.color",{"_index":1181,"title":{},"body":{"components/InstanceLabelComponent.html":{}}}],["generated",{"_index":2591,"title":{},"body":{"index.html":{}}}],["generatethumbnails",{"_index":1762,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["getactivecanvas",{"_index":389,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["getactivectx",{"_index":390,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["getactiveindex",{"_index":391,"title":{},"body":{"injectables/CanvasManagerService.html":{},"injectables/LabelsService.html":{}}}],["getactivesavepath",{"_index":940,"title":{},"body":{"injectables/IOService.html":{}}}],["getactivesavepath(imagename",{"_index":951,"title":{},"body":{"injectables/IOService.html":{}}}],["getallcanvas",{"_index":392,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["getallcanvasctx",{"_index":393,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["getattribute('classes",{"_index":1001,"title":{},"body":{"injectables/IOService.html":{}}}],["getblockableelement",{"_index":315,"title":{},"body":{"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/LabelledSwitchComponent.html":{}}}],["getboundingbox",{"_index":2034,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["getbrushsizeoffset",{"_index":2035,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["getbuffercanvas",{"_index":394,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["getbufferctx",{"_index":395,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["getcanvascoordinates",{"_index":2304,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["getcanvascoordinates(event",{"_index":2324,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["getcombinedcanvas",{"_index":396,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["getcombinedctx",{"_index":397,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["getcontext('2d",{"_index":1696,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["getcurrentcanvas",{"_index":1084,"title":{},"body":{"injectables/ImageProcessingService.html":{},"injectables/PostProcessService.html":{}}}],["getdefaultcolor",{"_index":1798,"title":{},"body":{"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getdefaultcolor(index",{"_index":1967,"title":{},"body":{"injectables/ProjectService.html":{}}}],["getdefaultcolor(n",{"_index":2538,"title":{},"body":{"miscellaneous/functions.html":{}}}],["geteraserpathassvg",{"_index":2006,"title":{},"body":{"injectables/SVGUIService.html":{}}}],["getfillcolor",{"_index":615,"title":{},"body":{"injectables/DrawService.html":{}}}],["getimagecoordinates",{"_index":2305,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["getimagecoordinates(event",{"_index":2326,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["getimagedata",{"_index":1697,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["getimagedata(rect.x",{"_index":1723,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["getinterval",{"_index":878,"title":{},"body":{"components/GalleryComponent.html":{}}}],["getoffset",{"_index":2306,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["getscale",{"_index":2307,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["getshades",{"_index":1166,"title":{},"body":{"components/InstanceLabelComponent.html":{}}}],["getsvgviewbox",{"_index":2308,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["getthumbnail",{"_index":914,"title":{},"body":{"components/GalleryElementComponent.html":{}}}],["getting",{"_index":2540,"title":{"index.html":{}},"body":{}}],["gettransform",{"_index":2309,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["gettreenode",{"_index":1284,"title":{},"body":{"injectables/LabelsService.html":{}}}],["getviewbox",{"_index":2310,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["ghist",{"_index":1524,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["ghist.delete",{"_index":1542,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["gif|jpe?g|tiff?|png|webp|bmp",{"_index":2728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["given",{"_index":1451,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["glaucoma",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["gmax",{"_index":1557,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["gmin",{"_index":1552,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["gnorm_hist",{"_index":1536,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["gnorm_hist.delete",{"_index":1568,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["gonext",{"_index":1849,"title":{},"body":{"injectables/ProjectService.html":{}}}],["good",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["goprevious",{"_index":1850,"title":{},"body":{"injectables/ProjectService.html":{}}}],["gradient",{"_index":1386,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["grading",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["gray",{"_index":1617,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["gray.delete",{"_index":1638,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["grayscale",{"_index":1463,"title":{},"body":{"injectables/OpenCVService.html":{},"components/ToolSettingComponent.html":{}}}],["gryscale",{"_index":1152,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["h",{"_index":1750,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["haschild",{"_index":1229,"title":{},"body":{"components/LabelsComponent.html":{}}}],["haschild(node",{"_index":1243,"title":{},"body":{"components/LabelsComponent.html":{}}}],["hasemptyneighbor",{"_index":1490,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["height",{"_index":276,"title":{},"body":{"interfaces/BboxLabel.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"injectables/OpenCVService.html":{},"interfaces/Point2D.html":{},"interfaces/Point2D-1.html":{},"injectables/PostProcessService.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"interfaces/Rect.html":{},"interfaces/Rect-1.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"injectables/StateManagerService.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{},"interfaces/Viewbox-1.html":{},"injectables/ZoomPanService.html":{}}}],["hex",{"_index":1615,"title":{},"body":{"injectables/OpenCVService.html":{},"miscellaneous/functions.html":{}}}],["hexpattern",{"_index":549,"title":{},"body":{"interfaces/Color.html":{},"classes/StampMaker.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hexpattern.test(color",{"_index":566,"title":{},"body":{"interfaces/Color.html":{},"classes/StampMaker.html":{}}}],["histogram",{"_index":2145,"title":{},"body":{"components/ToolSettingComponent.html":{}}}],["history",{"_index":1819,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["histsize",{"_index":1520,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["home/clement/documents/data/hmrformationrd",{"_index":2724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["home/clement/documents/tmp",{"_index":2726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["html",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["htmlcanvaselement",{"_index":1091,"title":{},"body":{"injectables/ImageProcessingService.html":{},"injectables/OpenCVService.html":{},"injectables/ZoomPanService.html":{}}}],["htmlelement",{"_index":324,"title":{},"body":{"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/LabelledSwitchComponent.html":{}}}],["htmlimageelement",{"_index":1095,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["htmlinputelement).value",{"_index":539,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["http://www.w3.org/1999/xlink",{"_index":1062,"title":{},"body":{"injectables/IOService.html":{}}}],["hypertension",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["i).astype(np.uint8",{"_index":2668,"title":{},"body":{"index.html":{}}}],["i.e",{"_index":193,"title":{},"body":{"components/AppComponent.html":{}}}],["icon",{"_index":2098,"title":{},"body":{"classes/Tool.html":{},"classes/Tools.html":{}}}],["id",{"_index":364,"title":{},"body":{"injectables/CLIService.html":{},"interfaces/EventPayload.html":{},"components/GalleryElementComponent.html":{},"classes/Tool.html":{},"classes/Tools.html":{}}}],["idea",{"_index":195,"title":{},"body":{"components/AppComponent.html":{}}}],["identifier",{"_index":2428,"title":{},"body":{"coverage.html":{}}}],["if(!this.labelservice.listsegmentationlabels[index].isvisible",{"_index":461,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["if(!this.labelservice.multilabeltask",{"_index":535,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["if(element",{"_index":2257,"title":{},"body":{"classes/UndoRedoStack.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{}}}],["if(name",{"_index":534,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["if(this.contrast",{"_index":1147,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["if(this.editorservice.edgesonly",{"_index":463,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["if(this.gamma",{"_index":1149,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["if(this.labelservice.multilabeltask.tasklabels.includes(name",{"_index":536,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["if(this.reinforceedges",{"_index":1158,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["if(this.shades.length",{"_index":1179,"title":{},"body":{"components/InstanceLabelComponent.html":{}}}],["if(this.stretchhist",{"_index":1145,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["if(this.use_medianblur",{"_index":1155,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["image",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"injectables/CanvasManagerService.html":{},"injectables/IOService.html":{},"injectables/OpenCVService.html":{},"injectables/PostProcessService.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"index.html":{}}}],["image.cols",{"_index":1533,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["image.convertto(image",{"_index":1560,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["image.delete",{"_index":1571,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["image/png",{"_index":1040,"title":{},"body":{"injectables/IOService.html":{},"injectables/UndoRedoService.html":{}}}],["image/svg+xml",{"_index":989,"title":{},"body":{"injectables/IOService.html":{}}}],["image_name",{"_index":194,"title":{},"body":{"components/AppComponent.html":{}}}],["image_path",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"interfaces/BboxLabel.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{}}}],["image_path.split(this.projectservice.inputfolder)[1",{"_index":200,"title":{},"body":{"components/AppComponent.html":{}}}],["imagebitmap",{"_index":2215,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["imagebitmap.then((img",{"_index":2217,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["imageconfig",{"_index":69,"title":{},"body":{"components/AppComponent.html":{}}}],["imagedata",{"_index":598,"title":{},"body":{"interfaces/Color.html":{},"injectables/OpenCVService.html":{},"injectables/PostProcessService.html":{},"classes/StampMaker.html":{}}}],["imagedata(new",{"_index":1468,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["imagedata.buffer",{"_index":1726,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["imagedata.data",{"_index":1475,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["imageelements",{"_index":997,"title":{},"body":{"injectables/IOService.html":{}}}],["imagefromcli",{"_index":67,"title":{"interfaces/ImageFromCLI.html":{}},"body":{"components/AppComponent.html":{},"interfaces/BboxLabel.html":{},"injectables/CLIService.html":{},"interfaces/EventPayload.html":{},"injectables/IOService.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{},"coverage.html":{}}}],["imageinput",{"_index":930,"title":{},"body":{"components/GalleryElementComponent.html":{}}}],["imageloaded",{"_index":335,"title":{},"body":{"injectables/CLIService.html":{},"interfaces/EventPayload.html":{}}}],["imagename",{"_index":916,"title":{},"body":{"components/GalleryElementComponent.html":{},"injectables/IOService.html":{}}}],["imagepath",{"_index":913,"title":{},"body":{"components/GalleryElementComponent.html":{}}}],["imageprocess",{"_index":2134,"title":{},"body":{"components/ToolSettingComponent.html":{}}}],["imageprocessingservice",{"_index":1067,"title":{"injectables/ImageProcessingService.html":{}},"body":{"injectables/ImageProcessingService.html":{},"injectables/PostProcessService.html":{},"components/ToolSettingComponent.html":{},"coverage.html":{}}}],["images",{"_index":1957,"title":{},"body":{"injectables/ProjectService.html":{},"index.html":{}}}],["imagesname",{"_index":1835,"title":{},"body":{"injectables/ProjectService.html":{}}}],["imagex",{"_index":2380,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["imagey",{"_index":2381,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["img",{"_index":469,"title":{},"body":{"injectables/CanvasManagerService.html":{},"injectables/ImageProcessingService.html":{},"injectables/UndoRedoService.html":{},"index.html":{}}}],["img.height",{"_index":1125,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["img.onload",{"_index":473,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["img.src",{"_index":470,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["img.width",{"_index":1123,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["imgdata",{"_index":1459,"title":{},"body":{"injectables/OpenCVService.html":{},"injectables/PostProcessService.html":{}}}],["imgdata.buffer",{"_index":1702,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["implements",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/ToolbarComponent.html":{}}}],["import",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"injectables/BboxManagerService.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"components/ClassificationConfigurationComponent.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"interfaces/EventPayload.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"injectables/ImageProcessingService.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"interfaces/LabelFormat.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"components/LoadingComponent.html":{},"injectables/OpenCVService.html":{},"injectables/PostProcessService.html":{},"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{},"components/SVGElementsComponent.html":{},"injectables/SVGUIService.html":{},"injectables/StateManagerService.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UndoRedoService.html":{},"classes/UndoRedoStack.html":{},"injectables/ViewService.html":{},"injectables/ZoomPanService.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{},"index.html":{}}}],["importprovidersfrom(ngxopencvmodule.forroot(opencvconfig",{"_index":2718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["imports",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["increment",{"_index":2143,"title":{},"body":{"components/ToolSettingComponent.html":{}}}],["incrementactiveinstance",{"_index":1285,"title":{},"body":{"injectables/LabelsService.html":{}}}],["incrementafterstroke",{"_index":798,"title":{},"body":{"injectables/EditorService.html":{}}}],["index",{"_index":30,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"interfaces/BboxLabel.html":{},"injectables/BboxManagerService.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"components/ClassificationConfigurationComponent.html":{},"interfaces/Color.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"interfaces/EventPayload.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"interfaces/ImageFromCLI.html":{},"injectables/ImageProcessingService.html":{},"components/InstanceLabelComponent.html":{},"interfaces/LabelFormat.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"components/LoadingComponent.html":{},"interfaces/MulticlassInterface.html":{},"classes/MulticlassTask.html":{},"interfaces/MultilabelInterface.html":{},"classes/MultilabelTask.html":{},"injectables/OpenCVService.html":{},"interfaces/Point2D.html":{},"interfaces/Point2D-1.html":{},"injectables/PostProcessService.html":{},"interfaces/ProjectConfig.html":{},"components/ProjectConfigurationComponent.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"interfaces/Rect-1.html":{},"components/SVGElementsComponent.html":{},"injectables/SVGUIService.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"classes/StampMaker.html":{},"injectables/StateManagerService.html":{},"interfaces/Thumbnail.html":{},"classes/Tool.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"classes/Tools.html":{},"interfaces/UndoRedoCanvasElement.html":{},"injectables/UndoRedoService.html":{},"classes/UndoRedoStack.html":{},"injectables/ViewService.html":{},"interfaces/Viewbox.html":{},"interfaces/Viewbox-1.html":{},"injectables/ZoomPanService.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["index:number):promise",{"_index":468,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["indication",{"_index":2163,"title":{},"body":{"components/ToolSettingComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"interfaces/BboxLabel.html":{},"injectables/BboxManagerService.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"components/ClassificationConfigurationComponent.html":{},"interfaces/Color.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"interfaces/EventPayload.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"interfaces/ImageFromCLI.html":{},"injectables/ImageProcessingService.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"interfaces/LabelFormat.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"components/LoadingComponent.html":{},"interfaces/MulticlassInterface.html":{},"classes/MulticlassTask.html":{},"interfaces/MultilabelInterface.html":{},"classes/MultilabelTask.html":{},"injectables/OpenCVService.html":{},"interfaces/Point2D.html":{},"interfaces/Point2D-1.html":{},"injectables/PostProcessService.html":{},"interfaces/ProjectConfig.html":{},"components/ProjectConfigurationComponent.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"interfaces/Rect-1.html":{},"components/SVGElementsComponent.html":{},"injectables/SVGUIService.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"classes/StampMaker.html":{},"injectables/StateManagerService.html":{},"components/TestingComponent.html":{},"interfaces/Thumbnail.html":{},"classes/Tool.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"classes/Tools.html":{},"interfaces/UndoRedoCanvasElement.html":{},"injectables/UndoRedoService.html":{},"classes/UndoRedoStack.html":{},"injectables/ViewService.html":{},"interfaces/Viewbox.html":{},"interfaces/Viewbox-1.html":{},"injectables/ZoomPanService.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{}}}],["initcanvas",{"_index":398,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["initialize",{"_index":1643,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["initializelisteners",{"_index":337,"title":{},"body":{"injectables/CLIService.html":{},"interfaces/EventPayload.html":{}}}],["inject(projectservice",{"_index":2731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(router",{"_index":2732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectable",{"_index":301,"title":{"injectables/BboxManagerService.html":{},"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"injectables/IOService.html":{},"injectables/ImageProcessingService.html":{},"injectables/LabelsService.html":{},"injectables/OpenCVService.html":{},"injectables/PostProcessService.html":{},"injectables/ProjectService.html":{},"injectables/SVGUIService.html":{},"injectables/StateManagerService.html":{},"injectables/UndoRedoService.html":{},"injectables/ViewService.html":{},"injectables/ZoomPanService.html":{}},"body":{"injectables/BboxManagerService.html":{},"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"interfaces/EventPayload.html":{},"injectables/IOService.html":{},"injectables/ImageProcessingService.html":{},"injectables/LabelsService.html":{},"injectables/OpenCVService.html":{},"injectables/PostProcessService.html":{},"injectables/ProjectService.html":{},"injectables/SVGUIService.html":{},"injectables/StateManagerService.html":{},"injectables/UndoRedoService.html":{},"injectables/ViewService.html":{},"injectables/ZoomPanService.html":{},"coverage.html":{}}}],["injectables",{"_index":303,"title":{},"body":{"injectables/BboxManagerService.html":{},"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"injectables/IOService.html":{},"injectables/ImageProcessingService.html":{},"injectables/LabelsService.html":{},"injectables/OpenCVService.html":{},"injectables/PostProcessService.html":{},"injectables/ProjectService.html":{},"injectables/SVGUIService.html":{},"injectables/StateManagerService.html":{},"injectables/UndoRedoService.html":{},"injectables/ViewService.html":{},"injectables/ZoomPanService.html":{},"overview.html":{}}}],["input",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/LabelledSwitchComponent.html":{},"injectables/OpenCVService.html":{},"injectables/PostProcessService.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{}}}],["input/output",{"_index":2571,"title":{},"body":{"index.html":{}}}],["input^(1/gamma",{"_index":1595,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["input_dir",{"_index":290,"title":{},"body":{"interfaces/BboxLabel.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{},"index.html":{}}}],["input_dir=str(path(input_dir).resolve",{"_index":2684,"title":{},"body":{"index.html":{}}}],["inputcolor",{"_index":651,"title":{},"body":{"injectables/DrawService.html":{}}}],["inputctx",{"_index":653,"title":{},"body":{"injectables/DrawService.html":{},"injectables/PostProcessService.html":{}}}],["inputctx.getimagedata",{"_index":1743,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["inputfolder",{"_index":1836,"title":{},"body":{"injectables/ProjectService.html":{}}}],["inputfundus",{"_index":2680,"title":{},"body":{"index.html":{}}}],["inputregex",{"_index":1837,"title":{},"body":{"injectables/ProjectService.html":{}}}],["inputs",{"_index":316,"title":{},"body":{"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/SVGElementsComponent.html":{}}}],["inputswitchmodule",{"_index":1199,"title":{},"body":{"components/LabelledSwitchComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["inputtextmodule",{"_index":489,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{},"components/ProjectConfigurationComponent.html":{}}}],["install",{"_index":2584,"title":{},"body":{"index.html":{}}}],["instance",{"_index":232,"title":{},"body":{"components/AppComponent.html":{},"interfaces/BboxLabel.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"injectables/DrawService.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"interfaces/ImageFromCLI.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"components/LoadingComponent.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/ProjectConfig.html":{},"components/ProjectConfigurationComponent.html":{},"interfaces/ProjectFile.html":{},"interfaces/Rect.html":{},"components/SVGElementsComponent.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"components/TestingComponent.html":{},"interfaces/Thumbnail.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{}}}],["instancelabelcomponent",{"_index":231,"title":{"components/InstanceLabelComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["instanceof",{"_index":370,"title":{},"body":{"injectables/CLIService.html":{},"interfaces/EventPayload.html":{},"components/LabelsComponent.html":{}}}],["instead",{"_index":703,"title":{},"body":{"injectables/DrawService.html":{}}}],["integrated",{"_index":2574,"title":{},"body":{"index.html":{}}}],["integration",{"_index":2608,"title":{},"body":{"index.html":{}}}],["inter",{"_index":2618,"title":{},"body":{"index.html":{}}}],["interactive",{"_index":235,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["interactivebboxcomponent",{"_index":234,"title":{"components/InteractiveBboxComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["interface",{"_index":258,"title":{"interfaces/BboxLabel.html":{},"interfaces/Color.html":{},"interfaces/EventPayload.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/LabelFormat.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/Point2D-1.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"interfaces/Rect.html":{},"interfaces/Rect-1.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{},"interfaces/Viewbox-1.html":{}},"body":{"interfaces/BboxLabel.html":{},"injectables/CLIService.html":{},"interfaces/Color.html":{},"interfaces/EventPayload.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/LabelFormat.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/Point2D-1.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"interfaces/Rect.html":{},"interfaces/Rect-1.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"classes/StampMaker.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"classes/UndoRedoStack.html":{},"interfaces/Viewbox.html":{},"interfaces/Viewbox-1.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{},"coverage.html":{}}}],["interfaces",{"_index":260,"title":{},"body":{"interfaces/BboxLabel.html":{},"interfaces/Color.html":{},"interfaces/EventPayload.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/LabelFormat.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/Point2D-1.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"interfaces/Rect.html":{},"interfaces/Rect-1.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{},"interfaces/Viewbox-1.html":{},"overview.html":{}}}],["interval",{"_index":901,"title":{},"body":{"components/GalleryComponent.html":{}}}],["intervalfunction",{"_index":875,"title":{},"body":{"components/GalleryComponent.html":{}}}],["inverse",{"_index":1729,"title":{},"body":{"injectables/PostProcessService.html":{},"components/ToolSettingComponent.html":{}}}],["invoke",{"_index":349,"title":{},"body":{"injectables/CLIService.html":{},"interfaces/EventPayload.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"interfaces/LabelFormat.html":{},"injectables/PostProcessService.html":{},"injectables/ProjectService.html":{}}}],["invoke('check_file_exists",{"_index":975,"title":{},"body":{"injectables/IOService.html":{}}}],["invoke('create_thumbnail",{"_index":934,"title":{},"body":{"components/GalleryElementComponent.html":{}}}],["invoke('crf_refine",{"_index":1700,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["invoke('event_processed",{"_index":363,"title":{},"body":{"injectables/CLIService.html":{},"interfaces/EventPayload.html":{}}}],["invoke('get_overlapping_region_with_mask",{"_index":1746,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["invoke('get_quad_tree_bbox",{"_index":1751,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["invoke('list_files_in_folder",{"_index":1935,"title":{},"body":{"injectables/ProjectService.html":{}}}],["invoke('load_xml_file",{"_index":981,"title":{},"body":{"injectables/IOService.html":{}}}],["invoke('otsu_segmentation",{"_index":1725,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["invoke('sam_segment",{"_index":1717,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["invokeloadjsonfile",{"_index":1892,"title":{},"body":{"injectables/ProjectService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["invokeloadjsonfile(filepath",{"_index":2528,"title":{},"body":{"miscellaneous/functions.html":{}}}],["invokeloadjsonfile(filepath).then((projectconfig",{"_index":1929,"title":{},"body":{"injectables/ProjectService.html":{}}}],["invokesavejsonfile",{"_index":2459,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["invokesavejsonfile(filepath",{"_index":2529,"title":{},"body":{"miscellaneous/functions.html":{}}}],["invokesavexmlfile",{"_index":971,"title":{},"body":{"injectables/IOService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["invokesavexmlfile(filepath",{"_index":2531,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ioservice",{"_index":52,"title":{"injectables/IOService.html":{}},"body":{"components/AppComponent.html":{},"injectables/IOService.html":{},"coverage.html":{}}}],["is_bbox_detection",{"_index":295,"title":{},"body":{"interfaces/BboxLabel.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{}}}],["is_classification",{"_index":293,"title":{},"body":{"interfaces/BboxLabel.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{}}}],["is_instance_segmentation",{"_index":294,"title":{},"body":{"interfaces/BboxLabel.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{}}}],["is_segmentation",{"_index":292,"title":{},"body":{"interfaces/BboxLabel.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{}}}],["isboundingboxdetection",{"_index":1838,"title":{},"body":{"injectables/ProjectService.html":{}}}],["isclassification",{"_index":1839,"title":{},"body":{"injectables/ProjectService.html":{}}}],["isdragging",{"_index":2294,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["isdrawing",{"_index":2029,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["isdrawingtool",{"_index":810,"title":{},"body":{"injectables/EditorService.html":{}}}],["isempty",{"_index":2415,"title":{},"body":{"classes/_RedoStack.html":{},"classes/_UndoStack.html":{}}}],["isempty():boolean",{"_index":2249,"title":{},"body":{"classes/UndoRedoStack.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{}}}],["iseraser",{"_index":811,"title":{},"body":{"injectables/EditorService.html":{}}}],["isfirststroke",{"_index":2036,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["ishex",{"_index":565,"title":{},"body":{"interfaces/Color.html":{},"classes/StampMaker.html":{}}}],["isinputvalid",{"_index":1763,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["isinstancesegmentation",{"_index":1840,"title":{},"body":{"injectables/ProjectService.html":{}}}],["isloading",{"_index":2266,"title":{},"body":{"injectables/ViewService.html":{}}}],["isnamevalid",{"_index":1764,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["isoutputvalid",{"_index":1765,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["isprojectstarted",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"injectables/ProjectService.html":{}}}],["isrgb",{"_index":567,"title":{},"body":{"interfaces/Color.html":{},"classes/StampMaker.html":{}}}],["issegmentation",{"_index":1841,"title":{},"body":{"injectables/ProjectService.html":{}}}],["isstarted",{"_index":181,"title":{},"body":{"components/AppComponent.html":{}}}],["isstarted$.then",{"_index":183,"title":{},"body":{"components/AppComponent.html":{}}}],["istoolwithbrushsize",{"_index":812,"title":{},"body":{"injectables/EditorService.html":{}}}],["isupdated",{"_index":1074,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["isvisible",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"interfaces/BboxLabel.html":{},"injectables/IOService.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/ProjectConfig.html":{},"components/ProjectConfigurationComponent.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{}}}],["it's",{"_index":1111,"title":{},"body":{"injectables/ImageProcessingService.html":{},"injectables/OpenCVService.html":{}}}],["j",{"_index":544,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["join(this.inputfolder",{"_index":1947,"title":{},"body":{"injectables/ProjectService.html":{}}}],["json",{"_index":1930,"title":{},"body":{"injectables/ProjectService.html":{}}}],["json.parse",{"_index":1895,"title":{},"body":{"injectables/ProjectService.html":{}}}],["json.parse(projectconfig",{"_index":1931,"title":{},"body":{"injectables/ProjectService.html":{}}}],["json.stringify(_color",{"_index":590,"title":{},"body":{"interfaces/Color.html":{},"classes/StampMaker.html":{}}}],["json.stringify(this.localstoragesprojectsfilepaths",{"_index":1926,"title":{},"body":{"injectables/ProjectService.html":{}}}],["jsoncontent",{"_index":2530,"title":{},"body":{"miscellaneous/functions.html":{}}}],["kernel",{"_index":2149,"title":{},"body":{"components/ToolSettingComponent.html":{}}}],["kernel_size",{"_index":1075,"title":{},"body":{"injectables/ImageProcessingService.html":{},"injectables/OpenCVService.html":{}}}],["kernelsize",{"_index":1731,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["key",{"_index":560,"title":{},"body":{"interfaces/Color.html":{},"classes/StampMaker.html":{},"index.html":{}}}],["knobmodule",{"_index":872,"title":{},"body":{"components/GalleryComponent.html":{}}}],["l",{"_index":1327,"title":{},"body":{"injectables/LabelsService.html":{},"classes/MulticlassTask.html":{},"classes/MultilabelTask.html":{},"index.html":{}}}],["l.label",{"_index":1338,"title":{},"body":{"injectables/LabelsService.html":{}}}],["label",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"interfaces/BboxLabel.html":{},"components/ClassificationConfigurationComponent.html":{},"injectables/IOService.html":{},"interfaces/ImageFromCLI.html":{},"components/InstanceLabelComponent.html":{},"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"interfaces/MulticlassInterface.html":{},"classes/MulticlassTask.html":{},"interfaces/MultilabelInterface.html":{},"classes/MultilabelTask.html":{},"injectables/OpenCVService.html":{},"interfaces/Point2D.html":{},"injectables/PostProcessService.html":{},"interfaces/ProjectConfig.html":{},"components/ProjectConfigurationComponent.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{}}}],["label'},{'name",{"_index":233,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["label.component",{"_index":1253,"title":{},"body":{"components/LabelsComponent.html":{}}}],["label.component.html",{"_index":1163,"title":{},"body":{"components/InstanceLabelComponent.html":{}}}],["label.component.scss",{"_index":1164,"title":{},"body":{"components/InstanceLabelComponent.html":{}}}],["label.component.ts",{"_index":1162,"title":{},"body":{"components/InstanceLabelComponent.html":{},"coverage.html":{}}}],["label.component.ts:18",{"_index":1168,"title":{},"body":{"components/InstanceLabelComponent.html":{}}}],["label.component.ts:19",{"_index":1167,"title":{},"body":{"components/InstanceLabelComponent.html":{}}}],["label.component.ts:21",{"_index":1173,"title":{},"body":{"components/InstanceLabelComponent.html":{}}}],["label.component.ts:26",{"_index":1172,"title":{},"body":{"components/InstanceLabelComponent.html":{}}}],["label.component.ts:30",{"_index":1171,"title":{},"body":{"components/InstanceLabelComponent.html":{}}}],["label.component.ts:41",{"_index":1170,"title":{},"body":{"components/InstanceLabelComponent.html":{}}}],["label.copyto(output",{"_index":1663,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["label.delete",{"_index":1667,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["label.isvisible",{"_index":1267,"title":{},"body":{"components/LabelsComponent.html":{},"injectables/LabelsService.html":{}}}],["label.label",{"_index":1339,"title":{},"body":{"injectables/LabelsService.html":{},"injectables/ProjectService.html":{}}}],["label.setto(new",{"_index":1662,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["label.shades",{"_index":1033,"title":{},"body":{"injectables/IOService.html":{}}}],["label.taskname",{"_index":542,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["label/instance",{"_index":1161,"title":{},"body":{"components/InstanceLabelComponent.html":{},"components/LabelsComponent.html":{},"coverage.html":{}}}],["labelcanvas",{"_index":384,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["labelcolor",{"_index":1649,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["labelcolors",{"_index":1404,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["labeldata",{"_index":1742,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["labeldata.buffer",{"_index":1747,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["labelformat",{"_index":962,"title":{"interfaces/LabelFormat.html":{}},"body":{"injectables/IOService.html":{},"interfaces/LabelFormat.html":{},"coverage.html":{}}}],["labelformat.masks.length",{"_index":1066,"title":{},"body":{"injectables/IOService.html":{}}}],["labeling",{"_index":2545,"title":{},"body":{"index.html":{}}}],["labelled",{"_index":238,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["labelledswitchcomponent",{"_index":237,"title":{"components/LabelledSwitchComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["labelmed",{"_index":2542,"title":{},"body":{"index.html":{}}}],["labelopacity",{"_index":799,"title":{},"body":{"injectables/EditorService.html":{}}}],["labels",{"_index":990,"title":{},"body":{"injectables/IOService.html":{},"interfaces/LabelFormat.html":{},"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"components/ToolbarComponent.html":{},"miscellaneous/functions.html":{}}}],["labels'},{'name",{"_index":241,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["labels.component.html",{"_index":1223,"title":{},"body":{"components/LabelsComponent.html":{}}}],["labels.component.scss",{"_index":1224,"title":{},"body":{"components/LabelsComponent.html":{}}}],["labels.multiclass",{"_index":999,"title":{},"body":{"injectables/IOService.html":{}}}],["labels.multilabel",{"_index":1005,"title":{},"body":{"injectables/IOService.html":{}}}],["labels.service",{"_index":1891,"title":{},"body":{"injectables/ProjectService.html":{}}}],["labelscomponent",{"_index":240,"title":{"components/LabelsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["labelservice",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"injectables/CanvasManagerService.html":{},"components/ClassificationConfigurationComponent.html":{},"injectables/DrawService.html":{},"injectables/IOService.html":{},"components/InstanceLabelComponent.html":{},"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{},"components/SVGElementsComponent.html":{},"injectables/UndoRedoService.html":{}}}],["labelsservice",{"_index":47,"title":{"injectables/LabelsService.html":{}},"body":{"components/AppComponent.html":{},"injectables/CanvasManagerService.html":{},"components/ClassificationConfigurationComponent.html":{},"injectables/DrawService.html":{},"injectables/IOService.html":{},"components/InstanceLabelComponent.html":{},"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{},"components/SVGElementsComponent.html":{},"injectables/UndoRedoService.html":{},"coverage.html":{}}}],["labeltreenode",{"_index":1317,"title":{},"body":{"injectables/LabelsService.html":{}}}],["lara",{"_index":104,"title":{},"body":{"components/AppComponent.html":{}}}],["lasso",{"_index":2117,"title":{},"body":{"classes/Tool.html":{},"classes/Tools.html":{}}}],["lasso_eraser",{"_index":2120,"title":{},"body":{"classes/Tool.html":{},"classes/Tools.html":{}}}],["lassopoints",{"_index":604,"title":{},"body":{"injectables/DrawService.html":{}}}],["last",{"_index":191,"title":{},"body":{"components/AppComponent.html":{}}}],["left",{"_index":1496,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["legend",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["len(classification_multilabel['classes']))).tolist",{"_index":2673,"title":{},"body":{"index.html":{}}}],["len(multilabel",{"_index":2677,"title":{},"body":{"index.html":{}}}],["lesions",{"_index":2645,"title":{},"body":{"index.html":{}}}],["lesions[1",{"_index":2650,"title":{},"body":{"index.html":{}}}],["library",{"_index":2614,"title":{},"body":{"index.html":{}}}],["linewidth",{"_index":800,"title":{},"body":{"injectables/EditorService.html":{}}}],["list",{"_index":1336,"title":{},"body":{"injectables/LabelsService.html":{},"injectables/ProjectService.html":{}}}],["list(path(root_folder).glob('*.jpeg",{"_index":2679,"title":{},"body":{"index.html":{}}}],["listbbox",{"_index":307,"title":{},"body":{"injectables/BboxManagerService.html":{}}}],["listclassificationtasks",{"_index":1278,"title":{},"body":{"injectables/LabelsService.html":{}}}],["listen",{"_index":347,"title":{},"body":{"injectables/CLIService.html":{},"interfaces/EventPayload.html":{}}}],["listen>('create_project",{"_index":355,"title":{},"body":{"injectables/CLIService.html":{},"interfaces/EventPayload.html":{}}}],["listen>('load_image",{"_index":375,"title":{},"body":{"injectables/CLIService.html":{},"interfaces/EventPayload.html":{}}}],["listfiles",{"_index":1851,"title":{},"body":{"injectables/ProjectService.html":{}}}],["listsegmentationlabels",{"_index":1279,"title":{},"body":{"injectables/LabelsService.html":{}}}],["literal",{"_index":2019,"title":{},"body":{"classes/StampMaker.html":{}}}],["load",{"_index":941,"title":{},"body":{"injectables/IOService.html":{},"components/ProjectConfigurationComponent.html":{}}}],["load_image",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["load_image(imageconfig",{"_index":66,"title":{},"body":{"components/AppComponent.html":{}}}],["loadallcanvas",{"_index":399,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["loadallcanvas(data",{"_index":425,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["loadcanvas",{"_index":400,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["loadcanvas(data",{"_index":427,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["loaded",{"_index":1195,"title":{},"body":{"interfaces/LabelFormat.html":{}}}],["loadexistingannotations",{"_index":942,"title":{},"body":{"injectables/IOService.html":{}}}],["loadimagefile",{"_index":924,"title":{},"body":{"components/GalleryElementComponent.html":{},"injectables/ProjectService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["loadimagefile(filepath",{"_index":1951,"title":{},"body":{"injectables/ProjectService.html":{},"miscellaneous/functions.html":{}}}],["loadimagefile(thumbnailpath",{"_index":936,"title":{},"body":{"components/GalleryElementComponent.html":{}}}],["loading",{"_index":1356,"title":{},"body":{"components/LoadingComponent.html":{},"injectables/OpenCVService.html":{},"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{}}}],["loading'},{'name",{"_index":242,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["loading.component.html",{"_index":1358,"title":{},"body":{"components/LoadingComponent.html":{}}}],["loading.component.scss",{"_index":1359,"title":{},"body":{"components/LoadingComponent.html":{}}}],["loadingcomponent",{"_index":20,"title":{"components/LoadingComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["loadingstatus",{"_index":2267,"title":{},"body":{"injectables/ViewService.html":{}}}],["loadnext",{"_index":943,"title":{},"body":{"injectables/IOService.html":{}}}],["loadprevious",{"_index":944,"title":{},"body":{"injectables/IOService.html":{}}}],["loadprojectfile",{"_index":1852,"title":{},"body":{"injectables/ProjectService.html":{}}}],["loadprojectfile(filepath",{"_index":1864,"title":{},"body":{"injectables/ProjectService.html":{}}}],["loadprojectfromfilepath",{"_index":1769,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["loadprojectfromfilepath(filepath",{"_index":1779,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["local",{"_index":2559,"title":{},"body":{"index.html":{}}}],["locally",{"_index":2562,"title":{},"body":{"index.html":{}}}],["localstorage",{"_index":1918,"title":{},"body":{"injectables/ProjectService.html":{}}}],["localstorage.getitem('projects",{"_index":1896,"title":{},"body":{"injectables/ProjectService.html":{}}}],["localstorage.setitem",{"_index":1924,"title":{},"body":{"injectables/ProjectService.html":{}}}],["localstoragesprojectsfilepaths",{"_index":1842,"title":{},"body":{"injectables/ProjectService.html":{}}}],["loop",{"_index":1646,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["lowerbound",{"_index":1651,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["lowerbound.delete",{"_index":1665,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["lowerbound.setto(new",{"_index":1655,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["m",{"_index":1387,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["mac",{"_index":2652,"title":{},"body":{"index.html":{}}}],["make",{"_index":2015,"title":{},"body":{"classes/StampMaker.html":{}}}],["make(size",{"_index":585,"title":{},"body":{"interfaces/Color.html":{},"classes/StampMaker.html":{}}}],["manager.service",{"_index":437,"title":{},"body":{"injectables/CanvasManagerService.html":{},"injectables/DrawService.html":{},"injectables/IOService.html":{},"injectables/PostProcessService.html":{},"components/SVGElementsComponent.html":{},"injectables/UndoRedoService.html":{},"injectables/ZoomPanService.html":{}}}],["manager.service.ts",{"_index":306,"title":{},"body":{"injectables/BboxManagerService.html":{},"injectables/CanvasManagerService.html":{},"injectables/StateManagerService.html":{},"coverage.html":{}}}],["manager.service.ts:10",{"_index":2064,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["manager.service.ts:103",{"_index":415,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["manager.service.ts:108",{"_index":421,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["manager.service.ts:11",{"_index":2061,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["manager.service.ts:112",{"_index":423,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["manager.service.ts:116",{"_index":422,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["manager.service.ts:12",{"_index":308,"title":{},"body":{"injectables/BboxManagerService.html":{}}}],["manager.service.ts:120",{"_index":416,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["manager.service.ts:123",{"_index":418,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["manager.service.ts:127",{"_index":417,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["manager.service.ts:13",{"_index":435,"title":{},"body":{"injectables/CanvasManagerService.html":{},"injectables/StateManagerService.html":{}}}],["manager.service.ts:14",{"_index":432,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["manager.service.ts:15",{"_index":2060,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["manager.service.ts:16",{"_index":433,"title":{},"body":{"injectables/CanvasManagerService.html":{},"injectables/StateManagerService.html":{}}}],["manager.service.ts:17",{"_index":434,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["manager.service.ts:18",{"_index":2063,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["manager.service.ts:19",{"_index":430,"title":{},"body":{"injectables/CanvasManagerService.html":{},"injectables/StateManagerService.html":{}}}],["manager.service.ts:20",{"_index":431,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["manager.service.ts:21",{"_index":2045,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["manager.service.ts:22",{"_index":405,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["manager.service.ts:26",{"_index":2059,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["manager.service.ts:30",{"_index":2056,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["manager.service.ts:31",{"_index":424,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["manager.service.ts:34",{"_index":2054,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["manager.service.ts:39",{"_index":2051,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["manager.service.ts:44",{"_index":2050,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["manager.service.ts:47",{"_index":413,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["manager.service.ts:48",{"_index":2052,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["manager.service.ts:52",{"_index":2049,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["manager.service.ts:59",{"_index":2048,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["manager.service.ts:63",{"_index":412,"title":{},"body":{"injectables/CanvasManagerService.html":{},"injectables/StateManagerService.html":{}}}],["manager.service.ts:67",{"_index":428,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["manager.service.ts:75",{"_index":2046,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["manager.service.ts:80",{"_index":409,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["manager.service.ts:84",{"_index":429,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["manager.service.ts:86",{"_index":2047,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["manager.service.ts:88",{"_index":426,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["manager.service.ts:94",{"_index":419,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["manager.service.ts:98",{"_index":414,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["manually",{"_index":1829,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["map(it",{"_index":582,"title":{},"body":{"interfaces/Color.html":{},"classes/StampMaker.html":{}}}],["markers",{"_index":2180,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mask",{"_index":1526,"title":{},"body":{"injectables/OpenCVService.html":{},"injectables/PostProcessService.html":{}}}],["mask.delete",{"_index":1664,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["mask_data",{"_index":299,"title":{},"body":{"interfaces/BboxLabel.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{}}}],["maskdata",{"_index":1688,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["maskdata.buffer",{"_index":1701,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["masks",{"_index":992,"title":{},"body":{"injectables/IOService.html":{},"interfaces/LabelFormat.html":{},"index.html":{}}}],["masksname",{"_index":991,"title":{},"body":{"injectables/IOService.html":{},"interfaces/LabelFormat.html":{}}}],["matching",{"_index":257,"title":{},"body":{"components/AppComponent.html":{},"interfaces/BboxLabel.html":{},"injectables/BboxManagerService.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"components/ClassificationConfigurationComponent.html":{},"interfaces/Color.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"interfaces/EventPayload.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"interfaces/ImageFromCLI.html":{},"injectables/ImageProcessingService.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"interfaces/LabelFormat.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"components/LoadingComponent.html":{},"interfaces/MulticlassInterface.html":{},"classes/MulticlassTask.html":{},"interfaces/MultilabelInterface.html":{},"classes/MultilabelTask.html":{},"injectables/OpenCVService.html":{},"interfaces/Point2D.html":{},"interfaces/Point2D-1.html":{},"injectables/PostProcessService.html":{},"interfaces/ProjectConfig.html":{},"components/ProjectConfigurationComponent.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"interfaces/Rect-1.html":{},"components/SVGElementsComponent.html":{},"injectables/SVGUIService.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"classes/StampMaker.html":{},"injectables/StateManagerService.html":{},"components/TestingComponent.html":{},"interfaces/Thumbnail.html":{},"classes/Tool.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"classes/Tools.html":{},"interfaces/UndoRedoCanvasElement.html":{},"injectables/UndoRedoService.html":{},"classes/UndoRedoStack.html":{},"injectables/ViewService.html":{},"interfaces/Viewbox.html":{},"interfaces/Viewbox-1.html":{},"injectables/ZoomPanService.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":102,"title":{},"body":{"components/AppComponent.html":{}}}],["math.abs(this.targetoffset.x",{"_index":2409,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["math.abs(this.targetoffset.y",{"_index":2410,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["math.abs(this.targetscale",{"_index":2407,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["math.max(0",{"_index":2079,"title":{},"body":{"injectables/StateManagerService.html":{},"injectables/ZoomPanService.html":{}}}],["math.max(this.maxpoint.x",{"_index":2084,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["math.max(this.maxpoint.y",{"_index":2085,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["math.min(this.minpoint.x",{"_index":2080,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["math.min(this.minpoint.y",{"_index":2082,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["math.min(this.stateservice.height",{"_index":2397,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["math.min(this.stateservice.width",{"_index":2396,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["math.round((clientx",{"_index":2392,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["math.round((clienty",{"_index":2394,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["math.round(imagex",{"_index":2382,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["math.round(imagey",{"_index":2383,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["math.round(this.offset.x",{"_index":2361,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["math.round(this.offset.y",{"_index":2363,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["matrices",{"_index":1583,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["matrix",{"_index":1599,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["maxdepth",{"_index":1686,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["maxinstances",{"_index":1843,"title":{},"body":{"injectables/ProjectService.html":{}}}],["maxpoint",{"_index":2030,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["maxscale",{"_index":2295,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["med",{"_index":2159,"title":{},"body":{"components/ToolSettingComponent.html":{}}}],["median_blur",{"_index":1396,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["median_blur(input",{"_index":1416,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["medical",{"_index":2544,"title":{},"body":{"index.html":{}}}],["medsam",{"_index":2125,"title":{},"body":{"classes/Tool.html":{},"classes/Tools.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["memory",{"_index":1611,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["merge",{"_index":1324,"title":{},"body":{"injectables/LabelsService.html":{}}}],["message",{"_index":2280,"title":{},"body":{"injectables/ViewService.html":{}}}],["metadata",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["methods",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"components/ClassificationConfigurationComponent.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"injectables/ImageProcessingService.html":{},"components/InstanceLabelComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"classes/MultilabelTask.html":{},"injectables/OpenCVService.html":{},"injectables/PostProcessService.html":{},"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{},"components/SVGElementsComponent.html":{},"injectables/SVGUIService.html":{},"classes/StampMaker.html":{},"injectables/StateManagerService.html":{},"components/ToolbarComponent.html":{},"injectables/UndoRedoService.html":{},"classes/UndoRedoStack.html":{},"injectables/ViewService.html":{},"injectables/ZoomPanService.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{}}}],["mild",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["minpoint",{"_index":2031,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["minscale",{"_index":2296,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["minsize",{"_index":1685,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["miscellaneous",{"_index":2514,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ml",{"_index":2619,"title":{},"body":{"index.html":{}}}],["model",{"_index":2620,"title":{},"body":{"index.html":{}}}],["models",{"_index":664,"title":{},"body":{"injectables/DrawService.html":{},"injectables/SVGUIService.html":{},"injectables/StateManagerService.html":{},"injectables/ZoomPanService.html":{},"index.html":{}}}],["moderate",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["modules",{"_index":2700,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":1956,"title":{},"body":{"injectables/ProjectService.html":{}}}],["morphological",{"_index":1447,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["morphosize",{"_index":801,"title":{},"body":{"injectables/EditorService.html":{}}}],["mouseevent",{"_index":637,"title":{},"body":{"injectables/DrawService.html":{},"injectables/ZoomPanService.html":{}}}],["mouseevent).clientx",{"_index":2385,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["mouseevent).clienty",{"_index":2388,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["multi",{"_index":2565,"title":{},"body":{"index.html":{}}}],["multiclass",{"_index":994,"title":{},"body":{"injectables/IOService.html":{},"interfaces/LabelFormat.html":{},"index.html":{}}}],["multiclass_choices=multiclass",{"_index":2692,"title":{},"body":{"index.html":{}}}],["multiclasselements[0",{"_index":1000,"title":{},"body":{"injectables/IOService.html":{}}}],["multiclassinterface",{"_index":285,"title":{"interfaces/MulticlassInterface.html":{}},"body":{"interfaces/BboxLabel.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{},"coverage.html":{}}}],["multiclasstask",{"_index":108,"title":{"classes/MulticlassTask.html":{}},"body":{"components/AppComponent.html":{},"injectables/LabelsService.html":{},"classes/MulticlassTask.html":{},"classes/MultilabelTask.html":{},"injectables/ProjectService.html":{},"coverage.html":{}}}],["multiclasstask('dr",{"_index":158,"title":{},"body":{"components/AppComponent.html":{}}}],["multiclasstask('quality",{"_index":165,"title":{},"body":{"components/AppComponent.html":{}}}],["multilabel",{"_index":995,"title":{},"body":{"injectables/IOService.html":{},"interfaces/LabelFormat.html":{},"index.html":{}}}],["multilabel_choices=multilabel",{"_index":2693,"title":{},"body":{"index.html":{}}}],["multilabelelements",{"_index":1002,"title":{},"body":{"injectables/IOService.html":{}}}],["multilabelelements.length",{"_index":1004,"title":{},"body":{"injectables/IOService.html":{}}}],["multilabelelements[0",{"_index":1006,"title":{},"body":{"injectables/IOService.html":{}}}],["multilabelinterface",{"_index":287,"title":{"interfaces/MultilabelInterface.html":{}},"body":{"interfaces/BboxLabel.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{},"coverage.html":{}}}],["multilabeltask",{"_index":109,"title":{"classes/MultilabelTask.html":{}},"body":{"components/AppComponent.html":{},"components/ClassificationConfigurationComponent.html":{},"injectables/LabelsService.html":{},"classes/MulticlassTask.html":{},"classes/MultilabelTask.html":{},"injectables/ProjectService.html":{},"coverage.html":{}}}],["multilabeltask('misc",{"_index":170,"title":{},"body":{"components/AppComponent.html":{}}}],["multilabeltask('multilabel",{"_index":529,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["multiple",{"_index":1271,"title":{},"body":{"components/LabelsComponent.html":{},"injectables/OpenCVService.html":{},"index.html":{}}}],["myopia",{"_index":2659,"title":{},"body":{"index.html":{}}}],["n",{"_index":530,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{},"injectables/PostProcessService.html":{},"miscellaneous/functions.html":{}}}],["name",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"interfaces/BboxLabel.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"components/ClassificationConfigurationComponent.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"interfaces/ImageFromCLI.html":{},"injectables/ImageProcessingService.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"components/LoadingComponent.html":{},"interfaces/MulticlassInterface.html":{},"classes/MulticlassTask.html":{},"interfaces/MultilabelInterface.html":{},"classes/MultilabelTask.html":{},"injectables/OpenCVService.html":{},"interfaces/Point2D.html":{},"injectables/PostProcessService.html":{},"interfaces/ProjectConfig.html":{},"components/ProjectConfigurationComponent.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"components/SVGElementsComponent.html":{},"injectables/SVGUIService.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"classes/StampMaker.html":{},"injectables/StateManagerService.html":{},"components/TestingComponent.html":{},"interfaces/Thumbnail.html":{},"classes/Tool.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"classes/Tools.html":{},"interfaces/UndoRedoCanvasElement.html":{},"injectables/UndoRedoService.html":{},"classes/UndoRedoStack.html":{},"injectables/ViewService.html":{},"interfaces/Viewbox.html":{},"injectables/ZoomPanService.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["native",{"_index":2607,"title":{},"body":{"index.html":{}}}],["navigatetoeditor",{"_index":2270,"title":{},"body":{"injectables/ViewService.html":{}}}],["navigatetogallery",{"_index":2271,"title":{},"body":{"injectables/ViewService.html":{}}}],["need",{"_index":702,"title":{},"body":{"injectables/DrawService.html":{}}}],["needed",{"_index":130,"title":{},"body":{"components/AppComponent.html":{}}}],["neighbor",{"_index":1501,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["neighbors",{"_index":1487,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["nelements",{"_index":1065,"title":{},"body":{"injectables/IOService.html":{}}}],["new",{"_index":343,"title":{},"body":{"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"components/ClassificationConfigurationComponent.html":{},"interfaces/Color.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"interfaces/EventPayload.html":{},"injectables/IOService.html":{},"components/LabelledSwitchComponent.html":{},"injectables/LabelsService.html":{},"injectables/OpenCVService.html":{},"injectables/PostProcessService.html":{},"injectables/ProjectService.html":{},"classes/StampMaker.html":{},"classes/Tool.html":{},"classes/Tools.html":{},"injectables/UndoRedoService.html":{},"classes/UndoRedoStack.html":{},"injectables/ZoomPanService.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["new_shade",{"_index":1353,"title":{},"body":{"injectables/LabelsService.html":{}}}],["newheight",{"_index":1753,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["newmask",{"_index":1736,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["newoffsetx",{"_index":2405,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["newoffsety",{"_index":2406,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["newscale",{"_index":2404,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["newwidth",{"_index":1752,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["ngafterviewinit",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/ToolbarComponent.html":{}}}],["ngclass",{"_index":314,"title":{},"body":{"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/InstanceLabelComponent.html":{},"components/ProjectConfigurationComponent.html":{}}}],["ngfor",{"_index":486,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{},"components/InstanceLabelComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{}}}],["ngif",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/ClassificationConfigurationComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/ToolSettingComponent.html":{}}}],["ngoninit",{"_index":879,"title":{},"body":{"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/LabelsComponent.html":{},"components/ProjectConfigurationComponent.html":{}}}],["ngstyle",{"_index":313,"title":{},"body":{"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{}}}],["ngswitch",{"_index":2131,"title":{},"body":{"components/ToolSettingComponent.html":{}}}],["ngx",{"_index":1432,"title":{},"body":{"injectables/OpenCVService.html":{},"dependencies.html":{}}}],["ngxopencv",{"_index":1401,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["ngxopencvservice",{"_index":1399,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["ngzone",{"_index":339,"title":{},"body":{"injectables/CLIService.html":{},"interfaces/EventPayload.html":{}}}],["node",{"_index":1240,"title":{},"body":{"components/LabelsComponent.html":{}}}],["node.children",{"_index":1257,"title":{},"body":{"components/LabelsComponent.html":{}}}],["node.children.length",{"_index":1258,"title":{},"body":{"components/LabelsComponent.html":{}}}],["node.data",{"_index":1265,"title":{},"body":{"components/LabelsComponent.html":{}}}],["node.js",{"_index":2580,"title":{},"body":{"index.html":{}}}],["node.label",{"_index":1273,"title":{},"body":{"components/LabelsComponent.html":{}}}],["nodejs.timeout",{"_index":886,"title":{},"body":{"components/GalleryComponent.html":{}}}],["none",{"_index":2676,"title":{},"body":{"index.html":{}}}],["nora",{"_index":106,"title":{},"body":{"components/AppComponent.html":{}}}],["normalize",{"_index":1589,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["now",{"_index":778,"title":{},"body":{"injectables/DrawService.html":{}}}],["np",{"_index":2638,"title":{},"body":{"index.html":{}}}],["np.random.choice(classification_multilabel['classes",{"_index":2671,"title":{},"body":{"index.html":{}}}],["np.random.choice(classifications_classes[0]['classes",{"_index":2674,"title":{},"body":{"index.html":{}}}],["npm",{"_index":2581,"title":{},"body":{"index.html":{}}}],["null",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"interfaces/BboxLabel.html":{},"interfaces/Color.html":{},"injectables/DrawService.html":{},"injectables/IOService.html":{},"interfaces/ImageFromCLI.html":{},"injectables/ImageProcessingService.html":{},"interfaces/LabelFormat.html":{},"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"injectables/OpenCVService.html":{},"interfaces/Point2D.html":{},"interfaces/ProjectConfig.html":{},"components/ProjectConfigurationComponent.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"classes/StampMaker.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{}}}],["number",{"_index":264,"title":{},"body":{"interfaces/BboxLabel.html":{},"injectables/CanvasManagerService.html":{},"components/ClassificationConfigurationComponent.html":{},"interfaces/Color.html":{},"injectables/EditorService.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"interfaces/ImageFromCLI.html":{},"injectables/ImageProcessingService.html":{},"components/InstanceLabelComponent.html":{},"injectables/LabelsService.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"injectables/OpenCVService.html":{},"interfaces/Point2D.html":{},"interfaces/Point2D-1.html":{},"injectables/PostProcessService.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"interfaces/Rect-1.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"classes/StampMaker.html":{},"injectables/StateManagerService.html":{},"interfaces/Thumbnail.html":{},"classes/Tool.html":{},"classes/Tools.html":{},"interfaces/UndoRedoCanvasElement.html":{},"injectables/ViewService.html":{},"interfaces/Viewbox.html":{},"interfaces/Viewbox-1.html":{},"injectables/ZoomPanService.html":{},"miscellaneous/functions.html":{}}}],["number.max_value",{"_index":2062,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["numiterations",{"_index":1707,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["numpy",{"_index":2637,"title":{},"body":{"index.html":{}}}],["object",{"_index":1668,"title":{},"body":{"injectables/OpenCVService.html":{},"miscellaneous/variables.html":{}}}],["occurred",{"_index":373,"title":{},"body":{"injectables/CLIService.html":{},"interfaces/EventPayload.html":{}}}],["od",{"_index":2651,"title":{},"body":{"index.html":{}}}],["od_mask",{"_index":2665,"title":{},"body":{"index.html":{}}}],["offscreencanvas",{"_index":420,"title":{},"body":{"injectables/CanvasManagerService.html":{},"interfaces/Color.html":{},"injectables/ImageProcessingService.html":{},"injectables/OpenCVService.html":{},"classes/StampMaker.html":{}}}],["offscreencanvas(0",{"_index":1427,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["offscreencanvas(size",{"_index":593,"title":{},"body":{"interfaces/Color.html":{},"classes/StampMaker.html":{}}}],["offscreencanvas(this.stateservice.width",{"_index":444,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["offscreencanvas(width",{"_index":1478,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["offscreencanvasrenderingcontext2d",{"_index":408,"title":{},"body":{"injectables/CanvasManagerService.html":{},"injectables/DrawService.html":{},"injectables/OpenCVService.html":{}}}],["offset",{"_index":2077,"title":{},"body":{"injectables/StateManagerService.html":{},"injectables/ZoomPanService.html":{}}}],["offsetx",{"_index":2332,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["offsety",{"_index":2333,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["one",{"_index":1499,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["oninit",{"_index":868,"title":{},"body":{"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/LabelsComponent.html":{},"components/ProjectConfigurationComponent.html":{}}}],["onnx",{"_index":2610,"title":{},"body":{"index.html":{}}}],["opacity",{"_index":1272,"title":{},"body":{"components/LabelsComponent.html":{}}}],["opaque",{"_index":1631,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["open",{"_index":1793,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["open_image",{"_index":2643,"title":{},"body":{"index.html":{}}}],["open_image(filepath",{"_index":2662,"title":{},"body":{"index.html":{}}}],["opencv",{"_index":1433,"title":{},"body":{"injectables/OpenCVService.html":{},"dependencies.html":{},"index.html":{}}}],["opencv.js",{"_index":1113,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["opencvconfig",{"_index":2472,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["opencvdirpath",{"_index":2719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["opencvservice",{"_index":404,"title":{"injectables/OpenCVService.html":{}},"body":{"injectables/CanvasManagerService.html":{},"injectables/DrawService.html":{},"injectables/ImageProcessingService.html":{},"injectables/OpenCVService.html":{},"coverage.html":{}}}],["opencvstate",{"_index":1431,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["openeditor",{"_index":915,"title":{},"body":{"components/GalleryElementComponent.html":{},"injectables/ProjectService.html":{}}}],["openeditor(index",{"_index":1866,"title":{},"body":{"injectables/ProjectService.html":{}}}],["opening",{"_index":1727,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["openinputfolder",{"_index":1770,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["openoutputfolder",{"_index":1771,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["openpromise",{"_index":1946,"title":{},"body":{"injectables/ProjectService.html":{}}}],["operations",{"_index":2560,"title":{},"body":{"index.html":{}}}],["optimal",{"_index":2596,"title":{},"body":{"index.html":{}}}],["optional",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"components/ClassificationConfigurationComponent.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"injectables/ImageProcessingService.html":{},"components/InstanceLabelComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"components/LoadingComponent.html":{},"classes/MulticlassTask.html":{},"classes/MultilabelTask.html":{},"injectables/OpenCVService.html":{},"injectables/PostProcessService.html":{},"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{},"components/SVGElementsComponent.html":{},"injectables/SVGUIService.html":{},"classes/StampMaker.html":{},"injectables/StateManagerService.html":{},"classes/Tool.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UndoRedoService.html":{},"classes/UndoRedoStack.html":{},"injectables/ViewService.html":{},"injectables/ZoomPanService.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":117,"title":{},"body":{"components/AppComponent.html":{}}}],["order",{"_index":121,"title":{},"body":{"components/AppComponent.html":{}}}],["original",{"_index":1577,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["others",{"_index":2657,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":705,"title":{},"body":{"injectables/DrawService.html":{}}}],["otsu",{"_index":844,"title":{},"body":{"injectables/EditorService.html":{},"classes/Tool.html":{},"classes/Tools.html":{},"miscellaneous/enumerations.html":{}}}],["otsu_post_process",{"_index":1677,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["out",{"_index":725,"title":{},"body":{"injectables/DrawService.html":{},"injectables/PostProcessService.html":{}}}],["outcanvas",{"_index":1477,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["outcanvas.getcontext('2d",{"_index":1480,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["outctx",{"_index":1479,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["outctx.createimagedata(width",{"_index":1482,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["outctx.putimagedata(outimagedata",{"_index":1506,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["outdata",{"_index":1483,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["outdata[idx",{"_index":1502,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["outimagedata",{"_index":1481,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["outimagedata.data",{"_index":1484,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["output",{"_index":1212,"title":{},"body":{"components/LabelledSwitchComponent.html":{},"injectables/OpenCVService.html":{},"components/ProjectConfigurationComponent.html":{},"index.html":{}}}],["output.delete",{"_index":1641,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["output_dir",{"_index":291,"title":{},"body":{"interfaces/BboxLabel.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{},"index.html":{}}}],["output_dir=str(path(output_dir).resolve",{"_index":2685,"title":{},"body":{"index.html":{}}}],["outputcanvas",{"_index":1388,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["outputctx",{"_index":1389,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["outputfolder",{"_index":1844,"title":{},"body":{"injectables/ProjectService.html":{}}}],["outputs",{"_index":1204,"title":{},"body":{"components/LabelledSwitchComponent.html":{}}}],["over",{"_index":708,"title":{},"body":{"injectables/DrawService.html":{},"injectables/PostProcessService.html":{}}}],["overlap",{"_index":767,"title":{},"body":{"injectables/DrawService.html":{}}}],["overlapped",{"_index":780,"title":{},"body":{"injectables/DrawService.html":{}}}],["overview",{"_index":2633,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":329,"title":{},"body":{"components/BlockableP.html":{}}}],["p'},{'name",{"_index":217,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["package",{"_index":2478,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["pan",{"_index":2107,"title":{},"body":{"classes/Tool.html":{},"classes/Tools.html":{}}}],["pan.service",{"_index":666,"title":{},"body":{"injectables/DrawService.html":{}}}],["pan.service.ts",{"_index":2291,"title":{},"body":{"injectables/ZoomPanService.html":{},"coverage.html":{}}}],["pan.service.ts:10",{"_index":2348,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["pan.service.ts:11",{"_index":2353,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["pan.service.ts:119",{"_index":2327,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["pan.service.ts:12",{"_index":2352,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["pan.service.ts:13",{"_index":2349,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["pan.service.ts:14",{"_index":2351,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["pan.service.ts:144",{"_index":2331,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["pan.service.ts:15",{"_index":2355,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["pan.service.ts:152",{"_index":2341,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["pan.service.ts:16",{"_index":2354,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["pan.service.ts:168",{"_index":2337,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["pan.service.ts:17",{"_index":2347,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["pan.service.ts:18",{"_index":2345,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["pan.service.ts:185",{"_index":2342,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["pan.service.ts:19",{"_index":2346,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["pan.service.ts:209",{"_index":2343,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["pan.service.ts:21",{"_index":2316,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["pan.service.ts:213",{"_index":2344,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["pan.service.ts:233",{"_index":2329,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["pan.service.ts:237",{"_index":2328,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["pan.service.ts:25",{"_index":2339,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["pan.service.ts:29",{"_index":2320,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["pan.service.ts:33",{"_index":2317,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["pan.service.ts:37",{"_index":2334,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["pan.service.ts:60",{"_index":2330,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["pan.service.ts:68",{"_index":2319,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["pan.service.ts:89",{"_index":2321,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["pan.service.ts:93",{"_index":2323,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["pan.service.ts:99",{"_index":2325,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["panelmodule",{"_index":870,"title":{},"body":{"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/LabelsComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["parameters",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"components/ClassificationConfigurationComponent.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"injectables/ImageProcessingService.html":{},"components/InstanceLabelComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"components/LoadingComponent.html":{},"classes/MulticlassTask.html":{},"classes/MultilabelTask.html":{},"injectables/OpenCVService.html":{},"injectables/PostProcessService.html":{},"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{},"components/SVGElementsComponent.html":{},"injectables/SVGUIService.html":{},"classes/StampMaker.html":{},"injectables/StateManagerService.html":{},"classes/Tool.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UndoRedoService.html":{},"classes/UndoRedoStack.html":{},"injectables/ViewService.html":{},"injectables/ZoomPanService.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{},"miscellaneous/functions.html":{}}}],["parse",{"_index":982,"title":{},"body":{"injectables/IOService.html":{}}}],["parsecolor",{"_index":2016,"title":{},"body":{"classes/StampMaker.html":{}}}],["parsecolor(color",{"_index":563,"title":{},"body":{"interfaces/Color.html":{},"classes/StampMaker.html":{}}}],["parseint(c.slice(0",{"_index":575,"title":{},"body":{"interfaces/Color.html":{},"classes/StampMaker.html":{}}}],["parseint(c.slice(2",{"_index":577,"title":{},"body":{"interfaces/Color.html":{},"classes/StampMaker.html":{}}}],["parseint(c.slice(4",{"_index":579,"title":{},"body":{"interfaces/Color.html":{},"classes/StampMaker.html":{}}}],["parseint(it",{"_index":583,"title":{},"body":{"interfaces/Color.html":{},"classes/StampMaker.html":{}}}],["parser",{"_index":985,"title":{},"body":{"injectables/IOService.html":{},"interfaces/LabelFormat.html":{},"dependencies.html":{}}}],["parser.parsefromstring(response",{"_index":988,"title":{},"body":{"injectables/IOService.html":{}}}],["path",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{},"injectables/SVGUIService.html":{},"dependencies.html":{},"index.html":{}}}],["path.join(filepath",{"_index":1814,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["path.join(this.outputfolder",{"_index":1905,"title":{},"body":{"injectables/ProjectService.html":{}}}],["path.resolve(imageconfig.image_path",{"_index":187,"title":{},"body":{"components/AppComponent.html":{}}}],["path.resolve(this.inputfolder",{"_index":1898,"title":{},"body":{"injectables/ProjectService.html":{}}}],["path.resolve(this.outputfolder",{"_index":1903,"title":{},"body":{"injectables/ProjectService.html":{}}}],["path.resolve(this.projectservice.inputfolder",{"_index":931,"title":{},"body":{"components/GalleryElementComponent.html":{}}}],["path.sep",{"_index":1900,"title":{},"body":{"injectables/ProjectService.html":{}}}],["pathlib",{"_index":2635,"title":{},"body":{"index.html":{}}}],["pen",{"_index":2112,"title":{},"body":{"classes/Tool.html":{},"classes/Tools.html":{}}}],["pencil",{"_index":2114,"title":{},"body":{"classes/Tool.html":{},"classes/Tools.html":{}}}],["percent",{"_index":1549,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["percentagebeforerefresh",{"_index":876,"title":{},"body":{"components/GalleryComponent.html":{}}}],["perform",{"_index":1602,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["performance",{"_index":2597,"title":{},"body":{"index.html":{}}}],["performance.now",{"_index":1699,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["pi",{"_index":2109,"title":{},"body":{"classes/Tool.html":{},"classes/Tools.html":{}}}],["pixel",{"_index":1498,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["pixels",{"_index":1486,"title":{},"body":{"injectables/OpenCVService.html":{},"components/ToolSettingComponent.html":{}}}],["plotcircle",{"_index":2017,"title":{},"body":{"classes/StampMaker.html":{}}}],["plotcircle(xm",{"_index":2024,"title":{},"body":{"classes/StampMaker.html":{}}}],["point",{"_index":1585,"title":{},"body":{"injectables/OpenCVService.html":{},"injectables/SVGUIService.html":{},"injectables/StateManagerService.html":{},"injectables/ZoomPanService.html":{}}}],["point.x",{"_index":2081,"title":{},"body":{"injectables/StateManagerService.html":{},"injectables/ZoomPanService.html":{}}}],["point.y",{"_index":2083,"title":{},"body":{"injectables/StateManagerService.html":{},"injectables/ZoomPanService.html":{}}}],["point1",{"_index":2525,"title":{},"body":{"miscellaneous/functions.html":{}}}],["point2",{"_index":2524,"title":{},"body":{"miscellaneous/functions.html":{}}}],["point2d",{"_index":272,"title":{"interfaces/Point2D.html":{},"interfaces/Point2D-1.html":{}},"body":{"interfaces/BboxLabel.html":{},"injectables/DrawService.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/Point2D-1.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"interfaces/Rect.html":{},"interfaces/Rect-1.html":{},"components/SVGElementsComponent.html":{},"injectables/SVGUIService.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"injectables/StateManagerService.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{},"interfaces/Viewbox-1.html":{},"injectables/ZoomPanService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["point2d).x",{"_index":2386,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["point2d).y",{"_index":2389,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["pop",{"_index":2252,"title":{},"body":{"classes/UndoRedoStack.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{}}}],["post",{"_index":670,"title":{},"body":{"injectables/DrawService.html":{},"injectables/ImageProcessingService.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["postprocess",{"_index":1678,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["postprocesscallback",{"_index":687,"title":{},"body":{"injectables/DrawService.html":{}}}],["postprocesscallback?.then",{"_index":693,"title":{},"body":{"injectables/DrawService.html":{}}}],["postprocessdraw",{"_index":616,"title":{},"body":{"injectables/DrawService.html":{}}}],["postprocesserase",{"_index":617,"title":{},"body":{"injectables/DrawService.html":{}}}],["postprocessingoptions",{"_index":2127,"title":{},"body":{"classes/Tool.html":{},"components/ToolSettingComponent.html":{},"classes/Tools.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["postprocessoption",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"classes/Tool.html":{},"components/ToolSettingComponent.html":{},"classes/Tools.html":{},"miscellaneous/enumerations.html":{}}}],["postprocessoption.crf",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"injectables/DrawService.html":{},"classes/Tool.html":{},"classes/Tools.html":{},"miscellaneous/variables.html":{}}}],["postprocessoption.medsam",{"_index":743,"title":{},"body":{"injectables/DrawService.html":{},"classes/Tool.html":{},"classes/Tools.html":{},"miscellaneous/variables.html":{}}}],["postprocessoption.otsu",{"_index":741,"title":{},"body":{"injectables/DrawService.html":{},"classes/Tool.html":{},"classes/Tools.html":{},"miscellaneous/variables.html":{}}}],["postprocessservice",{"_index":626,"title":{"injectables/PostProcessService.html":{}},"body":{"injectables/DrawService.html":{},"injectables/ImageProcessingService.html":{},"injectables/PostProcessService.html":{},"coverage.html":{}}}],["powerful",{"_index":2543,"title":{},"body":{"index.html":{}}}],["ppoption",{"_index":2135,"title":{},"body":{"components/ToolSettingComponent.html":{}}}],["precise",{"_index":1586,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["preprocess",{"_index":1085,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["preprocessimage",{"_index":1076,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["preprocessing",{"_index":2578,"title":{},"body":{"index.html":{}}}],["prerequisites",{"_index":2579,"title":{},"body":{"index.html":{}}}],["preset",{"_index":116,"title":{},"body":{"components/AppComponent.html":{}}}],["previouspoint",{"_index":2032,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["primeflex",{"_index":2501,"title":{},"body":{"dependencies.html":{}}}],["primeicons",{"_index":2503,"title":{},"body":{"dependencies.html":{}}}],["primeng",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["primeng/api",{"_index":325,"title":{},"body":{"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"injectables/LabelsService.html":{}}}],["primeng/blockui",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/ToolbarComponent.html":{}}}],["primeng/button",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/LabelsComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/ToolbarComponent.html":{}}}],["primeng/card",{"_index":923,"title":{},"body":{"components/GalleryElementComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/ToolSettingComponent.html":{}}}],["primeng/checkbox",{"_index":521,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{},"components/ProjectConfigurationComponent.html":{}}}],["primeng/colorpicker",{"_index":1251,"title":{},"body":{"components/LabelsComponent.html":{},"components/ProjectConfigurationComponent.html":{}}}],["primeng/config",{"_index":99,"title":{},"body":{"components/AppComponent.html":{}}}],["primeng/dataview",{"_index":894,"title":{},"body":{"components/GalleryComponent.html":{}}}],["primeng/divider",{"_index":523,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{},"components/LabelsComponent.html":{},"components/ProjectConfigurationComponent.html":{}}}],["primeng/fieldset",{"_index":522,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{},"components/LabelsComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/ToolSettingComponent.html":{}}}],["primeng/floatlabel",{"_index":1792,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["primeng/inputswitch",{"_index":1214,"title":{},"body":{"components/LabelledSwitchComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["primeng/inputtext",{"_index":524,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{},"components/ProjectConfigurationComponent.html":{}}}],["primeng/knob",{"_index":895,"title":{},"body":{"components/GalleryComponent.html":{}}}],["primeng/panel",{"_index":893,"title":{},"body":{"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/LabelsComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["primeng/progressbar",{"_index":1362,"title":{},"body":{"components/LoadingComponent.html":{}}}],["primeng/selectbutton",{"_index":1254,"title":{},"body":{"components/LabelsComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["primeng/slider",{"_index":1252,"title":{},"body":{"components/LabelsComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["primeng/table",{"_index":1800,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["primeng/tag",{"_index":525,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["primeng/themes",{"_index":2490,"title":{},"body":{"dependencies.html":{}}}],["primeng/themes/aura",{"_index":101,"title":{},"body":{"components/AppComponent.html":{}}}],["primeng/themes/lara",{"_index":105,"title":{},"body":{"components/AppComponent.html":{}}}],["primeng/themes/material",{"_index":103,"title":{},"body":{"components/AppComponent.html":{}}}],["primeng/themes/nora",{"_index":107,"title":{},"body":{"components/AppComponent.html":{}}}],["primeng/toolbar",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/ToolbarComponent.html":{}}}],["primeng/tree",{"_index":1250,"title":{},"body":{"components/LabelsComponent.html":{}}}],["primeui",{"_index":2508,"title":{},"body":{"dependencies.html":{}}}],["prioritizes",{"_index":2552,"title":{},"body":{"index.html":{}}}],["privacy",{"_index":2553,"title":{},"body":{"index.html":{}}}],["private",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"injectables/DrawService.html":{},"interfaces/EventPayload.html":{},"injectables/IOService.html":{},"injectables/ImageProcessingService.html":{},"injectables/LabelsService.html":{},"injectables/PostProcessService.html":{},"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{},"components/ToolbarComponent.html":{},"injectables/UndoRedoService.html":{},"injectables/ZoomPanService.html":{}}}],["process",{"_index":2183,"title":{},"body":{"components/ToolbarComponent.html":{},"index.html":{}}}],["process.service",{"_index":671,"title":{},"body":{"injectables/DrawService.html":{},"injectables/ImageProcessingService.html":{}}}],["process.service.ts",{"_index":1672,"title":{},"body":{"injectables/PostProcessService.html":{},"coverage.html":{}}}],["process.service.ts:124",{"_index":1690,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["process.service.ts:14",{"_index":1681,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["process.service.ts:171",{"_index":1689,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["process.service.ts:221",{"_index":1687,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["process.service.ts:24",{"_index":1691,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["process.service.ts:26",{"_index":1682,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["process.service.ts:72",{"_index":1692,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["processed",{"_index":1802,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["processedimagedata",{"_index":1467,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["processes",{"_index":2626,"title":{},"body":{"index.html":{}}}],["processing",{"_index":698,"title":{},"body":{"injectables/DrawService.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"index.html":{}}}],["processing.service",{"_index":1693,"title":{},"body":{"injectables/PostProcessService.html":{},"components/ToolSettingComponent.html":{}}}],["processing.service.ts",{"_index":1069,"title":{},"body":{"injectables/ImageProcessingService.html":{},"coverage.html":{}}}],["processing.service.ts:11",{"_index":1105,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["processing.service.ts:12",{"_index":1104,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["processing.service.ts:14",{"_index":1103,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["processing.service.ts:16",{"_index":1107,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["processing.service.ts:17",{"_index":1108,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["processing.service.ts:18",{"_index":1098,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["processing.service.ts:19",{"_index":1097,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["processing.service.ts:21",{"_index":1100,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["processing.service.ts:23",{"_index":1106,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["processing.service.ts:25",{"_index":1102,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["processing.service.ts:26",{"_index":1101,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["processing.service.ts:27",{"_index":1099,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["processing.service.ts:28",{"_index":1088,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["processing.service.ts:34",{"_index":1093,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["processing.service.ts:39",{"_index":1090,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["processing.service.ts:54",{"_index":1096,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["processing.service.ts:67",{"_index":1089,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["processing.service.ts:76",{"_index":1092,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["production",{"_index":2588,"title":{},"body":{"index.html":{}}}],["progressbarmodule",{"_index":1357,"title":{},"body":{"components/LoadingComponent.html":{}}}],["project",{"_index":244,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["project(project_name=\"funduslesions",{"_index":2683,"title":{},"body":{"index.html":{}}}],["project/labels.service",{"_index":966,"title":{},"body":{"injectables/IOService.html":{}}}],["project/project.service",{"_index":965,"title":{},"body":{"injectables/IOService.html":{}}}],["project_config.json",{"_index":1815,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["project_name",{"_index":289,"title":{},"body":{"interfaces/BboxLabel.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{}}}],["projectconfig",{"_index":288,"title":{"interfaces/ProjectConfig.html":{}},"body":{"interfaces/BboxLabel.html":{},"injectables/CLIService.html":{},"interfaces/EventPayload.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["projectconfigurationcomponent",{"_index":243,"title":{"components/ProjectConfigurationComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["projectcreated",{"_index":336,"title":{},"body":{"injectables/CLIService.html":{},"interfaces/EventPayload.html":{}}}],["projectfile",{"_index":300,"title":{"interfaces/ProjectFile.html":{}},"body":{"interfaces/BboxLabel.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{},"coverage.html":{}}}],["projectfile.root",{"_index":1921,"title":{},"body":{"injectables/ProjectService.html":{}}}],["projectfolder",{"_index":1845,"title":{},"body":{"injectables/ProjectService.html":{}}}],["projectname",{"_index":1846,"title":{},"body":{"injectables/ProjectService.html":{}}}],["projectname/config",{"_index":1917,"title":{},"body":{"injectables/ProjectService.html":{}}}],["projects",{"_index":1925,"title":{},"body":{"injectables/ProjectService.html":{}}}],["projectservice",{"_index":34,"title":{"injectables/ProjectService.html":{}},"body":{"components/AppComponent.html":{},"injectables/DrawService.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"components/InstanceLabelComponent.html":{},"components/LabelsComponent.html":{},"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{},"components/ToolSettingComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["projectservice.inputfolder",{"_index":190,"title":{},"body":{"components/AppComponent.html":{}}}],["projectservice.isprojectstarted",{"_index":2734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projectservice:projectservice",{"_index":1176,"title":{},"body":{"components/InstanceLabelComponent.html":{}}}],["projectstartedguard",{"_index":2465,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["proliferative",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["promise",{"_index":270,"title":{},"body":{"interfaces/BboxLabel.html":{},"injectables/CanvasManagerService.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"injectables/UndoRedoService.html":{},"interfaces/Viewbox.html":{},"miscellaneous/functions.html":{}}}],["promise((resolve",{"_index":471,"title":{},"body":{"injectables/CanvasManagerService.html":{},"injectables/DrawService.html":{}}}],["promise.all(allpromises",{"_index":1049,"title":{},"body":{"injectables/IOService.html":{}}}],["promise.all(allpromises).then((blobs",{"_index":2229,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["promise.resolve('no",{"_index":1955,"title":{},"body":{"injectables/ProjectService.html":{}}}],["properties",{"_index":31,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"interfaces/BboxLabel.html":{},"injectables/BboxManagerService.html":{},"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"components/ClassificationConfigurationComponent.html":{},"interfaces/Color.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"interfaces/EventPayload.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"interfaces/ImageFromCLI.html":{},"injectables/ImageProcessingService.html":{},"components/InstanceLabelComponent.html":{},"interfaces/LabelFormat.html":{},"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"components/LoadingComponent.html":{},"interfaces/MulticlassInterface.html":{},"classes/MulticlassTask.html":{},"interfaces/MultilabelInterface.html":{},"classes/MultilabelTask.html":{},"injectables/OpenCVService.html":{},"interfaces/Point2D.html":{},"interfaces/Point2D-1.html":{},"injectables/PostProcessService.html":{},"interfaces/ProjectConfig.html":{},"components/ProjectConfigurationComponent.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"interfaces/Rect-1.html":{},"components/SVGElementsComponent.html":{},"injectables/SVGUIService.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"classes/StampMaker.html":{},"injectables/StateManagerService.html":{},"interfaces/Thumbnail.html":{},"classes/Tool.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"classes/Tools.html":{},"interfaces/UndoRedoCanvasElement.html":{},"injectables/UndoRedoService.html":{},"classes/UndoRedoStack.html":{},"injectables/ViewService.html":{},"interfaces/Viewbox.html":{},"interfaces/Viewbox-1.html":{},"injectables/ZoomPanService.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{},"properties.html":{}}}],["provideanimationsasync",{"_index":2717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":309,"title":{},"body":{"injectables/BboxManagerService.html":{},"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"interfaces/EventPayload.html":{},"injectables/IOService.html":{},"injectables/ImageProcessingService.html":{},"injectables/LabelsService.html":{},"injectables/OpenCVService.html":{},"injectables/PostProcessService.html":{},"injectables/ProjectService.html":{},"injectables/SVGUIService.html":{},"injectables/StateManagerService.html":{},"injectables/UndoRedoService.html":{},"injectables/ViewService.html":{},"injectables/ZoomPanService.html":{}}}],["providerouter(routes",{"_index":2716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":2715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"injectables/CLIService.html":{},"components/ClassificationConfigurationComponent.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"interfaces/EventPayload.html":{},"components/GalleryComponent.html":{},"injectables/IOService.html":{},"components/InstanceLabelComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"classes/MulticlassTask.html":{},"classes/MultilabelTask.html":{},"injectables/PostProcessService.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"injectables/StateManagerService.html":{},"classes/Tool.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"classes/Tools.html":{},"injectables/UndoRedoService.html":{},"injectables/ZoomPanService.html":{}}}],["push",{"_index":2238,"title":{},"body":{"classes/UndoRedoStack.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{}}}],["push(element",{"_index":2244,"title":{},"body":{"classes/UndoRedoStack.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{}}}],["pynotate",{"_index":2636,"title":{},"body":{"index.html":{}}}],["python",{"_index":2613,"title":{},"body":{"index.html":{}}}],["r",{"_index":548,"title":{},"body":{"interfaces/Color.html":{},"injectables/OpenCVService.html":{},"classes/StampMaker.html":{},"miscellaneous/functions.html":{}}}],["r_cdf",{"_index":1545,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["r_cdf[i",{"_index":1555,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["random",{"_index":2165,"title":{},"body":{"components/ToolSettingComponent.html":{},"index.html":{}}}],["range",{"_index":1590,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["range(1",{"_index":2669,"title":{},"body":{"index.html":{}}}],["ranges",{"_index":1522,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["readable",{"_index":167,"title":{},"body":{"components/AppComponent.html":{}}}],["real",{"_index":2576,"title":{},"body":{"index.html":{}}}],["rebuildtreenodes",{"_index":1286,"title":{},"body":{"injectables/LabelsService.html":{}}}],["receive",{"_index":2631,"title":{},"body":{"index.html":{}}}],["recomputecanvassum",{"_index":2033,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["rect",{"_index":263,"title":{"interfaces/Rect.html":{},"interfaces/Rect-1.html":{}},"body":{"interfaces/BboxLabel.html":{},"injectables/DrawService.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"injectables/OpenCVService.html":{},"interfaces/Point2D.html":{},"interfaces/Point2D-1.html":{},"injectables/PostProcessService.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"interfaces/Rect.html":{},"interfaces/Rect-1.html":{},"components/SVGElementsComponent.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{},"interfaces/Viewbox-1.html":{},"injectables/ZoomPanService.html":{},"coverage.html":{}}}],["rect.height",{"_index":776,"title":{},"body":{"injectables/DrawService.html":{},"injectables/PostProcessService.html":{},"injectables/ZoomPanService.html":{}}}],["rect.height).data",{"_index":1724,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["rect.left",{"_index":2393,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["rect.top",{"_index":2395,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["rect.width",{"_index":775,"title":{},"body":{"injectables/DrawService.html":{},"injectables/PostProcessService.html":{},"injectables/ZoomPanService.html":{}}}],["rect.x",{"_index":773,"title":{},"body":{"injectables/DrawService.html":{},"injectables/PostProcessService.html":{}}}],["rect.y",{"_index":774,"title":{},"body":{"injectables/DrawService.html":{},"injectables/PostProcessService.html":{}}}],["recursive",{"_index":1831,"title":{},"body":{"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{}}}],["redo",{"_index":802,"title":{},"body":{"injectables/EditorService.html":{},"injectables/UndoRedoService.html":{},"classes/UndoRedoStack.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{}}}],["redo.service",{"_index":669,"title":{},"body":{"injectables/DrawService.html":{}}}],["redo.service.ts",{"_index":2192,"title":{},"body":{"injectables/UndoRedoService.html":{},"coverage.html":{}}}],["redo.service.ts:100",{"_index":2199,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["redo.service.ts:13",{"_index":2195,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["redo.service.ts:34",{"_index":2198,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["redo.service.ts:58",{"_index":2197,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["redo.service.ts:96",{"_index":2196,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["redostack",{"_index":2236,"title":{},"body":{"classes/UndoRedoStack.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{}}}],["redraw",{"_index":2336,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["redrawrequest",{"_index":605,"title":{},"body":{"injectables/DrawService.html":{},"injectables/UndoRedoService.html":{},"injectables/ZoomPanService.html":{}}}],["ref_canvas",{"_index":1077,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["ref_image",{"_index":1078,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["refine",{"_index":2167,"title":{},"body":{"components/ToolSettingComponent.html":{}}}],["refresh",{"_index":880,"title":{},"body":{"components/GalleryComponent.html":{},"injectables/ImageProcessingService.html":{}}}],["refreshallcolors",{"_index":618,"title":{},"body":{"injectables/DrawService.html":{}}}],["refreshcolor",{"_index":619,"title":{},"body":{"injectables/DrawService.html":{}}}],["refreshcolor(inputctx",{"_index":650,"title":{},"body":{"injectables/DrawService.html":{}}}],["refreshinterval",{"_index":877,"title":{},"body":{"components/GalleryComponent.html":{}}}],["regex",{"_index":1832,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["regexfilter",{"_index":1936,"title":{},"body":{"injectables/ProjectService.html":{}}}],["reinforceedges",{"_index":1079,"title":{},"body":{"injectables/ImageProcessingService.html":{},"injectables/OpenCVService.html":{}}}],["reinforceedges(input",{"_index":1418,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["reinforcement",{"_index":2148,"title":{},"body":{"components/ToolSettingComponent.html":{}}}],["reject",{"_index":472,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["relative",{"_index":197,"title":{},"body":{"components/AppComponent.html":{}}}],["remove",{"_index":779,"title":{},"body":{"injectables/DrawService.html":{},"injectables/OpenCVService.html":{},"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{},"components/ToolSettingComponent.html":{}}}],["removeclassfrommultitask",{"_index":497,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["removeclassfrommultitask(classindex",{"_index":510,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["removeclassfromtask",{"_index":498,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["removeclassfromtask(taskindex",{"_index":513,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["removeclassificationtask",{"_index":1287,"title":{},"body":{"injectables/LabelsService.html":{}}}],["removeclassificationtask(task",{"_index":1303,"title":{},"body":{"injectables/LabelsService.html":{}}}],["removelabel",{"_index":1378,"title":{},"body":{"classes/MultilabelTask.html":{}}}],["removelabel(label",{"_index":1374,"title":{},"body":{"classes/MulticlassTask.html":{},"classes/MultilabelTask.html":{}}}],["removeprojectfile",{"_index":1853,"title":{},"body":{"injectables/ProjectService.html":{}}}],["removeprojectfile(filepath",{"_index":1868,"title":{},"body":{"injectables/ProjectService.html":{}}}],["removeprojectfromfilepath",{"_index":1772,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["removeprojectfromfilepath(filepath",{"_index":1784,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["removeseglabel",{"_index":1288,"title":{},"body":{"injectables/LabelsService.html":{}}}],["removeseglabel(seglabel",{"_index":1305,"title":{},"body":{"injectables/LabelsService.html":{}}}],["removetask",{"_index":499,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["removetask(taskindex",{"_index":515,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["replace(/rgb|\\s+|\\(|\\)/g",{"_index":581,"title":{},"body":{"interfaces/Color.html":{},"classes/StampMaker.html":{}}}],["requestanimationframe",{"_index":2411,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["requestcanvasclear",{"_index":813,"title":{},"body":{"injectables/EditorService.html":{}}}],["requestcanvasclear(index",{"_index":825,"title":{},"body":{"injectables/EditorService.html":{}}}],["requestcanvasredraw",{"_index":814,"title":{},"body":{"injectables/EditorService.html":{}}}],["requestedreload",{"_index":938,"title":{},"body":{"injectables/IOService.html":{}}}],["requestredo",{"_index":815,"title":{},"body":{"injectables/EditorService.html":{}}}],["requestredraw",{"_index":385,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["requestreload",{"_index":945,"title":{},"body":{"injectables/IOService.html":{}}}],["requestundo",{"_index":816,"title":{},"body":{"injectables/EditorService.html":{}}}],["reset",{"_index":2037,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["resetcombinedcanvas",{"_index":401,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["resetcurrentpoint",{"_index":2038,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["resetminmaxpoints",{"_index":2039,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["resetpath",{"_index":2007,"title":{},"body":{"injectables/SVGUIService.html":{}}}],["resetpreviouspoint",{"_index":2040,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["resetproject",{"_index":1854,"title":{},"body":{"injectables/ProjectService.html":{}}}],["resetzoomandpan",{"_index":2311,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["resetzoomandpan(smooth",{"_index":2335,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["resolve",{"_index":688,"title":{},"body":{"injectables/DrawService.html":{}}}],["resolve(true",{"_index":475,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["response",{"_index":978,"title":{},"body":{"injectables/IOService.html":{}}}],["responsive",{"_index":2600,"title":{},"body":{"index.html":{}}}],["restorelasttool",{"_index":817,"title":{},"body":{"injectables/EditorService.html":{}}}],["result",{"_index":1609,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["results",{"_index":256,"title":{},"body":{"components/AppComponent.html":{},"interfaces/BboxLabel.html":{},"injectables/BboxManagerService.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"components/ClassificationConfigurationComponent.html":{},"interfaces/Color.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"interfaces/EventPayload.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"interfaces/ImageFromCLI.html":{},"injectables/ImageProcessingService.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"interfaces/LabelFormat.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"components/LoadingComponent.html":{},"interfaces/MulticlassInterface.html":{},"classes/MulticlassTask.html":{},"interfaces/MultilabelInterface.html":{},"classes/MultilabelTask.html":{},"injectables/OpenCVService.html":{},"interfaces/Point2D.html":{},"interfaces/Point2D-1.html":{},"injectables/PostProcessService.html":{},"interfaces/ProjectConfig.html":{},"components/ProjectConfigurationComponent.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"interfaces/Rect-1.html":{},"components/SVGElementsComponent.html":{},"injectables/SVGUIService.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"classes/StampMaker.html":{},"injectables/StateManagerService.html":{},"components/TestingComponent.html":{},"interfaces/Thumbnail.html":{},"classes/Tool.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"classes/Tools.html":{},"interfaces/UndoRedoCanvasElement.html":{},"injectables/UndoRedoService.html":{},"classes/UndoRedoStack.html":{},"injectables/ViewService.html":{},"interfaces/Viewbox.html":{},"interfaces/Viewbox-1.html":{},"injectables/ZoomPanService.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retinopathy",{"_index":2655,"title":{},"body":{"index.html":{}}}],["return",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"injectables/CanvasManagerService.html":{},"components/ClassificationConfigurationComponent.html":{},"interfaces/Color.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"injectables/ImageProcessingService.html":{},"components/InstanceLabelComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"injectables/OpenCVService.html":{},"injectables/PostProcessService.html":{},"injectables/ProjectService.html":{},"classes/StampMaker.html":{},"injectables/StateManagerService.html":{},"injectables/UndoRedoService.html":{},"classes/UndoRedoStack.html":{},"injectables/ViewService.html":{},"injectables/ZoomPanService.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"components/ClassificationConfigurationComponent.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"injectables/ImageProcessingService.html":{},"components/InstanceLabelComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"classes/MultilabelTask.html":{},"injectables/OpenCVService.html":{},"injectables/PostProcessService.html":{},"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{},"components/SVGElementsComponent.html":{},"injectables/SVGUIService.html":{},"classes/StampMaker.html":{},"injectables/StateManagerService.html":{},"components/ToolbarComponent.html":{},"injectables/UndoRedoService.html":{},"classes/UndoRedoStack.html":{},"injectables/ViewService.html":{},"injectables/ZoomPanService.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{},"miscellaneous/functions.html":{}}}],["rgb",{"_index":1613,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["rgb[1",{"_index":1629,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["rgb[2",{"_index":1630,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["rgb\\((\\s+)?[0",{"_index":555,"title":{},"body":{"interfaces/Color.html":{},"classes/StampMaker.html":{},"miscellaneous/variables.html":{}}}],["rgba",{"_index":1624,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["rgba.delete",{"_index":1669,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["rgbpattern",{"_index":554,"title":{},"body":{"interfaces/Color.html":{},"classes/StampMaker.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rgbpattern.test(color",{"_index":568,"title":{},"body":{"interfaces/Color.html":{},"classes/StampMaker.html":{}}}],["rhist",{"_index":1523,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["rhist.cols",{"_index":1530,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["rhist.delete",{"_index":1540,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["right",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"injectables/OpenCVService.html":{}}}],["rmax",{"_index":1556,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["rmin",{"_index":1550,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["rnorm_hist",{"_index":1534,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["rnorm_hist.delete",{"_index":1567,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["root",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"interfaces/BboxLabel.html":{},"injectables/BboxManagerService.html":{},"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"interfaces/EventPayload.html":{},"injectables/IOService.html":{},"interfaces/ImageFromCLI.html":{},"injectables/ImageProcessingService.html":{},"injectables/LabelsService.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"injectables/OpenCVService.html":{},"interfaces/Point2D.html":{},"injectables/PostProcessService.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"injectables/SVGUIService.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"injectables/StateManagerService.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"injectables/UndoRedoService.html":{},"injectables/ViewService.html":{},"interfaces/Viewbox.html":{},"injectables/ZoomPanService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["root'},{'name",{"_index":212,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["route",{"_index":2730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router",{"_index":2274,"title":{},"body":{"injectables/ViewService.html":{},"miscellaneous/variables.html":{}}}],["router.navigate(['/project",{"_index":2735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routermodule",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["routeroutlet",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["rows.project_name",{"_index":1820,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["rows.root",{"_index":1821,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["run",{"_index":2561,"title":{},"body":{"index.html":{}}}],["run_model(filepath",{"_index":2661,"title":{},"body":{"index.html":{}}}],["runtime",{"_index":2611,"title":{},"body":{"index.html":{}}}],["rust",{"_index":2582,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":346,"title":{},"body":{"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"interfaces/EventPayload.html":{},"injectables/IOService.html":{},"injectables/UndoRedoService.html":{},"injectables/ZoomPanService.html":{},"dependencies.html":{}}}],["sam",{"_index":2160,"title":{},"body":{"components/ToolSettingComponent.html":{}}}],["sam_post_process",{"_index":1679,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["same",{"_index":2682,"title":{},"body":{"index.html":{}}}],["samthreshold",{"_index":803,"title":{},"body":{"injectables/EditorService.html":{}}}],["save",{"_index":946,"title":{},"body":{"injectables/IOService.html":{},"injectables/ProjectService.html":{}}}],["saved",{"_index":1194,"title":{},"body":{"interfaces/LabelFormat.html":{}}}],["savefile",{"_index":1031,"title":{},"body":{"injectables/IOService.html":{}}}],["savefile.colors.push(label.color",{"_index":1045,"title":{},"body":{"injectables/IOService.html":{}}}],["savefile.labels.push(label.label",{"_index":1036,"title":{},"body":{"injectables/IOService.html":{}}}],["savefile.masks.push(blob",{"_index":1043,"title":{},"body":{"injectables/IOService.html":{}}}],["savefile.masks.push(data.mask_data[index",{"_index":1053,"title":{},"body":{"injectables/IOService.html":{}}}],["savefile.masksname.push(label.label",{"_index":1037,"title":{},"body":{"injectables/IOService.html":{}}}],["savefile.multiclass",{"_index":1046,"title":{},"body":{"injectables/IOService.html":{}}}],["savefile.multiclass?.push(task.choice",{"_index":1047,"title":{},"body":{"injectables/IOService.html":{}}}],["savefile.multilabel",{"_index":1056,"title":{},"body":{"injectables/IOService.html":{}}}],["savefile.shades",{"_index":1034,"title":{},"body":{"injectables/IOService.html":{}}}],["savefile.shades.push(label.shades",{"_index":1035,"title":{},"body":{"injectables/IOService.html":{}}}],["savefromcli",{"_index":947,"title":{},"body":{"injectables/IOService.html":{}}}],["savefromcli(data",{"_index":959,"title":{},"body":{"injectables/IOService.html":{}}}],["saveprojectconfigfile",{"_index":1893,"title":{},"body":{"injectables/ProjectService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["saveprojectconfigfile(root",{"_index":2533,"title":{},"body":{"miscellaneous/functions.html":{}}}],["saveprojectconfigfile(this.projectfolder",{"_index":1916,"title":{},"body":{"injectables/ProjectService.html":{}}}],["saving",{"_index":1030,"title":{},"body":{"injectables/IOService.html":{}}}],["scale",{"_index":1604,"title":{},"body":{"injectables/OpenCVService.html":{},"injectables/ZoomPanService.html":{}}}],["scalex",{"_index":2372,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["scaley",{"_index":2373,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["scan",{"_index":1485,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["scripts",{"_index":2623,"title":{},"body":{"index.html":{}}}],["sdk",{"_index":2697,"title":{},"body":{"index.html":{}}}],["seamless",{"_index":2622,"title":{},"body":{"index.html":{}}}],["security",{"_index":2564,"title":{},"body":{"index.html":{}}}],["see",{"_index":2696,"title":{},"body":{"index.html":{}}}],["seginstance",{"_index":267,"title":{"interfaces/SegInstance.html":{}},"body":{"interfaces/BboxLabel.html":{},"interfaces/ImageFromCLI.html":{},"injectables/LabelsService.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{},"coverage.html":{}}}],["seglabel",{"_index":265,"title":{"interfaces/SegLabel.html":{}},"body":{"interfaces/BboxLabel.html":{},"injectables/IOService.html":{},"interfaces/ImageFromCLI.html":{},"components/InstanceLabelComponent.html":{},"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/ProjectConfig.html":{},"components/ProjectConfigurationComponent.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{},"coverage.html":{}}}],["seglabel.label",{"_index":1342,"title":{},"body":{"injectables/LabelsService.html":{}}}],["segment",{"_index":2161,"title":{},"body":{"components/ToolSettingComponent.html":{},"index.html":{}}}],["segment_lesions",{"_index":2640,"title":{},"body":{"index.html":{}}}],["segment_lesions(img",{"_index":2663,"title":{},"body":{"index.html":{}}}],["segment_odmac",{"_index":2647,"title":{},"body":{"index.html":{}}}],["segment_odmac(img).argmax(0).cpu().numpy",{"_index":2666,"title":{},"body":{"index.html":{}}}],["segmentation",{"_index":1824,"title":{},"body":{"components/ProjectConfigurationComponent.html":{},"components/ToolSettingComponent.html":{}}}],["segmentation_classes",{"_index":296,"title":{},"body":{"interfaces/BboxLabel.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{},"index.html":{}}}],["segmentation_classes=segmentation_classes",{"_index":2688,"title":{},"body":{"index.html":{}}}],["segmentation_masks=masks",{"_index":2691,"title":{},"body":{"index.html":{}}}],["selectbuttonmodule",{"_index":1220,"title":{},"body":{"components/LabelsComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["selectedtool",{"_index":804,"title":{},"body":{"injectables/EditorService.html":{}}}],["selector",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["send",{"_index":2628,"title":{},"body":{"index.html":{}}}],["sep",{"_index":1899,"title":{},"body":{"injectables/ProjectService.html":{}}}],["server",{"_index":2586,"title":{},"body":{"index.html":{}}}],["service/bbox",{"_index":1996,"title":{},"body":{"components/SVGElementsComponent.html":{}}}],["service/svgui.service",{"_index":1997,"title":{},"body":{"components/SVGElementsComponent.html":{}}}],["services",{"_index":2604,"title":{},"body":{"index.html":{}}}],["services/cli.service",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/ProjectConfigurationComponent.html":{}}}],["services/io.service",{"_index":95,"title":{},"body":{"components/AppComponent.html":{}}}],["services/open",{"_index":438,"title":{},"body":{"injectables/CanvasManagerService.html":{},"injectables/DrawService.html":{},"injectables/ImageProcessingService.html":{}}}],["services/project/labels.service",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"injectables/CanvasManagerService.html":{},"components/ClassificationConfigurationComponent.html":{},"injectables/DrawService.html":{},"components/InstanceLabelComponent.html":{},"components/LabelsComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"injectables/UndoRedoService.html":{}}}],["services/project/project.service",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"injectables/DrawService.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/LabelsComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/ToolSettingComponent.html":{}}}],["services/ui/editor.service",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"injectables/CanvasManagerService.html":{},"injectables/DrawService.html":{},"injectables/ImageProcessingService.html":{},"components/LabelsComponent.html":{},"injectables/PostProcessService.html":{},"components/SVGElementsComponent.html":{},"injectables/StateManagerService.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UndoRedoService.html":{}}}],["services/ui/view.service",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/LoadingComponent.html":{}}}],["serving",{"_index":2606,"title":{},"body":{"index.html":{}}}],["setactiveindex",{"_index":1289,"title":{},"body":{"injectables/LabelsService.html":{}}}],["setactiveindex(index",{"_index":1307,"title":{},"body":{"injectables/LabelsService.html":{}}}],["setcontext",{"_index":2312,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["setcontext(canvasref",{"_index":2338,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["setimage",{"_index":1086,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["setimage(img",{"_index":1094,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["setinterval",{"_index":903,"title":{},"body":{"components/GalleryComponent.html":{}}}],["setloading",{"_index":2272,"title":{},"body":{"injectables/ViewService.html":{}}}],["setloading(status",{"_index":2279,"title":{},"body":{"injectables/ViewService.html":{}}}],["settimeout",{"_index":1757,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["setting",{"_index":253,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["setting.component.html",{"_index":2132,"title":{},"body":{"components/ToolSettingComponent.html":{}}}],["setting.component.scss",{"_index":2133,"title":{},"body":{"components/ToolSettingComponent.html":{}}}],["setting.component.ts",{"_index":2130,"title":{},"body":{"components/ToolSettingComponent.html":{},"coverage.html":{}}}],["setting.component.ts:36",{"_index":2140,"title":{},"body":{"components/ToolSettingComponent.html":{}}}],["setting.component.ts:37",{"_index":2137,"title":{},"body":{"components/ToolSettingComponent.html":{}}}],["setting.component.ts:39",{"_index":2138,"title":{},"body":{"components/ToolSettingComponent.html":{}}}],["setting.component.ts:40",{"_index":2141,"title":{},"body":{"components/ToolSettingComponent.html":{}}}],["setting.component.ts:41",{"_index":2139,"title":{},"body":{"components/ToolSettingComponent.html":{}}}],["setting/tool",{"_index":2129,"title":{},"body":{"components/ToolSettingComponent.html":{},"coverage.html":{}}}],["settransform",{"_index":2313,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["settransform(scale",{"_index":2340,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["setup",{"_index":2570,"title":{},"body":{"index.html":{}}}],["setviewbox",{"_index":1984,"title":{},"body":{"components/SVGElementsComponent.html":{}}}],["setviewbox(viewbox",{"_index":1988,"title":{},"body":{"components/SVGElementsComponent.html":{}}}],["setwidthandheight",{"_index":2041,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["setwidthandheight(width",{"_index":2053,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["severe",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["shade",{"_index":268,"title":{},"body":{"interfaces/BboxLabel.html":{},"interfaces/ImageFromCLI.html":{},"components/InstanceLabelComponent.html":{},"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{}}}],["shades",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"interfaces/BboxLabel.html":{},"injectables/IOService.html":{},"interfaces/ImageFromCLI.html":{},"components/InstanceLabelComponent.html":{},"interfaces/LabelFormat.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/ProjectConfig.html":{},"components/ProjectConfigurationComponent.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{}}}],["shape",{"_index":766,"title":{},"body":{"injectables/DrawService.html":{}}}],["show",{"_index":2182,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["showalllabels",{"_index":1280,"title":{},"body":{"injectables/LabelsService.html":{}}}],["side",{"_index":2602,"title":{},"body":{"index.html":{}}}],["singledrawrequest",{"_index":606,"title":{},"body":{"injectables/DrawService.html":{}}}],["size",{"_index":561,"title":{},"body":{"interfaces/Color.html":{},"classes/StampMaker.html":{},"components/ToolSettingComponent.html":{},"miscellaneous/functions.html":{}}}],["size=1).tolist",{"_index":2675,"title":{},"body":{"index.html":{}}}],["size=np.random.randint(0",{"_index":2672,"title":{},"body":{"index.html":{}}}],["slash",{"_index":2122,"title":{},"body":{"classes/Tool.html":{},"classes/Tools.html":{}}}],["slidermodule",{"_index":1221,"title":{},"body":{"components/LabelsComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["slight",{"_index":1652,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["smooth",{"_index":2147,"title":{},"body":{"components/ToolSettingComponent.html":{},"injectables/ZoomPanService.html":{}}}],["smoothupdatetransform",{"_index":2314,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["snap",{"_index":2152,"title":{},"body":{"components/ToolSettingComponent.html":{}}}],["something",{"_index":1438,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"interfaces/BboxLabel.html":{},"injectables/BboxManagerService.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"components/ClassificationConfigurationComponent.html":{},"interfaces/Color.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"interfaces/EventPayload.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"interfaces/ImageFromCLI.html":{},"injectables/ImageProcessingService.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"interfaces/LabelFormat.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"components/LoadingComponent.html":{},"interfaces/MulticlassInterface.html":{},"classes/MulticlassTask.html":{},"interfaces/MultilabelInterface.html":{},"classes/MultilabelTask.html":{},"injectables/OpenCVService.html":{},"interfaces/Point2D.html":{},"interfaces/Point2D-1.html":{},"injectables/PostProcessService.html":{},"interfaces/ProjectConfig.html":{},"components/ProjectConfigurationComponent.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"interfaces/Rect-1.html":{},"components/SVGElementsComponent.html":{},"injectables/SVGUIService.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"classes/StampMaker.html":{},"injectables/StateManagerService.html":{},"components/TestingComponent.html":{},"interfaces/Thumbnail.html":{},"classes/Tool.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"classes/Tools.html":{},"interfaces/UndoRedoCanvasElement.html":{},"injectables/UndoRedoService.html":{},"classes/UndoRedoStack.html":{},"injectables/ViewService.html":{},"interfaces/Viewbox.html":{},"interfaces/Viewbox-1.html":{},"injectables/ZoomPanService.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{}}}],["spatialweight",{"_index":1703,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["speed",{"_index":2554,"title":{},"body":{"index.html":{}}}],["split",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Color.html":{},"injectables/IOService.html":{},"classes/StampMaker.html":{}}}],["src",{"_index":1461,"title":{},"body":{"injectables/OpenCVService.html":{},"index.html":{}}}],["src.convertto(dst",{"_index":1588,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["src.delete",{"_index":1471,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["src.type",{"_index":1626,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["src/.../app.config.ts",{"_index":2706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../bresenham.ts",{"_index":2518,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../colors.ts",{"_index":2520,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../environment.development.ts",{"_index":2708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../images.ts",{"_index":2522,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../labeltreenode.ts",{"_index":2521,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../main.ts",{"_index":2711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../open",{"_index":2707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../project",{"_index":2712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../save_load.ts",{"_index":2519,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../stampmaker.ts",{"_index":2710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../tools.ts",{"_index":2516,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../undoredo.ts",{"_index":2713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:140",{"_index":68,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:156",{"_index":65,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:49",{"_index":55,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:52",{"_index":77,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:53",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:54",{"_index":71,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:74",{"_index":61,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:94",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:98",{"_index":64,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":2470,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/core/blockable/div/div.component.ts",{"_index":310,"title":{},"body":{"components/BlockableDiv.html":{},"coverage.html":{}}}],["src/app/components/core/blockable/div/div.component.ts:15",{"_index":322,"title":{},"body":{"components/BlockableDiv.html":{}}}],["src/app/components/core/blockable/div/div.component.ts:16",{"_index":320,"title":{},"body":{"components/BlockableDiv.html":{}}}],["src/app/components/core/blockable/div/div.component.ts:21",{"_index":323,"title":{},"body":{"components/BlockableDiv.html":{}}}],["src/app/components/core/blockable/p/p.component.ts",{"_index":328,"title":{},"body":{"components/BlockableP.html":{},"coverage.html":{}}}],["src/app/components/core/blockable/p/p.component.ts:15",{"_index":331,"title":{},"body":{"components/BlockableP.html":{}}}],["src/app/components/core/blockable/p/p.component.ts:16",{"_index":330,"title":{},"body":{"components/BlockableP.html":{}}}],["src/app/components/core/blockable/p/p.component.ts:21",{"_index":332,"title":{},"body":{"components/BlockableP.html":{}}}],["src/app/components/core/drawable",{"_index":304,"title":{},"body":{"injectables/BboxManagerService.html":{},"injectables/CanvasManagerService.html":{},"injectables/DrawService.html":{},"injectables/ImageProcessingService.html":{},"components/InteractiveBboxComponent.html":{},"interfaces/Point2D-1.html":{},"injectables/PostProcessService.html":{},"interfaces/Rect-1.html":{},"components/SVGElementsComponent.html":{},"injectables/SVGUIService.html":{},"injectables/StateManagerService.html":{},"injectables/UndoRedoService.html":{},"interfaces/Viewbox-1.html":{},"injectables/ZoomPanService.html":{},"coverage.html":{}}}],["src/app/components/core/labelled",{"_index":1196,"title":{},"body":{"components/LabelledSwitchComponent.html":{},"coverage.html":{}}}],["src/app/components/core/testing/testing.component.ts",{"_index":2091,"title":{},"body":{"components/TestingComponent.html":{},"coverage.html":{}}}],["src/app/components/interface/editor/editor.component.ts",{"_index":2444,"title":{},"body":{"coverage.html":{}}}],["src/app/components/interface/editor/labels/instance",{"_index":1160,"title":{},"body":{"components/InstanceLabelComponent.html":{},"coverage.html":{}}}],["src/app/components/interface/editor/labels/labels.component.ts",{"_index":1217,"title":{},"body":{"components/LabelsComponent.html":{},"coverage.html":{}}}],["src/app/components/interface/editor/labels/labels.component.ts:38",{"_index":1232,"title":{},"body":{"components/LabelsComponent.html":{}}}],["src/app/components/interface/editor/labels/labels.component.ts:40",{"_index":1248,"title":{},"body":{"components/LabelsComponent.html":{}}}],["src/app/components/interface/editor/labels/labels.component.ts:41",{"_index":1247,"title":{},"body":{"components/LabelsComponent.html":{}}}],["src/app/components/interface/editor/labels/labels.component.ts:42",{"_index":1249,"title":{},"body":{"components/LabelsComponent.html":{}}}],["src/app/components/interface/editor/labels/labels.component.ts:45",{"_index":1245,"title":{},"body":{"components/LabelsComponent.html":{}}}],["src/app/components/interface/editor/labels/labels.component.ts:50",{"_index":1244,"title":{},"body":{"components/LabelsComponent.html":{}}}],["src/app/components/interface/editor/labels/labels.component.ts:57",{"_index":1235,"title":{},"body":{"components/LabelsComponent.html":{}}}],["src/app/components/interface/editor/labels/labels.component.ts:73",{"_index":1242,"title":{},"body":{"components/LabelsComponent.html":{}}}],["src/app/components/interface/editor/labels/labels.component.ts:80",{"_index":1239,"title":{},"body":{"components/LabelsComponent.html":{}}}],["src/app/components/interface/editor/labels/labels.component.ts:86",{"_index":1237,"title":{},"body":{"components/LabelsComponent.html":{}}}],["src/app/components/interface/editor/labels/labels.component.ts:90",{"_index":1236,"title":{},"body":{"components/LabelsComponent.html":{}}}],["src/app/components/interface/editor/labels/labels.component.ts:95",{"_index":1246,"title":{},"body":{"components/LabelsComponent.html":{}}}],["src/app/components/interface/editor/tool",{"_index":2128,"title":{},"body":{"components/ToolSettingComponent.html":{},"coverage.html":{}}}],["src/app/components/interface/editor/toolbar/toolbar.component.ts",{"_index":2168,"title":{},"body":{"components/ToolbarComponent.html":{},"coverage.html":{}}}],["src/app/components/interface/editor/toolbar/toolbar.component.ts:38",{"_index":2172,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/components/interface/editor/toolbar/toolbar.component.ts:41",{"_index":2174,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/components/interface/editor/toolbar/toolbar.component.ts:45",{"_index":2173,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/components/interface/gallery/gallery",{"_index":908,"title":{},"body":{"components/GalleryElementComponent.html":{},"coverage.html":{}}}],["src/app/components/interface/gallery/gallery.component.ts",{"_index":867,"title":{},"body":{"components/GalleryComponent.html":{},"coverage.html":{}}}],["src/app/components/interface/gallery/gallery.component.ts:27",{"_index":890,"title":{},"body":{"components/GalleryComponent.html":{}}}],["src/app/components/interface/gallery/gallery.component.ts:28",{"_index":887,"title":{},"body":{"components/GalleryComponent.html":{}}}],["src/app/components/interface/gallery/gallery.component.ts:29",{"_index":882,"title":{},"body":{"components/GalleryComponent.html":{}}}],["src/app/components/interface/gallery/gallery.component.ts:30",{"_index":888,"title":{},"body":{"components/GalleryComponent.html":{}}}],["src/app/components/interface/gallery/gallery.component.ts:32",{"_index":884,"title":{},"body":{"components/GalleryComponent.html":{}}}],["src/app/components/interface/gallery/gallery.component.ts:35",{"_index":885,"title":{},"body":{"components/GalleryComponent.html":{}}}],["src/app/components/interface/gallery/gallery.component.ts:44",{"_index":883,"title":{},"body":{"components/GalleryComponent.html":{}}}],["src/app/components/interface/loading/loading.component.ts",{"_index":1355,"title":{},"body":{"components/LoadingComponent.html":{},"coverage.html":{}}}],["src/app/components/interface/loading/loading.component.ts:13",{"_index":1360,"title":{},"body":{"components/LoadingComponent.html":{}}}],["src/app/components/interface/loading/loading.component.ts:15",{"_index":1361,"title":{},"body":{"components/LoadingComponent.html":{}}}],["src/app/components/interface/project",{"_index":479,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{},"components/ProjectConfigurationComponent.html":{},"coverage.html":{}}}],["src/app/core/canvases/bresenham.ts",{"_index":2450,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/canvases/stampmaker.ts",{"_index":545,"title":{},"body":{"interfaces/Color.html":{},"classes/StampMaker.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/canvases/stampmaker.ts:136",{"_index":2026,"title":{},"body":{"classes/StampMaker.html":{}}}],["src/app/core/canvases/stampmaker.ts:14",{"_index":2018,"title":{},"body":{"classes/StampMaker.html":{}}}],["src/app/core/canvases/stampmaker.ts:214",{"_index":2021,"title":{},"body":{"classes/StampMaker.html":{}}}],["src/app/core/canvases/stampmaker.ts:22",{"_index":2023,"title":{},"body":{"classes/StampMaker.html":{}}}],["src/app/core/canvases/stampmaker.ts:77",{"_index":2022,"title":{},"body":{"classes/StampMaker.html":{}}}],["src/app/core/canvases/tools.ts",{"_index":2097,"title":{},"body":{"classes/Tool.html":{},"classes/Tools.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/canvases/tools.ts:17",{"_index":2189,"title":{},"body":{"classes/Tools.html":{}}}],["src/app/core/canvases/tools.ts:18",{"_index":2190,"title":{},"body":{"classes/Tools.html":{}}}],["src/app/core/canvases/tools.ts:19",{"_index":2186,"title":{},"body":{"classes/Tools.html":{}}}],["src/app/core/canvases/tools.ts:20",{"_index":2187,"title":{},"body":{"classes/Tools.html":{}}}],["src/app/core/canvases/tools.ts:21",{"_index":2188,"title":{},"body":{"classes/Tools.html":{}}}],["src/app/core/canvases/tools.ts:22",{"_index":2185,"title":{},"body":{"classes/Tools.html":{}}}],["src/app/core/canvases/tools.ts:5",{"_index":2101,"title":{},"body":{"classes/Tool.html":{}}}],["src/app/core/canvases/tools.ts:6",{"_index":2102,"title":{},"body":{"classes/Tool.html":{}}}],["src/app/core/canvases/tools.ts:7",{"_index":2100,"title":{},"body":{"classes/Tool.html":{}}}],["src/app/core/interface.ts",{"_index":261,"title":{},"body":{"interfaces/BboxLabel.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{},"coverage.html":{}}}],["src/app/core/io/formats.ts",{"_index":1191,"title":{},"body":{"interfaces/LabelFormat.html":{},"coverage.html":{}}}],["src/app/core/io/images.ts",{"_index":2457,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/core/io/save_load.ts",{"_index":2458,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/core/misc/colors.ts",{"_index":2460,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/core/misc/undoredo.ts",{"_index":2235,"title":{},"body":{"classes/UndoRedoStack.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/misc/undoredo.ts:12",{"_index":2425,"title":{},"body":{"classes/_UndoStack.html":{}}}],["src/app/core/misc/undoredo.ts:16",{"_index":2424,"title":{},"body":{"classes/_UndoStack.html":{}}}],["src/app/core/misc/undoredo.ts:20",{"_index":2422,"title":{},"body":{"classes/_UndoStack.html":{}}}],["src/app/core/misc/undoredo.ts:27",{"_index":2416,"title":{},"body":{"classes/_RedoStack.html":{}}}],["src/app/core/misc/undoredo.ts:29",{"_index":2418,"title":{},"body":{"classes/_RedoStack.html":{}}}],["src/app/core/misc/undoredo.ts:33",{"_index":2420,"title":{},"body":{"classes/_RedoStack.html":{}}}],["src/app/core/misc/undoredo.ts:37",{"_index":2419,"title":{},"body":{"classes/_RedoStack.html":{}}}],["src/app/core/misc/undoredo.ts:41",{"_index":2417,"title":{},"body":{"classes/_RedoStack.html":{}}}],["src/app/core/misc/undoredo.ts:47",{"_index":2242,"title":{},"body":{"classes/UndoRedoStack.html":{}}}],["src/app/core/misc/undoredo.ts:48",{"_index":2240,"title":{},"body":{"classes/UndoRedoStack.html":{}}}],["src/app/core/misc/undoredo.ts:50",{"_index":2247,"title":{},"body":{"classes/UndoRedoStack.html":{}}}],["src/app/core/misc/undoredo.ts:59",{"_index":2246,"title":{},"body":{"classes/UndoRedoStack.html":{}}}],["src/app/core/misc/undoredo.ts:6",{"_index":2421,"title":{},"body":{"classes/_UndoStack.html":{}}}],["src/app/core/misc/undoredo.ts:68",{"_index":2245,"title":{},"body":{"classes/UndoRedoStack.html":{}}}],["src/app/core/misc/undoredo.ts:74",{"_index":2243,"title":{},"body":{"classes/UndoRedoStack.html":{}}}],["src/app/core/misc/undoredo.ts:8",{"_index":2423,"title":{},"body":{"classes/_UndoStack.html":{}}}],["src/app/core/task.ts",{"_index":1364,"title":{},"body":{"classes/MulticlassTask.html":{},"classes/MultilabelTask.html":{},"coverage.html":{}}}],["src/app/core/task.ts:10",{"_index":1380,"title":{},"body":{"classes/MultilabelTask.html":{}}}],["src/app/core/task.ts:13",{"_index":1381,"title":{},"body":{"classes/MultilabelTask.html":{}}}],["src/app/core/task.ts:17",{"_index":1382,"title":{},"body":{"classes/MultilabelTask.html":{}}}],["src/app/core/task.ts:3",{"_index":1368,"title":{},"body":{"classes/MulticlassTask.html":{}}}],["src/app/core/task.ts:5",{"_index":1369,"title":{},"body":{"classes/MulticlassTask.html":{}}}],["src/app/core/task.ts:9",{"_index":1379,"title":{},"body":{"classes/MultilabelTask.html":{}}}],["src/app/guards/project",{"_index":2463,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/cli.service.ts",{"_index":333,"title":{},"body":{"injectables/CLIService.html":{},"interfaces/EventPayload.html":{},"coverage.html":{}}}],["src/app/services/cli.service.ts:16",{"_index":344,"title":{},"body":{"injectables/CLIService.html":{}}}],["src/app/services/cli.service.ts:17",{"_index":345,"title":{},"body":{"injectables/CLIService.html":{}}}],["src/app/services/cli.service.ts:18",{"_index":340,"title":{},"body":{"injectables/CLIService.html":{}}}],["src/app/services/cli.service.ts:23",{"_index":341,"title":{},"body":{"injectables/CLIService.html":{}}}],["src/app/services/io.service.ts",{"_index":937,"title":{},"body":{"injectables/IOService.html":{},"coverage.html":{}}}],["src/app/services/io.service.ts:105",{"_index":953,"title":{},"body":{"injectables/IOService.html":{}}}],["src/app/services/io.service.ts:152",{"_index":958,"title":{},"body":{"injectables/IOService.html":{}}}],["src/app/services/io.service.ts:18",{"_index":949,"title":{},"body":{"injectables/IOService.html":{}}}],["src/app/services/io.service.ts:212",{"_index":960,"title":{},"body":{"injectables/IOService.html":{}}}],["src/app/services/io.service.ts:249",{"_index":963,"title":{},"body":{"injectables/IOService.html":{}}}],["src/app/services/io.service.ts:28",{"_index":956,"title":{},"body":{"injectables/IOService.html":{}}}],["src/app/services/io.service.ts:297",{"_index":952,"title":{},"body":{"injectables/IOService.html":{}}}],["src/app/services/io.service.ts:30",{"_index":955,"title":{},"body":{"injectables/IOService.html":{}}}],["src/app/services/io.service.ts:32",{"_index":957,"title":{},"body":{"injectables/IOService.html":{}}}],["src/app/services/io.service.ts:36",{"_index":950,"title":{},"body":{"injectables/IOService.html":{}}}],["src/app/services/io.service.ts:48",{"_index":954,"title":{},"body":{"injectables/IOService.html":{}}}],["src/app/services/open",{"_index":1383,"title":{},"body":{"injectables/OpenCVService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/project/labels.service.ts",{"_index":1274,"title":{},"body":{"injectables/LabelsService.html":{},"coverage.html":{}}}],["src/app/services/project/labels.service.ts:10",{"_index":1314,"title":{},"body":{"injectables/LabelsService.html":{}}}],["src/app/services/project/labels.service.ts:104",{"_index":1300,"title":{},"body":{"injectables/LabelsService.html":{}}}],["src/app/services/project/labels.service.ts:112",{"_index":1302,"title":{},"body":{"injectables/LabelsService.html":{}}}],["src/app/services/project/labels.service.ts:116",{"_index":1309,"title":{},"body":{"injectables/LabelsService.html":{}}}],["src/app/services/project/labels.service.ts:12",{"_index":1313,"title":{},"body":{"injectables/LabelsService.html":{}}}],["src/app/services/project/labels.service.ts:123",{"_index":1301,"title":{},"body":{"injectables/LabelsService.html":{}}}],["src/app/services/project/labels.service.ts:14",{"_index":1315,"title":{},"body":{"injectables/LabelsService.html":{}}}],["src/app/services/project/labels.service.ts:16",{"_index":1310,"title":{},"body":{"injectables/LabelsService.html":{}}}],["src/app/services/project/labels.service.ts:17",{"_index":1311,"title":{},"body":{"injectables/LabelsService.html":{}}}],["src/app/services/project/labels.service.ts:19",{"_index":1312,"title":{},"body":{"injectables/LabelsService.html":{}}}],["src/app/services/project/labels.service.ts:20",{"_index":1291,"title":{},"body":{"injectables/LabelsService.html":{}}}],["src/app/services/project/labels.service.ts:24",{"_index":1293,"title":{},"body":{"injectables/LabelsService.html":{}}}],["src/app/services/project/labels.service.ts:36",{"_index":1295,"title":{},"body":{"injectables/LabelsService.html":{}}}],["src/app/services/project/labels.service.ts:53",{"_index":1296,"title":{},"body":{"injectables/LabelsService.html":{}}}],["src/app/services/project/labels.service.ts:61",{"_index":1304,"title":{},"body":{"injectables/LabelsService.html":{}}}],["src/app/services/project/labels.service.ts:67",{"_index":1298,"title":{},"body":{"injectables/LabelsService.html":{}}}],["src/app/services/project/labels.service.ts:79",{"_index":1308,"title":{},"body":{"injectables/LabelsService.html":{}}}],["src/app/services/project/labels.service.ts:84",{"_index":1306,"title":{},"body":{"injectables/LabelsService.html":{}}}],["src/app/services/project/labels.service.ts:95",{"_index":1299,"title":{},"body":{"injectables/LabelsService.html":{}}}],["src/app/services/project/labeltreenode.ts",{"_index":2466,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/services/project/project.service.ts",{"_index":1833,"title":{},"body":{"injectables/ProjectService.html":{},"coverage.html":{}}}],["src/app/services/project/project.service.ts:113",{"_index":1865,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project/project.service.ts:126",{"_index":1869,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project/project.service.ts:136",{"_index":1863,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project/project.service.ts:147",{"_index":1859,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project/project.service.ts:154",{"_index":1867,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project/project.service.ts:172",{"_index":1861,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project/project.service.ts:182",{"_index":1862,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project/project.service.ts:188",{"_index":1870,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project/project.service.ts:195",{"_index":1857,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project/project.service.ts:22",{"_index":1880,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project/project.service.ts:23",{"_index":1883,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project/project.service.ts:24",{"_index":1881,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project/project.service.ts:25",{"_index":1879,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project/project.service.ts:27",{"_index":1878,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project/project.service.ts:28",{"_index":1890,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project/project.service.ts:29",{"_index":1882,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project/project.service.ts:30",{"_index":1889,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project/project.service.ts:31",{"_index":1886,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project/project.service.ts:32",{"_index":1876,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project/project.service.ts:34",{"_index":1887,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project/project.service.ts:35",{"_index":1874,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project/project.service.ts:37",{"_index":1884,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project/project.service.ts:39",{"_index":1873,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project/project.service.ts:40",{"_index":1872,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project/project.service.ts:42",{"_index":1855,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/project/project.service.ts:54",{"_index":1871,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/services/ui/editor.service.ts",{"_index":790,"title":{},"body":{"injectables/EditorService.html":{},"coverage.html":{}}}],["src/app/services/ui/editor.service.ts:10",{"_index":831,"title":{},"body":{"injectables/EditorService.html":{}}}],["src/app/services/ui/editor.service.ts:11",{"_index":832,"title":{},"body":{"injectables/EditorService.html":{}}}],["src/app/services/ui/editor.service.ts:12",{"_index":833,"title":{},"body":{"injectables/EditorService.html":{}}}],["src/app/services/ui/editor.service.ts:13",{"_index":834,"title":{},"body":{"injectables/EditorService.html":{}}}],["src/app/services/ui/editor.service.ts:14",{"_index":835,"title":{},"body":{"injectables/EditorService.html":{}}}],["src/app/services/ui/editor.service.ts:15",{"_index":836,"title":{},"body":{"injectables/EditorService.html":{}}}],["src/app/services/ui/editor.service.ts:16",{"_index":837,"title":{},"body":{"injectables/EditorService.html":{}}}],["src/app/services/ui/editor.service.ts:17",{"_index":838,"title":{},"body":{"injectables/EditorService.html":{}}}],["src/app/services/ui/editor.service.ts:18",{"_index":839,"title":{},"body":{"injectables/EditorService.html":{}}}],["src/app/services/ui/editor.service.ts:19",{"_index":840,"title":{},"body":{"injectables/EditorService.html":{}}}],["src/app/services/ui/editor.service.ts:20",{"_index":842,"title":{},"body":{"injectables/EditorService.html":{}}}],["src/app/services/ui/editor.service.ts:21",{"_index":843,"title":{},"body":{"injectables/EditorService.html":{}}}],["src/app/services/ui/editor.service.ts:22",{"_index":846,"title":{},"body":{"injectables/EditorService.html":{}}}],["src/app/services/ui/editor.service.ts:23",{"_index":850,"title":{},"body":{"injectables/EditorService.html":{}}}],["src/app/services/ui/editor.service.ts:24",{"_index":851,"title":{},"body":{"injectables/EditorService.html":{}}}],["src/app/services/ui/editor.service.ts:25",{"_index":852,"title":{},"body":{"injectables/EditorService.html":{}}}],["src/app/services/ui/editor.service.ts:26",{"_index":853,"title":{},"body":{"injectables/EditorService.html":{}}}],["src/app/services/ui/editor.service.ts:27",{"_index":854,"title":{},"body":{"injectables/EditorService.html":{}}}],["src/app/services/ui/editor.service.ts:29",{"_index":848,"title":{},"body":{"injectables/EditorService.html":{}}}],["src/app/services/ui/editor.service.ts:31",{"_index":845,"title":{},"body":{"injectables/EditorService.html":{}}}],["src/app/services/ui/editor.service.ts:33",{"_index":818,"title":{},"body":{"injectables/EditorService.html":{}}}],["src/app/services/ui/editor.service.ts:36",{"_index":819,"title":{},"body":{"injectables/EditorService.html":{}}}],["src/app/services/ui/editor.service.ts:41",{"_index":820,"title":{},"body":{"injectables/EditorService.html":{}}}],["src/app/services/ui/editor.service.ts:45",{"_index":821,"title":{},"body":{"injectables/EditorService.html":{}}}],["src/app/services/ui/editor.service.ts:49",{"_index":822,"title":{},"body":{"injectables/EditorService.html":{}}}],["src/app/services/ui/editor.service.ts:53",{"_index":823,"title":{},"body":{"injectables/EditorService.html":{}}}],["src/app/services/ui/editor.service.ts:57",{"_index":824,"title":{},"body":{"injectables/EditorService.html":{}}}],["src/app/services/ui/editor.service.ts:62",{"_index":826,"title":{},"body":{"injectables/EditorService.html":{}}}],["src/app/services/ui/editor.service.ts:66",{"_index":827,"title":{},"body":{"injectables/EditorService.html":{}}}],["src/app/services/ui/editor.service.ts:70",{"_index":828,"title":{},"body":{"injectables/EditorService.html":{}}}],["src/app/services/ui/editor.service.ts:74",{"_index":829,"title":{},"body":{"injectables/EditorService.html":{}}}],["src/app/services/ui/editor.service.ts:78",{"_index":830,"title":{},"body":{"injectables/EditorService.html":{}}}],["src/app/services/ui/view.service.ts",{"_index":2265,"title":{},"body":{"injectables/ViewService.html":{},"coverage.html":{}}}],["src/app/services/ui/view.service.ts:10",{"_index":2283,"title":{},"body":{"injectables/ViewService.html":{}}}],["src/app/services/ui/view.service.ts:11",{"_index":2284,"title":{},"body":{"injectables/ViewService.html":{}}}],["src/app/services/ui/view.service.ts:12",{"_index":2275,"title":{},"body":{"injectables/ViewService.html":{}}}],["src/app/services/ui/view.service.ts:16",{"_index":2281,"title":{},"body":{"injectables/ViewService.html":{}}}],["src/app/services/ui/view.service.ts:22",{"_index":2276,"title":{},"body":{"injectables/ViewService.html":{}}}],["src/app/services/ui/view.service.ts:27",{"_index":2278,"title":{},"body":{"injectables/ViewService.html":{}}}],["src/app/services/ui/view.service.ts:31",{"_index":2277,"title":{},"body":{"injectables/ViewService.html":{}}}],["src/environments/environment.development.ts",{"_index":2473,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":2474,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":2475,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["srcvec",{"_index":1516,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["srcvec.delete",{"_index":1544,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["srcvec.push_back(image",{"_index":1518,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["stack",{"_index":2248,"title":{},"body":{"classes/UndoRedoStack.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{},"index.html":{}}}],["stampmaker",{"_index":558,"title":{"classes/StampMaker.html":{}},"body":{"interfaces/Color.html":{},"classes/StampMaker.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["standalone",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["start",{"_index":1745,"title":{},"body":{"injectables/PostProcessService.html":{},"components/ProjectConfigurationComponent.html":{},"index.html":{}}}],["startdrag",{"_index":2315,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["startdraw",{"_index":620,"title":{},"body":{"injectables/DrawService.html":{}}}],["started",{"_index":2541,"title":{"index.html":{}},"body":{"miscellaneous/variables.html":{}}}],["started.guard.ts",{"_index":2464,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["startproject",{"_index":1773,"title":{},"body":{"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{}}}],["state",{"_index":436,"title":{},"body":{"injectables/CanvasManagerService.html":{},"injectables/DrawService.html":{},"injectables/OpenCVService.html":{},"injectables/PostProcessService.html":{},"injectables/UndoRedoService.html":{},"injectables/ZoomPanService.html":{},"miscellaneous/variables.html":{}}}],["statemanagerservice",{"_index":403,"title":{"injectables/StateManagerService.html":{}},"body":{"injectables/CanvasManagerService.html":{},"injectables/DrawService.html":{},"injectables/IOService.html":{},"injectables/PostProcessService.html":{},"injectables/StateManagerService.html":{},"injectables/UndoRedoService.html":{},"injectables/ZoomPanService.html":{},"coverage.html":{}}}],["statements",{"_index":2429,"title":{},"body":{"coverage.html":{}}}],["stateservice",{"_index":406,"title":{},"body":{"injectables/CanvasManagerService.html":{},"injectables/DrawService.html":{},"injectables/IOService.html":{},"injectables/PostProcessService.html":{},"injectables/UndoRedoService.html":{},"injectables/ZoomPanService.html":{}}}],["static",{"_index":2106,"title":{},"body":{"classes/Tool.html":{},"classes/Tools.html":{}}}],["status",{"_index":2282,"title":{},"body":{"injectables/ViewService.html":{}}}],["step",{"_index":601,"title":{},"body":{"interfaces/Color.html":{},"classes/StampMaker.html":{},"components/ToolSettingComponent.html":{}}}],["store",{"_index":1600,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["stored",{"_index":2681,"title":{},"body":{"index.html":{}}}],["strengh",{"_index":1419,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["strength",{"_index":2150,"title":{},"body":{"components/ToolSettingComponent.html":{}}}],["stretchhist",{"_index":1080,"title":{},"body":{"injectables/ImageProcessingService.html":{},"injectables/OpenCVService.html":{}}}],["stretchhist(input",{"_index":1421,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["stretching",{"_index":2146,"title":{},"body":{"components/ToolSettingComponent.html":{}}}],["string",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"interfaces/BboxLabel.html":{},"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"components/ClassificationConfigurationComponent.html":{},"interfaces/Color.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"interfaces/EventPayload.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"interfaces/ImageFromCLI.html":{},"components/InstanceLabelComponent.html":{},"interfaces/LabelFormat.html":{},"interfaces/MulticlassInterface.html":{},"classes/MulticlassTask.html":{},"interfaces/MultilabelInterface.html":{},"classes/MultilabelTask.html":{},"injectables/OpenCVService.html":{},"interfaces/Point2D.html":{},"interfaces/ProjectConfig.html":{},"components/ProjectConfigurationComponent.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"components/SVGElementsComponent.html":{},"injectables/SVGUIService.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"classes/StampMaker.html":{},"interfaces/Thumbnail.html":{},"classes/Tool.html":{},"classes/Tools.html":{},"interfaces/UndoRedoCanvasElement.html":{},"injectables/ViewService.html":{},"interfaces/Viewbox.html":{},"miscellaneous/functions.html":{}}}],["stroke",{"_index":2144,"title":{},"body":{"components/ToolSettingComponent.html":{}}}],["style",{"_index":317,"title":{},"body":{"components/BlockableDiv.html":{},"components/BlockableP.html":{}}}],["styleurl",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["subject",{"_index":342,"title":{},"body":{"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"interfaces/EventPayload.html":{},"injectables/IOService.html":{},"injectables/ZoomPanService.html":{}}}],["success",{"_index":366,"title":{},"body":{"injectables/CLIService.html":{},"interfaces/EventPayload.html":{}}}],["support",{"_index":2566,"title":{},"body":{"index.html":{}}}],["supported",{"_index":1112,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["sure",{"_index":126,"title":{},"body":{"components/AppComponent.html":{}}}],["svg",{"_index":1059,"title":{},"body":{"injectables/IOService.html":{},"components/SVGElementsComponent.html":{}}}],["svg.setattribute('height",{"_index":1063,"title":{},"body":{"injectables/IOService.html":{}}}],["svg.setattribute('width",{"_index":1064,"title":{},"body":{"injectables/IOService.html":{}}}],["svg.setattribute('xmlns:xlink",{"_index":1061,"title":{},"body":{"injectables/IOService.html":{}}}],["svgelements",{"_index":1981,"title":{},"body":{"components/SVGElementsComponent.html":{}}}],["svgelements'},{'name",{"_index":246,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["svgelements.component.html",{"_index":1982,"title":{},"body":{"components/SVGElementsComponent.html":{}}}],["svgelements.component.scss",{"_index":1983,"title":{},"body":{"components/SVGElementsComponent.html":{}}}],["svgelementscomponent",{"_index":245,"title":{"components/SVGElementsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["svgui.service",{"_index":672,"title":{},"body":{"injectables/DrawService.html":{},"injectables/PostProcessService.html":{}}}],["svguiservice",{"_index":627,"title":{"injectables/SVGUIService.html":{}},"body":{"injectables/DrawService.html":{},"injectables/PostProcessService.html":{},"components/SVGElementsComponent.html":{},"injectables/SVGUIService.html":{},"coverage.html":{}}}],["swap",{"_index":2178,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["swapmarkers",{"_index":621,"title":{},"body":{"injectables/DrawService.html":{},"injectables/EditorService.html":{}}}],["switch",{"_index":740,"title":{},"body":{"injectables/DrawService.html":{},"components/LabelledSwitchComponent.html":{}}}],["switch'},{'name",{"_index":239,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["switch.component",{"_index":1797,"title":{},"body":{"components/ProjectConfigurationComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["switch.component.html",{"_index":1200,"title":{},"body":{"components/LabelledSwitchComponent.html":{}}}],["switch.component.scss",{"_index":1201,"title":{},"body":{"components/LabelledSwitchComponent.html":{}}}],["switch.component.ts",{"_index":1198,"title":{},"body":{"components/LabelledSwitchComponent.html":{},"coverage.html":{}}}],["switch.component.ts:16",{"_index":1207,"title":{},"body":{"components/LabelledSwitchComponent.html":{}}}],["switch.component.ts:17",{"_index":1209,"title":{},"body":{"components/LabelledSwitchComponent.html":{}}}],["switch.component.ts:19",{"_index":1211,"title":{},"body":{"components/LabelledSwitchComponent.html":{}}}],["switch.component.ts:21",{"_index":1206,"title":{},"body":{"components/LabelledSwitchComponent.html":{}}}],["switch.component.ts:25",{"_index":1210,"title":{},"body":{"components/LabelledSwitchComponent.html":{}}}],["switch/labelled",{"_index":1197,"title":{},"body":{"components/LabelledSwitchComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["switchvisibilityallseglabels",{"_index":1290,"title":{},"body":{"injectables/LabelsService.html":{}}}],["system",{"_index":2632,"title":{},"body":{"index.html":{}}}],["t",{"_index":353,"title":{},"body":{"injectables/CLIService.html":{},"interfaces/EventPayload.html":{},"injectables/LabelsService.html":{}}}],["t.taskname",{"_index":1321,"title":{},"body":{"injectables/LabelsService.html":{}}}],["table",{"_index":2477,"title":{},"body":{"coverage.html":{}}}],["tablemodule",{"_index":1760,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2476,"title":{},"body":{"coverage.html":{}}}],["tagmodule",{"_index":487,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["tailwind",{"_index":122,"title":{},"body":{"components/AppComponent.html":{}}}],["tailwindcss",{"_index":2507,"title":{},"body":{"dependencies.html":{}}}],["targetoffset",{"_index":2297,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["targetscale",{"_index":2298,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["task",{"_index":543,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{},"injectables/LabelsService.html":{},"injectables/ProjectService.html":{},"index.html":{}}}],["task.choice",{"_index":1025,"title":{},"body":{"injectables/IOService.html":{},"injectables/ProjectService.html":{}}}],["task.classes",{"_index":1972,"title":{},"body":{"injectables/ProjectService.html":{}}}],["task.classlabels",{"_index":1913,"title":{},"body":{"injectables/ProjectService.html":{}}}],["task.default",{"_index":1973,"title":{},"body":{"injectables/ProjectService.html":{}}}],["task.name",{"_index":1971,"title":{},"body":{"injectables/ProjectService.html":{}}}],["task.tasklabels.foreach((label",{"_index":1325,"title":{},"body":{"injectables/LabelsService.html":{}}}],["task.taskname",{"_index":1270,"title":{},"body":{"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"injectables/ProjectService.html":{}}}],["taskindex",{"_index":505,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["tasklabels",{"_index":1370,"title":{},"body":{"classes/MulticlassTask.html":{},"classes/MultilabelTask.html":{}}}],["taskname",{"_index":1366,"title":{},"body":{"classes/MulticlassTask.html":{},"classes/MultilabelTask.html":{}}}],["tasks",{"_index":2557,"title":{},"body":{"index.html":{}}}],["tauri",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"injectables/CLIService.html":{},"interfaces/EventPayload.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"interfaces/LabelFormat.html":{},"injectables/PostProcessService.html":{},"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{},"dependencies.html":{},"index.html":{}}}],["tauri/rust",{"_index":2605,"title":{},"body":{"index.html":{}}}],["tauri/target/release",{"_index":2592,"title":{},"body":{"index.html":{}}}],["technical",{"_index":2616,"title":{},"body":{"index.html":{}}}],["technologies",{"_index":2595,"title":{},"body":{"index.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["templateurl",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["temporary",{"_index":1598,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["test",{"_index":2095,"title":{},"body":{"components/TestingComponent.html":{}}}],["testing",{"_index":2092,"title":{},"body":{"components/TestingComponent.html":{}}}],["testing'},{'name",{"_index":248,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["testing.component.html",{"_index":2093,"title":{},"body":{"components/TestingComponent.html":{}}}],["testing.component.scss",{"_index":2094,"title":{},"body":{"components/TestingComponent.html":{}}}],["testingcomponent",{"_index":247,"title":{"components/TestingComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["testtesting",{"_index":2096,"title":{},"body":{"components/TestingComponent.html":{}}}],["then((bboxes",{"_index":1754,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["then((blob",{"_index":1041,"title":{},"body":{"injectables/IOService.html":{}}}],["then((filepath",{"_index":1949,"title":{},"body":{"injectables/ProjectService.html":{}}}],["then((imagebitmap",{"_index":1708,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["then((mask",{"_index":1735,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["then((response",{"_index":977,"title":{},"body":{"injectables/IOService.html":{}}}],["this._lasttool",{"_index":855,"title":{},"body":{"injectables/EditorService.html":{}}}],["this._treenode",{"_index":1343,"title":{},"body":{"injectables/LabelsService.html":{}}}],["this.activeimage",{"_index":1950,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.activeimage.then((image",{"_index":1952,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.activeindex",{"_index":1945,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.activelabel",{"_index":1341,"title":{},"body":{"injectables/LabelsService.html":{}}}],["this.activelabel!.label",{"_index":1346,"title":{},"body":{"injectables/LabelsService.html":{}}}],["this.activelabel.shades!.length",{"_index":1352,"title":{},"body":{"injectables/LabelsService.html":{}}}],["this.activelabel.shades![current_instance",{"_index":1354,"title":{},"body":{"injectables/LabelsService.html":{}}}],["this.activeseginstance",{"_index":1349,"title":{},"body":{"injectables/LabelsService.html":{}}}],["this.activeseginstance.instance",{"_index":1351,"title":{},"body":{"injectables/LabelsService.html":{}}}],["this.applylassoeraser(activectx",{"_index":683,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.applylassoeraser(ctx",{"_index":682,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.bboxmanager.listbbox",{"_index":1756,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["this.binarizecanvas(ctx",{"_index":717,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.brightness",{"_index":1132,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["this.buffercanvas",{"_index":452,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["this.buffercanvas.getcontext('2d",{"_index":454,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["this.bufferctx",{"_index":453,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["this.bufferctx.filter",{"_index":455,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["this.canpan",{"_index":2370,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["this.canvasclear.next(index",{"_index":863,"title":{},"body":{"injectables/EditorService.html":{}}}],["this.canvasctx",{"_index":441,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["this.canvasctx.push(canvas.getcontext('2d",{"_index":447,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["this.canvasctx[index].drawimage(img",{"_index":474,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["this.canvases",{"_index":562,"title":{},"body":{"interfaces/Color.html":{},"classes/StampMaker.html":{}}}],["this.canvases[_strcolor",{"_index":591,"title":{},"body":{"interfaces/Color.html":{},"classes/StampMaker.html":{}}}],["this.canvases[_strcolor][size",{"_index":592,"title":{},"body":{"interfaces/Color.html":{},"classes/StampMaker.html":{}}}],["this.canvasmanagerservice.canvasctx",{"_index":748,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.canvasmanagerservice.canvasctx.length",{"_index":749,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.canvasmanagerservice.clearcanvasatindex(value",{"_index":680,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.canvasmanagerservice.computecombinedcanvas",{"_index":674,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.canvasmanagerservice.getactivecanvas().converttoblob",{"_index":2232,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["this.canvasmanagerservice.getactivectx",{"_index":747,"title":{},"body":{"injectables/DrawService.html":{},"injectables/PostProcessService.html":{}}}],["this.canvasmanagerservice.getactiveindex",{"_index":1744,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["this.canvasmanagerservice.getallcanvas().foreach((classcanvas",{"_index":2222,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["this.canvasmanagerservice.getallcanvas().foreach(async",{"_index":2209,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["this.canvasmanagerservice.getallcanvasctx().foreach((classctx",{"_index":781,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.canvasmanagerservice.getallcanvasctx().foreach((ctx",{"_index":757,"title":{},"body":{"injectables/DrawService.html":{},"injectables/PostProcessService.html":{}}}],["this.canvasmanagerservice.getallcanvasctx().foreach((ctxclass",{"_index":720,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.canvasmanagerservice.getbuffercanvas",{"_index":764,"title":{},"body":{"injectables/DrawService.html":{},"injectables/PostProcessService.html":{}}}],["this.canvasmanagerservice.getbufferctx",{"_index":763,"title":{},"body":{"injectables/DrawService.html":{},"injectables/PostProcessService.html":{}}}],["this.canvasmanagerservice.getcombinedcanvas",{"_index":772,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.canvasmanagerservice.getcombinedctx",{"_index":1741,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["this.canvasmanagerservice.initcanvas",{"_index":1027,"title":{},"body":{"injectables/IOService.html":{}}}],["this.canvasmanagerservice.labelcanvas[index",{"_index":1038,"title":{},"body":{"injectables/IOService.html":{}}}],["this.canvasmanagerservice.loadallcanvas(data.masks",{"_index":1028,"title":{},"body":{"injectables/IOService.html":{}}}],["this.canvasredraw.next(true",{"_index":864,"title":{},"body":{"injectables/EditorService.html":{}}}],["this.canvasref",{"_index":2356,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["this.canvasref.getboundingclientrect",{"_index":2359,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["this.canvasref.height",{"_index":2391,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["this.canvasref.width",{"_index":2390,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["this.canzoom",{"_index":2412,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["this.cdr.detectchanges",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/ToolbarComponent.html":{}}}],["this.checkedchange.emit(this.checked",{"_index":1215,"title":{},"body":{"components/LabelledSwitchComponent.html":{}}}],["this.checkifdataexists",{"_index":1008,"title":{},"body":{"injectables/IOService.html":{}}}],["this.checkvalidinput",{"_index":1135,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["this.clearcanvas(this.canvasctx[index",{"_index":467,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["this.clearcanvas(this.canvasmanagerservice.bufferctx",{"_index":760,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.clearcanvas(this.combinedctx",{"_index":477,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["this.cli.commandprocessed.subscribe((value",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"components/ProjectConfigurationComponent.html":{}}}],["this.cli.imageloaded.subscribe((imageconfig",{"_index":137,"title":{},"body":{"components/AppComponent.html":{}}}],["this.cli.projectcreated.subscribe((config",{"_index":133,"title":{},"body":{"components/AppComponent.html":{}}}],["this.combinedcanvas",{"_index":449,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["this.combinedcanvas.getcontext('2d",{"_index":451,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["this.combinedctx",{"_index":450,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["this.combinedctx.clearrect(0",{"_index":457,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["this.combinedctx.drawimage(canvas",{"_index":462,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["this.combinedctx.drawimage(edge",{"_index":466,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["this.contrast",{"_index":1131,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["this.create_project(projectconfig",{"_index":1932,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.createclisubscription",{"_index":125,"title":{},"body":{"components/AppComponent.html":{}}}],["this.currentpoint",{"_index":2066,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["this.cv_ready",{"_index":1442,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["this.debug",{"_index":139,"title":{},"body":{"components/AppComponent.html":{}}}],["this.drawquadtreebbox(maskdata",{"_index":1716,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["this.drawservice.requestcanvasclear(index",{"_index":1266,"title":{},"body":{"components/LabelsComponent.html":{}}}],["this.drawservice.requestcanvasredraw",{"_index":1268,"title":{},"body":{"components/LabelsComponent.html":{}}}],["this.edgestrength",{"_index":1134,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["this.editorservice.affectsmultiplelabels",{"_index":2226,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["this.editorservice.autopostprocess",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"injectables/DrawService.html":{}}}],["this.editorservice.autopostprocessopening",{"_index":1728,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["this.editorservice.canvasclear.subscribe((value",{"_index":679,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.editorservice.canvasredraw.subscribe((value",{"_index":676,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.editorservice.canvassumrefresh.subscribe((value",{"_index":673,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.editorservice.edgesonly",{"_index":770,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.editorservice.enforceconnectivity",{"_index":1734,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["this.editorservice.eraseall",{"_index":722,"title":{},"body":{"injectables/DrawService.html":{},"injectables/PostProcessService.html":{}}}],["this.editorservice.incrementafterstroke",{"_index":695,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.editorservice.isdrawingtool",{"_index":691,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.editorservice.iseraser",{"_index":689,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.editorservice.istoolwithbrushsize",{"_index":2090,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["this.editorservice.linewidth",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"injectables/DrawService.html":{},"injectables/StateManagerService.html":{}}}],["this.editorservice.morphosize",{"_index":1732,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["this.editorservice.postprocessoption",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"injectables/DrawService.html":{}}}],["this.editorservice.redo.subscribe((value",{"_index":2206,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["this.editorservice.requestcanvasredraw",{"_index":1115,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["this.editorservice.samthreshold",{"_index":1720,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["this.editorservice.undo.subscribe((value",{"_index":2204,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["this.editorservice.useinverse",{"_index":1730,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["this.editorservice.useprocessing",{"_index":1116,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["this.el.nativeelement",{"_index":327,"title":{},"body":{"components/BlockableDiv.html":{},"components/BlockableP.html":{}}}],["this.el.nativeelement.children[0",{"_index":1216,"title":{},"body":{"components/LabelledSwitchComponent.html":{}}}],["this.eraseall",{"_index":858,"title":{},"body":{"injectables/EditorService.html":{}}}],["this.eraserpath.length",{"_index":2013,"title":{},"body":{"injectables/SVGUIService.html":{}}}],["this.extractimagesname(filelist",{"_index":1939,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.featuresextracted",{"_index":1722,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["this.gamma",{"_index":1133,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["this.getactivesavepath",{"_index":980,"title":{},"body":{"injectables/IOService.html":{}}}],["this.getactivesavepath().then((filepath",{"_index":974,"title":{},"body":{"injectables/IOService.html":{}}}],["this.getbrushsizeoffset",{"_index":2078,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["this.getfillcolor",{"_index":718,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.getinterval",{"_index":897,"title":{},"body":{"components/GalleryComponent.html":{}}}],["this.getshades",{"_index":1178,"title":{},"body":{"components/InstanceLabelComponent.html":{}}}],["this.getshades()[index",{"_index":1184,"title":{},"body":{"components/InstanceLabelComponent.html":{}}}],["this.getthumbnail().then((path",{"_index":926,"title":{},"body":{"components/GalleryElementComponent.html":{}}}],["this.gradient",{"_index":1444,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["this.height",{"_index":2068,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["this.icon",{"_index":2105,"title":{},"body":{"classes/Tool.html":{},"classes/Tools.html":{}}}],["this.id",{"_index":2103,"title":{},"body":{"classes/Tool.html":{},"classes/Tools.html":{}}}],["this.imageloaded.next(config",{"_index":376,"title":{},"body":{"injectables/CLIService.html":{},"interfaces/EventPayload.html":{}}}],["this.imagename",{"_index":932,"title":{},"body":{"components/GalleryElementComponent.html":{}}}],["this.imagepath",{"_index":927,"title":{},"body":{"components/GalleryElementComponent.html":{}}}],["this.imageprocessingservice",{"_index":1695,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["this.imagesname",{"_index":1941,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.imagesname[index",{"_index":1948,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.initializelisteners",{"_index":354,"title":{},"body":{"injectables/CLIService.html":{},"interfaces/EventPayload.html":{}}}],["this.inputfolder",{"_index":1897,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.inputfolder.endswith(sep",{"_index":1901,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.inputregex",{"_index":1937,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.intervalfunction",{"_index":896,"title":{},"body":{"components/GalleryComponent.html":{}}}],["this.ioservice.savefromcli(imageconfig",{"_index":204,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isboundingboxdetection",{"_index":1910,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.isclassification",{"_index":1907,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.isdragging",{"_index":2357,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["this.isdrawing",{"_index":2071,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["this.isinputvalid",{"_index":1809,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["this.isinstancesegmentation",{"_index":1909,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.isloading",{"_index":2285,"title":{},"body":{"injectables/ViewService.html":{}}}],["this.isnamevalid",{"_index":1811,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["this.isoutputvalid",{"_index":1810,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["this.isprojectstarted",{"_index":1940,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.issegmentation",{"_index":1908,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.isupdated",{"_index":1118,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["this.kernel_size",{"_index":1157,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["this.label",{"_index":1183,"title":{},"body":{"components/InstanceLabelComponent.html":{}}}],["this.label.shades",{"_index":1182,"title":{},"body":{"components/InstanceLabelComponent.html":{}}}],["this.labelcanvas",{"_index":440,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["this.labelcanvas.foreach((canvas",{"_index":460,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["this.labelcanvas.push(canvas",{"_index":446,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["this.labelservice.activelabel",{"_index":750,"title":{},"body":{"injectables/DrawService.html":{},"injectables/IOService.html":{}}}],["this.labelservice.activelabel?.color",{"_index":738,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.labelservice.activeseginstance",{"_index":734,"title":{},"body":{"injectables/DrawService.html":{},"components/InstanceLabelComponent.html":{}}}],["this.labelservice.activeseginstance.shade",{"_index":737,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.labelservice.addclassificationtask",{"_index":1970,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.labelservice.addclassificationtask(new",{"_index":157,"title":{},"body":{"components/AppComponent.html":{}}}],["this.labelservice.addmultilabeltask",{"_index":1975,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.labelservice.addmultilabeltask(new",{"_index":169,"title":{},"body":{"components/AppComponent.html":{}}}],["this.labelservice.addnewclassificationtask",{"_index":527,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["this.labelservice.addseglabel",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"components/ProjectConfigurationComponent.html":{}}}],["this.labelservice.addseglabel(seglabel",{"_index":1014,"title":{},"body":{"injectables/IOService.html":{}}}],["this.labelservice.getactiveindex",{"_index":721,"title":{},"body":{"injectables/DrawService.html":{},"injectables/UndoRedoService.html":{}}}],["this.labelservice.incrementactiveinstance",{"_index":696,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.labelservice.listclassificationtasks.foreach((task",{"_index":1024,"title":{},"body":{"injectables/IOService.html":{}}}],["this.labelservice.listclassificationtasks.length",{"_index":1018,"title":{},"body":{"injectables/IOService.html":{}}}],["this.labelservice.listclassificationtasks.map",{"_index":1912,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.labelservice.listclassificationtasks.splice(taskindex",{"_index":540,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["this.labelservice.listclassificationtasks[index].choice",{"_index":1022,"title":{},"body":{"injectables/IOService.html":{}}}],["this.labelservice.listclassificationtasks[taskindex].classlabels.length",{"_index":531,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["this.labelservice.listclassificationtasks[taskindex].classlabels.push('class",{"_index":532,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["this.labelservice.listclassificationtasks[taskindex].classlabels.splice(classindex",{"_index":533,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["this.labelservice.listsegmentationlabels",{"_index":751,"title":{},"body":{"injectables/DrawService.html":{},"injectables/ProjectService.html":{}}}],["this.labelservice.listsegmentationlabels.foreach((label",{"_index":442,"title":{},"body":{"injectables/CanvasManagerService.html":{},"injectables/IOService.html":{}}}],["this.labelservice.listsegmentationlabels.length",{"_index":752,"title":{},"body":{"injectables/DrawService.html":{},"components/ProjectConfigurationComponent.html":{}}}],["this.labelservice.listsegmentationlabels.map",{"_index":1911,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.labelservice.listsegmentationlabels[0",{"_index":1026,"title":{},"body":{"injectables/IOService.html":{}}}],["this.labelservice.listsegmentationlabels[index].color",{"_index":758,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.labelservice.multilabeltask",{"_index":528,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{},"injectables/IOService.html":{},"injectables/ProjectService.html":{}}}],["this.labelservice.multilabeltask.choices",{"_index":1017,"title":{},"body":{"injectables/IOService.html":{},"injectables/ProjectService.html":{}}}],["this.labelservice.multilabeltask.tasklabels",{"_index":1915,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.labelservice.multilabeltask.tasklabels.push(name",{"_index":537,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["this.labelservice.multilabeltask.tasklabels.splice(classindex",{"_index":541,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["this.labelservice.multilabeltask.taskname",{"_index":1914,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.labelservice.rebuildtreenodes",{"_index":1015,"title":{},"body":{"injectables/IOService.html":{},"injectables/ProjectService.html":{}}}],["this.labelservice.removeseglabel(seglabel",{"_index":1813,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["this.labelsservice.activelabel",{"_index":1255,"title":{},"body":{"components/LabelsComponent.html":{}}}],["this.labelsservice.activelabel.color",{"_index":1262,"title":{},"body":{"components/LabelsComponent.html":{}}}],["this.labelsservice.activeseginstance",{"_index":1261,"title":{},"body":{"components/LabelsComponent.html":{}}}],["this.labelsservice.listsegmentationlabels.indexof",{"_index":1264,"title":{},"body":{"components/LabelsComponent.html":{}}}],["this.labelsservice.listsegmentationlabels[0",{"_index":1256,"title":{},"body":{"components/LabelsComponent.html":{}}}],["this.labelsservice.switchvisibilityallseglabels",{"_index":1269,"title":{},"body":{"components/LabelsComponent.html":{}}}],["this.lassopoints",{"_index":684,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.lassopoints.length",{"_index":681,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.lassopoints.push(canvascoord",{"_index":786,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.listclassificationtasks",{"_index":1332,"title":{},"body":{"injectables/LabelsService.html":{}}}],["this.listclassificationtasks.filter",{"_index":1333,"title":{},"body":{"injectables/LabelsService.html":{}}}],["this.listclassificationtasks.find((t",{"_index":1320,"title":{},"body":{"injectables/LabelsService.html":{}}}],["this.listclassificationtasks.length",{"_index":1330,"title":{},"body":{"injectables/LabelsService.html":{}}}],["this.listclassificationtasks.push(classtask",{"_index":1331,"title":{},"body":{"injectables/LabelsService.html":{}}}],["this.listclassificationtasks.push(task",{"_index":1322,"title":{},"body":{"injectables/LabelsService.html":{}}}],["this.listfiles",{"_index":1927,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.listsegmentationlabels.find((l",{"_index":1337,"title":{},"body":{"injectables/LabelsService.html":{}}}],["this.listsegmentationlabels.findindex",{"_index":1345,"title":{},"body":{"injectables/LabelsService.html":{}}}],["this.listsegmentationlabels.foreach((label",{"_index":1348,"title":{},"body":{"injectables/LabelsService.html":{}}}],["this.listsegmentationlabels.push(label",{"_index":1340,"title":{},"body":{"injectables/LabelsService.html":{}}}],["this.load_image(imageconfig",{"_index":138,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loadexistingannotations",{"_index":1009,"title":{},"body":{"injectables/IOService.html":{}}}],["this.loadingstatus",{"_index":2286,"title":{},"body":{"injectables/ViewService.html":{}}}],["this.localstoragesprojectsfilepaths",{"_index":1894,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.localstoragesprojectsfilepaths.filter",{"_index":1933,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.localstoragesprojectsfilepaths.map((projectfile",{"_index":1920,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.localstoragesprojectsfilepaths.push(projectfile",{"_index":1923,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.m",{"_index":1448,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["this.maxpoint",{"_index":2070,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["this.maxpoint.x",{"_index":2088,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["this.maxpoint.y",{"_index":2089,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["this.minpoint",{"_index":2069,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["this.minpoint.x",{"_index":2086,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["this.minpoint.y",{"_index":2087,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["this.multilabeltask",{"_index":1323,"title":{},"body":{"injectables/LabelsService.html":{}}}],["this.multilabeltask!.tasklabels.find((l",{"_index":1326,"title":{},"body":{"injectables/LabelsService.html":{}}}],["this.multilabeltask!.tasklabels.push(label",{"_index":1328,"title":{},"body":{"injectables/LabelsService.html":{}}}],["this.name",{"_index":2104,"title":{},"body":{"classes/Tool.html":{},"classes/Tools.html":{}}}],["this.ngxopencv.cvstate.subscribe((cvstate",{"_index":1437,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["this.ngzone.run",{"_index":358,"title":{},"body":{"injectables/CLIService.html":{},"interfaces/EventPayload.html":{}}}],["this.offset",{"_index":2401,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["this.offset.x",{"_index":2365,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["this.offset.y",{"_index":2367,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["this.opencvservice.brightness_contrast(this.preprocessimage",{"_index":1148,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["this.opencvservice.edgedetection(this.combinedctx",{"_index":465,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["this.opencvservice.gammacorrection(this.preprocessimage",{"_index":1150,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["this.opencvservice.median_blur(this.preprocessimage",{"_index":1156,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["this.opencvservice.reinforceedges(this.preprocessimage",{"_index":1159,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["this.opencvservice.stretchhist(this.preprocessimage",{"_index":1146,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["this.opencvservice.to_grayscale(this.preprocessimage",{"_index":1154,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["this.openeditor(this.activeindex",{"_index":1954,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.outputcanvas",{"_index":1472,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["this.outputcanvas.getcontext('2d",{"_index":1429,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["this.outputcanvas.height",{"_index":1457,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["this.outputcanvas.width",{"_index":1455,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["this.outputctx!.putimagedata(processedimagedata",{"_index":1470,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["this.outputfolder",{"_index":1902,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.parsecolor(color",{"_index":588,"title":{},"body":{"interfaces/Color.html":{},"classes/StampMaker.html":{}}}],["this.percentagebeforerefresh",{"_index":898,"title":{},"body":{"components/GalleryComponent.html":{}}}],["this.postprocessdraw",{"_index":692,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.postprocesserase",{"_index":690,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.postprocessservice.crf_post_process",{"_index":745,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.postprocessservice.eraseall_post_process",{"_index":746,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.postprocessservice.otsu_post_process",{"_index":742,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.postprocessservice.sam_post_process",{"_index":744,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.preprocess",{"_index":1114,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["this.preprocessimage",{"_index":1119,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["this.preprocessimage.getcontext('2d",{"_index":1142,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["this.preprocessimage.height",{"_index":1140,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["this.preprocessimage.width",{"_index":1138,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["this.previouspoint",{"_index":2065,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["this.previouspoint.x",{"_index":2075,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["this.previouspoint.y",{"_index":2076,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["this.primeng.theme.set",{"_index":115,"title":{},"body":{"components/AppComponent.html":{}}}],["this.projectcreated.next(config",{"_index":362,"title":{},"body":{"injectables/CLIService.html":{},"interfaces/EventPayload.html":{}}}],["this.projectfolder",{"_index":1904,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.projectname",{"_index":1906,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.projectservice.create_project(config",{"_index":135,"title":{},"body":{"components/AppComponent.html":{}}}],["this.projectservice.imagesname.includes(image_name",{"_index":202,"title":{},"body":{"components/AppComponent.html":{}}}],["this.projectservice.imagesname.indexof(this.imagename",{"_index":928,"title":{},"body":{"components/GalleryElementComponent.html":{}}}],["this.projectservice.imagesname.push(image_name",{"_index":203,"title":{},"body":{"components/AppComponent.html":{}}}],["this.projectservice.inputfolder",{"_index":1805,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["this.projectservice.isclassification",{"_index":140,"title":{},"body":{"components/AppComponent.html":{}}}],["this.projectservice.isinstancesegmentation",{"_index":694,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.projectservice.isprojectstarted",{"_index":136,"title":{},"body":{"components/AppComponent.html":{}}}],["this.projectservice.issegmentation",{"_index":175,"title":{},"body":{"components/AppComponent.html":{}}}],["this.projectservice.listfiles",{"_index":900,"title":{},"body":{"components/GalleryComponent.html":{}}}],["this.projectservice.loadprojectfile(filepath",{"_index":1816,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["this.projectservice.loadprojectfile(value",{"_index":1817,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["this.projectservice.maxinstances",{"_index":1180,"title":{},"body":{"components/InstanceLabelComponent.html":{}}}],["this.projectservice.openeditor(0",{"_index":184,"title":{},"body":{"components/AppComponent.html":{}}}],["this.projectservice.openeditor(id",{"_index":929,"title":{},"body":{"components/GalleryElementComponent.html":{}}}],["this.projectservice.outputfolder",{"_index":1807,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["this.projectservice.projectname",{"_index":1812,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["this.projectservice.removeprojectfile(filepath",{"_index":1818,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["this.projectservice.resetproject",{"_index":1806,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["this.projectservice.startproject",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/ProjectConfigurationComponent.html":{}}}],["this.recursive",{"_index":1938,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.redo",{"_index":2207,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["this.redo.next(true",{"_index":865,"title":{},"body":{"injectables/EditorService.html":{}}}],["this.redostack.empty",{"_index":2263,"title":{},"body":{"classes/UndoRedoStack.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{}}}],["this.redostack.pop",{"_index":2260,"title":{},"body":{"classes/UndoRedoStack.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{}}}],["this.redostack.push(element",{"_index":2258,"title":{},"body":{"classes/UndoRedoStack.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{}}}],["this.redrawrequest.next(true",{"_index":675,"title":{},"body":{"injectables/DrawService.html":{},"injectables/UndoRedoService.html":{},"injectables/ZoomPanService.html":{}}}],["this.ref_canvas",{"_index":1117,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["this.ref_canvas.getcontext('2d",{"_index":1126,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["this.ref_canvas.height",{"_index":1124,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["this.ref_canvas.width",{"_index":1122,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["this.ref_image",{"_index":1120,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["this.ref_image.height",{"_index":1141,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["this.ref_image.width",{"_index":1139,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["this.refresh",{"_index":907,"title":{},"body":{"components/GalleryComponent.html":{}}}],["this.refreshcolor",{"_index":678,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.refreshinterval",{"_index":905,"title":{},"body":{"components/GalleryComponent.html":{}}}],["this.requestedreload.next(true",{"_index":973,"title":{},"body":{"injectables/IOService.html":{}}}],["this.resetcurrentpoint",{"_index":2074,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["this.resetminmaxpoints",{"_index":2072,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["this.resetpreviouspoint",{"_index":2073,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["this.router.navigate(['/editor",{"_index":2289,"title":{},"body":{"injectables/ViewService.html":{}}}],["this.router.navigate(['/gallery",{"_index":2287,"title":{},"body":{"injectables/ViewService.html":{}}}],["this.router.url",{"_index":2288,"title":{},"body":{"injectables/ViewService.html":{}}}],["this.scale",{"_index":2362,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["this.selectedtool",{"_index":856,"title":{},"body":{"injectables/EditorService.html":{}}}],["this.shades",{"_index":1177,"title":{},"body":{"components/InstanceLabelComponent.html":{}}}],["this.showalllabels",{"_index":1347,"title":{},"body":{"injectables/LabelsService.html":{}}}],["this.singledrawrequest.next(ctx",{"_index":733,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.smoothupdatetransform",{"_index":2399,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["this.stack",{"_index":2254,"title":{},"body":{"classes/UndoRedoStack.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{}}}],["this.stack.length",{"_index":2250,"title":{},"body":{"classes/UndoRedoStack.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{}}}],["this.stack.pop",{"_index":2253,"title":{},"body":{"classes/UndoRedoStack.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{}}}],["this.stack.push(element",{"_index":2251,"title":{},"body":{"classes/UndoRedoStack.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{}}}],["this.startproject",{"_index":1979,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.stateservice.currentpoint.x",{"_index":714,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.stateservice.currentpoint.y",{"_index":715,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.stateservice.getboundingbox",{"_index":719,"title":{},"body":{"injectables/DrawService.html":{},"injectables/PostProcessService.html":{}}}],["this.stateservice.height",{"_index":445,"title":{},"body":{"injectables/CanvasManagerService.html":{},"injectables/DrawService.html":{},"injectables/IOService.html":{},"injectables/PostProcessService.html":{},"injectables/UndoRedoService.html":{},"injectables/ZoomPanService.html":{}}}],["this.stateservice.isdrawing",{"_index":686,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.stateservice.previouspoint.x",{"_index":711,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.stateservice.previouspoint.y",{"_index":712,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.stateservice.recomputecanvassum",{"_index":677,"title":{},"body":{"injectables/DrawService.html":{},"injectables/UndoRedoService.html":{},"injectables/ZoomPanService.html":{}}}],["this.stateservice.reset",{"_index":759,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.stateservice.width",{"_index":459,"title":{},"body":{"injectables/CanvasManagerService.html":{},"injectables/DrawService.html":{},"injectables/IOService.html":{},"injectables/PostProcessService.html":{},"injectables/UndoRedoService.html":{},"injectables/ZoomPanService.html":{}}}],["this.svg.nativeelement.setattribute",{"_index":1998,"title":{},"body":{"components/SVGElementsComponent.html":{}}}],["this.svguiservice.addpoint(this.stateservice.currentpoint",{"_index":732,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.svguiservice.resetpath",{"_index":1748,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["this.swapmarkers",{"_index":859,"title":{},"body":{"injectables/EditorService.html":{}}}],["this.targetoffset",{"_index":2400,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["this.targetoffset.x",{"_index":2378,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["this.targetoffset.y",{"_index":2379,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["this.targetscale",{"_index":2398,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["this.tasklabels",{"_index":1375,"title":{},"body":{"classes/MulticlassTask.html":{},"classes/MultilabelTask.html":{}}}],["this.tasklabels.filter((l",{"_index":1376,"title":{},"body":{"classes/MulticlassTask.html":{},"classes/MultilabelTask.html":{}}}],["this.tasklabels.push(label",{"_index":1373,"title":{},"body":{"classes/MulticlassTask.html":{},"classes/MultilabelTask.html":{}}}],["this.to_bw",{"_index":1153,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["this.undo",{"_index":2205,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["this.undo.next(true",{"_index":866,"title":{},"body":{"injectables/EditorService.html":{}}}],["this.undoredoservice.update_undo_redo",{"_index":761,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.undostack.empty",{"_index":2264,"title":{},"body":{"classes/UndoRedoStack.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{}}}],["this.undostack.pop",{"_index":2256,"title":{},"body":{"classes/UndoRedoStack.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{}}}],["this.undostack.push(element",{"_index":2261,"title":{},"body":{"classes/UndoRedoStack.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{}}}],["this.viewservice.endloading",{"_index":1051,"title":{},"body":{"injectables/IOService.html":{},"injectables/ProjectService.html":{}}}],["this.viewservice.navigatetoeditor()?.then",{"_index":1953,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.viewservice.navigatetogallery",{"_index":1928,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.viewservice.setloading(true",{"_index":1029,"title":{},"body":{"injectables/IOService.html":{},"injectables/ProjectService.html":{}}}],["this.width",{"_index":2067,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["this.writesave",{"_index":1050,"title":{},"body":{"injectables/IOService.html":{}}}],["this.writesave(savefile",{"_index":1057,"title":{},"body":{"injectables/IOService.html":{}}}],["this.zoompanservice.getimagecoordinates(event",{"_index":785,"title":{},"body":{"injectables/DrawService.html":{}}}],["this.zoompanservice.wheel(event",{"_index":789,"title":{},"body":{"injectables/DrawService.html":{}}}],["threshold",{"_index":1719,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["thresholding",{"_index":1619,"title":{},"body":{"injectables/OpenCVService.html":{},"components/ToolSettingComponent.html":{}}}],["through",{"_index":1647,"title":{},"body":{"injectables/OpenCVService.html":{},"index.html":{}}}],["throw",{"_index":735,"title":{},"body":{"injectables/DrawService.html":{}}}],["thumbnail",{"_index":269,"title":{"interfaces/Thumbnail.html":{}},"body":{"interfaces/BboxLabel.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{},"coverage.html":{}}}],["thumbnailpath",{"_index":271,"title":{},"body":{"interfaces/BboxLabel.html":{},"components/GalleryElementComponent.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{}}}],["thumbnails",{"_index":933,"title":{},"body":{"components/GalleryElementComponent.html":{},"components/ProjectConfigurationComponent.html":{}}}],["thumbnailssize",{"_index":2268,"title":{},"body":{"injectables/ViewService.html":{}}}],["time",{"_index":2577,"title":{},"body":{"index.html":{}}}],["timer",{"_index":1698,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["title",{"_index":35,"title":{},"body":{"components/AppComponent.html":{}}}],["to_bw",{"_index":1081,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["to_grayscale",{"_index":1397,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["to_grayscale(input",{"_index":1423,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["tolerance",{"_index":1653,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["took",{"_index":1711,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["tool",{"_index":252,"title":{"classes/Tool.html":{}},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"injectables/EditorService.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"classes/Tool.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"classes/Tools.html":{},"coverage.html":{}}}],["tool(0",{"_index":2108,"title":{},"body":{"classes/Tool.html":{},"classes/Tools.html":{}}}],["tool(1",{"_index":2113,"title":{},"body":{"classes/Tool.html":{},"classes/Tools.html":{}}}],["tool(2",{"_index":2118,"title":{},"body":{"classes/Tool.html":{},"classes/Tools.html":{}}}],["tool(3",{"_index":2121,"title":{},"body":{"classes/Tool.html":{},"classes/Tools.html":{}}}],["tool(8",{"_index":2116,"title":{},"body":{"classes/Tool.html":{},"classes/Tools.html":{}}}],["toolbar",{"_index":2169,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["toolbar'},{'name",{"_index":250,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["toolbar.component.html",{"_index":2170,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["toolbar.component.scss",{"_index":2171,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["toolbarcomponent",{"_index":249,"title":{"components/ToolbarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["toolbarmodule",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/ToolbarComponent.html":{}}}],["tools",{"_index":667,"title":{"classes/Tools.html":{}},"body":{"injectables/DrawService.html":{},"injectables/EditorService.html":{},"classes/Tool.html":{},"components/ToolbarComponent.html":{},"classes/Tools.html":{},"coverage.html":{}}}],["tools.all_tools",{"_index":2175,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["tools.eraser",{"_index":861,"title":{},"body":{"injectables/EditorService.html":{},"classes/Tool.html":{},"classes/Tools.html":{}}}],["tools.lasso",{"_index":860,"title":{},"body":{"injectables/EditorService.html":{},"classes/Tool.html":{},"classes/Tools.html":{}}}],["tools.lasso_eraser",{"_index":862,"title":{},"body":{"injectables/EditorService.html":{},"classes/Tool.html":{},"classes/Tools.html":{}}}],["tools.pan",{"_index":857,"title":{},"body":{"injectables/EditorService.html":{},"classes/Tool.html":{},"classes/Tools.html":{}}}],["tools.pen",{"_index":849,"title":{},"body":{"injectables/EditorService.html":{},"classes/Tool.html":{},"classes/Tools.html":{}}}],["toolsettingcomponent",{"_index":251,"title":{"components/ToolSettingComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["top",{"_index":1492,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["total",{"_index":1528,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["total.delete",{"_index":1543,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["tqdm",{"_index":2649,"title":{},"body":{"index.html":{}}}],["tqdm(all_files",{"_index":2689,"title":{},"body":{"index.html":{}}}],["tqdm.notebook",{"_index":2648,"title":{},"body":{"index.html":{}}}],["trackbyfn",{"_index":500,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["trackbyfn(index",{"_index":517,"title":{},"body":{"components/ClassificationConfigurationComponent.html":{}}}],["train_datasets=dataset.idrid).argmax(0).cpu().numpy",{"_index":2664,"title":{},"body":{"index.html":{}}}],["transparent",{"_index":1644,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["treemodule",{"_index":1218,"title":{},"body":{"components/LabelsComponent.html":{}}}],["treenode",{"_index":1234,"title":{},"body":{"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"miscellaneous/functions.html":{}}}],["true",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"components/ClassificationConfigurationComponent.html":{},"injectables/DrawService.html":{},"interfaces/EventPayload.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"injectables/ImageProcessingService.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"components/LoadingComponent.html":{},"injectables/OpenCVService.html":{},"injectables/PostProcessService.html":{},"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UndoRedoService.html":{},"injectables/ZoomPanService.html":{}}}],["try",{"_index":357,"title":{},"body":{"injectables/CLIService.html":{},"interfaces/EventPayload.html":{},"injectables/ImageProcessingService.html":{}}}],["tslib",{"_index":2510,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"interfaces/BboxLabel.html":{},"injectables/BboxManagerService.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"components/ClassificationConfigurationComponent.html":{},"interfaces/Color.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"interfaces/EventPayload.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"interfaces/ImageFromCLI.html":{},"injectables/ImageProcessingService.html":{},"components/InstanceLabelComponent.html":{},"interfaces/LabelFormat.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"components/LoadingComponent.html":{},"interfaces/MulticlassInterface.html":{},"classes/MulticlassTask.html":{},"interfaces/MultilabelInterface.html":{},"classes/MultilabelTask.html":{},"injectables/OpenCVService.html":{},"interfaces/Point2D.html":{},"interfaces/Point2D-1.html":{},"injectables/PostProcessService.html":{},"interfaces/ProjectConfig.html":{},"components/ProjectConfigurationComponent.html":{},"interfaces/ProjectFile.html":{},"injectables/ProjectService.html":{},"interfaces/Rect.html":{},"interfaces/Rect-1.html":{},"components/SVGElementsComponent.html":{},"injectables/SVGUIService.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"classes/StampMaker.html":{},"injectables/StateManagerService.html":{},"interfaces/Thumbnail.html":{},"classes/Tool.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"classes/Tools.html":{},"interfaces/UndoRedoCanvasElement.html":{},"injectables/UndoRedoService.html":{},"classes/UndoRedoStack.html":{},"injectables/ViewService.html":{},"interfaces/Viewbox.html":{},"interfaces/Viewbox-1.html":{},"injectables/ZoomPanService.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":2567,"title":{},"body":{"index.html":{}}}],["ui",{"_index":2601,"title":{},"body":{"index.html":{}}}],["ui/view.service",{"_index":967,"title":{},"body":{"injectables/IOService.html":{},"injectables/ProjectService.html":{}}}],["uint8clampedarray",{"_index":1684,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["uint8clampedarray(imagebitmap",{"_index":1714,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["uint8clampedarray(mask",{"_index":1737,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["uint8clampedarray(output.data",{"_index":1634,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["uint8clampedarray(this.gradient.data",{"_index":1469,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["uipoints",{"_index":1985,"title":{},"body":{"components/SVGElementsComponent.html":{}}}],["undefined",{"_index":564,"title":{},"body":{"interfaces/Color.html":{},"components/GalleryComponent.html":{},"injectables/ProjectService.html":{},"classes/StampMaker.html":{},"classes/UndoRedoStack.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{}}}],["under",{"_index":2698,"title":{},"body":{"index.html":{}}}],["undo",{"_index":668,"title":{},"body":{"injectables/DrawService.html":{},"injectables/EditorService.html":{},"injectables/UndoRedoService.html":{},"classes/UndoRedoStack.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{}}}],["undoredo",{"_index":2202,"title":{},"body":{"injectables/UndoRedoService.html":{},"classes/UndoRedoStack.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["undoredo.empty",{"_index":2225,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["undoredo.push",{"_index":2230,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["undoredo.redo",{"_index":2221,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["undoredo.undo",{"_index":2208,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["undoredocanvaselement",{"_index":282,"title":{"interfaces/UndoRedoCanvasElement.html":{}},"body":{"interfaces/BboxLabel.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"interfaces/Rect.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"classes/UndoRedoStack.html":{},"interfaces/Viewbox.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{},"coverage.html":{}}}],["undoredoservice",{"_index":625,"title":{"injectables/UndoRedoService.html":{}},"body":{"injectables/DrawService.html":{},"injectables/UndoRedoService.html":{},"coverage.html":{}}}],["undoredostack",{"_index":2234,"title":{"classes/UndoRedoStack.html":{}},"body":{"classes/UndoRedoStack.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["undostack",{"_index":2237,"title":{},"body":{"classes/UndoRedoStack.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{}}}],["ungradable",{"_index":168,"title":{},"body":{"components/AppComponent.html":{}}}],["unknown",{"_index":372,"title":{},"body":{"injectables/CLIService.html":{},"interfaces/EventPayload.html":{},"injectables/IOService.html":{},"injectables/PostProcessService.html":{},"injectables/ProjectService.html":{}}}],["up",{"_index":1637,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["update_undo_redo",{"_index":2193,"title":{},"body":{"injectables/UndoRedoService.html":{}}}],["updatecheck",{"_index":1202,"title":{},"body":{"components/LabelledSwitchComponent.html":{}}}],["updatecurrentpoint",{"_index":2042,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["updatecurrentpoint(point",{"_index":2055,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["updatelasso",{"_index":622,"title":{},"body":{"injectables/DrawService.html":{}}}],["updatelasso(event",{"_index":656,"title":{},"body":{"injectables/DrawService.html":{}}}],["updateminmaxpoints",{"_index":2043,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["updateminmaxpoints(point",{"_index":2057,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["updateopacity",{"_index":1230,"title":{},"body":{"components/LabelsComponent.html":{}}}],["updatepreviouspoint",{"_index":2044,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["updatepreviouspoint(point",{"_index":2058,"title":{},"body":{"injectables/StateManagerService.html":{}}}],["upperbound",{"_index":1654,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["upperbound.delete",{"_index":1666,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["upperbound.setto(new",{"_index":1658,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["url(#remove",{"_index":456,"title":{},"body":{"injectables/CanvasManagerService.html":{}}}],["usage",{"_index":2634,"title":{},"body":{"index.html":{}}}],["use",{"_index":1110,"title":{},"body":{"injectables/ImageProcessingService.html":{},"components/ToolSettingComponent.html":{},"index.html":{}}}],["use_medianblur",{"_index":1082,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["useinverse",{"_index":805,"title":{},"body":{"injectables/EditorService.html":{}}}],["useprocessing",{"_index":806,"title":{},"body":{"injectables/EditorService.html":{}}}],["utilities",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["v2",{"_index":2551,"title":{},"body":{"index.html":{}}}],["validate",{"_index":1808,"title":{},"body":{"components/ProjectConfigurationComponent.html":{}}}],["validation",{"_index":2630,"title":{},"body":{"index.html":{}}}],["value",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"injectables/BboxManagerService.html":{},"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"injectables/ImageProcessingService.html":{},"components/InstanceLabelComponent.html":{},"injectables/LabelsService.html":{},"classes/MulticlassTask.html":{},"classes/MultilabelTask.html":{},"injectables/OpenCVService.html":{},"injectables/PostProcessService.html":{},"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{},"components/SVGElementsComponent.html":{},"injectables/SVGUIService.html":{},"injectables/StateManagerService.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{},"classes/Tools.html":{},"injectables/UndoRedoService.html":{},"classes/UndoRedoStack.html":{},"injectables/ViewService.html":{},"injectables/ZoomPanService.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":210,"title":{},"body":{"components/AppComponent.html":{},"components/BlockableDiv.html":{},"components/BlockableP.html":{},"components/ClassificationConfigurationComponent.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"components/InstanceLabelComponent.html":{},"components/InteractiveBboxComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"components/LoadingComponent.html":{},"injectables/OpenCVService.html":{},"components/ProjectConfigurationComponent.html":{},"components/SVGElementsComponent.html":{},"components/TestingComponent.html":{},"components/ToolSettingComponent.html":{},"components/ToolbarComponent.html":{}}}],["variable",{"_index":2455,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2705,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vec",{"_index":1559,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["vec.delete",{"_index":1566,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["vec.get(0).convertto(vec.get(0",{"_index":1562,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["vec.get(1).convertto(vec.get(1",{"_index":1563,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["vec.get(2).convertto(vec.get(2",{"_index":1564,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["version",{"_index":2549,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":2609,"title":{},"body":{"index.html":{}}}],["viewbox",{"_index":277,"title":{"interfaces/Viewbox.html":{},"interfaces/Viewbox-1.html":{}},"body":{"interfaces/BboxLabel.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/Point2D-1.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"interfaces/Rect.html":{},"interfaces/Rect-1.html":{},"components/SVGElementsComponent.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{},"interfaces/Viewbox-1.html":{},"injectables/ZoomPanService.html":{},"coverage.html":{}}}],["viewbox.height",{"_index":2002,"title":{},"body":{"components/SVGElementsComponent.html":{}}}],["viewbox.width",{"_index":2001,"title":{},"body":{"components/SVGElementsComponent.html":{}}}],["viewbox.x",{"_index":1999,"title":{},"body":{"components/SVGElementsComponent.html":{}}}],["viewbox.y",{"_index":2000,"title":{},"body":{"components/SVGElementsComponent.html":{}}}],["viewboxheight",{"_index":2369,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["viewboxwidth",{"_index":2368,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["viewboxx",{"_index":2364,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["viewboxy",{"_index":2366,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["viewchild",{"_index":1213,"title":{},"body":{"components/LabelledSwitchComponent.html":{},"components/SVGElementsComponent.html":{}}}],["viewchild('svg",{"_index":1994,"title":{},"body":{"components/SVGElementsComponent.html":{}}}],["viewservice",{"_index":36,"title":{"injectables/ViewService.html":{}},"body":{"components/AppComponent.html":{},"injectables/IOService.html":{},"components/LoadingComponent.html":{},"injectables/ProjectService.html":{},"injectables/ViewService.html":{},"coverage.html":{}}}],["viewservice.loadingstatus",{"_index":1363,"title":{},"body":{"components/LoadingComponent.html":{}}}],["void",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"injectables/CLIService.html":{},"injectables/CanvasManagerService.html":{},"components/ClassificationConfigurationComponent.html":{},"injectables/DrawService.html":{},"injectables/EditorService.html":{},"components/GalleryComponent.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"injectables/ImageProcessingService.html":{},"components/InstanceLabelComponent.html":{},"components/LabelledSwitchComponent.html":{},"components/LabelsComponent.html":{},"injectables/LabelsService.html":{},"classes/MultilabelTask.html":{},"injectables/OpenCVService.html":{},"injectables/PostProcessService.html":{},"components/ProjectConfigurationComponent.html":{},"injectables/ProjectService.html":{},"components/SVGElementsComponent.html":{},"injectables/SVGUIService.html":{},"classes/StampMaker.html":{},"injectables/StateManagerService.html":{},"components/ToolbarComponent.html":{},"injectables/UndoRedoService.html":{},"classes/UndoRedoStack.html":{},"injectables/ViewService.html":{},"injectables/ZoomPanService.html":{},"classes/_RedoStack.html":{},"classes/_UndoStack.html":{}}}],["w",{"_index":1749,"title":{},"body":{"injectables/PostProcessService.html":{}}}],["wasm",{"_index":2575,"title":{},"body":{"index.html":{}}}],["way",{"_index":128,"title":{},"body":{"components/AppComponent.html":{}}}],["wheel",{"_index":623,"title":{},"body":{"injectables/DrawService.html":{},"injectables/ZoomPanService.html":{}}}],["wheel(event",{"_index":658,"title":{},"body":{"injectables/DrawService.html":{},"injectables/ZoomPanService.html":{}}}],["wheelevent",{"_index":659,"title":{},"body":{"injectables/DrawService.html":{},"injectables/ZoomPanService.html":{}}}],["width",{"_index":275,"title":{},"body":{"interfaces/BboxLabel.html":{},"components/GalleryElementComponent.html":{},"injectables/IOService.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"injectables/OpenCVService.html":{},"interfaces/Point2D.html":{},"interfaces/Point2D-1.html":{},"injectables/PostProcessService.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"interfaces/Rect.html":{},"interfaces/Rect-1.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"injectables/StateManagerService.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{},"interfaces/Viewbox-1.html":{},"injectables/ZoomPanService.html":{}}}],["willreadfrequently",{"_index":1143,"title":{},"body":{"injectables/ImageProcessingService.html":{}}}],["window.devicepixelratio",{"_index":586,"title":{},"body":{"interfaces/Color.html":{},"classes/StampMaker.html":{}}}],["works",{"_index":1190,"title":{},"body":{"components/InteractiveBboxComponent.html":{},"components/TestingComponent.html":{}}}],["write",{"_index":1608,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["writesave",{"_index":948,"title":{},"body":{"injectables/IOService.html":{}}}],["writesave(labelformat",{"_index":961,"title":{},"body":{"injectables/IOService.html":{}}}],["x",{"_index":273,"title":{},"body":{"interfaces/BboxLabel.html":{},"interfaces/Color.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"injectables/OpenCVService.html":{},"interfaces/Point2D.html":{},"interfaces/Point2D-1.html":{},"injectables/PostProcessService.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"interfaces/Rect.html":{},"interfaces/Rect-1.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"classes/StampMaker.html":{},"injectables/StateManagerService.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{},"interfaces/Viewbox-1.html":{},"injectables/ZoomPanService.html":{}}}],["x+1",{"_index":1497,"title":{},"body":{"injectables/OpenCVService.html":{}}}],["xm",{"_index":2027,"title":{},"body":{"classes/StampMaker.html":{}}}],["xmax",{"_index":280,"title":{},"body":{"interfaces/BboxLabel.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/Point2D-1.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"interfaces/Rect.html":{},"interfaces/Rect-1.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{},"interfaces/Viewbox-1.html":{},"injectables/ZoomPanService.html":{}}}],["xmin",{"_index":278,"title":{},"body":{"interfaces/BboxLabel.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/Point2D-1.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"interfaces/Rect.html":{},"interfaces/Rect-1.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{},"interfaces/Viewbox-1.html":{},"injectables/ZoomPanService.html":{}}}],["xml",{"_index":983,"title":{},"body":{"injectables/IOService.html":{},"interfaces/LabelFormat.html":{},"dependencies.html":{}}}],["xmlbuilder",{"_index":1192,"title":{},"body":{"interfaces/LabelFormat.html":{}}}],["xmlcontent",{"_index":2532,"title":{},"body":{"miscellaneous/functions.html":{}}}],["y",{"_index":274,"title":{},"body":{"interfaces/BboxLabel.html":{},"interfaces/Color.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"injectables/OpenCVService.html":{},"interfaces/Point2D.html":{},"interfaces/Point2D-1.html":{},"injectables/PostProcessService.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"interfaces/Rect.html":{},"interfaces/Rect-1.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"classes/StampMaker.html":{},"injectables/StateManagerService.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{},"interfaces/Viewbox-1.html":{},"injectables/ZoomPanService.html":{}}}],["ym",{"_index":2025,"title":{},"body":{"classes/StampMaker.html":{}}}],["ymax",{"_index":281,"title":{},"body":{"interfaces/BboxLabel.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/Point2D-1.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"interfaces/Rect.html":{},"interfaces/Rect-1.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{},"interfaces/Viewbox-1.html":{},"injectables/ZoomPanService.html":{}}}],["ymin",{"_index":279,"title":{},"body":{"interfaces/BboxLabel.html":{},"interfaces/ImageFromCLI.html":{},"interfaces/MulticlassInterface.html":{},"interfaces/MultilabelInterface.html":{},"interfaces/Point2D.html":{},"interfaces/Point2D-1.html":{},"interfaces/ProjectConfig.html":{},"interfaces/ProjectFile.html":{},"interfaces/Rect.html":{},"interfaces/Rect-1.html":{},"interfaces/SegInstance.html":{},"interfaces/SegLabel.html":{},"interfaces/Thumbnail.html":{},"interfaces/UndoRedoCanvasElement.html":{},"interfaces/Viewbox.html":{},"interfaces/Viewbox-1.html":{},"injectables/ZoomPanService.html":{}}}],["zeromq",{"_index":2612,"title":{},"body":{"index.html":{}}}],["zone.js",{"_index":2512,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":665,"title":{},"body":{"injectables/DrawService.html":{}}}],["zoomintensity",{"_index":2414,"title":{},"body":{"injectables/ZoomPanService.html":{}}}],["zoompanservice",{"_index":624,"title":{"injectables/ZoomPanService.html":{}},"body":{"injectables/DrawService.html":{},"injectables/ZoomPanService.html":{},"coverage.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                ToolbarModule\n                                LoadingComponent\n                            NgIf\n                            RouterOutlet\n                            Button\n                            RouterModule\n                            BlockUIModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                editorService\n                            \n                            \n                                    Public\n                                projectService\n                            \n                            \n                                title\n                            \n                            \n                                    Public\n                                viewService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createCLISubscription\n                            \n                            \n                                    Async\n                                debug\n                            \n                            \n                                isProjectStarted\n                            \n                            \n                                    Async\n                                load_image\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(viewService: ViewService, projectService: ProjectService, editorService: EditorService, labelService: LabelsService, cli: CLIService, cdr: ChangeDetectorRef, IOService: IOService, primeNG: PrimeNG)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        viewService\n                                                  \n                                                        \n                                                                        ViewService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        editorService\n                                                  \n                                                        \n                                                                        EditorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        labelService\n                                                  \n                                                        \n                                                                        LabelsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cli\n                                                  \n                                                        \n                                                                        CLIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        IOService\n                                                  \n                                                        \n                                                                        IOService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        primeNG\n                                                  \n                                                        \n                                                                    PrimeNG\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createCLISubscription\n                        \n                    \n                \n            \n            \n                \ncreateCLISubscription()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:74\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        debug\n                        \n                    \n                \n            \n            \n                \n                        \n                    debug()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:98\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isProjectStarted\n                        \n                    \n                \n            \n            \n                \nisProjectStarted()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:156\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        load_image\n                        \n                    \n                \n            \n            \n                \n                        \n                    load_image(imageConfig: ImageFromCLI)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:140\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                imageConfig\n                                            \n                                                            ImageFromCLI\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:94\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        editorService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EditorService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProjectService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Client'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        viewService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ViewService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:52\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n} from '@angular/core';\n\nimport { ToolbarModule } from 'primeng/toolbar';\n\nimport { ViewService } from './Services/UI/view.service';\nimport { LoadingComponent } from './Components/Interface/loading/loading.component';\nimport { RouterOutlet } from '@angular/router';\nimport { NgIf } from '@angular/common';\nimport { ProjectService } from './Services/Project/project.service';\nimport { Button } from 'primeng/button';\nimport { RouterModule } from '@angular/router';\nimport { environment } from '../environments/environment';\nimport { LabelsService } from './Services/Project/labels.service';\nimport { EditorService } from './Services/UI/editor.service';\nimport { path } from '@tauri-apps/api';\nimport { CLIService } from './Services/cli.service';\nimport { IOService } from './Services/io.service';\nimport { ImageFromCLI } from './Core/interface';\nimport { PostProcessOption } from './Core/canvases/tools';\nimport { PrimeNG } from 'primeng/config';\nimport Aura from '@primeng/themes/aura';\nimport Material from '@primeng/themes/material';\nimport Lara from '@primeng/themes/lara';\nimport Nora from '@primeng/themes/nora';\nimport { MulticlassTask, MultilabelTask } from './Core/task';\nimport { BlockUIModule } from 'primeng/blockui';\n\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [\n    ToolbarModule,\n    LoadingComponent,\n    NgIf,\n    RouterOutlet,\n    Button,\n    RouterModule,\n    BlockUIModule\n  ],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss',\n})\nexport class AppComponent implements AfterViewInit {\n  title = 'Client';\n\n  constructor(\n    public viewService: ViewService,\n    public projectService: ProjectService,\n    public editorService: EditorService,\n    private labelService: LabelsService,\n    private cli: CLIService,\n    private cdr: ChangeDetectorRef,\n    private IOService: IOService,\n    private primeNG: PrimeNG\n  ) {\n    this.primeNG.theme.set({\n      preset: Nora,\n      options: {\n        darkModeSelector: '.darkTheme',\n        cssLayer: {\n          name: 'primeng',\n          order: 'tailwind-base, primeng, tailwind-utilities',\n        },\n      },\n    });\n    this.createCLISubscription();\n  }\n\n  createCLISubscription() {\n    // Not sure if this is the right way to do or even needed\n    this.cli.commandProcessed.subscribe((value) => {\n      if (value) {\n        this.cdr.detectChanges();\n      }\n    });\n    this.cli.projectCreated.subscribe((config) => {\n      if (config) {\n        this.projectService.create_project(config);\n        this.projectService.isProjectStarted = true;\n\n      }\n    });\n    this.cli.imageLoaded.subscribe((imageConfig) => {\n      if (imageConfig) {\n        this.load_image(imageConfig);\n      }\n    });\n  }\n  ngAfterViewInit() {\n    // this.debug();\n  }\n\n  async debug() {\n    this.projectService.isClassification = true;\n    this.labelService.addSegLabel({\n      label: 'Foreground',\n      color: '#209fb5',\n      isVisible: true,\n      shades: null,\n    });\n    this.labelService.addSegLabel({\n      label: 'Example1/Class 1',\n      color: '#df8e1d',\n      isVisible: true,\n      shades: null,\n    });\n    this.labelService.addSegLabel({\n      label: 'Example1/Class 2',\n      color: '#8839ef',\n      isVisible: true,\n      shades: null,\n    });\n    this.labelService.addSegLabel({\n      label: 'Example2/Class 3',\n      color: '#d20f39',\n      isVisible: true,\n      shades: null,\n    });\n    this.projectService.isClassification = true;\n    this.labelService.addClassificationTask(new MulticlassTask('DR Grading',\n      ['Absent', 'Mild', 'Moderate', 'Severe', 'Proliferative'], 'Absent'));\n    this.labelService.addClassificationTask(new MulticlassTask('Quality', ['Good', 'Readable', 'Ungradable']));\n    this.labelService.addMultilabelTask(new MultilabelTask('Misc', ['AMD', 'Glaucoma', 'Catract', 'Hypertension']));\n    this.projectService.isSegmentation = true;\n    this.editorService.autoPostProcess = true;\n    this.editorService.postProcessOption = PostProcessOption.CRF;\n    this.editorService.lineWidth = 40;\n\n    let isStarted$ = this.projectService.startProject();\n    isStarted$.then(() => {\n      this.projectService.openEditor(0);\n    });\n  }\n\n  async load_image(imageConfig: ImageFromCLI) {\n    let image_path = await path.resolve(imageConfig.image_path);\n    // Get the image name: we split the path from projectService.inputFolder and get the last element of image_path\n    // i.e image_path = projectService.inputFolder / image_name\n    // The idea is to get not just the filename, but the path relative to the input folder\n    let image_name = image_path.split(this.projectService.inputFolder)[1];\n\n    console.log('Image name:', image_name);\n    if (this.projectService.imagesName.includes(image_name)) {\n    }\n    else {\n      this.projectService.imagesName.push(image_name);\n    }\n    await this.IOService.saveFromCLI(imageConfig, image_name);\n  }\n\n  isProjectStarted() {\n    return this.projectService.isProjectStarted;\n  }\n}\n\n    \n\n    \n        \n  \n     Annotator \n  \n  \n    \n      \n      \n\n      \n      \n\n      \n      \n    \n  \n   \n\n\n \n -->\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       Annotator                                                        -->'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlockableDiv', 'selector': 'blockable-div'},{'name': 'BlockableP', 'selector': 'blockable-p'},{'name': 'ClassificationConfigurationComponent', 'selector': 'app-classification-configuration'},{'name': 'DrawableCanvasComponent', 'selector': 'app-drawable-canvas'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'GalleryComponent', 'selector': 'app-gallery'},{'name': 'GalleryElementComponent', 'selector': 'app-gallery-element'},{'name': 'InstanceLabelComponent', 'selector': 'app-instance-label'},{'name': 'InteractiveBboxComponent', 'selector': 'app-interactive-bbox'},{'name': 'LabelledSwitchComponent', 'selector': 'app-labelled-switch'},{'name': 'LabelsComponent', 'selector': 'app-labels'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'ProjectConfigurationComponent', 'selector': 'app-project-configuration'},{'name': 'SVGElementsComponent', 'selector': 'app-svgelements'},{'name': 'TestingComponent', 'selector': 'app-testing'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'ToolSettingComponent', 'selector': 'app-tool-setting'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BboxLabel.html":{"url":"interfaces/BboxLabel.html","title":"interface - BboxLabel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BboxLabel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Core/interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bbox\n                                        \n                                \n                                \n                                        \n                                            instance\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bbox\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bbox:         Rect\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Rect\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        instance\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        instance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         SegLabel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SegLabel\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SegLabel {\n  label: string;\n  color: string;\n  isVisible: boolean;\n  shades: string[] | null;\n}\n\nexport interface SegInstance {\n  label: SegLabel;\n  instance: number;\n  shade: string;\n}\n\nexport interface BboxLabel {\n  label: SegLabel;\n  bbox: Rect;\n  instance: number;\n}\n\nexport interface Thumbnail {\n  name: Promise;\n  thumbnailPath: Promise;\n}\n\nexport interface Point2D {\n  x: number;\n  y: number;\n}\n\nexport interface Rect {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\n\nexport interface Viewbox {\n  xmin: number;\n  ymin: number;\n  xmax: number;\n  ymax: number;\n}\n\nexport interface UndoRedoCanvasElement {\n  data: Blob | Blob[];\n  index: number;\n}\n\nexport interface MulticlassInterface {\n  name: string;\n  classes: string[];\n  default: string | null;\n}\n\nexport interface MultilabelInterface {\n  name: string;\n  classes: string[];\n  default: string[] | null;\n}\n\nexport interface ProjectConfig {\n  project_name: string;\n  input_dir: string;\n  output_dir: string;\n  is_segmentation: boolean;\n  is_classification: boolean;\n  is_instance_segmentation: boolean;\n  is_bbox_detection: boolean;\n  segmentation_classes: null | string[];\n  classification_classes: null | MulticlassInterface[];\n  classification_multilabel: null | MultilabelInterface;\n}\n\nexport interface ImageFromCLI {\n  image_path: string;\n  mask_data: string[] | null;\n  segmentation_classes: string[] | null;\n  classification_classes: string[] | null;\n  classification_multilabel: string[] | null;\n}\n\n\nexport interface ProjectFile{\n  root: string;\n  project_name: string;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BboxManagerService.html":{"url":"injectables/BboxManagerService.html","title":"injectable - BboxManagerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BboxManagerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Components/Core/drawable-canvas/service/bbox-manager.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                listBbox\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/Components/Core/drawable-canvas/service/bbox-manager.service.ts:12\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        listBbox\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BboxLabel[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/bbox-manager.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BboxLabel } from '../../../../Core/interface';\n\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BboxManagerService {\n\n  listBbox: BboxLabel[] = [];\n\n  constructor() { \n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BlockableDiv.html":{"url":"components/BlockableDiv.html","title":"component - BlockableDiv","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BlockableDiv\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/Components/Core/Blockable/div/div.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                BlockableUI\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                blockable-div\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            NgStyle\n                            NgClass\n                \n            \n\n\n\n            \n                template\n                \n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getBlockableElement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                            \n                                style\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/Components/Core/Blockable/div/div.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        class\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/Components/Core/Blockable/div/div.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        style\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/Components/Core/Blockable/div/div.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getBlockableElement\n                        \n                    \n                \n            \n            \n                \ngetBlockableElement()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/Blockable/div/div.component.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     HTMLElement\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, Input } from '@angular/core';\nimport { NgStyle, NgClass } from '@angular/common';\nimport { BlockableUI } from 'primeng/api';\n\n@Component({\n    selector: 'blockable-div',\n    standalone: true,\n    imports: [NgStyle, NgClass],\n    template: `        \n        \n    `\n})\nexport class BlockableDiv implements BlockableUI {\n\n    @Input() style: any;\n    @Input() class: any;\n\n    constructor(private el: ElementRef) {\n    }\n\n    getBlockableElement(): HTMLElement { \n        return this.el.nativeElement;\n    }\n\n}\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlockableDiv', 'selector': 'blockable-div'},{'name': 'BlockableP', 'selector': 'blockable-p'},{'name': 'ClassificationConfigurationComponent', 'selector': 'app-classification-configuration'},{'name': 'DrawableCanvasComponent', 'selector': 'app-drawable-canvas'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'GalleryComponent', 'selector': 'app-gallery'},{'name': 'GalleryElementComponent', 'selector': 'app-gallery-element'},{'name': 'InstanceLabelComponent', 'selector': 'app-instance-label'},{'name': 'InteractiveBboxComponent', 'selector': 'app-interactive-bbox'},{'name': 'LabelledSwitchComponent', 'selector': 'app-labelled-switch'},{'name': 'LabelsComponent', 'selector': 'app-labels'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'ProjectConfigurationComponent', 'selector': 'app-project-configuration'},{'name': 'SVGElementsComponent', 'selector': 'app-svgelements'},{'name': 'TestingComponent', 'selector': 'app-testing'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'ToolSettingComponent', 'selector': 'app-tool-setting'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BlockableDiv'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BlockableP.html":{"url":"components/BlockableP.html","title":"component - BlockableP","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BlockableP\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/Components/Core/Blockable/p/p.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                BlockableUI\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                blockable-p\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            NgStyle\n                            NgClass\n                \n            \n\n\n\n            \n                template\n                \n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getBlockableElement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                            \n                                style\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/Components/Core/Blockable/p/p.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        class\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/Components/Core/Blockable/p/p.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        style\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/Components/Core/Blockable/p/p.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getBlockableElement\n                        \n                    \n                \n            \n            \n                \ngetBlockableElement()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/Blockable/p/p.component.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     HTMLElement\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, Input } from '@angular/core';\nimport { NgStyle, NgClass } from '@angular/common';\nimport { BlockableUI } from 'primeng/api';\n\n@Component({\n    selector: 'blockable-p',\n    standalone: true,\n    imports: [NgStyle, NgClass],\n    template: `        \n        \n    `\n})\nexport class BlockableP implements BlockableUI {\n\n    @Input() style: any;\n    @Input() class: any;\n\n    constructor(private el: ElementRef) {\n    }\n\n    getBlockableElement(): HTMLElement { \n        return this.el.nativeElement;\n    }\n\n}\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlockableDiv', 'selector': 'blockable-div'},{'name': 'BlockableP', 'selector': 'blockable-p'},{'name': 'ClassificationConfigurationComponent', 'selector': 'app-classification-configuration'},{'name': 'DrawableCanvasComponent', 'selector': 'app-drawable-canvas'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'GalleryComponent', 'selector': 'app-gallery'},{'name': 'GalleryElementComponent', 'selector': 'app-gallery-element'},{'name': 'InstanceLabelComponent', 'selector': 'app-instance-label'},{'name': 'InteractiveBboxComponent', 'selector': 'app-interactive-bbox'},{'name': 'LabelledSwitchComponent', 'selector': 'app-labelled-switch'},{'name': 'LabelsComponent', 'selector': 'app-labels'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'ProjectConfigurationComponent', 'selector': 'app-project-configuration'},{'name': 'SVGElementsComponent', 'selector': 'app-svgelements'},{'name': 'TestingComponent', 'selector': 'app-testing'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'ToolSettingComponent', 'selector': 'app-tool-setting'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BlockableP'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CLIService.html":{"url":"injectables/CLIService.html","title":"injectable - CLIService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CLIService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Services/cli.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                commandProcessed\n                            \n                            \n                                    Public\n                                imageLoaded\n                            \n                            \n                                    Public\n                                projectCreated\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initializeListeners\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ngZone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/app/Services/cli.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initializeListeners\n                        \n                    \n                \n            \n            \n                \n                        \n                    initializeListeners()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/cli.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        commandProcessed\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/cli.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        imageLoaded\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/cli.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectCreated\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/cli.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { ImageFromCLI, ProjectConfig } from '../Core/interface';\nimport { listen } from '@tauri-apps/api/event';\nimport { invoke } from '@tauri-apps/api/core';\n\ninterface EventPayload {\n  event_id: string;\n  data: T;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CLIService {\n  public commandProcessed: Subject = new Subject();\n  public projectCreated = new Subject();\n  public imageLoaded = new Subject();\n\n  constructor(private ngZone: NgZone) {\n    this.initializeListeners();\n  }\n  private initializeListeners() {\n    listen>('create_project', async (event) => {\n      try {\n        await this.ngZone.run(() => {\n          const config = event.payload.data;\n          console.log(event);\n          this.projectCreated.next(config);\n        });\n        await invoke('event_processed', {\n          id: event.payload.event_id,\n          success: true,\n        });\n        \n      } catch (error) {\n        const errorMessage =\n          error instanceof Error ? error.message : 'Unknown error occurred';\n        await invoke('event_processed', {\n          id: event.payload.event_id,\n          success: false,\n          error: errorMessage,\n        });\n      }\n    });\n\n    listen>('load_image', async (event) => {\n      try {\n        await this.ngZone.run(() => {\n          const config = event.payload.data;\n          this.imageLoaded.next(config);\n        });\n        await invoke('event_processed', {\n          id: event.payload.event_id,\n          success: true,\n        });\n      } catch (error) {\n        const errorMessage =\n          error instanceof Error ? error.message : 'Unknown error occurred';\n        await invoke('event_processed', {\n          id: event.payload.event_id,\n          success: false,\n          error: errorMessage,\n        });\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CanvasManagerService.html":{"url":"injectables/CanvasManagerService.html","title":"injectable - CanvasManagerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CanvasManagerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Components/Core/drawable-canvas/service/canvas-manager.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bufferCanvas\n                            \n                            \n                                bufferCtx\n                            \n                            \n                                canvasCtx\n                            \n                            \n                                combinedCanvas\n                            \n                            \n                                combinedCtx\n                            \n                            \n                                labelCanvas\n                            \n                            \n                                requestRedraw\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearCanvas\n                            \n                            \n                                clearCanvasAtIndex\n                            \n                            \n                                computeCombinedCanvas\n                            \n                            \n                                getActiveCanvas\n                            \n                            \n                                getActiveCtx\n                            \n                            \n                                getActiveIndex\n                            \n                            \n                                getAllCanvas\n                            \n                            \n                                getAllCanvasCtx\n                            \n                            \n                                getBufferCanvas\n                            \n                            \n                                getBufferCtx\n                            \n                            \n                                getCombinedCanvas\n                            \n                            \n                                getCombinedCtx\n                            \n                            \n                                initCanvas\n                            \n                            \n                                    Async\n                                loadAllCanvas\n                            \n                            \n                                loadCanvas\n                            \n                            \n                                resetCombinedCanvas\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(stateService: StateManagerService, labelService: LabelsService, openCVService: OpenCVService, editorService: EditorService)\n                    \n                \n                        \n                            \n                                Defined in src/app/Components/Core/drawable-canvas/service/canvas-manager.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stateService\n                                                  \n                                                        \n                                                                        StateManagerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        labelService\n                                                  \n                                                        \n                                                                        LabelsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        openCVService\n                                                  \n                                                        \n                                                                        OpenCVService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        editorService\n                                                  \n                                                        \n                                                                        EditorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearCanvas\n                        \n                    \n                \n            \n            \n                \nclearCanvas(ctx: OffscreenCanvasRenderingContext2D)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/canvas-manager.service.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                        OffscreenCanvasRenderingContext2D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearCanvasAtIndex\n                        \n                    \n                \n            \n            \n                \nclearCanvasAtIndex(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/canvas-manager.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        computeCombinedCanvas\n                        \n                    \n                \n            \n            \n                \ncomputeCombinedCanvas()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/canvas-manager.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getActiveCanvas\n                        \n                    \n                \n            \n            \n                \ngetActiveCanvas()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/canvas-manager.service.ts:98\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getActiveCtx\n                        \n                    \n                \n            \n            \n                \ngetActiveCtx()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/canvas-manager.service.ts:103\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getActiveIndex\n                        \n                    \n                \n            \n            \n                \ngetActiveIndex()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/canvas-manager.service.ts:120\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllCanvas\n                        \n                    \n                \n            \n            \n                \ngetAllCanvas()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/canvas-manager.service.ts:127\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     {}\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllCanvasCtx\n                        \n                    \n                \n            \n            \n                \ngetAllCanvasCtx()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/canvas-manager.service.ts:123\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     {}\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBufferCanvas\n                        \n                    \n                \n            \n            \n                \ngetBufferCanvas()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/canvas-manager.service.ts:94\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     OffscreenCanvas\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBufferCtx\n                        \n                    \n                \n            \n            \n                \ngetBufferCtx()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/canvas-manager.service.ts:108\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     OffscreenCanvasRenderingContext2D\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCombinedCanvas\n                        \n                    \n                \n            \n            \n                \ngetCombinedCanvas()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/canvas-manager.service.ts:116\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     OffscreenCanvas\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCombinedCtx\n                        \n                    \n                \n            \n            \n                \ngetCombinedCtx()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/canvas-manager.service.ts:112\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     OffscreenCanvasRenderingContext2D\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initCanvas\n                        \n                    \n                \n            \n            \n                \ninitCanvas()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/canvas-manager.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loadAllCanvas\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadAllCanvas(data: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/canvas-manager.service.ts:88\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadCanvas\n                        \n                    \n                \n            \n            \n                \nloadCanvas(data: string, index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/canvas-manager.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetCombinedCanvas\n                        \n                    \n                \n            \n            \n                \nresetCombinedCanvas()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/canvas-manager.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        bufferCanvas\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OffscreenCanvas\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/canvas-manager.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bufferCtx\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OffscreenCanvasRenderingContext2D\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/canvas-manager.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canvasCtx\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OffscreenCanvasRenderingContext2D[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/canvas-manager.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        combinedCanvas\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OffscreenCanvas\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/canvas-manager.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        combinedCtx\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OffscreenCanvasRenderingContext2D\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/canvas-manager.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        labelCanvas\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OffscreenCanvas[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/canvas-manager.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requestRedraw\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/canvas-manager.service.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { StateManagerService } from './state-manager.service';\nimport { LabelsService } from '../../../../Services/Project/labels.service';\nimport { OpenCVService } from '../../../../Services/open-cv.service';\nimport { EditorService } from '../../../../Services/UI/editor.service';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CanvasManagerService {\n\n  labelCanvas: OffscreenCanvas[] = [];\n  canvasCtx: OffscreenCanvasRenderingContext2D[] = [];\n\n  combinedCanvas: OffscreenCanvas;\n  combinedCtx: OffscreenCanvasRenderingContext2D;\n\n  bufferCanvas: OffscreenCanvas;\n  bufferCtx: OffscreenCanvasRenderingContext2D;\n\n  requestRedraw: Subject = new Subject();\n\n\n  constructor(private stateService: StateManagerService, \n    private labelService: LabelsService,\n    private openCVService: OpenCVService,\n    private editorService: EditorService) { }\n\n\n  initCanvas(){\n    this.labelCanvas = [];\n    this.canvasCtx = [];\n    this.labelService.listSegmentationLabels.forEach((label) => {\n      const canvas = new OffscreenCanvas(this.stateService.width, this.stateService.height);\n      this.labelCanvas.push(canvas);\n      this.canvasCtx.push(canvas.getContext('2d', {alpha: true})!);\n    });\n    this.combinedCanvas = new OffscreenCanvas(this.stateService.width, this.stateService.height);\n    this.combinedCtx = this.combinedCanvas.getContext('2d', {alpha: true})!;\n    this.bufferCanvas = new OffscreenCanvas(this.stateService.width, this.stateService.height);\n    this.bufferCtx = this.bufferCanvas.getContext('2d', {alpha: true})!;\n\n    this.bufferCtx.filter = 'url(#remove-alpha)';\n  }\n\n  computeCombinedCanvas(){\n    this.combinedCtx.clearRect(0, 0, this.stateService.width, this.stateService.height);\n    this.labelCanvas.forEach((canvas, index) => {\n      if(!this.labelService.listSegmentationLabels[index].isVisible){\n        return;\n      }\n      this.combinedCtx.drawImage(canvas, 0, 0);\n    });\n    if(this.editorService.edgesOnly){\n      let edge = this.openCVService.edgeDetection(this.combinedCtx);\n      this.combinedCtx.clearRect(0, 0, this.stateService.width, this.stateService.height);\n      this.combinedCtx.drawImage(edge, 0, 0);\n\n    }\n  }\n\n  clearCanvasAtIndex(index: number){\n    this.clearCanvas(this.canvasCtx[index]);\n  }\n\n  loadCanvas(data: string, index:number):Promise{\n    const img = new Image();\n    img.src = data;\n    return new Promise((resolve, reject) => {\n      img.onload = () => {\n        this.clearCanvas(this.canvasCtx[index]);\n        this.canvasCtx[index].drawImage(img, 0, 0);\n        resolve(true);\n      };\n    });\n    \n  }\n\n  clearCanvas(ctx: OffscreenCanvasRenderingContext2D){\n    ctx.clearRect(0, 0, this.stateService.width, this.stateService.height);\n  }\n\n  resetCombinedCanvas(){\n    this.clearCanvas(this.combinedCtx);\n  }\n\n  async loadAllCanvas(data: string[]){\n    for(let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ClassificationConfigurationComponent.html":{"url":"components/ClassificationConfigurationComponent.html","title":"component - ClassificationConfigurationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ClassificationConfigurationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/Components/Interface/project-configuration/classification-configuration/classification-configuration.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-classification-configuration\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            FormsModule\n                            ButtonModule\n                            CheckboxModule\n                            NgFor\n                            NgIf\n                            TagModule\n                            Fieldset\n                            InputTextModule\n                            DividerModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./classification-configuration.component.html\n            \n\n\n\n            \n                styleUrl\n                ./classification-configuration.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                labelService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addClassToTask\n                            \n                            \n                                addMulticlassTask\n                            \n                            \n                                addMultiLabelClass\n                            \n                            \n                                addMultiLabelTask\n                            \n                            \n                                removeClassFromMultitask\n                            \n                            \n                                removeClassFromTask\n                            \n                            \n                                removeTask\n                            \n                            \n                                trackByFn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(labelService: LabelsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/Components/Interface/project-configuration/classification-configuration/classification-configuration.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        labelService\n                                                  \n                                                        \n                                                                        LabelsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addClassToTask\n                        \n                    \n                \n            \n            \n                \naddClassToTask(taskIndex: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Interface/project-configuration/classification-configuration/classification-configuration.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                taskIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addMulticlassTask\n                        \n                    \n                \n            \n            \n                \naddMulticlassTask()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Interface/project-configuration/classification-configuration/classification-configuration.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addMultiLabelClass\n                        \n                    \n                \n            \n            \n                \naddMultiLabelClass(name: string, event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Interface/project-configuration/classification-configuration/classification-configuration.component.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addMultiLabelTask\n                        \n                    \n                \n            \n            \n                \naddMultiLabelTask()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Interface/project-configuration/classification-configuration/classification-configuration.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeClassFromMultitask\n                        \n                    \n                \n            \n            \n                \nremoveClassFromMultitask(classIndex: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Interface/project-configuration/classification-configuration/classification-configuration.component.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                classIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeClassFromTask\n                        \n                    \n                \n            \n            \n                \nremoveClassFromTask(taskIndex: number, classIndex: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Interface/project-configuration/classification-configuration/classification-configuration.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                taskIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                classIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeTask\n                        \n                    \n                \n            \n            \n                \nremoveTask(taskIndex: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Interface/project-configuration/classification-configuration/classification-configuration.component.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                taskIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackByFn\n                        \n                    \n                \n            \n            \n                \ntrackByFn(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Interface/project-configuration/classification-configuration/classification-configuration.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        labelService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LabelsService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Interface/project-configuration/classification-configuration/classification-configuration.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { LabelsService } from '../../../../Services/Project/labels.service';\nimport { FormsModule } from '@angular/forms';\nimport { CheckboxModule } from 'primeng/checkbox';\nimport { ButtonModule } from 'primeng/button';\nimport { NgFor, NgIf, NgStyle } from '@angular/common';\nimport { Fieldset } from 'primeng/fieldset';\nimport { DividerModule } from 'primeng/divider';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { MultilabelTask } from '../../../../Core/task';\n\nimport { TagModule } from 'primeng/tag';\n\n@Component({\n  selector: 'app-classification-configuration',\n  standalone: true,\n  imports: [FormsModule, ButtonModule, CheckboxModule, NgFor, NgIf, TagModule, Fieldset, InputTextModule, DividerModule],\n  templateUrl: './classification-configuration.component.html',\n  styleUrl: './classification-configuration.component.scss'\n})\nexport class ClassificationConfigurationComponent {\n\n  constructor(public labelService: LabelsService) { }\n\n  addMulticlassTask(){\n    this.labelService.addNewClassificationTask();\n  }\n\n  addMultiLabelTask(){\n    this.labelService.multiLabelTask = new MultilabelTask('Multilabel', []);\n\n  }\n\n  addClassToTask(taskIndex: number){\n    const n = this.labelService.listClassificationTasks[taskIndex].classLabels.length;\n    this.labelService.listClassificationTasks[taskIndex].classLabels.push('Class ' + (n + 1));\n  }\n\n  removeClassFromTask(taskIndex: number, classIndex: number){\n    this.labelService.listClassificationTasks[taskIndex].classLabels.splice(classIndex, 1);\n  \n\n  }\n\n  addMultiLabelClass(name: string, event: Event){\n    if(name === '') return;\n    if(!this.labelService.multiLabelTask){\n      return;\n    }\n    if(this.labelService.multiLabelTask.taskLabels.includes(name)){\n      return;\n    }\n    this.labelService.multiLabelTask.taskLabels.push(name);\n\n    (event.target as HTMLInputElement).value = '';\n    \n\n  }\n\n  trackByFn(index: number): number {\n    return index;\n  }\n\n  removeTask(taskIndex: number){\n    this.labelService.listClassificationTasks.splice(taskIndex, 1);\n  }\n\n  removeClassFromMultitask(classIndex: number){\n    if(!this.labelService.multiLabelTask){\n      return;\n    }\n\n    this.labelService.multiLabelTask.taskLabels.splice(classIndex, 1);\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{ label.taskName }} \n        \n      \n      \n        Task {{ i + 1 }}:\n        \n        \n      \n      \n\n      \n        Class {{ j }}:\n        \n        \n      \n    \n  \n  \n  \n    \n\n    \n      \n        \n          \n            {{ label }}\n          \n\n          \n         \n        \n      \n    \n  \n  \n    \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ label.taskName }}                             Task {{ i + 1 }}:                                          Class {{ j }}:                                                                            {{ label }}                                                             '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlockableDiv', 'selector': 'blockable-div'},{'name': 'BlockableP', 'selector': 'blockable-p'},{'name': 'ClassificationConfigurationComponent', 'selector': 'app-classification-configuration'},{'name': 'DrawableCanvasComponent', 'selector': 'app-drawable-canvas'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'GalleryComponent', 'selector': 'app-gallery'},{'name': 'GalleryElementComponent', 'selector': 'app-gallery-element'},{'name': 'InstanceLabelComponent', 'selector': 'app-instance-label'},{'name': 'InteractiveBboxComponent', 'selector': 'app-interactive-bbox'},{'name': 'LabelledSwitchComponent', 'selector': 'app-labelled-switch'},{'name': 'LabelsComponent', 'selector': 'app-labels'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'ProjectConfigurationComponent', 'selector': 'app-project-configuration'},{'name': 'SVGElementsComponent', 'selector': 'app-svgelements'},{'name': 'TestingComponent', 'selector': 'app-testing'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'ToolSettingComponent', 'selector': 'app-tool-setting'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ClassificationConfigurationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Color.html":{"url":"interfaces/Color.html","title":"interface - Color","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Color\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Core/canvases/stampmaker.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            b\n                                        \n                                \n                                \n                                        \n                                            g\n                                        \n                                \n                                \n                                        \n                                            r\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        b\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        b:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        g\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        g:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        r\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        r:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        const HexPattern = /^#?[0-9A-Fa-f]{1,2}[0-9A-Fa-f]{1,2}[0-9A-Fa-f]{1,2}$/\n\nconst RGBPattern = /^rgb\\((\\s+)?[0-9]{1,3},(\\s+)?[0-9]{1,3},(\\s+)?[0-9]{1,3}(\\s+)?\\)$/\n\ninterface Color {\n\n    r: number\n\n    g: number\n\n    b: number\n}\nexport default class StampMaker {\n    canvases: { [key: string]: { [size: number]: OffscreenCanvas } }\n\n    constructor() {\n\n        this.canvases = {}\n\n    }\n\n    parseColor(color: string): Color | undefined {\n\n        const isHex = HexPattern.test(color)\n\n        const isRGB = RGBPattern.test(color)\n\n        if (!isHex && !isRGB) {\n\n            return;\n        }\n\n        if (isHex) {\n\n            let c = color[0] === '#' ? color.slice(1) : color\n\n            c = c.length === 3\n\n                ? c.split('').reduce((acc, it) => acc + it + it, '')\n\n                : c\n\n            const r = parseInt(c.slice(0, 2), 16)\n\n            const g = parseInt(c.slice(2, 4), 16)\n\n            const b = parseInt(c.slice(4, 6), 16)\n\n            return { r, g, b } as Color\n\n        }\n\n        if (isRGB) {\n\n            let [r, g, b] = color\n\n                .replace(/rgb|\\s+|\\(|\\)/g, '')\n\n                .split(',')\n\n                .map(it => parseInt(it))\n\n            r = r > 255 ? 255 : r\n\n            g = g > 255 ? 255 : g\n\n            b = b > 255 ? 255 : b\n\n            return { r, g, b } as Color\n\n        }\n        return;\n\n    }\n\n\n    make(size: number, color: string) {\n\n\n        // size = size * window.devicePixelRatio\n\n        const _color = this.parseColor(color)\n        if (!_color) return\n\n        const _strColor = JSON.stringify(_color)\n\n        this.canvases[_strColor] = this.canvases[_strColor] || {}\n\n\n        if (this.canvases[_strColor][size] != null) {\n\n            return this.canvases[_strColor][size]\n\n        }\n\n        const canvas = new OffscreenCanvas(size, size)\n\n        size = size + (size % 2)\n\n        canvas.width = size\n\n        canvas.height = size\n\n\n        const context = canvas.getContext('2d')\n\n        const imageData = context!.createImageData(size, size)\n\n        for (let i = 0; i  x || err > y) {\n\n                err += ++x * 2 + 1 /* x step */\n\n            }\n\n        } while (x \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DrawService.html":{"url":"injectables/DrawService.html","title":"injectable - DrawService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DrawService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Components/Core/drawable-canvas/service/draw.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                lassoPoints\n                            \n                            \n                                    Public\n                                redrawRequest\n                            \n                            \n                                    Public\n                                singleDrawRequest\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                applyLasso\n                            \n                            \n                                    Public\n                                applyLassoEraser\n                            \n                            \n                                    Public\n                                binarizeCanvas\n                            \n                            \n                                    Public\n                                clearCanvas\n                            \n                            \n                                    Public\n                                draw\n                            \n                            \n                                    Public\n                                drawPen\n                            \n                            \n                                    Public\n                                    Async\n                                endDraw\n                            \n                            \n                                    Public\n                                eraserPen\n                            \n                            \n                                    Public\n                                finalizeDraw\n                            \n                            \n                                    Public\n                                getFillColor\n                            \n                            \n                                    Public\n                                postProcessDraw\n                            \n                            \n                                    Public\n                                    Async\n                                postProcessErase\n                            \n                            \n                                    Public\n                                refreshAllColors\n                            \n                            \n                                    Public\n                                refreshColor\n                            \n                            \n                                    Public\n                                startDraw\n                            \n                            \n                                    Public\n                                swapMarkers\n                            \n                            \n                                    Public\n                                updateLasso\n                            \n                            \n                                    Public\n                                wheel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(labelService: LabelsService, openCVService: OpenCVService, projectService: ProjectService, zoomPanService: ZoomPanService, editorService: EditorService, stateService: StateManagerService, canvasManagerService: CanvasManagerService, undoRedoService: UndoRedoService, postProcessService: PostProcessService, svgUIService: SVGUIService)\n                    \n                \n                        \n                            \n                                Defined in src/app/Components/Core/drawable-canvas/service/draw.service.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        labelService\n                                                  \n                                                        \n                                                                        LabelsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        openCVService\n                                                  \n                                                        \n                                                                        OpenCVService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        zoomPanService\n                                                  \n                                                        \n                                                                        ZoomPanService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        editorService\n                                                  \n                                                        \n                                                                        EditorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stateService\n                                                  \n                                                        \n                                                                        StateManagerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        canvasManagerService\n                                                  \n                                                        \n                                                                        CanvasManagerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        undoRedoService\n                                                  \n                                                        \n                                                                        UndoRedoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        postProcessService\n                                                  \n                                                        \n                                                                        PostProcessService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        svgUIService\n                                                  \n                                                        \n                                                                        SVGUIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyLasso\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyLasso()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/draw.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyLassoEraser\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyLassoEraser(ctx: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/draw.service.ts:105\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                        CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        binarizeCanvas\n                        \n                    \n                \n            \n            \n                \n                        \n                    binarizeCanvas(ctx: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D, color: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/draw.service.ts:127\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                        CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                color\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        clearCanvas\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearCanvas(ctx: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/draw.service.ts:137\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                        CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        draw\n                        \n                    \n                \n            \n            \n                \n                        \n                    draw(event: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/draw.service.ts:143\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        drawPen\n                        \n                    \n                \n            \n            \n                \n                        \n                    drawPen(ctx: OffscreenCanvasRenderingContext2D)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/draw.service.ts:188\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                        OffscreenCanvasRenderingContext2D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        endDraw\n                        \n                    \n                \n            \n            \n                \n                        \n                    endDraw()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/draw.service.ts:211\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        eraserPen\n                        \n                    \n                \n            \n            \n                \n                        \n                    eraserPen(ctx: OffscreenCanvasRenderingContext2D)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/draw.service.ts:280\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                        OffscreenCanvasRenderingContext2D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        finalizeDraw\n                        \n                    \n                \n            \n            \n                \n                        \n                    finalizeDraw(ctx: OffscreenCanvasRenderingContext2D)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/draw.service.ts:330\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                        OffscreenCanvasRenderingContext2D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getFillColor\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFillColor()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/draw.service.ts:334\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        postProcessDraw\n                        \n                    \n                \n            \n            \n                \n                        \n                    postProcessDraw()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/draw.service.ts:346\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        postProcessErase\n                        \n                    \n                \n            \n            \n                \n                        \n                    postProcessErase()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/draw.service.ts:361\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        refreshAllColors\n                        \n                    \n                \n            \n            \n                \n                        \n                    refreshAllColors()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/draw.service.ts:408\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        refreshColor\n                        \n                    \n                \n            \n            \n                \n                        \n                    refreshColor(inputCtx: OffscreenCanvasRenderingContext2D | null, inputColor: string | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/draw.service.ts:365\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                inputCtx\n                                            \n                                                        OffscreenCanvasRenderingContext2D | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                        \n                                                inputColor\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        startDraw\n                        \n                    \n                \n            \n            \n                \n                        \n                    startDraw()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/draw.service.ts:417\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        swapMarkers\n                        \n                    \n                \n            \n            \n                \n                        \n                    swapMarkers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/draw.service.ts:425\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateLasso\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateLasso(event: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/draw.service.ts:478\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        wheel\n                        \n                    \n                \n            \n            \n                \n                        \n                    wheel(event: WheelEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/draw.service.ts:484\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        WheelEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        lassoPoints\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Point2D[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/draw.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        redrawRequest\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/draw.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        singleDrawRequest\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/draw.service.ts:23\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Point2D } from '../models';\nimport { LabelsService } from '../../../../Services/Project/labels.service';\nimport { OpenCVService } from '../../../../Services/open-cv.service';\nimport { ProjectService } from '../../../../Services/Project/project.service';\nimport { ZoomPanService } from './zoom-pan.service';\nimport { Tools } from '../../../../Core/canvases/tools';\nimport { EditorService } from '../../../../Services/UI/editor.service';\nimport { StateManagerService } from './state-manager.service';\nimport { Subject } from 'rxjs';\nimport { CanvasManagerService } from './canvas-manager.service';\nimport { UndoRedoService } from './undo-redo.service';\nimport { PostProcessService } from './post-process.service';\nimport { SVGUIService } from './svgui.service';\nimport { PostProcessOption } from '../../../../Core/canvases/tools';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DrawService {\n  public lassoPoints: Point2D[] = [];\n  public redrawRequest = new Subject();\n  public singleDrawRequest =\n    new Subject();\n\n  constructor(\n    private labelService: LabelsService,\n    private openCVService: OpenCVService,\n    private projectService: ProjectService,\n    private zoomPanService: ZoomPanService,\n    private editorService: EditorService,\n    private stateService: StateManagerService,\n    private canvasManagerService: CanvasManagerService,\n    private undoRedoService: UndoRedoService,\n    private postProcessService: PostProcessService,\n    private svgUIService: SVGUIService\n  ) {\n    this.editorService.canvasSumRefresh.subscribe((value) => {\n      this.canvasManagerService.computeCombinedCanvas();\n      this.redrawRequest.next(true);\n    });\n\n    this.editorService.canvasRedraw.subscribe((value) => {\n      if (value) {\n        this.stateService.recomputeCanvasSum = value;\n        this.refreshColor();\n      }\n    });\n\n    this.editorService.canvasClear.subscribe((value) => {\n      if (value >= 0) {\n        this.stateService.recomputeCanvasSum = true;\n        this.canvasManagerService.clearCanvasAtIndex(value);\n        this.redrawRequest.next(true);\n      }\n    });\n  }\n\n  public applyLasso() {\n    if (this.lassoPoints.length  {\n            this.applyLassoEraser(ctx);\n          });\n        } else {\n          this.applyLassoEraser(activeCtx);\n        }\n        this.lassoPoints = [];\n        break;\n    }\n    this.stateService.isDrawing = false;\n\n    let postProcessCallback = new Promise((resolve) => {\n      resolve();\n    });\n    if (this.editorService.autoPostProcess) {\n      if (this.editorService.isEraser()) {\n        postProcessCallback = this.postProcessErase();\n      } else if (this.editorService.isDrawingTool()) {\n        postProcessCallback = this.postProcessDraw();\n      }\n    }\n    await postProcessCallback?.then(() => {\n      this.redrawRequest.next(true);\n    });\n\n    if (this.projectService.isInstanceSegmentation) {\n      if (this.editorService.incrementAfterStroke) {\n        this.labelService.incrementActiveInstance();\n      }\n    }\n  }\n\n  public eraserPen(ctx: OffscreenCanvasRenderingContext2D) {\n    // Is auto post-processing enabled? In which case, ctx is a buffer canvas\n    // and we need to draw on the buffer canvas instead of the active canvas\n    // Otherwise, we draw on the active canvas or all class canvases if eraseAll is enabled\n\n    ctx.globalCompositeOperation = 'source-over';\n    ctx.beginPath();\n    ctx.moveTo(\n      this.stateService.previousPoint.x,\n      this.stateService.previousPoint.y\n    );\n    ctx.lineTo(\n      this.stateService.currentPoint.x,\n      this.stateService.currentPoint.y\n    );\n    ctx.stroke();\n\n    this.binarizeCanvas(ctx, this.getFillColor());\n    let bbox = this.stateService.getBoundingBox();\n\n    if (!this.editorService.autoPostProcess) {\n      this.canvasManagerService.getAllCanvasCtx().forEach((ctxClass, index) => {\n        if (\n          index != this.labelService.getActiveIndex() &&\n          !this.editorService.eraseAll\n        ) {\n          return;\n        }\n        ctxClass.globalCompositeOperation = 'destination-out';\n        ctxClass.drawImage(\n          ctx.canvas,\n          bbox.x,\n          bbox.y,\n          bbox.width,\n          bbox.height,\n          bbox.x,\n          bbox.y,\n          bbox.width,\n          bbox.height\n        );\n        ctxClass.globalCompositeOperation = 'source-over';\n      });\n    } \n    else {\n      this.svgUIService.addPoint(this.stateService.currentPoint);\n    }\n\n    this.redrawRequest.next(true);\n  }\n\n  public finalizeDraw(ctx: OffscreenCanvasRenderingContext2D) {\n    this.singleDrawRequest.next(ctx);\n  }\n\n  public getFillColor() {\n    if (this.projectService.isInstanceSegmentation) {\n      if (!this.labelService.activeSegInstance) {\n        throw new Error('No active instance');\n      }\n      return this.labelService.activeSegInstance.shade;\n    }\n\n    const color = this.labelService.activeLabel?.color;\n    return color ? color : '#ffffff';\n  }\n\n  public postProcessDraw() {\n    this.stateService.recomputeCanvasSum = true;\n    switch (this.editorService.postProcessOption) {\n      case PostProcessOption.OTSU:\n        return this.postProcessService.otsu_post_process();\n      case PostProcessOption.MEDSAM:\n        return this.postProcessService.sam_post_process();\n      case PostProcessOption.CRF:\n        return this.postProcessService.crf_post_process();\n    }\n    return new Promise((resolve) => {\n      resolve();\n    });\n  }\n\n  public async postProcessErase() {\n    await this.postProcessService.eraseAll_post_process();\n  }\n\n  public refreshColor(\n    inputCtx: OffscreenCanvasRenderingContext2D | null = null,\n    inputColor: string | null = null\n  ) {\n    if (this.projectService.isInstanceSegmentation) {\n      this.redrawRequest.next(true);\n      return;\n    }\n\n    let ctx:\n      | OffscreenCanvasRenderingContext2D\n      | CanvasRenderingContext2D\n      | null;\n    if (!inputCtx) {\n      ctx = this.canvasManagerService.getActiveCtx();\n    } else {\n      ctx = inputCtx;\n    }\n    if (!ctx) {\n      ctx =\n        this.canvasManagerService.canvasCtx[\n          this.canvasManagerService.canvasCtx.length - 1\n        ];\n      this.labelService.activeLabel =\n        this.labelService.listSegmentationLabels[\n          this.labelService.listSegmentationLabels.length - 1\n        ];\n    }\n    if (!ctx) {\n      return;\n    }\n    let color = inputColor ? inputColor : this.labelService.activeLabel?.color;\n\n    ctx.fillStyle = color ? color : '#ffffff';\n    ctx.strokeStyle = color ? color : '#ffffff';\n    ctx.globalCompositeOperation = 'source-atop';\n\n    ctx.fillRect(0, 0, this.stateService.width, this.stateService.height);\n    ctx.globalCompositeOperation = 'source-over';\n\n    this.redrawRequest.next(true);\n  }\n\n  public refreshAllColors() {\n    this.canvasManagerService.getAllCanvasCtx().forEach((ctx, index) => {\n      this.refreshColor(\n        ctx,\n        this.labelService.listSegmentationLabels[index].color\n      );\n    });\n  }\n\n  public startDraw() {\n    this.stateService.reset();\n    this.stateService.isDrawing = true;\n    this.lassoPoints = [];\n    this.clearCanvas(this.canvasManagerService.bufferCtx);\n    return this.undoRedoService.update_undo_redo();\n  }\n\n  public swapMarkers() {\n    const activeIndex = this.labelService.getActiveIndex();\n    let ctx = this.canvasManagerService.getBufferCtx();\n    let bufferCanvas = this.canvasManagerService.getBufferCanvas();\n    ctx.fillStyle = this.getFillColor();\n    // We find the shape that overlap the current buffer with the other class canvas\n    const rect = this.stateService.getBoundingBox();\n    ctx.globalCompositeOperation = 'source-in';\n    this.stateService.recomputeCanvasSum = true;\n    const edgesOnly = this.editorService.edgesOnly;\n    this.editorService.edgesOnly = false;\n    this.canvasManagerService.computeCombinedCanvas();\n    this.editorService.edgesOnly = edgesOnly;\n\n    ctx.drawImage(\n      this.canvasManagerService.getCombinedCanvas(),\n      rect.x,\n      rect.y,\n      rect.width,\n      rect.height,\n      rect.x,\n      rect.y,\n      rect.width,\n      rect.height\n    );\n\n\n    ctx.fillRect(rect.x, rect.y, rect.width, rect.height);\n    ctx.globalCompositeOperation = 'source-over';\n\n    // Now, we remove the overlapped shape from the other class canvas\n    this.canvasManagerService.getAllCanvasCtx().forEach((classCtx, index) => {\n      if (index === activeIndex) {\n        classCtx.globalCompositeOperation = 'source-over';\n      } else {\n        classCtx.globalCompositeOperation = 'destination-out';\n      }\n      classCtx.drawImage(\n        bufferCanvas,\n        rect.x,\n        rect.y,\n        rect.width,\n        rect.height,\n        rect.x,\n        rect.y,\n        rect.width,\n        rect.height\n      );\n      classCtx.globalCompositeOperation = 'source-over';\n    });\n    this.stateService.recomputeCanvasSum = true;\n  }\n\n  public updateLasso(event: MouseEvent) {\n    const canvasCoord = this.zoomPanService.getImageCoordinates(event);\n\n    this.lassoPoints.push(canvasCoord);\n  }\n\n  public wheel(event: WheelEvent) {\n    if (event.ctrlKey) {\n      this.editorService.lineWidth += event.deltaY > 0 ? -2 : 2;\n    } else {\n      this.zoomPanService.wheel(event);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EditorService.html":{"url":"injectables/EditorService.html","title":"injectable - EditorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EditorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Services/UI/editor.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _lastTool\n                            \n                            \n                                    Public\n                                autoPostProcess\n                            \n                            \n                                    Public\n                                autoPostProcessOpening\n                            \n                            \n                                    Public\n                                canvasClear\n                            \n                            \n                                    Public\n                                canvasRedraw\n                            \n                            \n                                    Public\n                                canvasSumRefresh\n                            \n                            \n                                    Public\n                                edgesOnly\n                            \n                            \n                                    Public\n                                enforceConnectivity\n                            \n                            \n                                    Public\n                                eraseAll\n                            \n                            \n                                    Public\n                                incrementAfterStroke\n                            \n                            \n                                    Public\n                                labelOpacity\n                            \n                            \n                                    Public\n                                lineWidth\n                            \n                            \n                                    Public\n                                morphoSize\n                            \n                            \n                                    Public\n                                postProcessOption\n                            \n                            \n                                    Public\n                                redo\n                            \n                            \n                                    Public\n                                samThreshold\n                            \n                            \n                                    Public\n                                selectedTool\n                            \n                            \n                                    Public\n                                swapMarkers\n                            \n                            \n                                    Public\n                                undo\n                            \n                            \n                                    Public\n                                useInverse\n                            \n                            \n                                    Public\n                                useProcessing\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activatePanMode\n                            \n                            \n                                    Public\n                                affectsMultipleLabels\n                            \n                            \n                                    Public\n                                canPan\n                            \n                            \n                                    Public\n                                isDrawingTool\n                            \n                            \n                                    Public\n                                isEraser\n                            \n                            \n                                    Public\n                                isToolWithBrushSize\n                            \n                            \n                                    Public\n                                requestCanvasClear\n                            \n                            \n                                    Public\n                                requestCanvasRedraw\n                            \n                            \n                                    Public\n                                requestRedo\n                            \n                            \n                                    Public\n                                requestUndo\n                            \n                            \n                                    Public\n                                restoreLastTool\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/Services/UI/editor.service.ts:33\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        activatePanMode\n                        \n                    \n                \n            \n            \n                \n                        \n                    activatePanMode()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/UI/editor.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        affectsMultipleLabels\n                        \n                    \n                \n            \n            \n                \n                        \n                    affectsMultipleLabels()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/UI/editor.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        canPan\n                        \n                    \n                \n            \n            \n                \n                        \n                    canPan()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/UI/editor.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isDrawingTool\n                        \n                    \n                \n            \n            \n                \n                        \n                    isDrawingTool()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/UI/editor.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isEraser\n                        \n                    \n                \n            \n            \n                \n                        \n                    isEraser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/UI/editor.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isToolWithBrushSize\n                        \n                    \n                \n            \n            \n                \n                        \n                    isToolWithBrushSize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/UI/editor.service.ts:57\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        requestCanvasClear\n                        \n                    \n                \n            \n            \n                \n                        \n                    requestCanvasClear(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/UI/editor.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    -1\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        requestCanvasRedraw\n                        \n                    \n                \n            \n            \n                \n                        \n                    requestCanvasRedraw()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/UI/editor.service.ts:66\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        requestRedo\n                        \n                    \n                \n            \n            \n                \n                        \n                    requestRedo()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/UI/editor.service.ts:70\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        requestUndo\n                        \n                    \n                \n            \n            \n                \n                        \n                    requestUndo()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/UI/editor.service.ts:74\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        restoreLastTool\n                        \n                    \n                \n            \n            \n                \n                        \n                    restoreLastTool()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/UI/editor.service.ts:78\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        _lastTool\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Tool\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/UI/editor.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        autoPostProcess\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/UI/editor.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        autoPostProcessOpening\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/UI/editor.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        canvasClear\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/UI/editor.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        canvasRedraw\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/UI/editor.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        canvasSumRefresh\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/UI/editor.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        edgesOnly\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/UI/editor.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        enforceConnectivity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/UI/editor.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        eraseAll\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/UI/editor.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        incrementAfterStroke\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/UI/editor.service.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        labelOpacity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/UI/editor.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        lineWidth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/UI/editor.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        morphoSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 3\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/UI/editor.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        postProcessOption\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"otsu\"\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/UI/editor.service.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        redo\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/UI/editor.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        samThreshold\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0.5\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/UI/editor.service.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        selectedTool\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Tool\n\n                    \n                \n                \n                    \n                        Default value : Tools.PEN\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/UI/editor.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        swapMarkers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/UI/editor.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        undo\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/UI/editor.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        useInverse\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/UI/editor.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        useProcessing\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/UI/editor.service.ts:27\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Subject } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { Tool, Tools } from '../../Core/canvases/tools';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EditorService {\n\n  public _lastTool: Tool;\n  public autoPostProcess: boolean = false;\n  public autoPostProcessOpening: boolean = false;\n  public canvasClear: Subject = new Subject();\n  public canvasRedraw: Subject = new Subject();\n  public canvasSumRefresh: Subject = new Subject();\n  public edgesOnly: boolean = false;\n  public enforceConnectivity: boolean = false;\n  public eraseAll: boolean = false;\n  public labelOpacity: number = 1;\n  public lineWidth: number = 10;\n  public morphoSize: number = 3;\n  public redo: Subject = new Subject();\n  public selectedTool: Tool = Tools.PEN;\n  public swapMarkers: boolean = false;\n  public undo: Subject = new Subject();\n  public useInverse: boolean = false;\n  public useProcessing: boolean = false;\n\n  public samThreshold: number = 0.5;\n\n  public postProcessOption: string = \"otsu\"\n\n  public incrementAfterStroke: boolean = false;\n  constructor() { }\n  \n  public activatePanMode() {\n    this._lastTool = this.selectedTool;\n    this.selectedTool = Tools.PAN;\n  }\n\n  public affectsMultipleLabels(): boolean {\n    return this.eraseAll || this.swapMarkers;\n  }\n\n  public canPan(): boolean {\n    return this.selectedTool === Tools.PAN;\n  }\n\n  public isDrawingTool(): boolean {\n    return this.selectedTool === Tools.PEN || this.selectedTool === Tools.LASSO;\n  }\n\n  public isEraser(): boolean {\n    return this.selectedTool === Tools.ERASER || this.selectedTool === Tools.LASSO_ERASER;\n  }\n\n  public isToolWithBrushSize(): boolean {\n    return this.selectedTool === Tools.PEN || this.selectedTool === Tools.ERASER;\n  }\n\n\n  public requestCanvasClear(index: number = -1) {\n    this.canvasClear.next(index);\n  }\n\n  public requestCanvasRedraw() {\n    this.canvasRedraw.next(true);\n  }\n\n  public requestRedo() {\n    this.redo.next(true);\n  }\n\n  public requestUndo() {\n    this.undo.next(true);\n  }\n\n  public restoreLastTool() {\n    this.selectedTool = this._lastTool;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventPayload.html":{"url":"interfaces/EventPayload.html","title":"interface - EventPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EventPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Services/cli.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            event_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        event_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        event_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { ImageFromCLI, ProjectConfig } from '../Core/interface';\nimport { listen } from '@tauri-apps/api/event';\nimport { invoke } from '@tauri-apps/api/core';\n\ninterface EventPayload {\n  event_id: string;\n  data: T;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CLIService {\n  public commandProcessed: Subject = new Subject();\n  public projectCreated = new Subject();\n  public imageLoaded = new Subject();\n\n  constructor(private ngZone: NgZone) {\n    this.initializeListeners();\n  }\n  private initializeListeners() {\n    listen>('create_project', async (event) => {\n      try {\n        await this.ngZone.run(() => {\n          const config = event.payload.data;\n          console.log(event);\n          this.projectCreated.next(config);\n        });\n        await invoke('event_processed', {\n          id: event.payload.event_id,\n          success: true,\n        });\n        \n      } catch (error) {\n        const errorMessage =\n          error instanceof Error ? error.message : 'Unknown error occurred';\n        await invoke('event_processed', {\n          id: event.payload.event_id,\n          success: false,\n          error: errorMessage,\n        });\n      }\n    });\n\n    listen>('load_image', async (event) => {\n      try {\n        await this.ngZone.run(() => {\n          const config = event.payload.data;\n          this.imageLoaded.next(config);\n        });\n        await invoke('event_processed', {\n          id: event.payload.event_id,\n          success: true,\n        });\n      } catch (error) {\n        const errorMessage =\n          error instanceof Error ? error.message : 'Unknown error occurred';\n        await invoke('event_processed', {\n          id: event.payload.event_id,\n          success: false,\n          error: errorMessage,\n        });\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GalleryComponent.html":{"url":"components/GalleryComponent.html","title":"component - GalleryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GalleryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/Components/Interface/gallery/gallery.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-gallery\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                GalleryElementComponent\n                            PanelModule\n                            DataViewModule\n                            ButtonModule\n                            KnobModule\n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./gallery.component.html\n            \n\n\n\n            \n                styleUrl\n                ./gallery.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                intervalFunction\n                            \n                            \n                                percentageBeforeRefresh\n                            \n                            \n                                    Public\n                                projectService\n                            \n                            \n                                refreshInterval\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getInterval\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                refresh\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(projectService: ProjectService)\n                    \n                \n                        \n                            \n                                Defined in src/app/Components/Interface/gallery/gallery.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getInterval\n                        \n                    \n                \n            \n            \n                \ngetInterval()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Interface/gallery/gallery.component.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Interface/gallery/gallery.component.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        refresh\n                        \n                    \n                \n            \n            \n                \n                        \n                    refresh()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Interface/gallery/gallery.component.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        intervalFunction\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NodeJS.Timeout | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Interface/gallery/gallery.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        percentageBeforeRefresh\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Interface/gallery/gallery.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProjectService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Interface/gallery/gallery.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refreshInterval\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 3000\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Interface/gallery/gallery.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ProjectService } from '../../../Services/Project/project.service';\nimport { CommonModule } from '@angular/common';\nimport { GalleryElementComponent } from './gallery-element/gallery-element.component';\nimport { PanelModule } from 'primeng/panel';\nimport { DataViewModule } from 'primeng/dataview';\nimport { ButtonModule } from 'primeng/button';\nimport { KnobModule } from 'primeng/knob';\nimport { FormsModule } from '@angular/forms';\n\n@Component({\n  selector: 'app-gallery',\n  standalone: true,\n  imports: [\n    CommonModule,\n    GalleryElementComponent,\n    PanelModule,\n    DataViewModule,\n    ButtonModule,\n    KnobModule,\n    FormsModule,\n  ],\n  templateUrl: './gallery.component.html',\n  styleUrl: './gallery.component.scss',\n})\nexport class GalleryComponent implements OnInit {\n  refreshInterval: number = 3000;\n  percentageBeforeRefresh: number = 0;\n  intervalFunction: NodeJS.Timeout | undefined;\n  constructor(public projectService: ProjectService) {}\n\n  ngOnInit(): void {\n    this.intervalFunction = this.getInterval();\n  }\n  async refresh() {\n    this.percentageBeforeRefresh = 0;\n    if (this.intervalFunction) {\n      clearInterval(this.intervalFunction);\n    }\n    await this.projectService.listFiles();\n    this.intervalFunction = this.getInterval();\n  }\n\n  getInterval() {\n    let interval = 50;\n    return setInterval(() => {\n      this.percentageBeforeRefresh += 100 * (interval / this.refreshInterval);\n      console.log(this.percentageBeforeRefresh);\n      if (this.percentageBeforeRefresh >= 100) {\n        this.refresh();\n        this.percentageBeforeRefresh = 0;\n      }\n    }, interval);\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n\n                    \n                \n                \n            \n        \n        \n            \n                \n                    \n                    \n                \n            \n        \n\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlockableDiv', 'selector': 'blockable-div'},{'name': 'BlockableP', 'selector': 'blockable-p'},{'name': 'ClassificationConfigurationComponent', 'selector': 'app-classification-configuration'},{'name': 'DrawableCanvasComponent', 'selector': 'app-drawable-canvas'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'GalleryComponent', 'selector': 'app-gallery'},{'name': 'GalleryElementComponent', 'selector': 'app-gallery-element'},{'name': 'InstanceLabelComponent', 'selector': 'app-instance-label'},{'name': 'InteractiveBboxComponent', 'selector': 'app-interactive-bbox'},{'name': 'LabelledSwitchComponent', 'selector': 'app-labelled-switch'},{'name': 'LabelsComponent', 'selector': 'app-labels'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'ProjectConfigurationComponent', 'selector': 'app-project-configuration'},{'name': 'SVGElementsComponent', 'selector': 'app-svgelements'},{'name': 'TestingComponent', 'selector': 'app-testing'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'ToolSettingComponent', 'selector': 'app-tool-setting'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GalleryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GalleryElementComponent.html":{"url":"components/GalleryElementComponent.html","title":"component - GalleryElementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GalleryElementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/Components/Interface/gallery/gallery-element/gallery-element.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-gallery-element\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            CardModule\n                            PanelModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./gallery-element.component.html\n            \n\n\n\n            \n                styleUrl\n                ./gallery-element.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                imagePath\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getThumbnail\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openEditor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                imageName\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(projectService: ProjectService)\n                    \n                \n                        \n                            \n                                Defined in src/app/Components/Interface/gallery/gallery-element/gallery-element.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/Components/Interface/gallery/gallery-element/gallery-element.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        imageName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/Components/Interface/gallery/gallery-element/gallery-element.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getThumbnail\n                        \n                    \n                \n            \n            \n                \n                        \n                    getThumbnail()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Interface/gallery/gallery-element/gallery-element.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Interface/gallery/gallery-element/gallery-element.component.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEditor\n                        \n                    \n                \n            \n            \n                \nopenEditor()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Interface/gallery/gallery-element/gallery-element.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        imagePath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Interface/gallery/gallery-element/gallery-element.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, Input, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CardModule } from 'primeng/card';\nimport { PanelModule } from 'primeng/panel';\n\n\nimport { ProjectService } from '../../../../Services/Project/project.service';\nimport { invoke } from '@tauri-apps/api/core';\nimport { path } from '@tauri-apps/api';\nimport { loadImageFile } from '../../../../Core/io/images';\n\n\n@Component({\n  selector: 'app-gallery-element',\n  standalone: true,\n  imports: [CommonModule, CardModule, PanelModule],\n  templateUrl: './gallery-element.component.html',\n  styleUrl: './gallery-element.component.scss'\n})\nexport class GalleryElementComponent implements OnInit {\n  @Input() imageName: string;\n  @Input() id: number;\n  imagePath: string = '';\n\n  constructor(private projectService: ProjectService) {\n  }\n\n  ngOnInit(): void {\n    this.getThumbnail().then((path) => {\n      this.imagePath = path;\n    });\n  }\n\n\n\n  openEditor() {\n    let id = this.projectService.imagesName.indexOf(this.imageName);\n    this.projectService.openEditor(id);\n  }\n\n  async getThumbnail(): Promise {\n    let imageInput = await path.resolve(this.projectService.inputFolder, this.imageName);\n    let thumbnailPath = await path.resolve(this.projectService.inputFolder, '.thumbnails', this.imageName);\n    await invoke('create_thumbnail', { imagePath: imageInput, thumbnailPath: thumbnailPath, width: 128, height: 128 })\n    return loadImageFile(thumbnailPath);\n  }\n}\n    \n\n    \n        \n    \n        \n            \n        \n    \n    \n        \n            {{id}}\n        \n        {{imageName}}\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            {{id}}                {{imageName}}    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlockableDiv', 'selector': 'blockable-div'},{'name': 'BlockableP', 'selector': 'blockable-p'},{'name': 'ClassificationConfigurationComponent', 'selector': 'app-classification-configuration'},{'name': 'DrawableCanvasComponent', 'selector': 'app-drawable-canvas'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'GalleryComponent', 'selector': 'app-gallery'},{'name': 'GalleryElementComponent', 'selector': 'app-gallery-element'},{'name': 'InstanceLabelComponent', 'selector': 'app-instance-label'},{'name': 'InteractiveBboxComponent', 'selector': 'app-interactive-bbox'},{'name': 'LabelledSwitchComponent', 'selector': 'app-labelled-switch'},{'name': 'LabelsComponent', 'selector': 'app-labels'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'ProjectConfigurationComponent', 'selector': 'app-project-configuration'},{'name': 'SVGElementsComponent', 'selector': 'app-svgelements'},{'name': 'TestingComponent', 'selector': 'app-testing'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'ToolSettingComponent', 'selector': 'app-tool-setting'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GalleryElementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IOService.html":{"url":"injectables/IOService.html","title":"injectable - IOService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IOService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Services/io.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                requestedReload\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkIfDataExists\n                            \n                            \n                                    Async\n                                getActiveSavePath\n                            \n                            \n                                    Async\n                                load\n                            \n                            \n                                    Async\n                                loadExistingAnnotations\n                            \n                            \n                                loadNext\n                            \n                            \n                                loadPrevious\n                            \n                            \n                                requestReload\n                            \n                            \n                                save\n                            \n                            \n                                saveFromCLI\n                            \n                            \n                                    Async\n                                writeSave\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(projectService: ProjectService, labelService: LabelsService, viewService: ViewService, canvasManagerService: CanvasManagerService, stateService: StateManagerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/Services/io.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        labelService\n                                                  \n                                                        \n                                                                        LabelsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        viewService\n                                                  \n                                                        \n                                                                        ViewService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        canvasManagerService\n                                                  \n                                                        \n                                                                        CanvasManagerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stateService\n                                                  \n                                                        \n                                                                        StateManagerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkIfDataExists\n                        \n                    \n                \n            \n            \n                \ncheckIfDataExists()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/io.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getActiveSavePath\n                        \n                    \n                \n            \n            \n                \n                        \n                    getActiveSavePath(imageName: string | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/io.service.ts:297\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                imageName\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        load\n                        \n                    \n                \n            \n            \n                \n                        \n                    load()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/io.service.ts:105\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loadExistingAnnotations\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadExistingAnnotations()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/io.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadNext\n                        \n                    \n                \n            \n            \n                \nloadNext()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/io.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadPrevious\n                        \n                    \n                \n            \n            \n                \nloadPrevious()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/io.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requestReload\n                        \n                    \n                \n            \n            \n                \nrequestReload()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/io.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        save\n                        \n                    \n                \n            \n            \n                \nsave()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/io.service.ts:152\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveFromCLI\n                        \n                    \n                \n            \n            \n                \nsaveFromCLI(data: ImageFromCLI, imageName: string | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/io.service.ts:212\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            ImageFromCLI\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                imageName\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        writeSave\n                        \n                    \n                \n            \n            \n                \n                        \n                    writeSave(labelFormat: LabelFormat, width: number, height: number, imageName: string | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/io.service.ts:249\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                labelFormat\n                                            \n                                                            LabelFormat\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                width\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                height\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                imageName\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        requestedReload\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/io.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { LabelFormat } from '../Core/io/formats';\nimport { ProjectService } from './Project/project.service';\nimport { path } from '@tauri-apps/api';\nimport { invoke } from '@tauri-apps/api/core';\nimport { LabelsService } from './Project/labels.service';\nimport { ViewService } from './UI/view.service';\nimport { ImageFromCLI } from '../Core/interface';\nimport { Subject } from 'rxjs';\nimport { CanvasManagerService } from '../Components/Core/drawable-canvas/service/canvas-manager.service';\nimport { StateManagerService } from '../Components/Core/drawable-canvas/service/state-manager.service';\nimport { blobToDataURL, invokeSaveXmlFile } from '../Core/io/save_load';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class IOService {\n  public requestedReload: Subject = new Subject();\n\n  constructor(\n    private projectService: ProjectService,\n    private labelService: LabelsService,\n    private viewService: ViewService,\n    private canvasManagerService: CanvasManagerService,\n    private stateService: StateManagerService\n  ) { }\n\n  loadPrevious() { }\n\n  loadNext() { }\n\n  requestReload() {\n    this.requestedReload.next(true);\n  }\n\n  checkIfDataExists(): Promise {\n    return this.getActiveSavePath().then((filepath) => {\n      return invoke('check_file_exists', { filepath })\n        .then((response) => {\n          return response ? true : false;\n        })\n        .catch((error) => {\n          return false;\n        });\n    });\n  }\n\n  async loadExistingAnnotations(): Promise {\n    const filepath = await this.getActiveSavePath();\n    const response = await invoke('load_xml_file', { filepath });\n\n    // Parse the XML file and load the annotations\n    const parser = new DOMParser();\n    const doc = parser.parseFromString(response as string, 'image/svg+xml');\n\n    let labels = {\n      masksName: [],\n      masks: [],\n      labels: [],\n      colors: [],\n      multiclass: null,\n      multilabel: null,\n      shades: null,\n    } as LabelFormat;\n\n    // Get the image elements and their data\n    const imageElements = doc.getElementsByTagName('image');\n    for (let i = 0; i  0) {\n      labels.multiclass = multiclassElements[0]\n        .getAttribute('classes')!\n        .split(',');\n    }\n\n    // Get the multilabel elements\n    const multilabelElements = doc.getElementsByTagName('multilabel');\n    if (multilabelElements.length > 0) {\n      labels.multilabel = multilabelElements[0]\n        .getAttribute('classes')!\n        .split(',');\n    }\n\n    return labels;\n  }\n\n  async load() {\n    let exists = await this.checkIfDataExists();\n    if (!exists) {\n      return;\n    }\n    let data = await this.loadExistingAnnotations();\n\n    data.masksName.forEach((label, index) => {\n      let segLabel = {\n        label: label,\n        color: data.colors[index],\n        isVisible: true,\n        shades: data.shades ? data.shades[index] : null,\n      };\n      this.labelService.addSegLabel(segLabel);\n    });\n    this.labelService.rebuildTreeNodes();\n\n    if (this.labelService.multiLabelTask) {\n      if (data.multilabel) {\n        this.labelService.multiLabelTask.choices = data.multilabel;\n      }\n      else {\n        this.labelService.multiLabelTask.choices = [];\n      }\n    }\n    if (this.labelService.listClassificationTasks.length > 0) {\n      if (data.multiclass && data.multiclass.length === this.labelService.listClassificationTasks.length) {\n\n        data.multiclass.forEach((choice, index) => {\n          this.labelService.listClassificationTasks[index].choice = choice;\n        });\n      }\n      else if (!data.multiclass) {\n        this.labelService.listClassificationTasks.forEach((task) => {\n          task.choice = '';\n        });\n      }\n\n    }\n\n    this.labelService.activeLabel = this.labelService.listSegmentationLabels[0];\n\n    this.canvasManagerService.initCanvas();\n    await this.canvasManagerService.loadAllCanvas(data.masks as string[]);\n  }\n\n  save() {\n    this.viewService.setLoading(true, 'Saving annotations');\n    let savefile = {\n      masksName: [],\n      masks: [],\n      labels: [],\n      colors: [],\n      shades: null,\n      multiclass: [],\n      multilabel: null,\n    } as LabelFormat;\n\n    let allPromises$: Promise[] = [];\n    this.labelService.listSegmentationLabels.forEach((label, index) => {\n      if (label.shades) {\n        if (!savefile.shades) {\n          savefile.shades = [];\n        }\n        savefile.shades.push(label.shades);\n      }\n\n      savefile.labels.push(label.label);\n      savefile.masksName.push(label.label);\n      let canvas = this.canvasManagerService.labelCanvas[index];\n      let blob$ = canvas\n        .convertToBlob({ type: 'image/png' })\n        .then((blob) => {\n          return blobToDataURL(blob);\n        })\n        .then((blob) => {\n          savefile.masks.push(blob);\n        });\n      allPromises$.push(blob$);\n      savefile.colors.push(label.color);\n    });\n\n    if (this.labelService.multiLabelTask) {\n      savefile.multiclass = this.labelService.multiLabelTask.choices;\n    }\n    this.labelService.listClassificationTasks.forEach((task) => {\n      if (task.choice) {\n        savefile.multiclass?.push(task.choice);\n      }\n    });\n\n    let finished = Promise.all(allPromises$)\n      .then(() => {\n        this.writeSave(\n          savefile,\n          this.stateService.width,\n          this.stateService.height\n        );\n      })\n      .then(() => {\n        this.viewService.endLoading();\n        return true;\n      });\n    return finished;\n  }\n\n  saveFromCLI(data: ImageFromCLI, imageName: string | null = null) {\n    let savefile = {\n      masksName: [],\n      masks: [],\n      labels: [],\n      colors: [],\n      multiclass: null,\n      multilabel: null,\n      shades: null,\n    } as LabelFormat;\n\n    this.labelService.listSegmentationLabels.forEach((label, index) => {\n      if (label.shades) {\n        if (!savefile.shades) {\n          savefile.shades = [];\n        }\n        savefile.shades.push(label.shades);\n      }\n\n      savefile.labels.push(label.label);\n      savefile.masksName.push(label.label);\n      if (data.mask_data) {\n        savefile.masks.push(data.mask_data[index]);\n      }\n      savefile.colors.push(label.color);\n    });\n\n    if (data.classification_classes) {\n      savefile.multiclass = data.classification_classes;\n    }\n\n    if (data.classification_multilabel) {\n      savefile.multilabel = data.classification_multilabel;\n    }\n    return this.writeSave(savefile, 512, 512, imageName);\n  }\n\n  async writeSave(labelFormat: LabelFormat, width: number, height: number, imageName: string | null = null) {\n    let svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttribute('xmlns:xlink', 'http://www.w3.org/1999/xlink');\n    svg.setAttribute('height', `${height}`);\n    svg.setAttribute('width', `${width}`);\n\n    const nElements = labelFormat.masks.length;\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ImageFromCLI.html":{"url":"interfaces/ImageFromCLI.html","title":"interface - ImageFromCLI","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ImageFromCLI\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Core/interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            classification_classes\n                                        \n                                \n                                \n                                        \n                                            classification_multilabel\n                                        \n                                \n                                \n                                        \n                                            image_path\n                                        \n                                \n                                \n                                        \n                                            mask_data\n                                        \n                                \n                                \n                                        \n                                            segmentation_classes\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        classification_classes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        classification_classes:     string[] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[] | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        classification_multilabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        classification_multilabel:     string[] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[] | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image_path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image_path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mask_data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mask_data:     string[] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[] | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        segmentation_classes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        segmentation_classes:     string[] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[] | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SegLabel {\n  label: string;\n  color: string;\n  isVisible: boolean;\n  shades: string[] | null;\n}\n\nexport interface SegInstance {\n  label: SegLabel;\n  instance: number;\n  shade: string;\n}\n\nexport interface BboxLabel {\n  label: SegLabel;\n  bbox: Rect;\n  instance: number;\n}\n\nexport interface Thumbnail {\n  name: Promise;\n  thumbnailPath: Promise;\n}\n\nexport interface Point2D {\n  x: number;\n  y: number;\n}\n\nexport interface Rect {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\n\nexport interface Viewbox {\n  xmin: number;\n  ymin: number;\n  xmax: number;\n  ymax: number;\n}\n\nexport interface UndoRedoCanvasElement {\n  data: Blob | Blob[];\n  index: number;\n}\n\nexport interface MulticlassInterface {\n  name: string;\n  classes: string[];\n  default: string | null;\n}\n\nexport interface MultilabelInterface {\n  name: string;\n  classes: string[];\n  default: string[] | null;\n}\n\nexport interface ProjectConfig {\n  project_name: string;\n  input_dir: string;\n  output_dir: string;\n  is_segmentation: boolean;\n  is_classification: boolean;\n  is_instance_segmentation: boolean;\n  is_bbox_detection: boolean;\n  segmentation_classes: null | string[];\n  classification_classes: null | MulticlassInterface[];\n  classification_multilabel: null | MultilabelInterface;\n}\n\nexport interface ImageFromCLI {\n  image_path: string;\n  mask_data: string[] | null;\n  segmentation_classes: string[] | null;\n  classification_classes: string[] | null;\n  classification_multilabel: string[] | null;\n}\n\n\nexport interface ProjectFile{\n  root: string;\n  project_name: string;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ImageProcessingService.html":{"url":"injectables/ImageProcessingService.html","title":"injectable - ImageProcessingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ImageProcessingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Components/Core/drawable-canvas/service/image-processing.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                brightness\n                            \n                            \n                                contrast\n                            \n                            \n                                edgeStrength\n                            \n                            \n                                gamma\n                            \n                            \n                                isUpdated\n                            \n                            \n                                kernel_size\n                            \n                            \n                                preprocessImage\n                            \n                            \n                                    Private\n                                ref_canvas\n                            \n                            \n                                ref_image\n                            \n                            \n                                reinforceEdges\n                            \n                            \n                                stretchHist\n                            \n                            \n                                to_BW\n                            \n                            \n                                use_medianBlur\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkValidInput\n                            \n                            \n                                getCurrentCanvas\n                            \n                            \n                                preprocess\n                            \n                            \n                                refresh\n                            \n                            \n                                setImage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(editorService: EditorService, openCVService: OpenCVService)\n                    \n                \n                        \n                            \n                                Defined in src/app/Components/Core/drawable-canvas/service/image-processing.service.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        editorService\n                                                  \n                                                        \n                                                                        EditorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        openCVService\n                                                  \n                                                        \n                                                                        OpenCVService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkValidInput\n                        \n                    \n                \n            \n            \n                \ncheckValidInput()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/image-processing.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentCanvas\n                        \n                    \n                \n            \n            \n                \ngetCurrentCanvas()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/image-processing.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     HTMLCanvasElement\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        preprocess\n                        \n                    \n                \n            \n            \n                \npreprocess()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/image-processing.service.ts:76\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refresh\n                        \n                    \n                \n            \n            \n                \nrefresh()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/image-processing.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setImage\n                        \n                    \n                \n            \n            \n                \nsetImage(img: HTMLImageElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/image-processing.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                img\n                                            \n                                                        HTMLImageElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        brightness\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/image-processing.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        contrast\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/image-processing.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        edgeStrength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/image-processing.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gamma\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/image-processing.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUpdated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/image-processing.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        kernel_size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 3\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/image-processing.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        preprocessImage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLCanvasElement | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/image-processing.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ref_canvas\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLCanvasElement | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/image-processing.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ref_image\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLImageElement\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/image-processing.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reinforceEdges\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/image-processing.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stretchHist\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/image-processing.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        to_BW\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/image-processing.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        use_medianBlur\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/image-processing.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { EditorService } from '../../../../Services/UI/editor.service';\nimport { OpenCVService } from '../../../../Services/open-cv.service';\nimport { PostProcessService } from './post-process.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageProcessingService {\n\n  ref_image: HTMLImageElement;\n  private ref_canvas: HTMLCanvasElement | null = null; \n  // We don't use OffscreenCanvas because it's not supported by OpenCV.js\n  preprocessImage: HTMLCanvasElement | null = null;\n\n  to_BW: boolean = false;\n  use_medianBlur: boolean = false;\n  contrast: number = 1;\n  brightness: number = 0;\n\n  gamma: number = 1;\n\n  stretchHist: boolean = false;\n\n  kernel_size: number = 3;\n  isUpdated: boolean = false;\n  edgeStrength: number = 1;\n  reinforceEdges: boolean = false;\n\n  constructor(private editorService: EditorService, \n    private openCVService: OpenCVService) { }\n\n\n  refresh() {\n    this.preprocess()\n    this.editorService.requestCanvasRedraw();\n  }\n\n  getCurrentCanvas(): HTMLCanvasElement {\n\n    if (!this.editorService.useProcessing) {\n      return this.ref_canvas!;\n    }\n\n    if (!this.isUpdated || this.preprocessImage === null) {\n      this.preprocess();\n      this.editorService.requestCanvasRedraw();\n    }\n\n    return this.preprocessImage!;\n\n  }\n\n  setImage(img: HTMLImageElement) {\n    this.ref_image = img;\n    this.isUpdated = false;\n    this.ref_canvas = document.createElement('canvas');\n    this.ref_canvas.width = img.width;\n    this.ref_canvas.height = img.height;\n    let ctx = this.ref_canvas.getContext('2d', { alpha: false })!;\n    ctx.imageSmoothingEnabled = false;\n    ctx.drawImage(img, 0, 0);\n    \n\n  }\n\n  checkValidInput(){\n    // Cast to float\n    this.contrast = this.contrast\n    this.brightness = this.brightness\n    this.gamma = this.gamma\n    this.edgeStrength = this.edgeStrength\n    \n\n  }\n  preprocess() {\n    if (this.ref_canvas === null) {\n      return;\n    }\n    try {\n      this.checkValidInput();\n    }\n    catch (e) {\n      console.error(e);\n      return;\n    }\n\n    if (this.preprocessImage === null) {\n      this.preprocessImage = document.createElement('canvas');\n      this.preprocessImage.width = this.ref_image.width;\n      this.preprocessImage.height = this.ref_image.height;\n\n    }\n    this.preprocessImage.getContext('2d', { alpha: false, willReadFrequently: false })!.drawImage(this.ref_canvas, 0, 0);\n\n    if(this.stretchHist) {\n\n      this.openCVService.stretchHist(this.preprocessImage, this.preprocessImage);\n    }\n\n\n    if(this.contrast !== 1 || this.brightness !== 0) {\n      this.openCVService.brightness_contrast(this.preprocessImage, this.preprocessImage, this.contrast, this.brightness);\n    }\n\n    if(this.gamma !== 1) {\n      this.openCVService.gammaCorrection(this.preprocessImage, this.preprocessImage, this.gamma);\n    }\n\n   \n\n    // Convert to gryscale\n    if (this.to_BW) {\n      this.openCVService.to_grayscale(this.preprocessImage, this.preprocessImage);\n    }\n\n    if(this.use_medianBlur) {\n      this.openCVService.median_blur(this.preprocessImage, this.preprocessImage, this.kernel_size);\n    }\n\n    if(this.reinforceEdges && this.edgeStrength > 0) {\n      this.openCVService.reinforceEdges(this.preprocessImage, this.preprocessImage, this.edgeStrength);\n    }\n\n    \n    this.isUpdated = true;\n\n  }\n\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InstanceLabelComponent.html":{"url":"components/InstanceLabelComponent.html","title":"component - InstanceLabelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InstanceLabelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/Components/Interface/editor/labels/instance-label/instance-label.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-instance-label\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            NgFor\n                            NgClass\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./instance-label.component.html\n            \n\n\n\n            \n                styleUrl\n                ./instance-label.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                labelService\n                            \n                            \n                                shades\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeActive\n                            \n                            \n                                getShades\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(projectService: ProjectService, labelService: LabelsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/Components/Interface/editor/labels/instance-label/instance-label.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        labelService\n                                                  \n                                                        \n                                                                        LabelsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         SegLabel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/Components/Interface/editor/labels/instance-label/instance-label.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeActive\n                        \n                    \n                \n            \n            \n                \nchangeActive(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Interface/editor/labels/instance-label/instance-label.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getShades\n                        \n                    \n                \n            \n            \n                \ngetShades()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Interface/editor/labels/instance-label/instance-label.component.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     {}\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Interface/editor/labels/instance-label/instance-label.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        labelService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LabelsService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Interface/editor/labels/instance-label/instance-label.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shades\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Interface/editor/labels/instance-label/instance-label.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { SegLabel } from '../../../../../Core/interface';\nimport { ProjectService } from '../../../../../Services/Project/project.service';\nimport { generate_shades } from '../../../../../Core/misc/colors';\nimport { NgFor, NgClass } from '@angular/common';\nimport { LabelsService } from '../../../../../Services/Project/labels.service';\n\n\n@Component({\n  selector: 'app-instance-label',\n  standalone: true,\n  imports: [NgFor, NgClass],\n  templateUrl: './instance-label.component.html',\n  styleUrl: './instance-label.component.scss'\n})\nexport class InstanceLabelComponent {\n\n  @Input() label: SegLabel;\n  shades: string[] = [];\n\n  constructor(private projectService:ProjectService, public labelService: LabelsService) { \n\n  }\n\n\n  ngOnInit(): void {\n    this.shades = this.getShades();\n  }\n\n  getShades(){\n    if(this.shades.length !== this.projectService.maxInstances){\n      this.shades = generate_shades(this.label.color, this.projectService.maxInstances);\n    }\n    this.label.shades = this.shades\n    return this.shades;\n    \n\n\n\n  }\n  changeActive(index: number){\n    this.labelService.activeSegInstance = {label: this.label, instance: index, shade: this.getShades()[index]};\n    \n  }\n  \n}\n\n    \n\n    \n        \n    \n    \n \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '         '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlockableDiv', 'selector': 'blockable-div'},{'name': 'BlockableP', 'selector': 'blockable-p'},{'name': 'ClassificationConfigurationComponent', 'selector': 'app-classification-configuration'},{'name': 'DrawableCanvasComponent', 'selector': 'app-drawable-canvas'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'GalleryComponent', 'selector': 'app-gallery'},{'name': 'GalleryElementComponent', 'selector': 'app-gallery-element'},{'name': 'InstanceLabelComponent', 'selector': 'app-instance-label'},{'name': 'InteractiveBboxComponent', 'selector': 'app-interactive-bbox'},{'name': 'LabelledSwitchComponent', 'selector': 'app-labelled-switch'},{'name': 'LabelsComponent', 'selector': 'app-labels'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'ProjectConfigurationComponent', 'selector': 'app-project-configuration'},{'name': 'SVGElementsComponent', 'selector': 'app-svgelements'},{'name': 'TestingComponent', 'selector': 'app-testing'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'ToolSettingComponent', 'selector': 'app-tool-setting'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InstanceLabelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InteractiveBboxComponent.html":{"url":"components/InteractiveBboxComponent.html","title":"component - InteractiveBboxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InteractiveBboxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/Components/Core/drawable-canvas/component/interactive-bbox/interactive-bbox.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-interactive-bbox\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./interactive-bbox.component.html\n            \n\n\n\n            \n                styleUrl\n                ./interactive-bbox.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-interactive-bbox',\n  standalone: true,\n  imports: [],\n  templateUrl: './interactive-bbox.component.html',\n  styleUrl: './interactive-bbox.component.scss'\n})\nexport class InteractiveBboxComponent {\n\n}\n\n    \n\n    \n        interactive-bbox works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'interactive-bbox works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlockableDiv', 'selector': 'blockable-div'},{'name': 'BlockableP', 'selector': 'blockable-p'},{'name': 'ClassificationConfigurationComponent', 'selector': 'app-classification-configuration'},{'name': 'DrawableCanvasComponent', 'selector': 'app-drawable-canvas'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'GalleryComponent', 'selector': 'app-gallery'},{'name': 'GalleryElementComponent', 'selector': 'app-gallery-element'},{'name': 'InstanceLabelComponent', 'selector': 'app-instance-label'},{'name': 'InteractiveBboxComponent', 'selector': 'app-interactive-bbox'},{'name': 'LabelledSwitchComponent', 'selector': 'app-labelled-switch'},{'name': 'LabelsComponent', 'selector': 'app-labels'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'ProjectConfigurationComponent', 'selector': 'app-project-configuration'},{'name': 'SVGElementsComponent', 'selector': 'app-svgelements'},{'name': 'TestingComponent', 'selector': 'app-testing'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'ToolSettingComponent', 'selector': 'app-tool-setting'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InteractiveBboxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LabelFormat.html":{"url":"interfaces/LabelFormat.html","title":"interface - LabelFormat","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LabelFormat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Core/io/formats.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            colors\n                                        \n                                \n                                \n                                        \n                                            labels\n                                        \n                                \n                                \n                                        \n                                            masks\n                                        \n                                \n                                \n                                        \n                                            masksName\n                                        \n                                \n                                \n                                        \n                                            multiclass\n                                        \n                                \n                                \n                                        \n                                            multilabel\n                                        \n                                \n                                \n                                        \n                                            shades\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        colors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        colors:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        labels\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        labels:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        masks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        masks:     (Blob | string)[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     (Blob | string)[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        masksName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        masksName:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        multiclass\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        multiclass:     string[] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[] | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        multilabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        multilabel:     string[] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[] | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shades\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        shades:     string[][] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[][] | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { invoke } from \"@tauri-apps/api/core\";\nimport { XMLBuilder } from \"fast-xml-parser\";\n\nexport interface LabelFormat {\n    masksName: string[];\n    masks: (Blob | string)[]; // Saved as Blob, loaded as string\n    labels: string[];\n    colors: string[];\n    shades: string[][] | null;\n    multiclass: string[] | null;\n    multilabel: string[] | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LabelledSwitchComponent.html":{"url":"components/LabelledSwitchComponent.html","title":"component - LabelledSwitchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LabelledSwitchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/Components/Core/labelled-switch/labelled-switch.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                BlockableUI\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-labelled-switch\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            InputSwitchModule\n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./labelled-switch.component.html\n            \n\n\n\n            \n                styleUrl\n                ./labelled-switch.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getBlockableElement\n                            \n                            \n                                updateCheck\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                checked\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                checkedChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/Components/Core/labelled-switch/labelled-switch.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        checked\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/Components/Core/labelled-switch/labelled-switch.component.ts:16\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        checkedChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/Components/Core/labelled-switch/labelled-switch.component.ts:17\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getBlockableElement\n                        \n                    \n                \n            \n            \n                \ngetBlockableElement()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/labelled-switch/labelled-switch.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     HTMLElement\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateCheck\n                        \n                    \n                \n            \n            \n                \nupdateCheck()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/labelled-switch/labelled-switch.component.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, Input, Output, ViewChild } from '@angular/core';\nimport { InputSwitchModule } from 'primeng/inputswitch';\nimport { FormsModule } from '@angular/forms';\nimport { EventEmitter } from '@angular/core';\nimport { BlockableUI } from 'primeng/api';\n\n@Component({\n  selector: 'app-labelled-switch',\n  standalone: true,\n  imports: [InputSwitchModule, FormsModule],\n  templateUrl: './labelled-switch.component.html',\n  styleUrl: './labelled-switch.component.scss'\n})\nexport class LabelledSwitchComponent implements BlockableUI {\n\n  @Input() checked: boolean;\n  @Output() checkedChange = new EventEmitter();\n\n  updateCheck(){\n    this.checkedChange.emit(this.checked);\n  }\n  constructor(private el: ElementRef) {\n  }\n\n  getBlockableElement(): HTMLElement {\n    return this.el.nativeElement.children[0];\n  }\n}\n\n    \n\n    \n        \n\n\n    \n    \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlockableDiv', 'selector': 'blockable-div'},{'name': 'BlockableP', 'selector': 'blockable-p'},{'name': 'ClassificationConfigurationComponent', 'selector': 'app-classification-configuration'},{'name': 'DrawableCanvasComponent', 'selector': 'app-drawable-canvas'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'GalleryComponent', 'selector': 'app-gallery'},{'name': 'GalleryElementComponent', 'selector': 'app-gallery-element'},{'name': 'InstanceLabelComponent', 'selector': 'app-instance-label'},{'name': 'InteractiveBboxComponent', 'selector': 'app-interactive-bbox'},{'name': 'LabelledSwitchComponent', 'selector': 'app-labelled-switch'},{'name': 'LabelsComponent', 'selector': 'app-labels'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'ProjectConfigurationComponent', 'selector': 'app-project-configuration'},{'name': 'SVGElementsComponent', 'selector': 'app-svgelements'},{'name': 'TestingComponent', 'selector': 'app-testing'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'ToolSettingComponent', 'selector': 'app-tool-setting'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LabelledSwitchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LabelsComponent.html":{"url":"components/LabelsComponent.html","title":"component - LabelsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LabelsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/Components/Interface/editor/labels/labels.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-labels\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            TreeModule\n                                ColorPickerModule\n                            CommonModule\n                            FormsModule\n                            Button\n                            SelectButtonModule\n                            SliderModule\n                            PanelModule\n                            FieldsetModule\n                            DividerModule\n                                InstanceLabelComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./labels.component.html\n            \n\n\n\n            \n                styleUrl\n                ./labels.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                drawService\n                            \n                            \n                                    Public\n                                labelsService\n                            \n                            \n                                    Public\n                                projectService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeActiveLabel\n                            \n                            \n                                changeAllVisibility\n                            \n                            \n                                changeColor\n                            \n                            \n                                changeVisibility\n                            \n                            \n                                clearCanvas\n                            \n                            \n                                hasChild\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateOpacity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(labelsService: LabelsService, drawService: EditorService, projectService: ProjectService)\n                    \n                \n                        \n                            \n                                Defined in src/app/Components/Interface/editor/labels/labels.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        labelsService\n                                                  \n                                                        \n                                                                        LabelsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        drawService\n                                                  \n                                                        \n                                                                        EditorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeActiveLabel\n                        \n                    \n                \n            \n            \n                \nchangeActiveLabel(event: TreeNode[] | TreeNode | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Interface/editor/labels/labels.component.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        TreeNode[] | TreeNode | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeAllVisibility\n                        \n                    \n                \n            \n            \n                \nchangeAllVisibility()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Interface/editor/labels/labels.component.ts:90\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeColor\n                        \n                    \n                \n            \n            \n                \nchangeColor()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Interface/editor/labels/labels.component.ts:86\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeVisibility\n                        \n                    \n                \n            \n            \n                \nchangeVisibility(node: TreeNode)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Interface/editor/labels/labels.component.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                node\n                                            \n                                                        TreeNode\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearCanvas\n                        \n                    \n                \n            \n            \n                \nclearCanvas(node: TreeNode)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Interface/editor/labels/labels.component.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                node\n                                            \n                                                        TreeNode\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasChild\n                        \n                    \n                \n            \n            \n                \nhasChild(node: TreeNode)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Interface/editor/labels/labels.component.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                node\n                                            \n                                                        TreeNode\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Interface/editor/labels/labels.component.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateOpacity\n                        \n                    \n                \n            \n            \n                \nupdateOpacity()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Interface/editor/labels/labels.component.ts:95\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        drawService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EditorService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Interface/editor/labels/labels.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        labelsService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LabelsService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Interface/editor/labels/labels.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProjectService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Interface/editor/labels/labels.component.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { LabelsService } from '../../../../Services/Project/labels.service';\nimport { TreeModule } from 'primeng/tree';\nimport { ColorPickerModule } from 'primeng/colorpicker';\nimport { CommonModule } from '@angular/common';\nimport { SliderModule } from 'primeng/slider';\nimport { FormsModule } from '@angular/forms';\nimport { TreeNode } from 'primeng/api';\nimport { Button } from 'primeng/button';\nimport { SegLabel } from '../../../../Core/interface';\nimport { EditorService } from '../../../../Services/UI/editor.service';\nimport { PanelModule } from 'primeng/panel';\nimport { FieldsetModule } from 'primeng/fieldset';\nimport { InstanceLabelComponent } from './instance-label/instance-label.component';\nimport { ProjectService } from '../../../../Services/Project/project.service';\nimport { SelectButtonModule } from 'primeng/selectbutton';\nimport { DividerModule } from 'primeng/divider';\n\n@Component({\n  selector: 'app-labels',\n  standalone: true,\n  imports: [\n    TreeModule,\n    ColorPickerModule,\n    CommonModule,\n    FormsModule,\n    Button,\n    SelectButtonModule,\n    SliderModule,\n    PanelModule,\n    FieldsetModule,\n    DividerModule,\n    InstanceLabelComponent,\n  ],\n  templateUrl: './labels.component.html',\n  styleUrl: './labels.component.scss',\n})\nexport class LabelsComponent implements OnInit {\n  constructor(\n    public labelsService: LabelsService,\n    public drawService: EditorService,\n    public projectService: ProjectService\n  ) {}\n\n  ngOnInit(): void {\n    this.labelsService.activeLabel =\n      this.labelsService.listSegmentationLabels[0];\n  }\n\n  hasChild(node: TreeNode): boolean {\n    if (node.children) {\n      return node.children.length > 0;\n    } else {\n      return false;\n    }\n  }\n  changeActiveLabel(event: TreeNode[] | TreeNode | null) {\n    if (event instanceof Array) {\n      return;\n    }\n    if (!event) {\n      return;\n    }\n    this.labelsService.activeLabel = event.data as SegLabel;\n    this.labelsService.activeSegInstance = {\n      label: this.labelsService.activeLabel,\n      instance: -1,\n      shade: this.labelsService.activeLabel.color,\n    };\n    // this.labelsService.activeLabel = event.node.data as SegLabel;\n  }\n\n  clearCanvas(node: TreeNode) {\n    let index = this.labelsService.listSegmentationLabels.indexOf(\n      node.data as SegLabel\n    );\n    this.drawService.requestCanvasClear(index);\n  }\n\n  changeVisibility(node: TreeNode) {\n    let label = node.data as SegLabel;\n    label.isVisible = !label.isVisible;\n    this.drawService.requestCanvasRedraw();\n  }\n\n  changeColor() {\n    this.drawService.requestCanvasRedraw();\n  }\n\n  changeAllVisibility() {\n    this.labelsService.switchVisibilityAllSegLabels();\n    this.drawService.requestCanvasRedraw();\n  }\n\n  updateOpacity() {\n    this.drawService.requestCanvasRedraw();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          {{ task.taskName }}\n        \n        \n      \n\n      \n        \n          Multiple label\n        \n        \n      \n    \n\n    \n      \n        \n        \n          \n        \n        \n          \n          \n          Opacity\n        \n      \n      \n        Labels\n      \n      \n        \n            \n              \n              \n                \n              \n\n              \n              \n                {{ node.label }}\n              \n              \n            \n            \n              {{ node.label }}\n            \n          \n            \n          \n        \n      \n    \n  \n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ task.taskName }}                                              Multiple label                                                                                                            Opacity                            Labels                                                                                                                                      {{ node.label }}                                                                  {{ node.label }}                                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlockableDiv', 'selector': 'blockable-div'},{'name': 'BlockableP', 'selector': 'blockable-p'},{'name': 'ClassificationConfigurationComponent', 'selector': 'app-classification-configuration'},{'name': 'DrawableCanvasComponent', 'selector': 'app-drawable-canvas'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'GalleryComponent', 'selector': 'app-gallery'},{'name': 'GalleryElementComponent', 'selector': 'app-gallery-element'},{'name': 'InstanceLabelComponent', 'selector': 'app-instance-label'},{'name': 'InteractiveBboxComponent', 'selector': 'app-interactive-bbox'},{'name': 'LabelledSwitchComponent', 'selector': 'app-labelled-switch'},{'name': 'LabelsComponent', 'selector': 'app-labels'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'ProjectConfigurationComponent', 'selector': 'app-project-configuration'},{'name': 'SVGElementsComponent', 'selector': 'app-svgelements'},{'name': 'TestingComponent', 'selector': 'app-testing'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'ToolSettingComponent', 'selector': 'app-tool-setting'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LabelsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LabelsService.html":{"url":"injectables/LabelsService.html","title":"injectable - LabelsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LabelsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Services/Project/labels.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _treeNode\n                            \n                            \n                                activeLabel\n                            \n                            \n                                activeSegInstance\n                            \n                            \n                                listClassificationTasks\n                            \n                            \n                                listSegmentationLabels\n                            \n                            \n                                multiLabelTask\n                            \n                            \n                                showAllLabels\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addClassificationTask\n                            \n                            \n                                addMultilabelTask\n                            \n                            \n                                addNewClassificationTask\n                            \n                            \n                                addSegLabel\n                            \n                            \n                                getActiveIndex\n                            \n                            \n                                getTreeNode\n                            \n                            \n                                incrementActiveInstance\n                            \n                            \n                                rebuildTreeNodes\n                            \n                            \n                                removeClassificationTask\n                            \n                            \n                                removeSegLabel\n                            \n                            \n                                setActiveIndex\n                            \n                            \n                                switchVisibilityAllSegLabels\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/Services/Project/labels.service.ts:20\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addClassificationTask\n                        \n                    \n                \n            \n            \n                \naddClassificationTask(task: MulticlassTask)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/Project/labels.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                task\n                                            \n                                                            MulticlassTask\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addMultilabelTask\n                        \n                    \n                \n            \n            \n                \naddMultilabelTask(task: MultilabelTask)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/Project/labels.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                task\n                                            \n                                                            MultilabelTask\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addNewClassificationTask\n                        \n                    \n                \n            \n            \n                \naddNewClassificationTask()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/Project/labels.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addSegLabel\n                        \n                    \n                \n            \n            \n                \naddSegLabel(label: SegLabel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/Project/labels.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                label\n                                            \n                                                            SegLabel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getActiveIndex\n                        \n                    \n                \n            \n            \n                \ngetActiveIndex()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/Project/labels.service.ts:95\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTreeNode\n                        \n                    \n                \n            \n            \n                \ngetTreeNode()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/Project/labels.service.ts:104\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     TreeNode[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        incrementActiveInstance\n                        \n                    \n                \n            \n            \n                \nincrementActiveInstance()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/Project/labels.service.ts:123\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rebuildTreeNodes\n                        \n                    \n                \n            \n            \n                \nrebuildTreeNodes()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/Project/labels.service.ts:112\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeClassificationTask\n                        \n                    \n                \n            \n            \n                \nremoveClassificationTask(task: MulticlassTask)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/Project/labels.service.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                task\n                                            \n                                                            MulticlassTask\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeSegLabel\n                        \n                    \n                \n            \n            \n                \nremoveSegLabel(SegLabel: SegLabel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/Project/labels.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                SegLabel\n                                            \n                                                            SegLabel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setActiveIndex\n                        \n                    \n                \n            \n            \n                \nsetActiveIndex(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/Project/labels.service.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        switchVisibilityAllSegLabels\n                        \n                    \n                \n            \n            \n                \nswitchVisibilityAllSegLabels()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/Project/labels.service.ts:116\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _treeNode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TreeNode[] | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/Project/labels.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        activeLabel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SegLabel | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/Project/labels.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        activeSegInstance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SegInstance | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/Project/labels.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listClassificationTasks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MulticlassTask[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/Project/labels.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listSegmentationLabels\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SegLabel[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/Project/labels.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        multiLabelTask\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MultilabelTask | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/Project/labels.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showAllLabels\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/Project/labels.service.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { SegInstance, SegLabel } from '../../Core/interface';\nimport { constructLabelTreeNode } from './labelTreeNode';\nimport { TreeNode } from 'primeng/api';\nimport { MulticlassTask, MultilabelTask } from '../../Core/task';\n@Injectable({\n  providedIn: 'root',\n})\nexport class LabelsService {\n  listSegmentationLabels: SegLabel[] = [];\n\n  listClassificationTasks: MulticlassTask[] = [];\n\n  multiLabelTask: MultilabelTask | null = null;\n\n  private _treeNode: TreeNode[] | null = null;\n  activeLabel: SegLabel | null = null;\n\n  activeSegInstance: SegInstance | null = null;\n  showAllLabels: boolean = true;\n\n  constructor() {}\n\n  addClassificationTask(task: MulticlassTask) {\n    // Check if task already exists\n\n    if (\n      this.listClassificationTasks.find((t) => t.taskName === task.taskName)\n    ) {\n      return;\n    }\n\n    this.listClassificationTasks.push(task);\n  }\n\n  addMultilabelTask(task: MultilabelTask) {\n    // Check if task already exists\n\n    if (this.multiLabelTask) {\n      // Merge the labels\n      task.taskLabels.forEach((label) => {\n        if (!this.multiLabelTask!.taskLabels.find((l) => l === label)) {\n          this.multiLabelTask!.taskLabels.push(label);\n        }\n      });\n\n      return;\n    }\n\n    this.multiLabelTask = task;\n  }\n\n  addNewClassificationTask() {\n    const classTask = new MulticlassTask(\n      'Task ' + (this.listClassificationTasks.length + 1),\n      []\n    );\n    this.listClassificationTasks.push(classTask);\n  }\n\n  removeClassificationTask(task: MulticlassTask) {\n    this.listClassificationTasks = this.listClassificationTasks.filter(\n      (t) => t.taskName !== task.taskName\n    );\n  }\n\n  addSegLabel(label: SegLabel) {\n    // Only add label if it does not already exist in the list\n\n    if (this.listSegmentationLabels.find((l) => l.label === label.label)) {\n      return;\n    }\n\n    this.listSegmentationLabels.push(label);\n    if (!this.activeLabel) {\n      this.activeLabel = label;\n    }\n  }\n  setActiveIndex(index: number) {\n    if (index >= 0 && index  label.label !== SegLabel.label\n    );\n    this._treeNode = constructLabelTreeNode(this.listSegmentationLabels);\n  }\n\n  getActiveIndex(): number {\n    if (this.activeLabel) {\n      return this.listSegmentationLabels.findIndex(\n        (label) => label.label === this.activeLabel!.label\n      );\n    }\n    return -1;\n  }\n\n  getTreeNode(): TreeNode[] {\n    if (!this._treeNode) {\n      this._treeNode = constructLabelTreeNode(this.listSegmentationLabels);\n    }\n\n    return this._treeNode;\n  }\n\n  rebuildTreeNodes() {\n    this._treeNode = constructLabelTreeNode(this.listSegmentationLabels);\n  }\n\n  switchVisibilityAllSegLabels() {\n    this.showAllLabels = !this.showAllLabels;\n    this.listSegmentationLabels.forEach((label) => {\n      label.isVisible = this.showAllLabels;\n    });\n  }\n\n  incrementActiveInstance() {\n    if (!this.activeLabel) {\n      return;\n    }\n    if (!this.activeSegInstance) {\n      this.activeSegInstance = {\n        label: this.activeLabel,\n        instance: 1,\n        shade: '',\n      };\n    } else {\n      let current_instance = this.activeSegInstance.instance;\n      if (current_instance >= this.activeLabel.shades!.length - 1) {\n        current_instance = -1;\n      }\n      current_instance++;\n      let new_shade = this.activeLabel.shades![current_instance];\n\n      this.activeSegInstance = {\n        label: this.activeLabel,\n        instance: current_instance,\n        shade: new_shade,\n      };\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoadingComponent.html":{"url":"components/LoadingComponent.html","title":"component - LoadingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoadingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/Components/Interface/loading/loading.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-loading\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ProgressBarModule\n                            NgIf\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./loading.component.html\n            \n\n\n\n            \n                styleUrl\n                ./loading.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                viewService\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(viewService: ViewService)\n                    \n                \n                        \n                            \n                                Defined in src/app/Components/Interface/loading/loading.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        viewService\n                                                  \n                                                        \n                                                                        ViewService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        viewService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ViewService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Interface/loading/loading.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ProgressBarModule } from 'primeng/progressbar';\nimport { ViewService } from '../../../Services/UI/view.service';\nimport { NgIf } from '@angular/common';\n\n@Component({\n  selector: 'app-loading',\n  standalone: true,\n  imports: [ProgressBarModule, NgIf],\n  templateUrl: './loading.component.html',\n  styleUrl: './loading.component.scss'\n})\nexport class LoadingComponent {\n\n  constructor(public viewService: ViewService) { }\n\n}\n\n    \n\n    \n        \n    \n        \n        \n            {{viewService.loadingStatus}}\n\n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                {{viewService.loadingStatus}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlockableDiv', 'selector': 'blockable-div'},{'name': 'BlockableP', 'selector': 'blockable-p'},{'name': 'ClassificationConfigurationComponent', 'selector': 'app-classification-configuration'},{'name': 'DrawableCanvasComponent', 'selector': 'app-drawable-canvas'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'GalleryComponent', 'selector': 'app-gallery'},{'name': 'GalleryElementComponent', 'selector': 'app-gallery-element'},{'name': 'InstanceLabelComponent', 'selector': 'app-instance-label'},{'name': 'InteractiveBboxComponent', 'selector': 'app-interactive-bbox'},{'name': 'LabelledSwitchComponent', 'selector': 'app-labelled-switch'},{'name': 'LabelsComponent', 'selector': 'app-labels'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'ProjectConfigurationComponent', 'selector': 'app-project-configuration'},{'name': 'SVGElementsComponent', 'selector': 'app-svgelements'},{'name': 'TestingComponent', 'selector': 'app-testing'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'ToolSettingComponent', 'selector': 'app-tool-setting'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoadingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MulticlassInterface.html":{"url":"interfaces/MulticlassInterface.html","title":"interface - MulticlassInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MulticlassInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Core/interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            classes\n                                        \n                                \n                                \n                                        \n                                            default\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        classes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        classes:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        default\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        default:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SegLabel {\n  label: string;\n  color: string;\n  isVisible: boolean;\n  shades: string[] | null;\n}\n\nexport interface SegInstance {\n  label: SegLabel;\n  instance: number;\n  shade: string;\n}\n\nexport interface BboxLabel {\n  label: SegLabel;\n  bbox: Rect;\n  instance: number;\n}\n\nexport interface Thumbnail {\n  name: Promise;\n  thumbnailPath: Promise;\n}\n\nexport interface Point2D {\n  x: number;\n  y: number;\n}\n\nexport interface Rect {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\n\nexport interface Viewbox {\n  xmin: number;\n  ymin: number;\n  xmax: number;\n  ymax: number;\n}\n\nexport interface UndoRedoCanvasElement {\n  data: Blob | Blob[];\n  index: number;\n}\n\nexport interface MulticlassInterface {\n  name: string;\n  classes: string[];\n  default: string | null;\n}\n\nexport interface MultilabelInterface {\n  name: string;\n  classes: string[];\n  default: string[] | null;\n}\n\nexport interface ProjectConfig {\n  project_name: string;\n  input_dir: string;\n  output_dir: string;\n  is_segmentation: boolean;\n  is_classification: boolean;\n  is_instance_segmentation: boolean;\n  is_bbox_detection: boolean;\n  segmentation_classes: null | string[];\n  classification_classes: null | MulticlassInterface[];\n  classification_multilabel: null | MultilabelInterface;\n}\n\nexport interface ImageFromCLI {\n  image_path: string;\n  mask_data: string[] | null;\n  segmentation_classes: string[] | null;\n  classification_classes: string[] | null;\n  classification_multilabel: string[] | null;\n}\n\n\nexport interface ProjectFile{\n  root: string;\n  project_name: string;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MulticlassTask.html":{"url":"classes/MulticlassTask.html","title":"class - MulticlassTask","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MulticlassTask\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Core/task.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                choice\n                            \n                            \n                                    Public\n                                classLabels\n                            \n                            \n                                    Public\n                                taskName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(taskName: string, classLabels: string[], choice: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/Core/task.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        classLabels\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        choice\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        choice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/Core/task.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        classLabels\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Core/task.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        taskName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Core/task.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class MulticlassTask{\n\n    constructor(public taskName: string, public classLabels: string[], public choice: string = ''){\n    }\n}\n\nexport class MultilabelTask{\n    constructor(public taskName: string, public taskLabels: string[], public choices: string[] = []){\n    }\n\n    addLabel(label: string){\n        this.taskLabels.push(label);\n    }\n\n    removeLabel(label: string){\n        this.taskLabels = this.taskLabels.filter((l) => l !== label);\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MultilabelInterface.html":{"url":"interfaces/MultilabelInterface.html","title":"interface - MultilabelInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MultilabelInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Core/interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            classes\n                                        \n                                \n                                \n                                        \n                                            default\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        classes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        classes:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        default\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        default:     string[] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[] | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SegLabel {\n  label: string;\n  color: string;\n  isVisible: boolean;\n  shades: string[] | null;\n}\n\nexport interface SegInstance {\n  label: SegLabel;\n  instance: number;\n  shade: string;\n}\n\nexport interface BboxLabel {\n  label: SegLabel;\n  bbox: Rect;\n  instance: number;\n}\n\nexport interface Thumbnail {\n  name: Promise;\n  thumbnailPath: Promise;\n}\n\nexport interface Point2D {\n  x: number;\n  y: number;\n}\n\nexport interface Rect {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\n\nexport interface Viewbox {\n  xmin: number;\n  ymin: number;\n  xmax: number;\n  ymax: number;\n}\n\nexport interface UndoRedoCanvasElement {\n  data: Blob | Blob[];\n  index: number;\n}\n\nexport interface MulticlassInterface {\n  name: string;\n  classes: string[];\n  default: string | null;\n}\n\nexport interface MultilabelInterface {\n  name: string;\n  classes: string[];\n  default: string[] | null;\n}\n\nexport interface ProjectConfig {\n  project_name: string;\n  input_dir: string;\n  output_dir: string;\n  is_segmentation: boolean;\n  is_classification: boolean;\n  is_instance_segmentation: boolean;\n  is_bbox_detection: boolean;\n  segmentation_classes: null | string[];\n  classification_classes: null | MulticlassInterface[];\n  classification_multilabel: null | MultilabelInterface;\n}\n\nexport interface ImageFromCLI {\n  image_path: string;\n  mask_data: string[] | null;\n  segmentation_classes: string[] | null;\n  classification_classes: string[] | null;\n  classification_multilabel: string[] | null;\n}\n\n\nexport interface ProjectFile{\n  root: string;\n  project_name: string;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MultilabelTask.html":{"url":"classes/MultilabelTask.html","title":"class - MultilabelTask","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MultilabelTask\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Core/task.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                choices\n                            \n                            \n                                    Public\n                                taskLabels\n                            \n                            \n                                    Public\n                                taskName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addLabel\n                            \n                            \n                                removeLabel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(taskName: string, taskLabels: string[], choices: string[])\n                    \n                \n                        \n                            \n                                Defined in src/app/Core/task.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskLabels\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        choices\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        choices\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/Core/task.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        taskLabels\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Core/task.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        taskName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Core/task.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addLabel\n                        \n                    \n                \n            \n            \n                \naddLabel(label: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Core/task.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                label\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeLabel\n                        \n                    \n                \n            \n            \n                \nremoveLabel(label: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Core/task.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                label\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class MulticlassTask{\n\n    constructor(public taskName: string, public classLabels: string[], public choice: string = ''){\n    }\n}\n\nexport class MultilabelTask{\n    constructor(public taskName: string, public taskLabels: string[], public choices: string[] = []){\n    }\n\n    addLabel(label: string){\n        this.taskLabels.push(label);\n    }\n\n    removeLabel(label: string){\n        this.taskLabels = this.taskLabels.filter((l) => l !== label);\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OpenCVService.html":{"url":"injectables/OpenCVService.html","title":"injectable - OpenCVService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OpenCVService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Services/open-cv.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cv_ready\n                            \n                            \n                                gradient\n                            \n                            \n                                M\n                            \n                            \n                                outputCanvas\n                            \n                            \n                                outputCtx\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                binarizeCanvas\n                            \n                            \n                                binarizeMultiColorCanvas\n                            \n                            \n                                brightness_contrast\n                            \n                            \n                                edgeDetection\n                            \n                            \n                                edgeDetection_v2\n                            \n                            \n                                edgeDetectionCanvas\n                            \n                            \n                                gammaCorrection\n                            \n                            \n                                median_blur\n                            \n                            \n                                reinforceEdges\n                            \n                            \n                                stretchHist\n                            \n                            \n                                to_grayscale\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ngxOpenCv: NgxOpenCVService)\n                    \n                \n                        \n                            \n                                Defined in src/app/Services/open-cv.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngxOpenCv\n                                                  \n                                                        \n                                                                        NgxOpenCVService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        binarizeCanvas\n                        \n                    \n                \n            \n            \n                \nbinarizeCanvas(ctx: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D, color: string, bbox: Rect | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/open-cv.service.ts:302\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                        CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                color\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                bbox\n                                            \n                                                        Rect | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        binarizeMultiColorCanvas\n                        \n                    \n                \n            \n            \n                \nbinarizeMultiColorCanvas(ctx: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D, labelColors: string[], bbox: Rect | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/open-cv.service.ts:342\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                        CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                labelColors\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                bbox\n                                            \n                                                        Rect | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        brightness_contrast\n                        \n                    \n                \n            \n            \n                \nbrightness_contrast(input: HTMLCanvasElement, output: HTMLCanvasElement, contrast: number, brightness: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/open-cv.service.ts:131\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        HTMLCanvasElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                output\n                                            \n                                                        HTMLCanvasElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                contrast\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                brightness\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     HTMLCanvasElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        edgeDetection\n                        \n                    \n                \n            \n            \n                \nedgeDetection(ctx: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/open-cv.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                        CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     OffscreenCanvas | HTMLCanvasElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        edgeDetection_v2\n                        \n                    \n                \n            \n            \n                \nedgeDetection_v2(ctx: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/open-cv.service.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                        CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     OffscreenCanvas | HTMLCanvasElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        edgeDetectionCanvas\n                        \n                    \n                \n            \n            \n                \nedgeDetectionCanvas(canvas: HTMLCanvasElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/open-cv.service.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                canvas\n                                            \n                                                        HTMLCanvasElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gammaCorrection\n                        \n                    \n                \n            \n            \n                \ngammaCorrection(input: HTMLCanvasElement, output: HTMLCanvasElement, gamma: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/open-cv.service.ts:267\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        HTMLCanvasElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                output\n                                            \n                                                        HTMLCanvasElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                gamma\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     HTMLCanvasElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        median_blur\n                        \n                    \n                \n            \n            \n                \nmedian_blur(input: HTMLCanvasElement, output: HTMLCanvasElement, kernel_size: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/open-cv.service.ts:139\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        HTMLCanvasElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                output\n                                            \n                                                        HTMLCanvasElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                kernel_size\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     HTMLCanvasElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reinforceEdges\n                        \n                    \n                \n            \n            \n                \nreinforceEdges(input: HTMLCanvasElement, output: HTMLCanvasElement, strengh: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/open-cv.service.ts:241\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        HTMLCanvasElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                output\n                                            \n                                                        HTMLCanvasElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                strengh\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     HTMLCanvasElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stretchHist\n                        \n                    \n                \n            \n            \n                \nstretchHist(input: HTMLCanvasElement, output: HTMLCanvasElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/open-cv.service.ts:147\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        HTMLCanvasElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                output\n                                            \n                                                        HTMLCanvasElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     HTMLCanvasElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        to_grayscale\n                        \n                    \n                \n            \n            \n                \nto_grayscale(input: HTMLCanvasElement, output: HTMLCanvasElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/open-cv.service.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        HTMLCanvasElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                output\n                                            \n                                                        HTMLCanvasElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     HTMLCanvasElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cv_ready\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/open-cv.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gradient\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/open-cv.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        M\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/open-cv.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        outputCanvas\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new OffscreenCanvas(0, 0)\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/open-cv.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        outputCtx\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.outputCanvas.getContext('2d', { alpha: true})\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/open-cv.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, output } from '@angular/core';\nimport { NgxOpenCVService, OpenCVState } from 'ngx-opencv';\nimport { from_hex_to_rgb } from '../Core/misc/colors';\nimport { Rect } from '../Core/interface';\ndeclare var cv: any;\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OpenCVService {\n  gradient: any;\n  outputCanvas = new OffscreenCanvas(0, 0);\n  outputCtx = this.outputCanvas.getContext('2d', { alpha: true});\n  M: any;\n  cv_ready: boolean = false;\n  constructor(private ngxOpenCv: NgxOpenCVService) {\n    this.ngxOpenCv.cvState.subscribe((cvState: OpenCVState) => {\n      // do something with the state string\n      if (cvState.error) {\n        console.error('Error loading OpenCV:', cvState.error);\n      }\n      else if (cvState.loading) {\n        this.cv_ready = false;\n      } else if (cvState.ready) {\n        this.cv_ready = true;\n\n        this.gradient = new cv.Mat();\n\n        // Apply morphological gradient\n    \n        this.M = cv.Mat.ones(3, 3, cv.CV_8U);\n    \n      }\n    });\n  }\n\n  edgeDetection(ctx: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D): OffscreenCanvas | HTMLCanvasElement {\n\n    // Given a canvas with multiple colors, detect the edges of the different colors\n\n    this.outputCanvas.width = ctx.canvas.width;\n    this.outputCanvas.height = ctx.canvas.height;\n\n    // Get the canvas context and image data\n\n    const imgData = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height);\n\n    const src = cv.matFromImageData(imgData);\n\n    // Convert the image to grayscale\n\n    cv.morphologyEx(src, this.gradient, cv.MORPH_GRADIENT, this.M);\n\n\n    // Convert the output to an image data format\n    const processedImageData = new ImageData(new Uint8ClampedArray(this.gradient.data), ctx.canvas.width, ctx.canvas.height);\n    this.outputCtx!.putImageData(processedImageData, 0, 0);\n    src.delete();\n\n    return this.outputCanvas;\n  }\n\n  edgeDetectionCanvas(canvas: HTMLCanvasElement){\n    let src = cv.imread(canvas);\n\n    cv.morphologyEx(src, this.gradient, cv.MORPH_GRADIENT, this.M);\n\n    cv.imshow(canvas, this.gradient);\n    src.delete();\n    \n\n  }\n\n  edgeDetection_v2(ctx: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D): OffscreenCanvas | HTMLCanvasElement {\n    const width = ctx.canvas.width;\n    const height = ctx.canvas.height;\n    const imageData = ctx.getImageData(0, 0, width, height);\n    const data = imageData.data;\n    \n    // Create output canvas\n    const outCanvas = new OffscreenCanvas(width, height);\n    const outCtx = outCanvas.getContext('2d');\n    if (!outCtx) return outCanvas;\n    \n    // Create output image data\n    const outImageData = outCtx.createImageData(width, height);\n    const outData = outImageData.data;\n\n    // Scan only pixels that could be edges (have different neighbors)\n    for (let y = 1; y  0)\n        if (data[idx + 3] > 0) {\n          // Check 4-connected neighbors\n          const hasEmptyNeighbor = \n            data[((y-1) * width + x) * 4 + 3] === 0 ||  // top\n            data[((y+1) * width + x) * 4 + 3] === 0 ||  // bottom\n            data[(y * width + x-1) * 4 + 3] === 0 ||    // left\n            data[(y * width + x+1) * 4 + 3] === 0;      // right\n\n          // If pixel has at least one empty neighbor, it's an edge\n          if (hasEmptyNeighbor) {\n            outData[idx] = data[idx];       // R\n            outData[idx + 1] = data[idx+1]; // G\n            outData[idx + 2] = data[idx+2]; // B\n            outData[idx + 3] = data[idx+3]; // A\n          }\n        }\n      }\n    }\n\n    outCtx.putImageData(outImageData, 0, 0);\n    return outCanvas;\n\n}\n\n  to_grayscale(input: HTMLCanvasElement, output: HTMLCanvasElement): HTMLCanvasElement {\n    let src = cv.imread(input);\n\n    cv.cvtColor(src, src, cv.COLOR_RGBA2GRAY, 0);\n    cv.cvtColor(src, src, cv.COLOR_GRAY2RGBA, 0);\n    cv.imshow(output, src);\n    src.delete();\n    return output;\n  }\n\n  brightness_contrast(input: HTMLCanvasElement, output: HTMLCanvasElement, contrast: number, brightness: number): HTMLCanvasElement {\n    let src = cv.imread(input);\n    cv.convertScaleAbs(src, src, contrast, brightness);\n    cv.imshow(output, src);\n    src.delete();\n    return output;\n  }\n\n  median_blur(input: HTMLCanvasElement, output: HTMLCanvasElement, kernel_size: number): HTMLCanvasElement {\n    let src = cv.imread(input);\n    cv.medianBlur(src, src, kernel_size);\n    cv.imshow(output, src);\n    src.delete();\n    return output;\n  }\n\n  stretchHist(input: HTMLCanvasElement, output: HTMLCanvasElement): HTMLCanvasElement {\n\n    let image = cv.imread(input);\n    cv.cvtColor(image, image, cv.COLOR_RGBA2RGB, 0);\n\n    let srcVec = new cv.MatVector();\n    srcVec.push_back(image);\n\n    let accumulate = false;\n    let histSize = [256];\n    let ranges = [0, 255];\n    let rhist = new cv.Mat();\n    let ghist = new cv.Mat();\n    let bhist = new cv.Mat();\n    let mask = new cv.Mat();\n    cv.calcHist(srcVec, [0], mask, rhist, histSize, ranges, accumulate);\n    cv.calcHist(srcVec, [1], mask, ghist, histSize, ranges, accumulate);\n    cv.calcHist(srcVec, [2], mask, bhist, histSize, ranges, accumulate);\n    let total = new cv.Mat(rhist.rows, rhist.cols, cv.CV_32F, new cv.Scalar(image.rows * image.cols));\n    let rnorm_hist = new cv.Mat(rhist.rows, rhist.cols, cv.CV_32F);\n    let bnorm_hist = new cv.Mat(rhist.rows, rhist.cols, cv.CV_32F);\n    let gnorm_hist = new cv.Mat(rhist.rows, rhist.cols, cv.CV_32F);\n\n    cv.divide(rhist, total, rnorm_hist);\n    cv.divide(bhist, total, bnorm_hist);\n    cv.divide(ghist, total, gnorm_hist);\n\n    rhist.delete();\n    bhist.delete();\n    ghist.delete();\n    total.delete();\n    srcVec.delete();\n\n    let r_cdf = new Array(256).fill(0)\n    let g_cdf = new Array(256).fill(0)\n    let b_cdf = new Array(256).fill(0)\n    for (let i = 0; i  percent && rmin == -1) {\n        rmin = i;\n      }\n      if (g_cdf[i] > percent && gmin == -1) {\n        gmin = i;\n      }\n      if (b_cdf[i] > percent && bmin == -1) {\n        bmin = i;\n      }\n      if (r_cdf[i] > 1 - percent && rmax == -1) {\n        rmax = i;\n      }\n      if (g_cdf[i] > 1 - percent && gmax == -1) {\n        gmax = i;\n      }\n      if (b_cdf[i] > 1 - percent && bmax == -1) {\n        bmax = i;\n      }\n    }\n\n    let vec = new cv.MatVector();\n    image.convertTo(image, cv.CV_32F, 1, 0);\n    cv.split(image, vec);\n\n    vec.get(0).convertTo(vec.get(0), cv.CV_32F, 1 / (rmax - rmin), -rmin / (rmax - rmin));\n    vec.get(1).convertTo(vec.get(1), cv.CV_32F, 1 / (gmax - gmin), -gmin / (gmax - gmin));\n    vec.get(2).convertTo(vec.get(2), cv.CV_32F, 1 / (bmax - bmin), -bmin / (bmax - bmin));\n\n    cv.merge(vec, image);\n    vec.delete();\n    rnorm_hist.delete();\n    gnorm_hist.delete();\n    bnorm_hist.delete();\n    cv.convertScaleAbs(image, image, 255)\n\n    cv.imshow(output, image);\n    image.delete();\n    return output;\n\n  }\n\n\n  reinforceEdges(input: HTMLCanvasElement, output: HTMLCanvasElement, strengh: number): HTMLCanvasElement {\n\n    // Compute the gaussian blur of the image\n    // Compute the difference between the original image and the gaussian blur\n\n\n    let src = cv.imread(input);\n    let dst = new cv.Mat();\n\n    cv.GaussianBlur(src, dst, new cv.Size(0, 0), 10);\n\n    cv.addWeighted(src, 1 + strengh, dst, -strengh, 0, src);\n\n    cv.convertScaleAbs(src, src, 1, 0);\n\n    cv.imshow(output, src);\n    src.delete();\n    dst.delete();\n\n\n\n\n    return output;\n\n  }\n\n  gammaCorrection(input: HTMLCanvasElement, output: HTMLCanvasElement, gamma: number): HTMLCanvasElement {\n    // Create matrices from input and output canvases\n    let src = cv.imread(input);\n    let dst = new cv.Mat();\n\n    // Convert source image to floating point for precise calculations\n    src.convertTo(dst, cv.CV_32F);\n\n    // Normalize the image to 0-1 range\n    cv.normalize(dst, dst, 0, 1, cv.NORM_MINMAX);\n\n    // Apply gamma correction\n    // Formula: output = input^(1/gamma)\n    let gamma_inv = 1.0 / gamma;\n\n    // Create a temporary matrix to store results\n    let corrected = new cv.Mat();\n\n    // Perform gamma correction\n    cv.pow(dst, gamma_inv, corrected);\n\n    // Scale back to 0-255 range\n    corrected.convertTo(corrected, cv.CV_8U, 255.0);\n\n    // Write the result to the output canvas\n    cv.imshow(output, corrected);\n\n    // Free memory\n    src.delete();\n    dst.delete();\n    corrected.delete();\n\n    return output;\n  }\n\n  binarizeCanvas(ctx: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D, color: string, bbox: Rect | null) {\n    // Get the canvas context and image data\n    const rgb = from_hex_to_rgb(color); // Convert hex color to RGB\n    if (!bbox) {\n      bbox = { x: 0, y: 0, width: ctx.canvas.width, height: ctx.canvas.height }\n    }\n    const imgData = ctx.getImageData(bbox.x, bbox.y, bbox.width, bbox.height);\n\n    // Convert the image data to OpenCV format\n    const src = cv.matFromImageData(imgData);\n    const gray = new cv.Mat();\n    const binary = new cv.Mat();\n\n    // Convert to grayscale\n    cv.cvtColor(src, gray, cv.COLOR_RGBA2GRAY);\n\n    // Apply binary thresholding to remove anti-aliasing\n    cv.threshold(gray, binary, 1, 255, cv.THRESH_BINARY);\n\n    // Create an RGBA matrix for the foreground color\n    const foreground = new cv.Mat(src.size(), src.type());\n    foreground.setTo(new cv.Scalar(rgb[0], rgb[1], rgb[2], 255)); // Opaque foreground color\n\n    // Create an output matrix\n    const output = new cv.Mat();\n\n    // Copy the foreground color to the output where the binary mask is 255\n    foreground.copyTo(output, binary);\n\n    // Convert the output to an image data format\n    const processedImageData = new ImageData(new Uint8ClampedArray(output.data), bbox.width, bbox.height);\n    ctx.putImageData(processedImageData, bbox.x, bbox.y, 0, 0, bbox.width, bbox.height);\n\n    // Clean up\n    src.delete();\n    gray.delete();\n    binary.delete();\n    foreground.delete();\n    output.delete();\n  }\n  binarizeMultiColorCanvas(ctx: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D, labelColors: string[], bbox: Rect | null) {\n    if (!bbox) {\n      bbox = { x: 0, y: 0, width: ctx.canvas.width, height: ctx.canvas.height }\n    }\n\n    // Get the canvas context and image data\n    const imgData = ctx.getImageData(bbox.x, bbox.y, bbox.width, bbox.height);\n\n    // Convert the image data to OpenCV format\n    const src = cv.matFromImageData(imgData);\n    const rgba = new cv.Mat();\n    const output = new cv.Mat.zeros(src.size(), src.type()); // Initialize output with transparent background\n\n    // Loop through each label color\n    for (const labelColor of labelColors) {\n\n      const [r, g, b] = from_hex_to_rgb(labelColor)\n\n      // Create a mask for the current label color\n      const mask = new cv.Mat();\n      const lowerBound = new cv.Mat(src.size(), src.type()); // Slight tolerance\n      const upperBound = new cv.Mat(src.size(), src.type());\n\n      lowerBound.setTo(new cv.Scalar(r - 5, g - 5, b - 5, 255))\n      upperBound.setTo(new cv.Scalar(r + 5, g + 5, b + 5, 255))\n\n      cv.inRange(src, lowerBound, upperBound, mask);\n\n      // Remove anti-aliasing artifacts by thresholding the mask\n      cv.threshold(mask, mask, 1, 255, cv.THRESH_BINARY);\n\n      // Create a label matrix for the current color\n      const label = new cv.Mat(src.size(), src.type());\n      label.setTo(new cv.Scalar(r, g, b, 255))\n      label.copyTo(output, mask); // Copy the label color where the mask is 255\n\n      // Clean up temporary matrices\n      mask.delete();\n      lowerBound.delete();\n      upperBound.delete();\n      label.delete();\n    }\n\n    // Convert the output to an ImageData object\n    const processedImageData = new ImageData(new Uint8ClampedArray(output.data), bbox.width, bbox.height);\n    ctx.putImageData(processedImageData, bbox.x, bbox.y, 0, 0, bbox.width, bbox.height);\n\n    // Clean up\n    src.delete();\n    rgba.delete();\n    output.delete();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Point2D.html":{"url":"interfaces/Point2D.html","title":"interface - Point2D","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Point2D\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Core/interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            y\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SegLabel {\n  label: string;\n  color: string;\n  isVisible: boolean;\n  shades: string[] | null;\n}\n\nexport interface SegInstance {\n  label: SegLabel;\n  instance: number;\n  shade: string;\n}\n\nexport interface BboxLabel {\n  label: SegLabel;\n  bbox: Rect;\n  instance: number;\n}\n\nexport interface Thumbnail {\n  name: Promise;\n  thumbnailPath: Promise;\n}\n\nexport interface Point2D {\n  x: number;\n  y: number;\n}\n\nexport interface Rect {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\n\nexport interface Viewbox {\n  xmin: number;\n  ymin: number;\n  xmax: number;\n  ymax: number;\n}\n\nexport interface UndoRedoCanvasElement {\n  data: Blob | Blob[];\n  index: number;\n}\n\nexport interface MulticlassInterface {\n  name: string;\n  classes: string[];\n  default: string | null;\n}\n\nexport interface MultilabelInterface {\n  name: string;\n  classes: string[];\n  default: string[] | null;\n}\n\nexport interface ProjectConfig {\n  project_name: string;\n  input_dir: string;\n  output_dir: string;\n  is_segmentation: boolean;\n  is_classification: boolean;\n  is_instance_segmentation: boolean;\n  is_bbox_detection: boolean;\n  segmentation_classes: null | string[];\n  classification_classes: null | MulticlassInterface[];\n  classification_multilabel: null | MultilabelInterface;\n}\n\nexport interface ImageFromCLI {\n  image_path: string;\n  mask_data: string[] | null;\n  segmentation_classes: string[] | null;\n  classification_classes: string[] | null;\n  classification_multilabel: string[] | null;\n}\n\n\nexport interface ProjectFile{\n  root: string;\n  project_name: string;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Point2D-1.html":{"url":"interfaces/Point2D-1.html","title":"interface - Point2D-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Point2D\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Components/Core/drawable-canvas/models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            y\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Point2D {\n    x: number;\n    y: number;\n}\n\nexport interface Rect {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n}\n\n\nexport interface Viewbox{\n    xmin: number;\n    ymin: number;\n    xmax: number;\n    ymax: number;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PostProcessService.html":{"url":"injectables/PostProcessService.html","title":"injectable - PostProcessService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PostProcessService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Components/Core/drawable-canvas/service/post-process.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                featuresExtracted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                crf_post_process\n                            \n                            \n                                    Async\n                                drawQuadTreeBbox\n                            \n                            \n                                    Async\n                                eraseAll_post_process\n                            \n                            \n                                    Async\n                                otsu_post_process\n                            \n                            \n                                postProcess\n                            \n                            \n                                    Async\n                                sam_post_process\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(editorService: EditorService, imageProcessingService: ImageProcessingService, canvasManagerService: CanvasManagerService, bboxManager: BboxManagerService, stateService: StateManagerService, svgUIService: SVGUIService)\n                    \n                \n                        \n                            \n                                Defined in src/app/Components/Core/drawable-canvas/service/post-process.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        editorService\n                                                  \n                                                        \n                                                                        EditorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        imageProcessingService\n                                                  \n                                                        \n                                                                        ImageProcessingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        canvasManagerService\n                                                  \n                                                        \n                                                                        CanvasManagerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bboxManager\n                                                  \n                                                        \n                                                                        BboxManagerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stateService\n                                                  \n                                                        \n                                                                        StateManagerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        svgUIService\n                                                  \n                                                        \n                                                                        SVGUIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        crf_post_process\n                        \n                    \n                \n            \n            \n                \n                        \n                    crf_post_process()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/post-process.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        drawQuadTreeBbox\n                        \n                    \n                \n            \n            \n                \n                        \n                    drawQuadTreeBbox(maskData: Uint8ClampedArray, minSize: number, maxDepth: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/post-process.service.ts:221\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                maskData\n                                            \n                                                        Uint8ClampedArray\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                minSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                maxDepth\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        eraseAll_post_process\n                        \n                    \n                \n            \n            \n                \n                        \n                    eraseAll_post_process()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/post-process.service.ts:171\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        otsu_post_process\n                        \n                    \n                \n            \n            \n                \n                        \n                    otsu_post_process()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/post-process.service.ts:124\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        postProcess\n                        \n                    \n                \n            \n            \n                \npostProcess()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/post-process.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sam_post_process\n                        \n                    \n                \n            \n            \n                \n                        \n                    sam_post_process()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/post-process.service.ts:72\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        featuresExtracted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/post-process.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, input } from '@angular/core';\nimport { EditorService } from '../../../../Services/UI/editor.service';\nimport { CanvasManagerService } from './canvas-manager.service';\nimport { StateManagerService } from './state-manager.service';\nimport { ImageProcessingService } from './image-processing.service';\nimport { invoke } from '@tauri-apps/api/core';\nimport { BboxManagerService } from './bbox-manager.service';\nimport { SVGUIService } from './svgui.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PostProcessService {\n  public featuresExtracted: boolean = false;\n  constructor(\n    private editorService: EditorService,\n    private imageProcessingService: ImageProcessingService,\n    private canvasManagerService: CanvasManagerService,\n    private bboxManager: BboxManagerService,\n    private stateService: StateManagerService,\n    private svgUIService: SVGUIService\n  ) {}\n\n  postProcess() {}\n\n  async crf_post_process() {\n    let bufferCtx = this.canvasManagerService.getBufferCtx();\n    let rect = this.stateService.getBoundingBox();\n    const maskData = bufferCtx.getImageData(\n      rect.x,\n      rect.y,\n      rect.width,\n      rect.height\n    ).data;\n    \n    const imgData = this.imageProcessingService\n      .getCurrentCanvas()\n      .getContext('2d', { alpha: false })!\n      .getImageData(\n        rect.x,\n        rect.y,\n        rect.width,\n        rect.height\n\n      ).data;\n    let timer = performance.now();\n    return invoke('crf_refine', {\n      mask: maskData.buffer,\n      image: imgData.buffer,\n      width: rect.width,\n      height: rect.height,\n      spatialWeight: 0.25,\n      bilateralWeight: 2.0,\n      numIterations: 50,\n    }).then((imageBitmap: ArrayBufferLike) => {\n      console.log('CRF took', performance.now() - timer);\n      let activeCtx = this.canvasManagerService.getActiveCtx();\n      let bufferCanvas = this.canvasManagerService.getBufferCanvas();\n      bufferCtx.putImageData(\n        new ImageData(\n          new Uint8ClampedArray(imageBitmap),\n          rect.width,\n          rect.height\n        ),\n        rect.x,\n        rect.y\n      );\n      activeCtx.drawImage(bufferCanvas, 0, 0);\n    });\n  }\n\n  async sam_post_process() {\n    let bufferCtx = this.canvasManagerService.getBufferCtx();\n    let rect = {\n      x: 0,\n      y: 0,\n      width: this.stateService.width,\n      height: this.stateService.height,\n    };\n    const maskData = bufferCtx.getImageData(\n      rect.x,\n      rect.y,\n      rect.width,\n      rect.height\n    ).data;\n    const maxDepth = 4;\n    const minSize = 16;\n    const imgData = this.imageProcessingService\n      .getCurrentCanvas()\n      .getContext('2d', { alpha: false })!\n      .getImageData(\n        0,\n        0,\n        this.stateService.width,\n        this.stateService.height\n      ).data;\n    await this.drawQuadTreeBbox(maskData, minSize, maxDepth);\n    return invoke('sam_segment', {\n      coarseMask: maskData.buffer,\n      image: imgData.buffer,\n      threshold: this.editorService.samThreshold,\n      width: this.stateService.width,\n      height: this.stateService.height,\n      extractFeatures: !this.featuresExtracted,\n      maxDepth: maxDepth,\n      minSize: minSize,\n    }).then((imageBitmap: ArrayBufferLike) => {\n      this.featuresExtracted = true;\n      let activeCtx = this.canvasManagerService.getActiveCtx();\n      let bufferCanvas = this.canvasManagerService.getBufferCanvas();\n      bufferCtx.putImageData(\n        new ImageData(\n          new Uint8ClampedArray(imageBitmap),\n          rect.width,\n          rect.height\n        ),\n        rect.x,\n        rect.y\n      );\n      activeCtx.drawImage(bufferCanvas, 0, 0);\n    });\n  }\n\n  async otsu_post_process() {\n    const rect = this.stateService.getBoundingBox();\n    let bufferCtx = this.canvasManagerService.getBufferCtx();\n\n    const imageData = this.imageProcessingService\n      .getCurrentCanvas()\n      .getContext('2d', { alpha: false })!\n      .getImageData(rect.x, rect.y, rect.width, rect.height).data;\n\n    const maskData = bufferCtx.getImageData(\n      rect.x,\n      rect.y,\n      rect.width,\n      rect.height\n    ).data;\n\n    return invoke('otsu_segmentation', {\n      mask: maskData.buffer,\n      image: imageData.buffer,\n      opening: this.editorService.autoPostProcessOpening,\n      inverse: this.editorService.useInverse,\n      kernelSize: this.editorService.morphoSize,\n      connectedness: this.editorService.enforceConnectivity,\n      width: rect.width,\n      height: rect.height,\n    }).then((mask: ArrayBufferLike) => {\n      const newMAsk = new ImageData(\n        new Uint8ClampedArray(mask),\n        rect.width,\n        rect.height\n      );\n      const activeCtx = this.canvasManagerService.getActiveCtx();\n      bufferCtx.putImageData(newMAsk, rect.x, rect.y);\n      activeCtx.drawImage(\n        bufferCtx.canvas,\n        rect.x,\n        rect.y,\n        rect.width,\n        rect.height,\n        rect.x,\n        rect.y,\n        rect.width,\n        rect.height\n      );\n    });\n  }\n\n  async eraseAll_post_process() {\n    let bufferCtx = this.canvasManagerService.getBufferCtx();\n\n    const inputCtx = this.editorService.eraseAll\n      ? this.canvasManagerService.getCombinedCtx()\n      : this.canvasManagerService.getActiveCtx();\n\n    const maskData = bufferCtx.getImageData(\n      0,\n      0,\n      this.stateService.width,\n      this.stateService.height\n    ).data;\n    const labelData = inputCtx.getImageData(\n      0,\n      0,\n      this.stateService.width,\n      this.stateService.height\n    ).data;\n\n    const activeIndex = this.canvasManagerService.getActiveIndex();\n    let start = performance.now();\n    return invoke('get_overlapping_region_with_mask', {\n      label: labelData.buffer,\n      mask: maskData.buffer,\n      width: this.stateService.width,\n      height: this.stateService.height\n    }).then((mask: ArrayBufferLike) => {\n      this.svgUIService.resetPath();\n      const newMAsk = new ImageData(\n        new Uint8ClampedArray(mask),\n        this.stateService.width,\n        this.stateService.height\n      );\n      bufferCtx.putImageData(newMAsk, 0, 0);\n      this.canvasManagerService.getAllCanvasCtx().forEach((ctx, index) => {\n        if (index !== activeIndex && !this.editorService.eraseAll) return;\n        ctx.globalCompositeOperation = 'destination-out';\n        ctx.drawImage(\n          bufferCtx.canvas,\n          0,\n          0,\n          this.stateService.width,\n          this.stateService.height\n        );\n        ctx.globalCompositeOperation = 'source-over';\n      });\n    });\n  }\n\n  async drawQuadTreeBbox(\n    maskData: Uint8ClampedArray,\n    minSize: number,\n    maxDepth: number\n  ) {\n    const w = this.stateService.width;\n    const h = this.stateService.height;\n    return invoke('get_quad_tree_bbox', {\n      mask: maskData.buffer,\n      width: this.stateService.width,\n      height: this.stateService.height,\n      newWidth: 256,\n      newHeight: 256,\n      maxDepth: maxDepth,\n      minSize: minSize,\n    })\n      .then((bboxes: any) => {\n        let N = bboxes.length;\n        this.bboxManager.listBbox = [];\n        for (let i = 0; i  {\n        setTimeout(() => {\n          this.bboxManager.listBbox = [];\n        }, 2000);\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProjectConfig.html":{"url":"interfaces/ProjectConfig.html","title":"interface - ProjectConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProjectConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Core/interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            classification_classes\n                                        \n                                \n                                \n                                        \n                                            classification_multilabel\n                                        \n                                \n                                \n                                        \n                                            input_dir\n                                        \n                                \n                                \n                                        \n                                            is_bbox_detection\n                                        \n                                \n                                \n                                        \n                                            is_classification\n                                        \n                                \n                                \n                                        \n                                            is_instance_segmentation\n                                        \n                                \n                                \n                                        \n                                            is_segmentation\n                                        \n                                \n                                \n                                        \n                                            output_dir\n                                        \n                                \n                                \n                                        \n                                            project_name\n                                        \n                                \n                                \n                                        \n                                            segmentation_classes\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        classification_classes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        classification_classes:         null | MulticlassInterface[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         null | MulticlassInterface[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        classification_multilabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        classification_multilabel:         null | MultilabelInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         null | MultilabelInterface\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        input_dir\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        input_dir:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_bbox_detection\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        is_bbox_detection:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_classification\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        is_classification:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_instance_segmentation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        is_instance_segmentation:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_segmentation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        is_segmentation:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        output_dir\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        output_dir:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        project_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        project_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        segmentation_classes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        segmentation_classes:     null | string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     null | string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SegLabel {\n  label: string;\n  color: string;\n  isVisible: boolean;\n  shades: string[] | null;\n}\n\nexport interface SegInstance {\n  label: SegLabel;\n  instance: number;\n  shade: string;\n}\n\nexport interface BboxLabel {\n  label: SegLabel;\n  bbox: Rect;\n  instance: number;\n}\n\nexport interface Thumbnail {\n  name: Promise;\n  thumbnailPath: Promise;\n}\n\nexport interface Point2D {\n  x: number;\n  y: number;\n}\n\nexport interface Rect {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\n\nexport interface Viewbox {\n  xmin: number;\n  ymin: number;\n  xmax: number;\n  ymax: number;\n}\n\nexport interface UndoRedoCanvasElement {\n  data: Blob | Blob[];\n  index: number;\n}\n\nexport interface MulticlassInterface {\n  name: string;\n  classes: string[];\n  default: string | null;\n}\n\nexport interface MultilabelInterface {\n  name: string;\n  classes: string[];\n  default: string[] | null;\n}\n\nexport interface ProjectConfig {\n  project_name: string;\n  input_dir: string;\n  output_dir: string;\n  is_segmentation: boolean;\n  is_classification: boolean;\n  is_instance_segmentation: boolean;\n  is_bbox_detection: boolean;\n  segmentation_classes: null | string[];\n  classification_classes: null | MulticlassInterface[];\n  classification_multilabel: null | MultilabelInterface;\n}\n\nexport interface ImageFromCLI {\n  image_path: string;\n  mask_data: string[] | null;\n  segmentation_classes: string[] | null;\n  classification_classes: string[] | null;\n  classification_multilabel: string[] | null;\n}\n\n\nexport interface ProjectFile{\n  root: string;\n  project_name: string;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectConfigurationComponent.html":{"url":"components/ProjectConfigurationComponent.html","title":"component - ProjectConfigurationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProjectConfigurationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/Components/Interface/project-configuration/project-configuration.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-project-configuration\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CardModule\n                            TableModule\n                            CommonModule\n                                ClassificationConfigurationComponent\n                            NgClass\n                            NgIf\n                            NgFor\n                            DividerModule\n                                ColorPickerModule\n                            CheckboxModule\n                            ButtonModule\n                            FloatLabelModule\n                            FormsModule\n                            PanelModule\n                            InputSwitchModule\n                            InputTextModule\n                            FieldsetModule\n                                LabelledSwitchComponent\n                                ClassificationConfigurationComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./project-configuration.component.html\n            \n\n\n\n            \n                styleUrl\n                ./project-configuration.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                generateThumbnails\n                            \n                            \n                                isInputValid\n                            \n                            \n                                isNameValid\n                            \n                            \n                                isOutputValid\n                            \n                            \n                                    Public\n                                labelService\n                            \n                            \n                                    Public\n                                projectService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addSegmentationClass\n                            \n                            \n                                deleteSegmentationClass\n                            \n                            \n                                findAndLoadProjectFile\n                            \n                            \n                                    Async\n                                loadProjectFromFilepath\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openInputFolder\n                            \n                            \n                                openOutputFolder\n                            \n                            \n                                removeProjectFromFilepath\n                            \n                            \n                                startProject\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(projectService: ProjectService, labelService: LabelsService, cli: CLIService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/Components/Interface/project-configuration/project-configuration.component.ts:59\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        labelService\n                                                  \n                                                        \n                                                                        LabelsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cli\n                                                  \n                                                        \n                                                                        CLIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addSegmentationClass\n                        \n                    \n                \n            \n            \n                \naddSegmentationClass()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Interface/project-configuration/project-configuration.component.ts:104\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteSegmentationClass\n                        \n                    \n                \n            \n            \n                \ndeleteSegmentationClass(segLabel: SegLabel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Interface/project-configuration/project-configuration.component.ts:115\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                segLabel\n                                            \n                                                            SegLabel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAndLoadProjectFile\n                        \n                    \n                \n            \n            \n                \nfindAndLoadProjectFile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Interface/project-configuration/project-configuration.component.ts:124\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loadProjectFromFilepath\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadProjectFromFilepath(filepath: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Interface/project-configuration/project-configuration.component.ts:119\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filepath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Interface/project-configuration/project-configuration.component.ts:67\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openInputFolder\n                        \n                    \n                \n            \n            \n                \nopenInputFolder()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Interface/project-configuration/project-configuration.component.ts:76\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openOutputFolder\n                        \n                    \n                \n            \n            \n                \nopenOutputFolder()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Interface/project-configuration/project-configuration.component.ts:87\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeProjectFromFilepath\n                        \n                    \n                \n            \n            \n                \nremoveProjectFromFilepath(filepath: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Interface/project-configuration/project-configuration.component.ts:133\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filepath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startProject\n                        \n                    \n                \n            \n            \n                \nstartProject()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Interface/project-configuration/project-configuration.component.ts:94\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        generateThumbnails\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Interface/project-configuration/project-configuration.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isInputValid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Interface/project-configuration/project-configuration.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNameValid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Interface/project-configuration/project-configuration.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOutputValid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Interface/project-configuration/project-configuration.component.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        labelService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LabelsService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Interface/project-configuration/project-configuration.component.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProjectService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Interface/project-configuration/project-configuration.component.ts:61\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectorRef, Component, OnInit, output } from '@angular/core';\nimport { DividerModule } from 'primeng/divider';\nimport { PanelModule } from 'primeng/panel';\nimport { FloatLabelModule } from 'primeng/floatlabel';\nimport { FormsModule } from '@angular/forms';\nimport { CardModule } from 'primeng/card';\nimport { NgClass, NgIf, NgFor } from '@angular/common';\nimport { InputSwitchModule } from 'primeng/inputswitch';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { open } from '@tauri-apps/plugin-dialog';\nimport { FieldsetModule } from 'primeng/fieldset';\nimport { ButtonModule } from 'primeng/button';\nimport { environment } from '../../../../environments/environment';\nimport { ProjectService } from '../../../Services/Project/project.service';\nimport { LabelsService } from '../../../Services/Project/labels.service';\nimport { LabelledSwitchComponent } from '../../Core/labelled-switch/labelled-switch.component';\nimport { getDefaultColor } from '../../../Core/misc/colors';\nimport { ColorPickerModule } from 'primeng/colorpicker';\nimport { CheckboxModule } from 'primeng/checkbox';\nimport { SegLabel } from '../../../Core/interface';\nimport { CLIService } from '../../../Services/cli.service';\nimport { ClassificationConfigurationComponent } from './classification-configuration/classification-configuration.component';\nimport { TableModule } from 'primeng/table';\nimport { CommonModule } from '@angular/common';\nimport { path } from '@tauri-apps/api';\n\n@Component({\n  selector: 'app-project-configuration',\n  standalone: true,\n  imports: [\n    CardModule,\n    TableModule,\n    CommonModule,\n    ClassificationConfigurationComponent,\n    NgClass,\n    NgIf,\n    NgFor,\n    DividerModule,\n    ColorPickerModule,\n    CheckboxModule,\n    ButtonModule,\n    FloatLabelModule,\n    FormsModule,\n    PanelModule,\n    InputSwitchModule,\n    InputTextModule,\n    FieldsetModule,\n    LabelledSwitchComponent,\n    ClassificationConfigurationComponent,\n  ],\n  templateUrl: './project-configuration.component.html',\n  styleUrl: './project-configuration.component.scss',\n})\nexport class ProjectConfigurationComponent implements OnInit {\n  generateThumbnails: boolean = true;\n\n  isInputValid: boolean = true;\n  isOutputValid: boolean = true;\n  isNameValid: boolean = true;\n  constructor(\n    public projectService: ProjectService,\n    public labelService: LabelsService,\n    private cli: CLIService,\n    private cdr: ChangeDetectorRef\n  ) {}\n\n  ngOnInit(): void {\n    this.cli.commandProcessed.subscribe((value) => {\n      if (value) {\n        console.log('Command processed from Project Configuration');\n        this.cdr.detectChanges();\n      }\n    });\n  }\n\n  openInputFolder() {\n    const file = open({ directory: true });\n    file.then((value) => {\n      if (value) {\n        if (value != this.projectService.inputFolder) {\n          this.projectService.resetProject();\n        }\n        this.projectService.inputFolder = value;\n      }\n    });\n  }\n  openOutputFolder() {\n    const file = open({ directory: true });\n    file.then((value) => {\n      if (value) this.projectService.outputFolder = value;\n    });\n  }\n\n  startProject() {\n    // Validate input\n    this.isInputValid = this.projectService.inputFolder !== '';\n    this.isOutputValid = this.projectService.outputFolder !== '';\n    this.isNameValid = this.projectService.projectName !== '';\n    if (this.isInputValid && this.isOutputValid) {\n      this.projectService.startProject();\n    }\n  }\n\n  addSegmentationClass() {\n    let color = getDefaultColor(\n      this.labelService.listSegmentationLabels.length + 1\n    );\n    this.labelService.addSegLabel({\n      label: 'Class ' + this.labelService.listSegmentationLabels.length,\n      color: color,\n      isVisible: true,\n      shades: null,\n    });\n  }\n  deleteSegmentationClass(segLabel: SegLabel) {\n    this.labelService.removeSegLabel(segLabel);\n  }\n\n  async loadProjectFromFilepath(filepath: string) {\n    filepath = await path.join(filepath, 'project_config.json')\n    this.projectService.loadProjectFile(filepath);\n  }\n\n  findAndLoadProjectFile() {\n    const file = open({ directory: false });\n    file.then((value) => {\n      if (value) {\n        this.projectService.loadProjectFile(value);\n      }\n    });\n  }\n\n  removeProjectFromFilepath(filepath: string) {\n    this.projectService.removeProjectFile(filepath);\n  }\n\n}\n\n    \n\n    \n        \n  \n     0\"\n    >\n      \n        \n          \n            Project Name\n            Filepath\n            Remove from history\n          \n        \n        \n          \n            {{ rows.project_name }}\n            {{ rows.root }}\n            \n              \n            \n          \n        \n      \n    \n\n    \n      \n        Load from disk\n        Configure project\n        \n          \n            \n            Project name\n          \n          \n            Classification\n            Segmentation\n            Instance segmentation\n            Bounding box\n          \n        \n        \n          \n            \n          \n        \n\n        \n          \n            \n              \n                Class {{ i }}:\n                \n\n                \n                \n                \n              \n              \n            \n          \n        \n      \n    \n  \n\n  \n    \n      \n        \n          \n            \n              \n              Input path\n            \n\n            Choose folder\n            \n              Enter the path manually or open the explorer.\n            \n          \n          \n            \n              \n              \n                Recursive loading\n              \n            \n            \n              \n              regex\n            \n          \n        \n      \n\n      \n        \n          \n            \n            Output path\n          \n\n          Choose folder\n          \n            Enter the path manually or open the explorer.\n          \n        \n      \n    \n  \n\n  \n    \n      \n        \n          \n          \n            Create thumbnails\n          \n        \n      \n    \n  \n\n\n\n  Start\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       0\"    >                                    Project Name            Filepath            Remove from history                                                {{ rows.project_name }}            {{ rows.root }}                                                                                    Load from disk        Configure project                                          Project name                                Classification            Segmentation            Instance segmentation            Bounding box                                                                                                                              Class {{ i }}:                                                                                                                                                                                                            Input path                        Choose folder                          Enter the path manually or open the explorer.                                                                                        Recursive loading                                                                  regex                                                                                    Output path                    Choose folder                      Enter the path manually or open the explorer.                                                                                  Create thumbnails                                Start'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlockableDiv', 'selector': 'blockable-div'},{'name': 'BlockableP', 'selector': 'blockable-p'},{'name': 'ClassificationConfigurationComponent', 'selector': 'app-classification-configuration'},{'name': 'DrawableCanvasComponent', 'selector': 'app-drawable-canvas'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'GalleryComponent', 'selector': 'app-gallery'},{'name': 'GalleryElementComponent', 'selector': 'app-gallery-element'},{'name': 'InstanceLabelComponent', 'selector': 'app-instance-label'},{'name': 'InteractiveBboxComponent', 'selector': 'app-interactive-bbox'},{'name': 'LabelledSwitchComponent', 'selector': 'app-labelled-switch'},{'name': 'LabelsComponent', 'selector': 'app-labels'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'ProjectConfigurationComponent', 'selector': 'app-project-configuration'},{'name': 'SVGElementsComponent', 'selector': 'app-svgelements'},{'name': 'TestingComponent', 'selector': 'app-testing'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'ToolSettingComponent', 'selector': 'app-tool-setting'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProjectConfigurationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProjectFile.html":{"url":"interfaces/ProjectFile.html","title":"interface - ProjectFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProjectFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Core/interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            project_name\n                                        \n                                \n                                \n                                        \n                                            root\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        project_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        project_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        root\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        root:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SegLabel {\n  label: string;\n  color: string;\n  isVisible: boolean;\n  shades: string[] | null;\n}\n\nexport interface SegInstance {\n  label: SegLabel;\n  instance: number;\n  shade: string;\n}\n\nexport interface BboxLabel {\n  label: SegLabel;\n  bbox: Rect;\n  instance: number;\n}\n\nexport interface Thumbnail {\n  name: Promise;\n  thumbnailPath: Promise;\n}\n\nexport interface Point2D {\n  x: number;\n  y: number;\n}\n\nexport interface Rect {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\n\nexport interface Viewbox {\n  xmin: number;\n  ymin: number;\n  xmax: number;\n  ymax: number;\n}\n\nexport interface UndoRedoCanvasElement {\n  data: Blob | Blob[];\n  index: number;\n}\n\nexport interface MulticlassInterface {\n  name: string;\n  classes: string[];\n  default: string | null;\n}\n\nexport interface MultilabelInterface {\n  name: string;\n  classes: string[];\n  default: string[] | null;\n}\n\nexport interface ProjectConfig {\n  project_name: string;\n  input_dir: string;\n  output_dir: string;\n  is_segmentation: boolean;\n  is_classification: boolean;\n  is_instance_segmentation: boolean;\n  is_bbox_detection: boolean;\n  segmentation_classes: null | string[];\n  classification_classes: null | MulticlassInterface[];\n  classification_multilabel: null | MultilabelInterface;\n}\n\nexport interface ImageFromCLI {\n  image_path: string;\n  mask_data: string[] | null;\n  segmentation_classes: string[] | null;\n  classification_classes: string[] | null;\n  classification_multilabel: string[] | null;\n}\n\n\nexport interface ProjectFile{\n  root: string;\n  project_name: string;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProjectService.html":{"url":"injectables/ProjectService.html","title":"injectable - ProjectService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProjectService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Services/Project/project.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeImage\n                            \n                            \n                                activeIndex\n                            \n                            \n                                imagesName\n                            \n                            \n                                inputFolder\n                            \n                            \n                                inputRegex\n                            \n                            \n                                isBoundingBoxDetection\n                            \n                            \n                                isClassification\n                            \n                            \n                                isInstanceSegmentation\n                            \n                            \n                                isProjectStarted\n                            \n                            \n                                isSegmentation\n                            \n                            \n                                localStoragesProjectsFilepaths\n                            \n                            \n                                maxInstances\n                            \n                            \n                                outputFolder\n                            \n                            \n                                projectFolder\n                            \n                            \n                                projectName\n                            \n                            \n                                recursive\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create_project\n                            \n                            \n                                extractImagesName\n                            \n                            \n                                    Async\n                                goNext\n                            \n                            \n                                    Async\n                                goPrevious\n                            \n                            \n                                    Async\n                                listFiles\n                            \n                            \n                                    Async\n                                loadProjectFile\n                            \n                            \n                                    Async\n                                openEditor\n                            \n                            \n                                    Async\n                                removeProjectFile\n                            \n                            \n                                resetProject\n                            \n                            \n                                    Async\n                                startProject\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(viewService: ViewService, labelService: LabelsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/Services/Project/project.service.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        viewService\n                                                  \n                                                        \n                                                                        ViewService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        labelService\n                                                  \n                                                        \n                                                                        LabelsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create_project\n                        \n                    \n                \n            \n            \n                \n                        \n                    create_project(config: ProjectConfig)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/Project/project.service.ts:195\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                config\n                                            \n                                                            ProjectConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        extractImagesName\n                        \n                    \n                \n            \n            \n                \nextractImagesName(files: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/Project/project.service.ts:147\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                files\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        goNext\n                        \n                    \n                \n            \n            \n                \n                        \n                    goNext()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/Project/project.service.ts:172\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        goPrevious\n                        \n                    \n                \n            \n            \n                \n                        \n                    goPrevious()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/Project/project.service.ts:182\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        listFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    listFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/Project/project.service.ts:136\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loadProjectFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadProjectFile(filepath: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/Project/project.service.ts:113\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filepath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        openEditor\n                        \n                    \n                \n            \n            \n                \n                        \n                    openEditor(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/Project/project.service.ts:154\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeProjectFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeProjectFile(filepath: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/Project/project.service.ts:126\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filepath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetProject\n                        \n                    \n                \n            \n            \n                \nresetProject()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/Project/project.service.ts:188\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        startProject\n                        \n                    \n                \n            \n            \n                \n                        \n                    startProject()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/Project/project.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activeImage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Promise | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/Project/project.service.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        activeIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/Project/project.service.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imagesName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/Project/project.service.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inputFolder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.defaultInputFolder\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/Project/project.service.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inputRegex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.defaultRegex\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/Project/project.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isBoundingBoxDetection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/Project/project.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isClassification\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/Project/project.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isInstanceSegmentation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/Project/project.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isProjectStarted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/Project/project.service.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSegmentation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/Project/project.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        localStoragesProjectsFilepaths\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProjectFile[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/Project/project.service.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        maxInstances\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 100\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/Project/project.service.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        outputFolder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.defaultOutputFolder\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/Project/project.service.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        projectFolder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/Project/project.service.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        projectName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.defaultProjectName\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/Project/project.service.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recursive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/Project/project.service.ts:28\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { invoke } from '@tauri-apps/api/core';\nimport { environment } from '../../../environments/environment';\nimport { ViewService } from '../UI/view.service';\n\nimport { path } from '@tauri-apps/api';\nimport { ProjectConfig, ProjectFile, SegLabel, Thumbnail } from '../../Core/interface';\n\nimport { loadImageFile } from '../../Core/io/images';\nimport { LabelsService } from './labels.service';\nimport { getDefaultColor } from '../../Core/misc/colors';\nimport { MulticlassTask, MultilabelTask } from '../../Core/task';\nimport {\n  invokeLoadJsonFile,\n  saveProjectConfigFile,\n} from '../../Core/io/save_load';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProjectService {\n  isClassification: boolean = false;\n  isSegmentation: boolean = false;\n  isInstanceSegmentation: boolean = false;\n  isBoundingBoxDetection: boolean = false;\n\n  inputRegex: string = environment.defaultRegex;\n  recursive: boolean = true;\n  isProjectStarted: boolean = false;\n  projectName: string = environment.defaultProjectName;\n  outputFolder: string = environment.defaultOutputFolder;\n  inputFolder: string = environment.defaultInputFolder;\n\n  projectFolder: string = '';\n  imagesName: string[] = [];\n\n  localStoragesProjectsFilepaths: ProjectFile[] = [];\n\n  activeIndex: number | null = null;\n  activeImage: Promise | null = null;\n\n  maxInstances: number = 100;\n\n  constructor(\n    private viewService: ViewService,\n    private labelService: LabelsService\n  ) {\n\n    this.localStoragesProjectsFilepaths = JSON.parse(\n      localStorage.getItem('projects') || '[]'\n    );\n\n  }\n  async startProject(): Promise {\n    this.inputFolder = await path.resolve(this.inputFolder);\n    let sep = path.sep();\n    if (!this.inputFolder.endsWith(sep)) {\n      this.inputFolder = this.inputFolder + sep;\n    }\n\n    this.outputFolder = await path.resolve(this.outputFolder);\n    this.projectFolder = await path.join(this.outputFolder, this.projectName);\n\n    let projectConfig: ProjectConfig = {\n      project_name: this.projectName,\n      input_dir: this.inputFolder,\n      output_dir: this.outputFolder,\n      is_classification: this.isClassification,\n      is_segmentation: this.isSegmentation,\n      is_instance_segmentation: this.isInstanceSegmentation,\n      is_bbox_detection: this.isBoundingBoxDetection,\n      segmentation_classes: this.labelService.listSegmentationLabels.map(\n        (label) => label.label\n      ),\n      classification_classes: this.labelService.listClassificationTasks.map(\n        (task) => {\n          return {\n            name: task.taskName,\n            classes: task.classLabels,\n            default: task.choice,\n          };\n        }\n      ),\n      classification_multilabel: this.labelService.multiLabelTask\n        ? {\n          name: this.labelService.multiLabelTask.taskName,\n          classes: this.labelService.multiLabelTask.taskLabels,\n          default: this.labelService.multiLabelTask.choices,\n        }\n        : null,\n    };\n\n    saveProjectConfigFile(this.projectFolder, projectConfig);\n\n    // Save ProjectName/config file path to localStorage\n    // Check if the projectFolder is already in the list, if so remove it\n    const projectFile = { 'project_name': this.projectName, 'root': await path.join(this.outputFolder, this.projectName) };\n    const existingRoots = this.localStoragesProjectsFilepaths.map((projectFile) => projectFile.root);\n\n    if (!existingRoots.includes(projectFile.root)) {\n      this.localStoragesProjectsFilepaths.push(projectFile);\n      localStorage.setItem(\n        'projects',\n        JSON.stringify(this.localStoragesProjectsFilepaths)\n      );\n    }\n\n    await this.listFiles();\n    this.viewService.navigateToGallery();\n\n  }\n\n  async loadProjectFile(filepath: string) {\n    return invokeLoadJsonFile(filepath).then((projectConfig: any) => {\n\n      if (projectConfig) {\n        // Convert JSON string to ProjectConfig\n\n        projectConfig = JSON.parse(projectConfig);\n\n        this.create_project(projectConfig as ProjectConfig);\n      }\n    });\n  }\n\n  async removeProjectFile(filepath: string) {\n    this.localStoragesProjectsFilepaths = this.localStoragesProjectsFilepaths.filter(\n      (projectFile) => projectFile.root !== filepath\n    );\n    localStorage.setItem(\n      'projects',\n      JSON.stringify(this.localStoragesProjectsFilepaths)\n    );\n  }\n\n  async listFiles() {\n    let fileList = await invoke('list_files_in_folder', {\n      folder: this.inputFolder,\n      regexfilter: this.inputRegex,\n      recursive: this.recursive,\n    });\n    this.extractImagesName(fileList);\n    this.isProjectStarted = true;\n\n  }\n\n  extractImagesName(files: string[]) {\n    this.imagesName = files.map((file) => {\n      let filename = file.split(this.inputFolder)[1];\n      return filename;\n    });\n  }\n\n  async openEditor(index: number) {\n    this.viewService.setLoading(true, 'Loading editor');\n    this.activeIndex = index;\n    const openPromise$ = path\n      .join(this.inputFolder, this.imagesName[index])\n      .then((filepath) => {\n        this.activeImage = loadImageFile(filepath);\n\n        return this.activeImage.then((image) => {\n          return this.viewService.navigateToEditor()?.then(() => {\n            this.viewService.endLoading();\n          });\n        });\n      });\n\n    return openPromise$;\n  }\n\n  async goNext() {\n    if (\n      this.activeIndex != null &&\n      this.activeIndex  0) {\n      return this.openEditor(this.activeIndex - 1);\n    }\n    return Promise.resolve('No more images');\n  }\n  resetProject() {\n    this.isProjectStarted = false;\n    this.imagesName = [];\n    this.activeIndex = null;\n    this.activeImage = null;\n  }\n\n  async create_project(config: ProjectConfig) {\n    this.isClassification = config.is_classification;\n    this.isSegmentation = config.is_segmentation;\n    this.isInstanceSegmentation = config.is_instance_segmentation;\n    this.isBoundingBoxDetection = config.is_bbox_detection;\n    this.projectName = config.project_name;\n    this.inputFolder = config.input_dir;\n    this.outputFolder = config.output_dir;\n    this.projectFolder = await path.join(this.outputFolder, this.projectName);\n\n    if (config.segmentation_classes) {\n      this.labelService.listSegmentationLabels =\n        config.segmentation_classes.map((label, index) => {\n          return {\n            label,\n            color: getDefaultColor(index + 1),\n            isVisible: true,\n            shades: null,\n          } as SegLabel;\n        });\n    }\n    if (config.classification_classes) {\n      config.classification_classes.forEach((task) => {\n        this.labelService.addClassificationTask(\n          new MulticlassTask(\n            task.name,\n            task.classes,\n            task.default ? task.default : undefined\n          )\n        );\n      });\n    }\n    if (config.classification_multilabel) {\n      this.labelService.addMultilabelTask(\n        new MultilabelTask(\n          config.classification_multilabel.name,\n          config.classification_multilabel.classes,\n          config.classification_multilabel.default\n            ? config.classification_multilabel.default\n            : undefined\n        )\n      );\n    }\n\n    this.labelService.rebuildTreeNodes();\n    this.startProject();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Rect.html":{"url":"interfaces/Rect.html","title":"interface - Rect","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Rect\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Core/interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            y\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SegLabel {\n  label: string;\n  color: string;\n  isVisible: boolean;\n  shades: string[] | null;\n}\n\nexport interface SegInstance {\n  label: SegLabel;\n  instance: number;\n  shade: string;\n}\n\nexport interface BboxLabel {\n  label: SegLabel;\n  bbox: Rect;\n  instance: number;\n}\n\nexport interface Thumbnail {\n  name: Promise;\n  thumbnailPath: Promise;\n}\n\nexport interface Point2D {\n  x: number;\n  y: number;\n}\n\nexport interface Rect {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\n\nexport interface Viewbox {\n  xmin: number;\n  ymin: number;\n  xmax: number;\n  ymax: number;\n}\n\nexport interface UndoRedoCanvasElement {\n  data: Blob | Blob[];\n  index: number;\n}\n\nexport interface MulticlassInterface {\n  name: string;\n  classes: string[];\n  default: string | null;\n}\n\nexport interface MultilabelInterface {\n  name: string;\n  classes: string[];\n  default: string[] | null;\n}\n\nexport interface ProjectConfig {\n  project_name: string;\n  input_dir: string;\n  output_dir: string;\n  is_segmentation: boolean;\n  is_classification: boolean;\n  is_instance_segmentation: boolean;\n  is_bbox_detection: boolean;\n  segmentation_classes: null | string[];\n  classification_classes: null | MulticlassInterface[];\n  classification_multilabel: null | MultilabelInterface;\n}\n\nexport interface ImageFromCLI {\n  image_path: string;\n  mask_data: string[] | null;\n  segmentation_classes: string[] | null;\n  classification_classes: string[] | null;\n  classification_multilabel: string[] | null;\n}\n\n\nexport interface ProjectFile{\n  root: string;\n  project_name: string;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Rect-1.html":{"url":"interfaces/Rect-1.html","title":"interface - Rect-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Rect\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Components/Core/drawable-canvas/models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            y\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Point2D {\n    x: number;\n    y: number;\n}\n\nexport interface Rect {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n}\n\n\nexport interface Viewbox{\n    xmin: number;\n    ymin: number;\n    xmax: number;\n    ymax: number;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SVGElementsComponent.html":{"url":"components/SVGElementsComponent.html","title":"component - SVGElementsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SVGElementsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/Components/Core/drawable-canvas/component/svgelements/svgelements.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-svgelements\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            NgFor\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./svgelements.component.html\n            \n\n\n\n            \n                styleUrl\n                ./svgelements.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                bboxManager\n                            \n                            \n                                    Public\n                                editorService\n                            \n                            \n                                    Public\n                                labelService\n                            \n                            \n                                    \n                                svg\n                            \n                            \n                                    Public\n                                svgUIService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setViewBox\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                UIPoints\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(labelService: LabelsService, editorService: EditorService, bboxManager: BboxManagerService, svgUIService: SVGUIService)\n                    \n                \n                        \n                            \n                                Defined in src/app/Components/Core/drawable-canvas/component/svgelements/svgelements.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        labelService\n                                                  \n                                                        \n                                                                        LabelsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        editorService\n                                                  \n                                                        \n                                                                        EditorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bboxManager\n                                                  \n                                                        \n                                                                        BboxManagerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        svgUIService\n                                                  \n                                                        \n                                                                        SVGUIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        UIPoints\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/Components/Core/drawable-canvas/component/svgelements/svgelements.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setViewBox\n                        \n                    \n                \n            \n            \n                \nsetViewBox(viewbox: Rect)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/component/svgelements/svgelements.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                viewbox\n                                            \n                                                            Rect\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        bboxManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BboxManagerService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/component/svgelements/svgelements.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        editorService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EditorService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/component/svgelements/svgelements.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        labelService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LabelsService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/component/svgelements/svgelements.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        svg\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('svg')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/component/svgelements/svgelements.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        svgUIService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SVGUIService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/component/svgelements/svgelements.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, Input, ViewChild } from '@angular/core';\nimport { LabelsService } from '../../../../../Services/Project/labels.service';\nimport { Point2D, Rect } from '../../../../../Core/interface';\nimport { BboxManagerService } from '../../service/bbox-manager.service';\nimport { NgFor } from '@angular/common';\nimport { SVGUIService } from '../../service/svgui.service';\nimport { EditorService } from '../../../../../Services/UI/editor.service';\n\n\n@Component({\n  selector: 'app-svgelements',\n  standalone: true,\n  imports: [NgFor],\n  templateUrl: './svgelements.component.html',\n  styleUrl: './svgelements.component.scss',\n})\nexport class SVGElementsComponent {\n  @Input() UIPoints: string = '';\n\n  @ViewChild('svg') svg: ElementRef;\n\n  constructor(public labelService: LabelsService, \n    public editorService: EditorService,\n    public bboxManager: BboxManagerService, \n    public svgUIService: SVGUIService) {}\n\n  setViewBox(viewbox: Rect) {\n    this.svg.nativeElement.setAttribute(\n      'viewBox',\n      `${viewbox.x} ${viewbox.y} ${viewbox.width} ${viewbox.height}`\n    );\n  }\n}\n\n    \n\n    \n        \n    \n    \n\n    \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlockableDiv', 'selector': 'blockable-div'},{'name': 'BlockableP', 'selector': 'blockable-p'},{'name': 'ClassificationConfigurationComponent', 'selector': 'app-classification-configuration'},{'name': 'DrawableCanvasComponent', 'selector': 'app-drawable-canvas'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'GalleryComponent', 'selector': 'app-gallery'},{'name': 'GalleryElementComponent', 'selector': 'app-gallery-element'},{'name': 'InstanceLabelComponent', 'selector': 'app-instance-label'},{'name': 'InteractiveBboxComponent', 'selector': 'app-interactive-bbox'},{'name': 'LabelledSwitchComponent', 'selector': 'app-labelled-switch'},{'name': 'LabelsComponent', 'selector': 'app-labels'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'ProjectConfigurationComponent', 'selector': 'app-project-configuration'},{'name': 'SVGElementsComponent', 'selector': 'app-svgelements'},{'name': 'TestingComponent', 'selector': 'app-testing'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'ToolSettingComponent', 'selector': 'app-tool-setting'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SVGElementsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SVGUIService.html":{"url":"injectables/SVGUIService.html","title":"injectable - SVGUIService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SVGUIService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Components/Core/drawable-canvas/service/svgui.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                eraserPath\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addPoint\n                            \n                            \n                                getEraserPathasSVG\n                            \n                            \n                                resetPath\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/Components/Core/drawable-canvas/service/svgui.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addPoint\n                        \n                    \n                \n            \n            \n                \naddPoint(point: Point2D)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/svgui.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                point\n                                            \n                                                            Point2D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEraserPathasSVG\n                        \n                    \n                \n            \n            \n                \ngetEraserPathasSVG()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/svgui.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPath\n                        \n                    \n                \n            \n            \n                \nresetPath()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/svgui.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        eraserPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Point2D[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/svgui.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Point2D } from '../models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SVGUIService {\n\n  eraserPath: Point2D[] = [];\n\n  constructor() { \n\n  }\n  getEraserPathasSVG(): string {\n    let path = '';\n\n    if (this.eraserPath.length \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SegInstance.html":{"url":"interfaces/SegInstance.html","title":"interface - SegInstance","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SegInstance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Core/interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            instance\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            shade\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        instance\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        instance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         SegLabel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SegLabel\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shade\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        shade:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SegLabel {\n  label: string;\n  color: string;\n  isVisible: boolean;\n  shades: string[] | null;\n}\n\nexport interface SegInstance {\n  label: SegLabel;\n  instance: number;\n  shade: string;\n}\n\nexport interface BboxLabel {\n  label: SegLabel;\n  bbox: Rect;\n  instance: number;\n}\n\nexport interface Thumbnail {\n  name: Promise;\n  thumbnailPath: Promise;\n}\n\nexport interface Point2D {\n  x: number;\n  y: number;\n}\n\nexport interface Rect {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\n\nexport interface Viewbox {\n  xmin: number;\n  ymin: number;\n  xmax: number;\n  ymax: number;\n}\n\nexport interface UndoRedoCanvasElement {\n  data: Blob | Blob[];\n  index: number;\n}\n\nexport interface MulticlassInterface {\n  name: string;\n  classes: string[];\n  default: string | null;\n}\n\nexport interface MultilabelInterface {\n  name: string;\n  classes: string[];\n  default: string[] | null;\n}\n\nexport interface ProjectConfig {\n  project_name: string;\n  input_dir: string;\n  output_dir: string;\n  is_segmentation: boolean;\n  is_classification: boolean;\n  is_instance_segmentation: boolean;\n  is_bbox_detection: boolean;\n  segmentation_classes: null | string[];\n  classification_classes: null | MulticlassInterface[];\n  classification_multilabel: null | MultilabelInterface;\n}\n\nexport interface ImageFromCLI {\n  image_path: string;\n  mask_data: string[] | null;\n  segmentation_classes: string[] | null;\n  classification_classes: string[] | null;\n  classification_multilabel: string[] | null;\n}\n\n\nexport interface ProjectFile{\n  root: string;\n  project_name: string;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SegLabel.html":{"url":"interfaces/SegLabel.html","title":"interface - SegLabel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SegLabel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Core/interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            isVisible\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            shades\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isVisible\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isVisible:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shades\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        shades:     string[] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[] | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SegLabel {\n  label: string;\n  color: string;\n  isVisible: boolean;\n  shades: string[] | null;\n}\n\nexport interface SegInstance {\n  label: SegLabel;\n  instance: number;\n  shade: string;\n}\n\nexport interface BboxLabel {\n  label: SegLabel;\n  bbox: Rect;\n  instance: number;\n}\n\nexport interface Thumbnail {\n  name: Promise;\n  thumbnailPath: Promise;\n}\n\nexport interface Point2D {\n  x: number;\n  y: number;\n}\n\nexport interface Rect {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\n\nexport interface Viewbox {\n  xmin: number;\n  ymin: number;\n  xmax: number;\n  ymax: number;\n}\n\nexport interface UndoRedoCanvasElement {\n  data: Blob | Blob[];\n  index: number;\n}\n\nexport interface MulticlassInterface {\n  name: string;\n  classes: string[];\n  default: string | null;\n}\n\nexport interface MultilabelInterface {\n  name: string;\n  classes: string[];\n  default: string[] | null;\n}\n\nexport interface ProjectConfig {\n  project_name: string;\n  input_dir: string;\n  output_dir: string;\n  is_segmentation: boolean;\n  is_classification: boolean;\n  is_instance_segmentation: boolean;\n  is_bbox_detection: boolean;\n  segmentation_classes: null | string[];\n  classification_classes: null | MulticlassInterface[];\n  classification_multilabel: null | MultilabelInterface;\n}\n\nexport interface ImageFromCLI {\n  image_path: string;\n  mask_data: string[] | null;\n  segmentation_classes: string[] | null;\n  classification_classes: string[] | null;\n  classification_multilabel: string[] | null;\n}\n\n\nexport interface ProjectFile{\n  root: string;\n  project_name: string;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StampMaker.html":{"url":"classes/StampMaker.html","title":"class - StampMaker","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StampMaker\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Core/canvases/stampmaker.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                canvases\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fillCircle\n                            \n                            \n                                make\n                            \n                            \n                                parseColor\n                            \n                            \n                                plotCircle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/Core/canvases/stampmaker.ts:14\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        canvases\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Core/canvases/stampmaker.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        fillCircle\n                        \n                    \n                \n            \n            \n                \nfillCircle(imageData: ImageData, color: Color)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Core/canvases/stampmaker.ts:214\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                imageData\n                                            \n                                                        ImageData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                color\n                                            \n                                                            Color\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        make\n                        \n                    \n                \n            \n            \n                \nmake(size: number, color: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Core/canvases/stampmaker.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                size\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                color\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parseColor\n                        \n                    \n                \n            \n            \n                \nparseColor(color: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Core/canvases/stampmaker.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                color\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Color | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        plotCircle\n                        \n                    \n                \n            \n            \n                \nplotCircle(xm: number, ym: number, r: number, imageData: ImageData, size: number, color: Color)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Core/canvases/stampmaker.ts:136\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                xm\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ym\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                r\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                imageData\n                                            \n                                                        ImageData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                size\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                color\n                                            \n                                                            Color\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        const HexPattern = /^#?[0-9A-Fa-f]{1,2}[0-9A-Fa-f]{1,2}[0-9A-Fa-f]{1,2}$/\n\nconst RGBPattern = /^rgb\\((\\s+)?[0-9]{1,3},(\\s+)?[0-9]{1,3},(\\s+)?[0-9]{1,3}(\\s+)?\\)$/\n\ninterface Color {\n\n    r: number\n\n    g: number\n\n    b: number\n}\nexport default class StampMaker {\n    canvases: { [key: string]: { [size: number]: OffscreenCanvas } }\n\n    constructor() {\n\n        this.canvases = {}\n\n    }\n\n    parseColor(color: string): Color | undefined {\n\n        const isHex = HexPattern.test(color)\n\n        const isRGB = RGBPattern.test(color)\n\n        if (!isHex && !isRGB) {\n\n            return;\n        }\n\n        if (isHex) {\n\n            let c = color[0] === '#' ? color.slice(1) : color\n\n            c = c.length === 3\n\n                ? c.split('').reduce((acc, it) => acc + it + it, '')\n\n                : c\n\n            const r = parseInt(c.slice(0, 2), 16)\n\n            const g = parseInt(c.slice(2, 4), 16)\n\n            const b = parseInt(c.slice(4, 6), 16)\n\n            return { r, g, b } as Color\n\n        }\n\n        if (isRGB) {\n\n            let [r, g, b] = color\n\n                .replace(/rgb|\\s+|\\(|\\)/g, '')\n\n                .split(',')\n\n                .map(it => parseInt(it))\n\n            r = r > 255 ? 255 : r\n\n            g = g > 255 ? 255 : g\n\n            b = b > 255 ? 255 : b\n\n            return { r, g, b } as Color\n\n        }\n        return;\n\n    }\n\n\n    make(size: number, color: string) {\n\n\n        // size = size * window.devicePixelRatio\n\n        const _color = this.parseColor(color)\n        if (!_color) return\n\n        const _strColor = JSON.stringify(_color)\n\n        this.canvases[_strColor] = this.canvases[_strColor] || {}\n\n\n        if (this.canvases[_strColor][size] != null) {\n\n            return this.canvases[_strColor][size]\n\n        }\n\n        const canvas = new OffscreenCanvas(size, size)\n\n        size = size + (size % 2)\n\n        canvas.width = size\n\n        canvas.height = size\n\n\n        const context = canvas.getContext('2d')\n\n        const imageData = context!.createImageData(size, size)\n\n        for (let i = 0; i  x || err > y) {\n\n                err += ++x * 2 + 1 /* x step */\n\n            }\n\n        } while (x \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StateManagerService.html":{"url":"injectables/StateManagerService.html","title":"injectable - StateManagerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StateManagerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Components/Core/drawable-canvas/service/state-manager.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentPoint\n                            \n                            \n                                    Public\n                                height\n                            \n                            \n                                    Public\n                                isDrawing\n                            \n                            \n                                    Public\n                                maxPoint\n                            \n                            \n                                    Public\n                                minPoint\n                            \n                            \n                                    Public\n                                previousPoint\n                            \n                            \n                                    Public\n                                recomputeCanvasSum\n                            \n                            \n                                    Public\n                                width\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getBoundingBox\n                            \n                            \n                                getBrushSizeOffset\n                            \n                            \n                                isFirstStroke\n                            \n                            \n                                reset\n                            \n                            \n                                resetCurrentPoint\n                            \n                            \n                                resetMinMaxPoints\n                            \n                            \n                                resetPreviousPoint\n                            \n                            \n                                setWidthAndHeight\n                            \n                            \n                                updateCurrentPoint\n                            \n                            \n                                updateMinMaxPoints\n                            \n                            \n                                updatePreviousPoint\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(editorService: EditorService)\n                    \n                \n                        \n                            \n                                Defined in src/app/Components/Core/drawable-canvas/service/state-manager.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        editorService\n                                                  \n                                                        \n                                                                        EditorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getBoundingBox\n                        \n                    \n                \n            \n            \n                \ngetBoundingBox()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/state-manager.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { x: any; y: any; width: number; height: number; }\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBrushSizeOffset\n                        \n                    \n                \n            \n            \n                \ngetBrushSizeOffset()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/state-manager.service.ts:86\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFirstStroke\n                        \n                    \n                \n            \n            \n                \nisFirstStroke()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/state-manager.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reset\n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/state-manager.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetCurrentPoint\n                        \n                    \n                \n            \n            \n                \nresetCurrentPoint()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/state-manager.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetMinMaxPoints\n                        \n                    \n                \n            \n            \n                \nresetMinMaxPoints()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/state-manager.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPreviousPoint\n                        \n                    \n                \n            \n            \n                \nresetPreviousPoint()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/state-manager.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setWidthAndHeight\n                        \n                    \n                \n            \n            \n                \nsetWidthAndHeight(width: number, height: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/state-manager.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                width\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                height\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateCurrentPoint\n                        \n                    \n                \n            \n            \n                \nupdateCurrentPoint(point: Point2D)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/state-manager.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                point\n                                            \n                                                            Point2D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateMinMaxPoints\n                        \n                    \n                \n            \n            \n                \nupdateMinMaxPoints(point: Point2D)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/state-manager.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                point\n                                            \n                                                            Point2D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatePreviousPoint\n                        \n                    \n                \n            \n            \n                \nupdatePreviousPoint(point: Point2D)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/state-manager.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                point\n                                            \n                                                            Point2D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currentPoint\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Point2D\n\n                    \n                \n                \n                    \n                        Default value : { x: -1, y: -1 }\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/state-manager.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 512\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/state-manager.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isDrawing\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/state-manager.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        maxPoint\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Point2D\n\n                    \n                \n                \n                    \n                        Default value : { x: 0, y: 0 }\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/state-manager.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        minPoint\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Point2D\n\n                    \n                \n                \n                    \n                        Default value : { x: Number.MAX_VALUE, y: Number.MAX_VALUE }\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/state-manager.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        previousPoint\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Point2D\n\n                    \n                \n                \n                    \n                        Default value : { x: -1, y: -1 }\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/state-manager.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        recomputeCanvasSum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/state-manager.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 512\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/state-manager.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Point2D } from '../models';\nimport { EditorService } from '../../../../Services/UI/editor.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StateManagerService {\n\n  public width: number = 512;\n  public height: number = 512;\n\n  public isDrawing: boolean = false;\n\n  public currentPoint: Point2D = { x: -1, y: -1 };\n  public previousPoint: Point2D = { x: -1, y: -1 };\n\n  public minPoint: Point2D = { x: Number.MAX_VALUE, y: Number.MAX_VALUE };\n  public maxPoint: Point2D = { x: 0, y: 0 };\n\n  public recomputeCanvasSum: boolean = false;\n\n\n  constructor(private editorService: EditorService) { }\n\n  updatePreviousPoint(point: Point2D) {\n    this.previousPoint = point;\n  }\n\n  updateCurrentPoint(point: Point2D) {\n    this.currentPoint = point;\n  }\n\n  setWidthAndHeight(width: number, height: number) {\n    this.width = width;\n    this.height = height;\n  }\n\n  resetMinMaxPoints() {\n    this.minPoint = { x: Number.MAX_VALUE, y: Number.MAX_VALUE };\n    this.maxPoint = { x: 0, y: 0 };\n  }\n\n  resetCurrentPoint() {\n    this.currentPoint = { x: -1, y: -1 };\n  }\n\n  resetPreviousPoint() {\n    this.previousPoint = { x: -1, y: -1 };\n  }\n\n  reset(){\n    this.isDrawing = false;\n    this.resetMinMaxPoints();\n    this.resetPreviousPoint();\n    this.resetCurrentPoint();\n  }\n\n  isFirstStroke() {\n    return this.previousPoint.x === -1 && this.previousPoint.y === -1;\n  }\n\n  updateMinMaxPoints(point: Point2D) {\n    const offset = this.getBrushSizeOffset();\n    this.minPoint = {\n      x: Math.max(0, Math.min(this.minPoint.x, point.x - offset)),\n      y: Math.max(0, Math.min(this.minPoint.y, point.y - offset))\n    };\n    this.maxPoint = {\n      x: Math.max(this.maxPoint.x, point.x + offset),\n      y: Math.max(this.maxPoint.y, point.y + offset)\n    };\n  }\n\n  getBoundingBox() {\n    return {\n      x: this.minPoint.x,\n      y: this.minPoint.y,\n      width: this.maxPoint.x - this.minPoint.x,\n      height: this.maxPoint.y - this.minPoint.y,\n    };\n  }\n\n\n\n  getBrushSizeOffset() {\n\n    return this.editorService.isToolWithBrushSize()\n    ? this.editorService.lineWidth / 2 + 2\n    : 0;\n\n  }\n    \n\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TestingComponent.html":{"url":"components/TestingComponent.html","title":"component - TestingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TestingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/Components/Core/testing/testing.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-testing\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./testing.component.html\n            \n\n\n\n            \n                styleUrl\n                ./testing.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-testing',\n  standalone: true,\n  imports: [],\n  templateUrl: './testing.component.html',\n  styleUrl: './testing.component.scss'\n})\nexport class TestingComponent {\n\n}\n\n    \n\n    \n        \n\n\n    test\n\ntesting works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    testtesting works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlockableDiv', 'selector': 'blockable-div'},{'name': 'BlockableP', 'selector': 'blockable-p'},{'name': 'ClassificationConfigurationComponent', 'selector': 'app-classification-configuration'},{'name': 'DrawableCanvasComponent', 'selector': 'app-drawable-canvas'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'GalleryComponent', 'selector': 'app-gallery'},{'name': 'GalleryElementComponent', 'selector': 'app-gallery-element'},{'name': 'InstanceLabelComponent', 'selector': 'app-instance-label'},{'name': 'InteractiveBboxComponent', 'selector': 'app-interactive-bbox'},{'name': 'LabelledSwitchComponent', 'selector': 'app-labelled-switch'},{'name': 'LabelsComponent', 'selector': 'app-labels'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'ProjectConfigurationComponent', 'selector': 'app-project-configuration'},{'name': 'SVGElementsComponent', 'selector': 'app-svgelements'},{'name': 'TestingComponent', 'selector': 'app-testing'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'ToolSettingComponent', 'selector': 'app-tool-setting'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TestingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Thumbnail.html":{"url":"interfaces/Thumbnail.html","title":"interface - Thumbnail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Thumbnail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Core/interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            thumbnailPath\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:     Promise\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Promise\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thumbnailPath\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thumbnailPath:     Promise\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Promise\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SegLabel {\n  label: string;\n  color: string;\n  isVisible: boolean;\n  shades: string[] | null;\n}\n\nexport interface SegInstance {\n  label: SegLabel;\n  instance: number;\n  shade: string;\n}\n\nexport interface BboxLabel {\n  label: SegLabel;\n  bbox: Rect;\n  instance: number;\n}\n\nexport interface Thumbnail {\n  name: Promise;\n  thumbnailPath: Promise;\n}\n\nexport interface Point2D {\n  x: number;\n  y: number;\n}\n\nexport interface Rect {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\n\nexport interface Viewbox {\n  xmin: number;\n  ymin: number;\n  xmax: number;\n  ymax: number;\n}\n\nexport interface UndoRedoCanvasElement {\n  data: Blob | Blob[];\n  index: number;\n}\n\nexport interface MulticlassInterface {\n  name: string;\n  classes: string[];\n  default: string | null;\n}\n\nexport interface MultilabelInterface {\n  name: string;\n  classes: string[];\n  default: string[] | null;\n}\n\nexport interface ProjectConfig {\n  project_name: string;\n  input_dir: string;\n  output_dir: string;\n  is_segmentation: boolean;\n  is_classification: boolean;\n  is_instance_segmentation: boolean;\n  is_bbox_detection: boolean;\n  segmentation_classes: null | string[];\n  classification_classes: null | MulticlassInterface[];\n  classification_multilabel: null | MultilabelInterface;\n}\n\nexport interface ImageFromCLI {\n  image_path: string;\n  mask_data: string[] | null;\n  segmentation_classes: string[] | null;\n  classification_classes: string[] | null;\n  classification_multilabel: string[] | null;\n}\n\n\nexport interface ProjectFile{\n  root: string;\n  project_name: string;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Tool.html":{"url":"classes/Tool.html","title":"class - Tool","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Tool\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Core/canvases/tools.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                icon\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, name: string, icon: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/Core/canvases/tools.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        icon\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Core/canvases/tools.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Core/canvases/tools.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Core/canvases/tools.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Tool{\n    public id: number;\n    public name: string;\n    public icon: string;\n    constructor(id: number, name: string, icon: string){\n        this.id = id;\n        this.name = name;\n        this.icon = icon;\n    }\n}\n\n\nexport class Tools {\n    public static PAN = new Tool(0, \"Pan\", \"pi pi-arrows-alt\");\n    public static PEN = new Tool(1, \"Pen\", \"pi pi-pencil\");\n    public static ERASER = new Tool(8, \"Eraser\", \"pi pi-eraser\");\n    public static LASSO = new Tool(2, \"Lasso\", \"pi pi-cloud\");\n    public static LASSO_ERASER = new Tool(3, \"Lasso Eraser\", \"pi pi-cloud-slash\");\n    public static ALL_TOOLS = [Tools.PAN, Tools.PEN, Tools.ERASER, Tools.LASSO, Tools.LASSO_ERASER];\n}\n\nexport enum PostProcessOption{\n    MEDSAM = 'MedSAM',\n    OTSU = 'Otsu',\n    CRF = 'CRF',\n  }\n\nexport const postProcessingOptions = [PostProcessOption.OTSU, PostProcessOption.MEDSAM, PostProcessOption.CRF];\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToolSettingComponent.html":{"url":"components/ToolSettingComponent.html","title":"component - ToolSettingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ToolSettingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/Components/Interface/editor/tool-setting/tool-setting.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tool-setting\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            PanelModule\n                            SliderModule\n                            NgIf\n                            InputSwitchModule\n                            NgSwitch\n                            SelectButtonModule\n                            FormsModule\n                            CardModule\n                                LabelledSwitchComponent\n                            FieldsetModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./tool-setting.component.html\n            \n\n\n\n            \n                styleUrl\n                ./tool-setting.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                drawService\n                            \n                            \n                                    Public\n                                imageProcess\n                            \n                            \n                                postProcessingOptions\n                            \n                            \n                                ppOption\n                            \n                            \n                                    Public\n                                projectService\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(drawService: EditorService, projectService: ProjectService, imageProcess: ImageProcessingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/Components/Interface/editor/tool-setting/tool-setting.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        drawService\n                                                  \n                                                        \n                                                                        EditorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        imageProcess\n                                                  \n                                                        \n                                                                        ImageProcessingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        drawService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EditorService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Interface/editor/tool-setting/tool-setting.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        imageProcess\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ImageProcessingService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Interface/editor/tool-setting/tool-setting.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        postProcessingOptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : postProcessingOptions\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Interface/editor/tool-setting/tool-setting.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ppOption\n                        \n                    \n                \n            \n                \n                    \n                        Default value : PostProcessOption\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Interface/editor/tool-setting/tool-setting.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProjectService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Interface/editor/tool-setting/tool-setting.component.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { PanelModule } from 'primeng/panel';\nimport { NgIf, NgSwitch, CommonModule } from '@angular/common';\nimport { InputSwitchModule } from 'primeng/inputswitch';\nimport { EditorService } from '../../../../Services/UI/editor.service';\nimport { FormsModule } from '@angular/forms';\nimport { CardModule } from 'primeng/card';\nimport { LabelledSwitchComponent } from '../../../Core/labelled-switch/labelled-switch.component';\nimport { FieldsetModule } from 'primeng/fieldset';\nimport { SliderModule } from 'primeng/slider';\nimport { ProjectService } from '../../../../Services/Project/project.service';\nimport { ImageProcessingService } from '../../../Core/drawable-canvas/service/image-processing.service';\nimport { SelectButtonModule } from 'primeng/selectbutton';\nimport { PostProcessOption } from '../../../../Core/canvases/tools';\nimport { postProcessingOptions } from '../../../../Core/canvases/tools';\n@Component({\n  selector: 'app-tool-setting',\n  standalone: true,\n  imports: [\n    CommonModule,\n    PanelModule,\n    SliderModule,\n    NgIf,\n    InputSwitchModule,\n    NgSwitch,\n    SelectButtonModule,\n    FormsModule,\n    CardModule,\n    LabelledSwitchComponent,\n    FieldsetModule,\n  ],\n  templateUrl: './tool-setting.component.html',\n  styleUrl: './tool-setting.component.scss',\n})\nexport class ToolSettingComponent {\n  postProcessingOptions = postProcessingOptions;\n  ppOption = PostProcessOption;\n  constructor(\n    public drawService: EditorService,\n    public projectService: ProjectService,\n    public imageProcess: ImageProcessingService\n  ) {}\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n\n        \n        \n      \n      \n        Increment after stroke\n      \n    \n\n    \n      \n        Convert to grayscale\n        Histogram stretching\n\n        \n          \n            \n            \n            Brightness\n          \n\n          \n            \n            \n            Contrast\n          \n\n          \n            \n            \n            Gamma\n          \n        \n\n        Smooth\n\n        Edge reinforcement\n\n        \n          \n          \n          Kernel size\n        \n\n        \n          \n          \n          Edge strength\n        \n      \n    \n\n    \n      \n        \n          \n          \n            \n              Automatically snap to the extrema by thresholding the area\n                covered by the brush stroke\n              \n              Use inverse image\n              Smooth\n              \n                \n\n                \n              \n              Force connectivity\n            \n            \n              \n                Use MED-Sam has a post-processing step to auto-segment based on\n                the current stroke indication.\n              \n              \n                \n                \n              \n            \n            \n              Use Conditional Random Field to refine the segmentation\n              \n            \n          \n        \n        \n          \n            Automatically remove all connected pixels that were covered by the\n            brush stroke\n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        Increment after stroke                            Convert to grayscale        Histogram stretching                                                      Brightness                                                        Contrast                                                        Gamma                          Smooth        Edge reinforcement                                      Kernel size                                              Edge strength                                                                                  Automatically snap to the extrema by thresholding the area                covered by the brush stroke                            Use inverse image              Smooth                                                                          Force connectivity                                                      Use MED-Sam has a post-processing step to auto-segment based on                the current stroke indication.                                                                                                                Use Conditional Random Field to refine the segmentation                                                                          Automatically remove all connected pixels that were covered by the            brush stroke                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlockableDiv', 'selector': 'blockable-div'},{'name': 'BlockableP', 'selector': 'blockable-p'},{'name': 'ClassificationConfigurationComponent', 'selector': 'app-classification-configuration'},{'name': 'DrawableCanvasComponent', 'selector': 'app-drawable-canvas'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'GalleryComponent', 'selector': 'app-gallery'},{'name': 'GalleryElementComponent', 'selector': 'app-gallery-element'},{'name': 'InstanceLabelComponent', 'selector': 'app-instance-label'},{'name': 'InteractiveBboxComponent', 'selector': 'app-interactive-bbox'},{'name': 'LabelledSwitchComponent', 'selector': 'app-labelled-switch'},{'name': 'LabelsComponent', 'selector': 'app-labels'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'ProjectConfigurationComponent', 'selector': 'app-project-configuration'},{'name': 'SVGElementsComponent', 'selector': 'app-svgelements'},{'name': 'TestingComponent', 'selector': 'app-testing'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'ToolSettingComponent', 'selector': 'app-tool-setting'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToolSettingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToolbarComponent.html":{"url":"components/ToolbarComponent.html","title":"component - ToolbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ToolbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/Components/Interface/editor/toolbar/toolbar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-toolbar\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                ToolbarModule\n                            ButtonModule\n                            PanelModule\n                            SelectButtonModule\n                            BlockUIModule\n                            CommonModule\n                            FormsModule\n                            SliderModule\n                            InputSwitchModule\n                                BlockableP\n                                LabelledSwitchComponent\n                                BlockableDiv\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./toolbar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./toolbar.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                editorService\n                            \n                            \n                                tools\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(editorService: EditorService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/Components/Interface/editor/toolbar/toolbar.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        editorService\n                                                  \n                                                        \n                                                                        EditorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Interface/editor/toolbar/toolbar.component.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        editorService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EditorService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Interface/editor/toolbar/toolbar.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tools\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Tools.ALL_TOOLS\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Interface/editor/toolbar/toolbar.component.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, ChangeDetectorRef, Component } from '@angular/core';\nimport { ToolbarModule } from 'primeng/toolbar';\nimport { ButtonModule } from 'primeng/button';\nimport { SelectButtonModule } from 'primeng/selectbutton';\nimport { Tools } from '../../../../Core/canvases/tools';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { EditorService } from '../../../../Services/UI/editor.service';\nimport { SliderModule } from 'primeng/slider';\nimport { InputSwitchModule } from 'primeng/inputswitch';\nimport { LabelledSwitchComponent } from '../../../Core/labelled-switch/labelled-switch.component';\nimport { BlockUIModule } from 'primeng/blockui';\nimport { PanelModule } from 'primeng/panel';\nimport { BlockableP } from '../../../Core/Blockable/p/p.component';\nimport { BlockableDiv } from \"../../../Core/Blockable/div/div.component\";\n\n@Component({\n  selector: 'app-toolbar',\n  standalone: true,\n  imports: [\n    ToolbarModule,\n    ButtonModule,\n    PanelModule,\n    SelectButtonModule,\n    BlockUIModule,\n    CommonModule,\n    FormsModule,\n    SliderModule,\n    InputSwitchModule,\n    BlockableP,\n    LabelledSwitchComponent,\n    BlockableDiv\n],\n  templateUrl: './toolbar.component.html',\n  styleUrl: './toolbar.component.scss',\n})\nexport class ToolbarComponent implements AfterViewInit {\n  tools = Tools.ALL_TOOLS;\n\n  constructor(\n    public editorService: EditorService,\n    private cdr: ChangeDetectorRef\n  ) {}\n\n  ngAfterViewInit(): void {\n    this.cdr.detectChanges();\n  }\n}\n\n    \n\n    \n        \n   \n  \n    \n      \n        \n          \n        \n      \n\n      \n      \n          \n          \n      \n    \n      \n      \n        Swap existing markers\n    \n      \n      \n        Erase all labels\n\n      \n        Show only edges\n\n      \n      \n      \n      \n        Image processing\n      \n        Post-process drawing\n    \n  \n   \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                             Swap existing markers                        Erase all labels              Show only edges                                Image processing              Post-process drawing         '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlockableDiv', 'selector': 'blockable-div'},{'name': 'BlockableP', 'selector': 'blockable-p'},{'name': 'ClassificationConfigurationComponent', 'selector': 'app-classification-configuration'},{'name': 'DrawableCanvasComponent', 'selector': 'app-drawable-canvas'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'GalleryComponent', 'selector': 'app-gallery'},{'name': 'GalleryElementComponent', 'selector': 'app-gallery-element'},{'name': 'InstanceLabelComponent', 'selector': 'app-instance-label'},{'name': 'InteractiveBboxComponent', 'selector': 'app-interactive-bbox'},{'name': 'LabelledSwitchComponent', 'selector': 'app-labelled-switch'},{'name': 'LabelsComponent', 'selector': 'app-labels'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'ProjectConfigurationComponent', 'selector': 'app-project-configuration'},{'name': 'SVGElementsComponent', 'selector': 'app-svgelements'},{'name': 'TestingComponent', 'selector': 'app-testing'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'ToolSettingComponent', 'selector': 'app-tool-setting'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToolbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Tools.html":{"url":"classes/Tools.html","title":"class - Tools","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Tools\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Core/canvases/tools.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                ALL_TOOLS\n                            \n                            \n                                    Static\n                                ERASER\n                            \n                            \n                                    Static\n                                LASSO\n                            \n                            \n                                    Static\n                                LASSO_ERASER\n                            \n                            \n                                    Static\n                                PAN\n                            \n                            \n                                    Static\n                                PEN\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        ALL_TOOLS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [Tools.PAN, Tools.PEN, Tools.ERASER, Tools.LASSO, Tools.LASSO_ERASER]\n                    \n                \n                    \n                        \n                                Defined in src/app/Core/canvases/tools.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        ERASER\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Tool(8, \"Eraser\", \"pi pi-eraser\")\n                    \n                \n                    \n                        \n                                Defined in src/app/Core/canvases/tools.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        LASSO\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Tool(2, \"Lasso\", \"pi pi-cloud\")\n                    \n                \n                    \n                        \n                                Defined in src/app/Core/canvases/tools.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        LASSO_ERASER\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Tool(3, \"Lasso Eraser\", \"pi pi-cloud-slash\")\n                    \n                \n                    \n                        \n                                Defined in src/app/Core/canvases/tools.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        PAN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Tool(0, \"Pan\", \"pi pi-arrows-alt\")\n                    \n                \n                    \n                        \n                                Defined in src/app/Core/canvases/tools.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        PEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Tool(1, \"Pen\", \"pi pi-pencil\")\n                    \n                \n                    \n                        \n                                Defined in src/app/Core/canvases/tools.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Tool{\n    public id: number;\n    public name: string;\n    public icon: string;\n    constructor(id: number, name: string, icon: string){\n        this.id = id;\n        this.name = name;\n        this.icon = icon;\n    }\n}\n\n\nexport class Tools {\n    public static PAN = new Tool(0, \"Pan\", \"pi pi-arrows-alt\");\n    public static PEN = new Tool(1, \"Pen\", \"pi pi-pencil\");\n    public static ERASER = new Tool(8, \"Eraser\", \"pi pi-eraser\");\n    public static LASSO = new Tool(2, \"Lasso\", \"pi pi-cloud\");\n    public static LASSO_ERASER = new Tool(3, \"Lasso Eraser\", \"pi pi-cloud-slash\");\n    public static ALL_TOOLS = [Tools.PAN, Tools.PEN, Tools.ERASER, Tools.LASSO, Tools.LASSO_ERASER];\n}\n\nexport enum PostProcessOption{\n    MEDSAM = 'MedSAM',\n    OTSU = 'Otsu',\n    CRF = 'CRF',\n  }\n\nexport const postProcessingOptions = [PostProcessOption.OTSU, PostProcessOption.MEDSAM, PostProcessOption.CRF];\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UndoRedoCanvasElement.html":{"url":"interfaces/UndoRedoCanvasElement.html","title":"interface - UndoRedoCanvasElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UndoRedoCanvasElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Core/interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            index\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     Blob | Blob[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Blob | Blob[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SegLabel {\n  label: string;\n  color: string;\n  isVisible: boolean;\n  shades: string[] | null;\n}\n\nexport interface SegInstance {\n  label: SegLabel;\n  instance: number;\n  shade: string;\n}\n\nexport interface BboxLabel {\n  label: SegLabel;\n  bbox: Rect;\n  instance: number;\n}\n\nexport interface Thumbnail {\n  name: Promise;\n  thumbnailPath: Promise;\n}\n\nexport interface Point2D {\n  x: number;\n  y: number;\n}\n\nexport interface Rect {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\n\nexport interface Viewbox {\n  xmin: number;\n  ymin: number;\n  xmax: number;\n  ymax: number;\n}\n\nexport interface UndoRedoCanvasElement {\n  data: Blob | Blob[];\n  index: number;\n}\n\nexport interface MulticlassInterface {\n  name: string;\n  classes: string[];\n  default: string | null;\n}\n\nexport interface MultilabelInterface {\n  name: string;\n  classes: string[];\n  default: string[] | null;\n}\n\nexport interface ProjectConfig {\n  project_name: string;\n  input_dir: string;\n  output_dir: string;\n  is_segmentation: boolean;\n  is_classification: boolean;\n  is_instance_segmentation: boolean;\n  is_bbox_detection: boolean;\n  segmentation_classes: null | string[];\n  classification_classes: null | MulticlassInterface[];\n  classification_multilabel: null | MultilabelInterface;\n}\n\nexport interface ImageFromCLI {\n  image_path: string;\n  mask_data: string[] | null;\n  segmentation_classes: string[] | null;\n  classification_classes: string[] | null;\n  classification_multilabel: string[] | null;\n}\n\n\nexport interface ProjectFile{\n  root: string;\n  project_name: string;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UndoRedoService.html":{"url":"injectables/UndoRedoService.html","title":"injectable - UndoRedoService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UndoRedoService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Components/Core/drawable-canvas/service/undo-redo.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                redrawRequest\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                empty\n                            \n                            \n                                redo\n                            \n                            \n                                undo\n                            \n                            \n                                    Public\n                                update_undo_redo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(canvasManagerService: CanvasManagerService, stateService: StateManagerService, editorService: EditorService, labelService: LabelsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/Components/Core/drawable-canvas/service/undo-redo.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        canvasManagerService\n                                                  \n                                                        \n                                                                        CanvasManagerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stateService\n                                                  \n                                                        \n                                                                        StateManagerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        editorService\n                                                  \n                                                        \n                                                                        EditorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        labelService\n                                                  \n                                                        \n                                                                        LabelsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        empty\n                        \n                    \n                \n            \n            \n                \nempty()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/undo-redo.service.ts:96\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        redo\n                        \n                    \n                \n            \n            \n                \nredo()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/undo-redo.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        undo\n                        \n                    \n                \n            \n            \n                \nundo()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/undo-redo.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        update_undo_redo\n                        \n                    \n                \n            \n            \n                \n                        \n                    update_undo_redo()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/undo-redo.service.ts:100\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        redrawRequest\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/undo-redo.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { UndoRedo } from '../../../../Core/misc/undoRedo';\nimport { CanvasManagerService } from './canvas-manager.service';\nimport { StateManagerService } from './state-manager.service';\nimport { EditorService } from '../../../../Services/UI/editor.service';\nimport { LabelsService } from '../../../../Services/Project/labels.service';\nimport { BehaviorSubject } from 'rxjs';\n@Injectable({\n  providedIn: 'root',\n})\nexport class UndoRedoService {\n\n  public redrawRequest: BehaviorSubject = new BehaviorSubject(false);\n  constructor(\n    private canvasManagerService: CanvasManagerService,\n    private stateService: StateManagerService,\n    private editorService: EditorService,\n    private labelService: LabelsService\n  ) {\n    this.editorService.undo.subscribe((value) => {\n      if (value) {\n        this.stateService.recomputeCanvasSum = true;\n        this.undo();\n      }\n    });\n    this.editorService.redo.subscribe((value) => {\n      if (value) {\n        this.stateService.recomputeCanvasSum = true;\n        this.redo();\n      }\n    });\n  }  \n\n  undo() {\n    const element = UndoRedo.undo();\n    if (element) {\n      this.canvasManagerService.getAllCanvas().forEach(async (classCanvas, index) => {\n        let data: Blob;\n        if (Array.isArray(element.data)) {\n          data = element.data[index];\n        } else if (element.index != index) {\n          return;\n        } else {\n          data = element.data as Blob;\n        }\n        const imageBitmap = createImageBitmap(data);\n        await imageBitmap.then((img) => {\n          const ctx = classCanvas.getContext('2d', { alpha: true })!;\n          ctx?.clearRect(0, 0, this.stateService.width, this.stateService.height);\n          ctx?.drawImage(img, 0, 0, this.stateService.width, this.stateService.height);\n          if (ctx) {\n            this.redrawRequest.next(true);\n          }\n        });\n      });\n    }\n  }\n  redo() {\n    const element = UndoRedo.redo();\n    if (element) {\n      this.canvasManagerService.getAllCanvas().forEach((classCanvas, index) => {\n        let data: Blob;\n        if (Array.isArray(element.data)) {\n          data = element.data[index];\n        } else if (element.index != index) {\n          return;\n        } else {\n          data = element.data as Blob;\n        }\n\n        const imageBitmap = createImageBitmap(data);\n        imageBitmap.then((img) => {\n          const ctx = classCanvas.getContext('2d', { alpha: true })!;\n          ctx?.clearRect(\n            0,\n            0,\n            this.stateService.width,\n            this.stateService.height\n          );\n          ctx?.drawImage(\n            img,\n            0,\n            0,\n            this.stateService.width,\n            this.stateService.height\n          );\n\n          if (ctx) {\n            this.redrawRequest.next(true);\n          }\n        });\n      });\n    }\n  }\n\n  empty() {\n    UndoRedo.empty();\n  }\n\n  public update_undo_redo(): Promise {\n    if (this.editorService.affectsMultipleLabels()) {\n      let allPromises: Promise[] = [];\n      this.canvasManagerService.getAllCanvas().forEach((classCanvas) => {\n        const blob$ = classCanvas.convertToBlob({ type: 'image/png' });\n        allPromises.push(blob$);\n      });\n      return Promise.all(allPromises).then((blobs) => {\n        UndoRedo.push({ data: blobs, index: -1 });\n      });\n    } else {\n      const blob$ = this.canvasManagerService.getActiveCanvas().convertToBlob({ type: 'image/png' });\n      return blob$.then((blob) => {\n        UndoRedo.push({\n          data: blob,\n          index: this.labelService.getActiveIndex(),\n        });\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UndoRedoStack.html":{"url":"classes/UndoRedoStack.html","title":"class - UndoRedoStack","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UndoRedoStack\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Core/misc/undoRedo.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                redoStack\n                            \n                            \n                                undoStack\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                empty\n                            \n                            \n                                push\n                            \n                            \n                                redo\n                            \n                            \n                                undo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        redoStack\n                        \n                    \n                \n            \n                \n                    \n                        Type :         _RedoStack\n\n                    \n                \n                \n                    \n                        Default value : new _RedoStack()\n                    \n                \n                    \n                        \n                                Defined in src/app/Core/misc/undoRedo.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        undoStack\n                        \n                    \n                \n            \n                \n                    \n                        Type :         _UndoStack\n\n                    \n                \n                \n                    \n                        Default value : new _UndoStack()\n                    \n                \n                    \n                        \n                                Defined in src/app/Core/misc/undoRedo.ts:47\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        empty\n                        \n                    \n                \n            \n            \n                \nempty()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Core/misc/undoRedo.ts:74\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        push\n                        \n                    \n                \n            \n            \n                \npush(element: UndoRedoCanvasElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Core/misc/undoRedo.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                element\n                                            \n                                                            UndoRedoCanvasElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        redo\n                        \n                    \n                \n            \n            \n                \nredo()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Core/misc/undoRedo.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        undo\n                        \n                    \n                \n            \n            \n                \nundo()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Core/misc/undoRedo.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { UndoRedoCanvasElement } from \"../interface\";\n\n\nexport class _UndoStack{\n\n    stack: UndoRedoCanvasElement[] =  []\n\n    isEmpty():boolean{\n        return this.stack.length === 0 \n    }\n\n    push(element: UndoRedoCanvasElement){\n        this.stack.push(element)\n    }\n\n    pop(): UndoRedoCanvasElement | undefined{\n        return this.stack.pop()\n    }\n\n    empty(){\n        this.stack = []\n    }\n}\n\nexport class _RedoStack{\n\n    stack: UndoRedoCanvasElement[] =  []\n\n    isEmpty():boolean{\n        return this.stack.length === 0 \n    }\n\n    push(element: UndoRedoCanvasElement){\n        this.stack.push(element)\n    }\n\n    pop(): UndoRedoCanvasElement | undefined{\n        return this.stack.pop()\n    }\n\n    empty(){\n        this.stack = []\n    }\n}\n\nclass UndoRedoStack{\n    undoStack: _UndoStack = new _UndoStack()\n    redoStack: _RedoStack = new _RedoStack()\n\n    undo(){\n        console.log(\"Undoing\")\n        const element = this.undoStack.pop()\n        if(element){\n            this.redoStack.push(element)\n        }\n        return element\n    }\n\n    redo(){\n        console.log(\"Redoing\")\n        const element = this.redoStack.pop()\n        if(element){\n            this.undoStack.push(element)\n        }\n        return element\n    }\n\n    push(element: UndoRedoCanvasElement){\n        console.log(\"Pushing element\")\n        this.undoStack.push(element)\n        this.redoStack.empty()\n    }\n\n    empty(){\n        this.undoStack.empty()\n        this.redoStack.empty()\n    }\n\n}\n\nexport const UndoRedo = new UndoRedoStack()\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ViewService.html":{"url":"injectables/ViewService.html","title":"injectable - ViewService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ViewService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Services/UI/view.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isLoading\n                            \n                            \n                                loadingStatus\n                            \n                            \n                                thumbnailsSize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                endLoading\n                            \n                            \n                                navigateToEditor\n                            \n                            \n                                navigateToGallery\n                            \n                            \n                                setLoading\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/Services/UI/view.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        endLoading\n                        \n                    \n                \n            \n            \n                \nendLoading()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/UI/view.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigateToEditor\n                        \n                    \n                \n            \n            \n                \nnavigateToEditor()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/UI/view.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigateToGallery\n                        \n                    \n                \n            \n            \n                \nnavigateToGallery()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/UI/view.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLoading\n                        \n                    \n                \n            \n            \n                \nsetLoading(status: boolean, message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Services/UI/view.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                status\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/UI/view.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadingStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/UI/view.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        thumbnailsSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 128\n                    \n                \n                    \n                        \n                                Defined in src/app/Services/UI/view.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ViewService {\n \n\n  isLoading: boolean = false;\n  loadingStatus: string = '';\n  thumbnailsSize: number = 128;\n\n  constructor(private router: Router) {}\n\n  setLoading(status: boolean, message: string) {\n    this.isLoading = status;\n    this.loadingStatus = message;\n\n  }\n\n  endLoading() {\n    this.isLoading = false;\n    this.loadingStatus = '';\n  }\n\n  navigateToGallery() {\n    this.router.navigate(['/gallery']);\n  }\n\n  navigateToEditor() {\n    if (this.router.url === '/editor') {\n      return;\n    }\n      return this.router.navigate(['/editor']);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Viewbox.html":{"url":"interfaces/Viewbox.html","title":"interface - Viewbox","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Viewbox\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Core/interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            xmax\n                                        \n                                \n                                \n                                        \n                                            xmin\n                                        \n                                \n                                \n                                        \n                                            ymax\n                                        \n                                \n                                \n                                        \n                                            ymin\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        xmax\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        xmax:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        xmin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        xmin:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ymax\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ymax:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ymin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ymin:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SegLabel {\n  label: string;\n  color: string;\n  isVisible: boolean;\n  shades: string[] | null;\n}\n\nexport interface SegInstance {\n  label: SegLabel;\n  instance: number;\n  shade: string;\n}\n\nexport interface BboxLabel {\n  label: SegLabel;\n  bbox: Rect;\n  instance: number;\n}\n\nexport interface Thumbnail {\n  name: Promise;\n  thumbnailPath: Promise;\n}\n\nexport interface Point2D {\n  x: number;\n  y: number;\n}\n\nexport interface Rect {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\n\nexport interface Viewbox {\n  xmin: number;\n  ymin: number;\n  xmax: number;\n  ymax: number;\n}\n\nexport interface UndoRedoCanvasElement {\n  data: Blob | Blob[];\n  index: number;\n}\n\nexport interface MulticlassInterface {\n  name: string;\n  classes: string[];\n  default: string | null;\n}\n\nexport interface MultilabelInterface {\n  name: string;\n  classes: string[];\n  default: string[] | null;\n}\n\nexport interface ProjectConfig {\n  project_name: string;\n  input_dir: string;\n  output_dir: string;\n  is_segmentation: boolean;\n  is_classification: boolean;\n  is_instance_segmentation: boolean;\n  is_bbox_detection: boolean;\n  segmentation_classes: null | string[];\n  classification_classes: null | MulticlassInterface[];\n  classification_multilabel: null | MultilabelInterface;\n}\n\nexport interface ImageFromCLI {\n  image_path: string;\n  mask_data: string[] | null;\n  segmentation_classes: string[] | null;\n  classification_classes: string[] | null;\n  classification_multilabel: string[] | null;\n}\n\n\nexport interface ProjectFile{\n  root: string;\n  project_name: string;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Viewbox-1.html":{"url":"interfaces/Viewbox-1.html","title":"interface - Viewbox-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Viewbox\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Components/Core/drawable-canvas/models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            xmax\n                                        \n                                \n                                \n                                        \n                                            xmin\n                                        \n                                \n                                \n                                        \n                                            ymax\n                                        \n                                \n                                \n                                        \n                                            ymin\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        xmax\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        xmax:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        xmin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        xmin:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ymax\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ymax:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ymin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ymin:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Point2D {\n    x: number;\n    y: number;\n}\n\nexport interface Rect {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n}\n\n\nexport interface Viewbox{\n    xmin: number;\n    ymin: number;\n    xmax: number;\n    ymax: number;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ZoomPanService.html":{"url":"injectables/ZoomPanService.html","title":"injectable - ZoomPanService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ZoomPanService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Components/Core/drawable-canvas/service/zoom-pan.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                canPan\n                            \n                            \n                                    Private\n                                canvasRef\n                            \n                            \n                                    Private\n                                canZoom\n                            \n                            \n                                    Public\n                                isDragging\n                            \n                            \n                                    Public\n                                maxScale\n                            \n                            \n                                    Public\n                                minScale\n                            \n                            \n                                    Public\n                                offset\n                            \n                            \n                                    Public\n                                redrawRequest\n                            \n                            \n                                    Public\n                                scale\n                            \n                            \n                                    Private\n                                targetOffset\n                            \n                            \n                                    Private\n                                targetScale\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                disableDrag\n                            \n                            \n                                    Public\n                                drag\n                            \n                            \n                                enableDrag\n                            \n                            \n                                    Public\n                                endDrag\n                            \n                            \n                                    Public\n                                fromCanvasToImageCoordinates\n                            \n                            \n                                    Public\n                                getCanvasCoordinates\n                            \n                            \n                                    Public\n                                getImageCoordinates\n                            \n                            \n                                getOffset\n                            \n                            \n                                getScale\n                            \n                            \n                                getSVGViewBox\n                            \n                            \n                                    Public\n                                getTransform\n                            \n                            \n                                getViewBox\n                            \n                            \n                                    Public\n                                resetZoomAndPan\n                            \n                            \n                                    Public\n                                setContext\n                            \n                            \n                                    Public\n                                setTransform\n                            \n                            \n                                    Public\n                                smoothUpdateTransform\n                            \n                            \n                                    Public\n                                startDrag\n                            \n                            \n                                    Public\n                                wheel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(stateService: StateManagerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/Components/Core/drawable-canvas/service/zoom-pan.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stateService\n                                                  \n                                                        \n                                                                        StateManagerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        disableDrag\n                        \n                    \n                \n            \n            \n                \ndisableDrag()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/zoom-pan.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        drag\n                        \n                    \n                \n            \n            \n                \n                        \n                    drag(event: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/zoom-pan.service.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        enableDrag\n                        \n                    \n                \n            \n            \n                \nenableDrag()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/zoom-pan.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        endDrag\n                        \n                    \n                \n            \n            \n                \n                        \n                    endDrag()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/zoom-pan.service.ts:89\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fromCanvasToImageCoordinates\n                        \n                    \n                \n            \n            \n                \n                        \n                    fromCanvasToImageCoordinates(point: Point2D)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/zoom-pan.service.ts:93\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                point\n                                            \n                                                            Point2D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Point2D\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getCanvasCoordinates\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCanvasCoordinates(event: MouseEvent | WheelEvent | Point2D)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/zoom-pan.service.ts:99\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent | WheelEvent | Point2D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Point2D\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getImageCoordinates\n                        \n                    \n                \n            \n            \n                \n                        \n                    getImageCoordinates(event: MouseEvent | WheelEvent | Point2D)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/zoom-pan.service.ts:119\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent | WheelEvent | Point2D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Point2D\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOffset\n                        \n                    \n                \n            \n            \n                \ngetOffset()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/zoom-pan.service.ts:237\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Point2D\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getScale\n                        \n                    \n                \n            \n            \n                \ngetScale()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/zoom-pan.service.ts:233\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSVGViewBox\n                        \n                    \n                \n            \n            \n                \ngetSVGViewBox()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/zoom-pan.service.ts:60\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Rect\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getTransform\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTransform()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/zoom-pan.service.ts:144\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { scale: number; offsetX: any; offsetY: any; }\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getViewBox\n                        \n                    \n                \n            \n            \n                \ngetViewBox()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/zoom-pan.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Viewbox\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        resetZoomAndPan\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetZoomAndPan(smooth: boolean, redraw: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/zoom-pan.service.ts:168\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                smooth\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    true\n                                            \n\n                                        \n                                        \n                                                redraw\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    true\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        setContext\n                        \n                    \n                \n            \n            \n                \n                        \n                    setContext(canvasRef: HTMLCanvasElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/zoom-pan.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                canvasRef\n                                            \n                                                        HTMLCanvasElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        setTransform\n                        \n                    \n                \n            \n            \n                \n                        \n                    setTransform(scale: number, offsetX: number, offsetY: number, smooth: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/zoom-pan.service.ts:152\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                scale\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                offsetX\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                offsetY\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                smooth\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    true\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        smoothUpdateTransform\n                        \n                    \n                \n            \n            \n                \n                        \n                    smoothUpdateTransform()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/zoom-pan.service.ts:185\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        startDrag\n                        \n                    \n                \n            \n            \n                \n                        \n                    startDrag()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/zoom-pan.service.ts:209\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        wheel\n                        \n                    \n                \n            \n            \n                \n                        \n                    wheel(event: WheelEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Components/Core/drawable-canvas/service/zoom-pan.service.ts:213\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        WheelEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        canPan\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/zoom-pan.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        canvasRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLCanvasElement\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/zoom-pan.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        canZoom\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/zoom-pan.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isDragging\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/zoom-pan.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        maxScale\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/zoom-pan.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        minScale\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0.01\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/zoom-pan.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        offset\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Point2D\n\n                    \n                \n                \n                    \n                        Default value : { x: 0, y: 0 }\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/zoom-pan.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        redrawRequest\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/zoom-pan.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        scale\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/zoom-pan.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        targetOffset\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Point2D\n\n                    \n                \n                \n                    \n                        Default value : { x: 0, y: 0 }\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/zoom-pan.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        targetScale\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/Components/Core/drawable-canvas/service/zoom-pan.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Point2D, Rect, Viewbox } from '../models';\nimport { Subject } from 'rxjs';\nimport { StateManagerService } from './state-manager.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ZoomPanService {\n  public isDragging = false;\n  public scale = 1;\n  public offset: Point2D = { x: 0, y: 0 };\n  public maxScale = 10;\n  public minScale = 0.01;\n  private targetScale = 1;\n  private targetOffset: Point2D = { x: 0, y: 0 };\n  private canZoom = true;\n  private canPan = true;\n  private canvasRef: HTMLCanvasElement;\n\n  public redrawRequest = new Subject();\n\n  constructor(private stateService: StateManagerService) {}\n\n  public setContext(canvasRef: HTMLCanvasElement) {\n    this.canvasRef = canvasRef;\n  }\n\n  enableDrag() {\n    this.isDragging = true;\n  }\n\n  disableDrag() {\n    this.isDragging = false;\n  }\n\n  getViewBox(): Viewbox {\n    if (!this.canvasRef) {\n      return {\n        xmin: 0,\n        ymin: 0,\n        xmax: 0,\n        ymax: 0,\n      };\n    }\n    // Return computed viewBox\n\n    let rect = this.canvasRef.getBoundingClientRect();\n\n    let canvasScale = rect.width / this.stateService.width;\n    let xmin = Math.round(this.offset.x * canvasScale);\n    let xmax = xmin + this.stateService.width * this.scale * canvasScale;\n    let ymin = Math.round(this.offset.y * canvasScale);\n    let ymax = ymin + this.stateService.height * this.scale * canvasScale;\n\n    return { xmin: xmin, ymin: ymin, xmax: xmax, ymax: ymax };\n\n  }\n\n  getSVGViewBox(): Rect {\n    const viewBoxX = -this.offset.x / this.scale;\n    const viewBoxY = -this.offset.y / this.scale;\n    const viewBoxWidth = this.stateService.width / this.scale;\n    const viewBoxHeight = this.stateService.width / this.scale;\n    return {x: viewBoxX, y: viewBoxY, width: viewBoxWidth, height: viewBoxHeight};\n  }\n\n  public drag(event: MouseEvent) {\n    if (!this.canPan) {\n      return;\n    }\n    if (this.isDragging) {\n      const canvas = this.canvasRef;\n      const rect = canvas.getBoundingClientRect();\n      const scaleX = canvas.width / rect.width;\n      const scaleY = canvas.height / rect.height;\n\n      const dx = event.movementX * scaleX;\n      const dy = event.movementY * scaleY;\n\n      this.targetOffset.x += dx;\n      this.targetOffset.y += dy;\n      this.offset.x += dx;\n      this.offset.y += dy;\n      this.redrawRequest.next(true);\n    }\n  }\n\n  public endDrag() {\n    this.isDragging = false;\n  }\n\n  public fromCanvasToImageCoordinates(point: Point2D): Point2D {\n    const imageX = (point.x - this.offset.x) / this.scale;\n    const imageY = (point.y - this.offset.y) / this.scale;\n    return { x: Math.round(imageX), y: Math.round(imageY) };\n  }\n\n  public getCanvasCoordinates(\n    event: MouseEvent | WheelEvent | Point2D\n  ): Point2D {\n    const clientX = (event as MouseEvent).clientX\n      ? (event as MouseEvent).clientX\n      : (event as Point2D).x;\n    const clientY = (event as MouseEvent).clientY\n      ? (event as MouseEvent).clientY\n      : (event as Point2D).y;\n\n    const rect = this.canvasRef.getBoundingClientRect();\n    const scaleX = this.canvasRef.width / rect.width;\n    const scaleY = this.canvasRef.height / rect.height;\n\n    const x = Math.round((clientX - rect.left) * scaleX);\n    const y = Math.round((clientY - rect.top) * scaleY);\n\n    return { x, y };\n  }\n\n  public getImageCoordinates(\n    event: MouseEvent | WheelEvent | Point2D\n  ): Point2D {\n    const clientX = (event as MouseEvent).clientX\n      ? (event as MouseEvent).clientX\n      : (event as Point2D).x;\n    const clientY = (event as MouseEvent).clientY\n      ? (event as MouseEvent).clientY\n      : (event as Point2D).y;\n\n    const rect = this.canvasRef.getBoundingClientRect();\n    const scaleX = this.canvasRef.width / rect.width;\n    const scaleY = this.canvasRef.height / rect.height;\n\n    const x = (clientX - rect.left) * scaleX;\n    const y = (clientY - rect.top) * scaleY;\n\n    let imageX = (x - this.offset.x) / this.scale;\n    let imageY = (y - this.offset.y) / this.scale;\n    imageX = Math.min(this.stateService.width - 1, Math.max(0, imageX));\n    imageY = Math.min(this.stateService.height - 1, Math.max(0, imageY));\n\n    return { x: Math.round(imageX), y: Math.round(imageY) };\n  }\n\n  public getTransform() {\n    return {\n      scale: this.targetScale,\n      offsetX: this.targetOffset.x,\n      offsetY: this.targetOffset.y,\n    };\n  }\n\n  public setTransform(\n    scale: number,\n    offsetX: number,\n    offsetY: number,\n    smooth: boolean = true\n  ) {\n    this.targetScale = scale;\n    this.targetOffset.x = offsetX;\n    this.targetOffset.y = offsetY;\n    if (smooth) {\n      this.smoothUpdateTransform();\n    } else {\n      this.redrawRequest.next(true);\n    }\n  }\n\n  public resetZoomAndPan(smooth: boolean = true, redraw: boolean = true) {\n    this.stateService.recomputeCanvasSum = false;\n    this.targetScale = 1;\n    this.targetOffset = { x: 0, y: 0 };\n    if (!redraw) {\n      return;\n    }\n\n    if (smooth) {\n      this.smoothUpdateTransform();\n    } else {\n      this.scale = this.targetScale;\n      this.offset = this.targetOffset;\n      this.redrawRequest.next(true);\n    }\n  }\n\n  public smoothUpdateTransform() {\n    const easeFactor = 0.1;\n    const newScale = this.scale + (this.targetScale - this.scale) * easeFactor;\n    const newOffsetX =\n      this.offset.x + (this.targetOffset.x - this.offset.x) * easeFactor;\n    const newOffsetY =\n      this.offset.y + (this.targetOffset.y - this.offset.y) * easeFactor;\n\n    if (\n      Math.abs(this.targetScale - newScale) > 0.05 ||\n      Math.abs(this.targetOffset.x - newOffsetX) > 1 ||\n      Math.abs(this.targetOffset.y - newOffsetY) > 1\n    ) {\n      this.scale = newScale;\n      this.offset.x = newOffsetX;\n      this.offset.y = newOffsetY;\n      requestAnimationFrame(() => {\n        this.stateService.recomputeCanvasSum = false;\n        this.smoothUpdateTransform();\n        this.redrawRequest.next(true);\n      });\n    }\n  }\n\n  public startDrag() {\n    this.isDragging = true;\n  }\n\n  public wheel(event: WheelEvent) {\n    if (!this.canZoom) {\n      return;\n    }\n    event.preventDefault();\n    const zoomIntensity = 0.25;\n    const wheel = event.deltaY \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/_RedoStack.html":{"url":"classes/_RedoStack.html","title":"class - _RedoStack","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  _RedoStack\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Core/misc/undoRedo.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                stack\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                empty\n                            \n                            \n                                isEmpty\n                            \n                            \n                                pop\n                            \n                            \n                                push\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        stack\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UndoRedoCanvasElement[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/Core/misc/undoRedo.ts:27\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        empty\n                        \n                    \n                \n            \n            \n                \nempty()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Core/misc/undoRedo.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEmpty\n                        \n                    \n                \n            \n            \n                \nisEmpty()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Core/misc/undoRedo.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pop\n                        \n                    \n                \n            \n            \n                \npop()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Core/misc/undoRedo.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         UndoRedoCanvasElement | undefined\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        push\n                        \n                    \n                \n            \n            \n                \npush(element: UndoRedoCanvasElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Core/misc/undoRedo.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                element\n                                            \n                                                            UndoRedoCanvasElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { UndoRedoCanvasElement } from \"../interface\";\n\n\nexport class _UndoStack{\n\n    stack: UndoRedoCanvasElement[] =  []\n\n    isEmpty():boolean{\n        return this.stack.length === 0 \n    }\n\n    push(element: UndoRedoCanvasElement){\n        this.stack.push(element)\n    }\n\n    pop(): UndoRedoCanvasElement | undefined{\n        return this.stack.pop()\n    }\n\n    empty(){\n        this.stack = []\n    }\n}\n\nexport class _RedoStack{\n\n    stack: UndoRedoCanvasElement[] =  []\n\n    isEmpty():boolean{\n        return this.stack.length === 0 \n    }\n\n    push(element: UndoRedoCanvasElement){\n        this.stack.push(element)\n    }\n\n    pop(): UndoRedoCanvasElement | undefined{\n        return this.stack.pop()\n    }\n\n    empty(){\n        this.stack = []\n    }\n}\n\nclass UndoRedoStack{\n    undoStack: _UndoStack = new _UndoStack()\n    redoStack: _RedoStack = new _RedoStack()\n\n    undo(){\n        console.log(\"Undoing\")\n        const element = this.undoStack.pop()\n        if(element){\n            this.redoStack.push(element)\n        }\n        return element\n    }\n\n    redo(){\n        console.log(\"Redoing\")\n        const element = this.redoStack.pop()\n        if(element){\n            this.undoStack.push(element)\n        }\n        return element\n    }\n\n    push(element: UndoRedoCanvasElement){\n        console.log(\"Pushing element\")\n        this.undoStack.push(element)\n        this.redoStack.empty()\n    }\n\n    empty(){\n        this.undoStack.empty()\n        this.redoStack.empty()\n    }\n\n}\n\nexport const UndoRedo = new UndoRedoStack()\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/_UndoStack.html":{"url":"classes/_UndoStack.html","title":"class - _UndoStack","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  _UndoStack\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Core/misc/undoRedo.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                stack\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                empty\n                            \n                            \n                                isEmpty\n                            \n                            \n                                pop\n                            \n                            \n                                push\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        stack\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UndoRedoCanvasElement[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/Core/misc/undoRedo.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        empty\n                        \n                    \n                \n            \n            \n                \nempty()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Core/misc/undoRedo.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEmpty\n                        \n                    \n                \n            \n            \n                \nisEmpty()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Core/misc/undoRedo.ts:8\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pop\n                        \n                    \n                \n            \n            \n                \npop()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Core/misc/undoRedo.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         UndoRedoCanvasElement | undefined\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        push\n                        \n                    \n                \n            \n            \n                \npush(element: UndoRedoCanvasElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Core/misc/undoRedo.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                element\n                                            \n                                                            UndoRedoCanvasElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { UndoRedoCanvasElement } from \"../interface\";\n\n\nexport class _UndoStack{\n\n    stack: UndoRedoCanvasElement[] =  []\n\n    isEmpty():boolean{\n        return this.stack.length === 0 \n    }\n\n    push(element: UndoRedoCanvasElement){\n        this.stack.push(element)\n    }\n\n    pop(): UndoRedoCanvasElement | undefined{\n        return this.stack.pop()\n    }\n\n    empty(){\n        this.stack = []\n    }\n}\n\nexport class _RedoStack{\n\n    stack: UndoRedoCanvasElement[] =  []\n\n    isEmpty():boolean{\n        return this.stack.length === 0 \n    }\n\n    push(element: UndoRedoCanvasElement){\n        this.stack.push(element)\n    }\n\n    pop(): UndoRedoCanvasElement | undefined{\n        return this.stack.pop()\n    }\n\n    empty(){\n        this.stack = []\n    }\n}\n\nclass UndoRedoStack{\n    undoStack: _UndoStack = new _UndoStack()\n    redoStack: _RedoStack = new _RedoStack()\n\n    undo(){\n        console.log(\"Undoing\")\n        const element = this.undoStack.pop()\n        if(element){\n            this.redoStack.push(element)\n        }\n        return element\n    }\n\n    redo(){\n        console.log(\"Redoing\")\n        const element = this.redoStack.pop()\n        if(element){\n            this.undoStack.push(element)\n        }\n        return element\n    }\n\n    push(element: UndoRedoCanvasElement){\n        console.log(\"Pushing element\")\n        this.undoStack.push(element)\n        this.redoStack.empty()\n    }\n\n    empty(){\n        this.undoStack.empty()\n        this.redoStack.empty()\n    }\n\n}\n\nexport const UndoRedo = new UndoRedoStack()\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/Components/Core/Blockable/div/div.component.ts\n            \n            component\n            BlockableDiv\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/Components/Core/Blockable/p/p.component.ts\n            \n            component\n            BlockableP\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/Components/Core/drawable-canvas/component/drawable-canvas.component.ts\n            \n            component\n            DrawableCanvasComponent\n            \n                0 %\n                (0/35)\n            \n        \n        \n            \n                \n                src/app/Components/Core/drawable-canvas/component/interactive-bbox/interactive-bbox.component.ts\n            \n            component\n            InteractiveBboxComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/Components/Core/drawable-canvas/component/svgelements/svgelements.component.ts\n            \n            component\n            SVGElementsComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/Components/Core/drawable-canvas/models.ts\n            \n            interface\n            Point2D\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/Components/Core/drawable-canvas/models.ts\n            \n            interface\n            Rect\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/Components/Core/drawable-canvas/models.ts\n            \n            interface\n            Viewbox\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/Components/Core/drawable-canvas/service/bbox-manager.service.ts\n            \n            injectable\n            BboxManagerService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/Components/Core/drawable-canvas/service/canvas-manager.service.ts\n            \n            injectable\n            CanvasManagerService\n            \n                0 %\n                (0/25)\n            \n        \n        \n            \n                \n                src/app/Components/Core/drawable-canvas/service/draw.service.ts\n            \n            injectable\n            DrawService\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/app/Components/Core/drawable-canvas/service/image-processing.service.ts\n            \n            injectable\n            ImageProcessingService\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/Components/Core/drawable-canvas/service/post-process.service.ts\n            \n            injectable\n            PostProcessService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/Components/Core/drawable-canvas/service/state-manager.service.ts\n            \n            injectable\n            StateManagerService\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/app/Components/Core/drawable-canvas/service/svgui.service.ts\n            \n            injectable\n            SVGUIService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/Components/Core/drawable-canvas/service/undo-redo.service.ts\n            \n            injectable\n            UndoRedoService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/Components/Core/drawable-canvas/service/zoom-pan.service.ts\n            \n            injectable\n            ZoomPanService\n            \n                0 %\n                (0/31)\n            \n        \n        \n            \n                \n                src/app/Components/Core/labelled-switch/labelled-switch.component.ts\n            \n            component\n            LabelledSwitchComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/Components/Core/testing/testing.component.ts\n            \n            component\n            TestingComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/Components/Interface/editor/editor.component.ts\n            \n            component\n            EditorComponent\n            \n                0 %\n                (0/43)\n            \n        \n        \n            \n                \n                src/app/Components/Interface/editor/labels/instance-label/instance-label.component.ts\n            \n            component\n            InstanceLabelComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/Components/Interface/editor/labels/labels.component.ts\n            \n            component\n            LabelsComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/Components/Interface/editor/tool-setting/tool-setting.component.ts\n            \n            component\n            ToolSettingComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/Components/Interface/editor/toolbar/toolbar.component.ts\n            \n            component\n            ToolbarComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/Components/Interface/gallery/gallery-element/gallery-element.component.ts\n            \n            component\n            GalleryElementComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/Components/Interface/gallery/gallery.component.ts\n            \n            component\n            GalleryComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/Components/Interface/loading/loading.component.ts\n            \n            component\n            LoadingComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/Components/Interface/project-configuration/classification-configuration/classification-configuration.component.ts\n            \n            component\n            ClassificationConfigurationComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/Components/Interface/project-configuration/project-configuration.component.ts\n            \n            component\n            ProjectConfigurationComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                        src/app/Core/canvases/bresenham.ts\n            \n            function\n            angleBetween\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/Core/canvases/bresenham.ts\n            \n            function\n            distanceBetween\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/Core/canvases/bresenham.ts\n            \n            function\n            drawLine\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/Core/canvases/bresenham.ts\n            \n            variable\n            stampMaker\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/Core/canvases/stampmaker.ts\n            \n            class\n            StampMaker\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/Core/canvases/stampmaker.ts\n            \n            interface\n            Color\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/app/Core/canvases/stampmaker.ts\n            \n            variable\n            HexPattern\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/Core/canvases/stampmaker.ts\n            \n            variable\n            RGBPattern\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/Core/canvases/tools.ts\n            \n            class\n            Tool\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/Core/canvases/tools.ts\n            \n            class\n            Tools\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        src/app/Core/canvases/tools.ts\n            \n            variable\n            postProcessingOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/Core/interface.ts\n            \n            interface\n            BboxLabel\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/Core/interface.ts\n            \n            interface\n            ImageFromCLI\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/Core/interface.ts\n            \n            interface\n            MulticlassInterface\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/Core/interface.ts\n            \n            interface\n            MultilabelInterface\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/Core/interface.ts\n            \n            interface\n            Point2D\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/Core/interface.ts\n            \n            interface\n            ProjectConfig\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/Core/interface.ts\n            \n            interface\n            ProjectFile\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/Core/interface.ts\n            \n            interface\n            Rect\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/Core/interface.ts\n            \n            interface\n            SegInstance\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/Core/interface.ts\n            \n            interface\n            SegLabel\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/Core/interface.ts\n            \n            interface\n            Thumbnail\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/Core/interface.ts\n            \n            interface\n            UndoRedoCanvasElement\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/Core/interface.ts\n            \n            interface\n            Viewbox\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/Core/io/formats.ts\n            \n            interface\n            LabelFormat\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        src/app/Core/io/images.ts\n            \n            function\n            loadImageFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/Core/io/save_load.ts\n            \n            function\n            blobToDataURL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/Core/io/save_load.ts\n            \n            function\n            invokeLoadJsonFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/Core/io/save_load.ts\n            \n            function\n            invokeSaveJsonFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/Core/io/save_load.ts\n            \n            function\n            invokeSaveXmlFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/Core/io/save_load.ts\n            \n            function\n            saveProjectConfigFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/Core/misc/colors.ts\n            \n            function\n            componentToHex\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/Core/misc/colors.ts\n            \n            function\n            from_hex_to_rgb\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/Core/misc/colors.ts\n            \n            function\n            from_rgb_to_hex\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/Core/misc/colors.ts\n            \n            function\n            generate_shades\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/Core/misc/colors.ts\n            \n            function\n            getDefaultColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/Core/misc/undoRedo.ts\n            \n            class\n            _RedoStack\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/Core/misc/undoRedo.ts\n            \n            class\n            _UndoStack\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/Core/misc/undoRedo.ts\n            \n            class\n            UndoRedoStack\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        src/app/Core/misc/undoRedo.ts\n            \n            variable\n            UndoRedo\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/Core/task.ts\n            \n            class\n            MulticlassTask\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/Core/task.ts\n            \n            class\n            MultilabelTask\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        src/app/Guards/project-started.guard.ts\n            \n            variable\n            projectStartedGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/Services/Project/labelTreeNode.ts\n            \n            function\n            constructLabelTreeNode\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/Services/Project/labels.service.ts\n            \n            injectable\n            LabelsService\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/app/Services/Project/project.service.ts\n            \n            injectable\n            ProjectService\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                src/app/Services/UI/editor.service.ts\n            \n            injectable\n            EditorService\n            \n                0 %\n                (0/34)\n            \n        \n        \n            \n                \n                src/app/Services/UI/view.service.ts\n            \n            injectable\n            ViewService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/Services/cli.service.ts\n            \n            injectable\n            CLIService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/Services/cli.service.ts\n            \n            interface\n            EventPayload\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/Services/io.service.ts\n            \n            injectable\n            IOService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/Services/open-cv.service.ts\n            \n            injectable\n            OpenCVService\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                        src/app/Services/open-cv.service.ts\n            \n            variable\n            cv\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            openCVConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/environments/environment.development.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            variable\n            openCVConfig\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^18.2.13\n        \n            @angular/cdk : ^17.3.10\n        \n            @angular/common : ^18.2.13\n        \n            @angular/compiler : ^18.2.13\n        \n            @angular/core : ^18.2.13\n        \n            @angular/forms : ^18.2.13\n        \n            @angular/platform-browser : ^18.2.13\n        \n            @angular/platform-browser-dynamic : ^18.2.13\n        \n            @angular/router : ^18.2.13\n        \n            @catppuccin/palette : ^1.7.1\n        \n            @primeng/themes : ^19.0.2\n        \n            @tauri-apps/api : ^2.1.1\n        \n            @tauri-apps/plugin-dialog : ^2.0.1\n        \n            @tauri-apps/plugin-fs : ^2.0.2\n        \n            buffer : ^6.0.3\n        \n            fast-xml-parser : ^4.5.0\n        \n            ngx-opencv : ^2.0.1\n        \n            path : ^0.12.7\n        \n            path-browserify : ^1.0.1\n        \n            primeflex : ^3.3.1\n        \n            primeicons : ^7.0.0\n        \n            primeng : ^18.0.2\n        \n            rxjs : ~7.8.0\n        \n            tailwindcss-primeui : ^0.3.4\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            PostProcessOption   (src/.../tools.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/Core/canvases/tools.ts\n    \n        \n            \n                \n                    \n                        \n                        PostProcessOption\n                    \n                \n                        \n                            \n                                 MEDSAM\n                            \n                        \n                        \n                            \n                                Value : MedSAM\n                            \n                        \n                        \n                            \n                                 OTSU\n                            \n                        \n                        \n                            \n                                Value : Otsu\n                            \n                        \n                        \n                            \n                                 CRF\n                            \n                        \n                        \n                            \n                                Value : CRF\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            angleBetween   (src/.../bresenham.ts)\n                        \n                        \n                            blobToDataURL   (src/.../save_load.ts)\n                        \n                        \n                            componentToHex   (src/.../colors.ts)\n                        \n                        \n                            constructLabelTreeNode   (src/.../labelTreeNode.ts)\n                        \n                        \n                            distanceBetween   (src/.../bresenham.ts)\n                        \n                        \n                            drawLine   (src/.../bresenham.ts)\n                        \n                        \n                            from_hex_to_rgb   (src/.../colors.ts)\n                        \n                        \n                            from_rgb_to_hex   (src/.../colors.ts)\n                        \n                        \n                            generate_shades   (src/.../colors.ts)\n                        \n                        \n                            getDefaultColor   (src/.../colors.ts)\n                        \n                        \n                            invokeLoadJsonFile   (src/.../save_load.ts)\n                        \n                        \n                            invokeSaveJsonFile   (src/.../save_load.ts)\n                        \n                        \n                            invokeSaveXmlFile   (src/.../save_load.ts)\n                        \n                        \n                            loadImageFile   (src/.../images.ts)\n                        \n                        \n                            saveProjectConfigFile   (src/.../save_load.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/Core/canvases/bresenham.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        angleBetween\n                        \n                    \n                \n            \n            \n                \nangleBetween(point1: Point2D, point2: Point2D)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                point1\n                                            \n                                                            Point2D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                point2\n                                            \n                                                            Point2D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        distanceBetween\n                        \n                    \n                \n            \n            \n                \ndistanceBetween(point1: Point2D, point2: Point2D)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                point1\n                                            \n                                                            Point2D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                point2\n                                            \n                                                            Point2D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawLine\n                        \n                    \n                \n            \n            \n                \ndrawLine(context, from: Point2D, to: Point2D, size: number, color: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                from\n                                            \n                                                            Point2D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                to\n                                            \n                                                            Point2D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                size\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                color\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/app/Core/io/save_load.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        blobToDataURL\n                        \n                    \n                \n            \n            \n                \nblobToDataURL(blob: Blob)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                blob\n                                            \n                                                        Blob\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        invokeLoadJsonFile\n                        \n                    \n                \n            \n            \n                \ninvokeLoadJsonFile(filepath: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filepath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        invokeSaveJsonFile\n                        \n                    \n                \n            \n            \n                \ninvokeSaveJsonFile(filepath: string, jsonContent: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filepath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                jsonContent\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        invokeSaveXmlFile\n                        \n                    \n                \n            \n            \n                \ninvokeSaveXmlFile(filepath: string, xmlContent: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filepath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                xmlContent\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveProjectConfigFile\n                        \n                    \n                \n            \n            \n                \nsaveProjectConfigFile(root: string, projectConfig: ProjectConfig)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                root\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projectConfig\n                                            \n                                                            ProjectConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/app/Core/misc/colors.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        componentToHex\n                        \n                    \n                \n            \n            \n                \ncomponentToHex(c: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                c\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        from_hex_to_rgb\n                        \n                    \n                \n            \n            \n                \nfrom_hex_to_rgb(hex: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                hex\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        from_rgb_to_hex\n                        \n                    \n                \n            \n            \n                \nfrom_rgb_to_hex(r: number, g: number, b: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                r\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                g\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                b\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generate_shades\n                        \n                    \n                \n            \n            \n                \ngenerate_shades(hex: string, n: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                hex\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                n\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDefaultColor\n                        \n                    \n                \n            \n            \n                \ngetDefaultColor(n: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                n\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/app/Services/Project/labelTreeNode.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        constructLabelTreeNode\n                        \n                    \n                \n            \n            \n                \nconstructLabelTreeNode(labels)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                labels\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TreeNode[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/Core/io/images.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        loadImageFile\n                        \n                    \n                \n            \n            \n                \nloadImageFile(filepath: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filepath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nLabelMed Client\nA powerful medical image labeling application built with Angular CLI version 18.2.12 and Tauri V2. LabelMed prioritizes privacy, speed, and ease of use for medical image annotation tasks.\nKey Features\n\nLocal Processing: All operations run locally, ensuring data privacy and security\nMulti-task Classification: Support for multiple classification types\nMulticlass classification\nMultilabel classification\n\n\nFlexible Configuration: Easy setup for input/output folders\nAdvanced Image Processing: Integrated OpenCV WASM for real-time image preprocessing\n\nPrerequisites\n\nNode.js and NPM\nAngular CLI\nRust (for Tauri)\n\nDevelopment\n\nInstall dependencies:\n\nExample :npm install\nStart development server:\n\nExample :npm run tauri devBuilding\nCreate production binaries:\nExample :npm run tauri buildExecutables will be generated in src-tauri/target/release/\nArchitecture\nLabelMed combines multiple technologies for optimal performance:\n\nFrontend: Angular framework for responsive UI\nImage Processing: OpenCV WASM for client-side image operations\nBackend Services: \nTauri/Rust for application serving and native features\nMedSAM integration via ONNX Runtime\nZeroMQ for Python library communication\n\n\n\nTechnical Stack\n\nAngular (Frontend Framework)\nTauri V2 (Desktop Application Framework)\nRust (Backend Processing)\nOpenCV WASM (Image Processing)\nZeroMQ (Inter-process Communication)\nONNX Runtime (ML Model Integration)\n\nCommunication with Python\nLabelMed enables seamless integration with Python scripts through ZeroMQ:\n\nReal-time Communication: Bidirectional data exchange between LabelMed and Python processes\n\nCustom Model Integration: \n\nRun your own ML models in Python\n\nSend results directly to LabelMed for validation\n\nReceive corrected annotations back in Python\n\nSystem Overview:\n  \n\n\n\nExample Usage:\n\n\nExample :from pathlib import Path\nfrom pynotate import Project\nimport numpy as np\nfrom fundus_lesions_toolkit.models.segmentation import segment as segment_lesions, Dataset\nfrom fundus_data_toolkit.functional import open_image\n\nfrom fundus_lesions_toolkit.constants import LESIONS\nfrom fundus_odmac_toolkit.models.segmentation import segment as segment_odmac\nfrom tqdm.notebook import tqdm\n\nsegmentation_classes = ['Lesions/' + l for l in LESIONS[1:]] + ['OD', 'MAC']\n\nclassifications_classes = [{'name': 'Diabetic Retinopathy', 'classes': ['No DR', 'Mild', 'Moderate', 'Severe', 'Proliferative']}]\nclassification_multilabel = {'name': 'Others diseases', 'classes': ['Hypertension', 'Glaucoma', 'Myopia', 'Other']}\n\ndef run_model(filepath):\n    img = open_image(filepath)\n    lesions = segment_lesions(img, train_datasets=Dataset.IDRID).argmax(0).cpu().numpy()\n    od_mask = segment_odmac(img).argmax(0).cpu().numpy()\n    # Lesions\n    masks = [255*(lesions == i).astype(np.uint8) for i in range(1, 5)]\n    # OD and MAC\n    masks += [255*(od_mask==i) for i in range(1, 3)] \n\n    # Random classification\n    multilabel = np.random.choice(classification_multilabel['classes'], size=np.random.randint(0, len(classification_multilabel['classes']))).tolist()\n    multiclass = np.random.choice(classifications_classes[0]['classes'], size=1).tolist()\n    multilabel = None if len(multilabel) == 0 else multilabel\n    \n    return masks, multiclass, multilabel\n\nALL_FILES = list(Path(ROOT_FOLDER).glob('*.jpeg'))\nINPUT_DIR = \"inputFundus/\" # Folder where the images are stored. Can be the same as the root folder\nOUTPUT_DIR = \"output/\" # Folder where the annotations will be stored.\n\nwith Project(project_name=\"FundusLesions\", \n             input_dir=str(Path(INPUT_DIR).resolve()),\n             output_dir=str(Path(OUTPUT_DIR).resolve()),\n             classification_classes=classifications_classes,\n             classification_multilabel=classification_multilabel,\n             segmentation_classes=segmentation_classes) as cli:\n    for filepath in tqdm(ALL_FILES):\n        masks, multiclass, multilabel = run_model(filepath)\n        cli.load_image(filepath, segmentation_masks=masks, multiclass_choices=multiclass, multilabel_choices=multilabel)\n\nFor detailed Python integration examples, see our Python SDK Documentation (under construction).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    18 Components\n                \n            \n        \n        \n            \n                \n                    \n                    16 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    8 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    19 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            cv   (src/.../open-cv.service.ts)\n                        \n                        \n                            environment   (src/.../environment.development.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            HexPattern   (src/.../stampmaker.ts)\n                        \n                        \n                            openCVConfig   (src/.../main.ts)\n                        \n                        \n                            openCVConfig   (src/.../app.config.ts)\n                        \n                        \n                            postProcessingOptions   (src/.../tools.ts)\n                        \n                        \n                            projectStartedGuard   (src/.../project-started.guard.ts)\n                        \n                        \n                            RGBPattern   (src/.../stampmaker.ts)\n                        \n                        \n                            stampMaker   (src/.../bresenham.ts)\n                        \n                        \n                            UndoRedo   (src/.../undoRedo.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [provideRouter(routes), provideAnimationsAsync(), importProvidersFrom(NgxOpenCVModule.forRoot(openCVConfig))],\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openCVConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OpenCVConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  openCVDirPath: 'assets/opencv',\n}\n                    \n                \n\n\n        \n    \n\n    src/app/Services/open-cv.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        cv\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.development.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    defaultProjectName: 'Demo',\n    defaultInputFolder: \"/home/clement/Documents/data/HMRFormationRD/\",\n    defaultOutputFolder: \"/home/clement/Documents/tmp/\",\n    defaultRegex: '.(gif|jpe?g|tiff?|png|webp|bmp)$',\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    defaultInputFolder: '',\n    defaultProjectName: 'New Project',\n    defaultOutputFolder: '',\n    defaultRegex: '.(gif|jpe?g|tiff?|png|webp|bmp)$',\t\n}\n                    \n                \n\n\n        \n    \n\n    src/app/Core/canvases/stampmaker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        HexPattern\n                        \n                    \n                \n            \n                \n                    \n                        Default value : /^#?[0-9A-Fa-f]{1,2}[0-9A-Fa-f]{1,2}[0-9A-Fa-f]{1,2}$/\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RGBPattern\n                        \n                    \n                \n            \n                \n                    \n                        Default value : /^rgb\\((\\s+)?[0-9]{1,3},(\\s+)?[0-9]{1,3},(\\s+)?[0-9]{1,3}(\\s+)?\\)$/\n                    \n                \n\n\n        \n    \n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        openCVConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OpenCVConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  openCVDirPath: 'assets/opencv/',\n}\n                    \n                \n\n\n        \n    \n\n    src/app/Core/canvases/tools.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        postProcessingOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [PostProcessOption.OTSU, PostProcessOption.MEDSAM, PostProcessOption.CRF]\n                    \n                \n\n\n        \n    \n\n    src/app/Guards/project-started.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        projectStartedGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : (route, state) => {\n\n  const projectService = inject(ProjectService);\n  const router = inject(Router);\n  console.log('Is project started?', projectService.isProjectStarted);\n  if (!projectService.isProjectStarted) {\n    router.navigate(['/project-configuration']);\n  }\n  \n  return projectService.isProjectStarted;\n}\n                    \n                \n\n\n        \n    \n\n    src/app/Core/canvases/bresenham.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        stampMaker\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new StampMaker()\n                    \n                \n\n\n        \n    \n\n    src/app/Core/misc/undoRedo.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UndoRedo\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new UndoRedoStack()\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
